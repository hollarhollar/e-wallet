/*
* This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */
webpackJsonp([4],{

/***/ 10:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ICON_MAPPING = exports.isCompatibleAggregatorForField = exports.isID = exports.isLongitude = exports.isLatitude = exports.isCoordinate = exports.isCountry = exports.isState = exports.isAddress = exports.isTime = exports.isNumber = exports.isNumericBaseType = exports.isAny = exports.isEntityName = exports.isPK = exports.isFK = exports.isMetric = exports.isDimension = exports.isCategory = exports.isSummable = exports.isString = exports.isBoolean = exports.isNumeric = exports.isDate = exports.UNKNOWN = exports.DIMENSION = exports.CATEGORY = exports.SUMMABLE = exports.ENTITY = exports.FOREIGN_KEY = exports.COORDINATE = exports.LOCATION = exports.DATE_TIME = exports.BOOLEAN = exports.STRING_LIKE = exports.STRING = exports.NUMBER = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _TYPES, _OPERATORS_BY_TYPE_OR, _ICON_MAPPING;

var _templateObject = _taggedTemplateLiteral(["True"], ["True"]),
    _templateObject2 = _taggedTemplateLiteral(["False"], ["False"]),
    _templateObject3 = _taggedTemplateLiteral(["Select longitude field"], ["Select longitude field"]),
    _templateObject4 = _taggedTemplateLiteral(["Enter upper latitude"], ["Enter upper latitude"]),
    _templateObject5 = _taggedTemplateLiteral(["Enter left longitude"], ["Enter left longitude"]),
    _templateObject6 = _taggedTemplateLiteral(["Enter lower latitude"], ["Enter lower latitude"]),
    _templateObject7 = _taggedTemplateLiteral(["Enter right longitude"], ["Enter right longitude"]),
    _templateObject8 = _taggedTemplateLiteral(["Is"], ["Is"]),
    _templateObject9 = _taggedTemplateLiteral(["Is not"], ["Is not"]),
    _templateObject10 = _taggedTemplateLiteral(["Is empty"], ["Is empty"]),
    _templateObject11 = _taggedTemplateLiteral(["Not empty"], ["Not empty"]),
    _templateObject12 = _taggedTemplateLiteral(["Equal to"], ["Equal to"]),
    _templateObject13 = _taggedTemplateLiteral(["Not equal to"], ["Not equal to"]),
    _templateObject14 = _taggedTemplateLiteral(["Greater than"], ["Greater than"]),
    _templateObject15 = _taggedTemplateLiteral(["Less than"], ["Less than"]),
    _templateObject16 = _taggedTemplateLiteral(["Between"], ["Between"]),
    _templateObject17 = _taggedTemplateLiteral(["Greater than or equal to"], ["Greater than or equal to"]),
    _templateObject18 = _taggedTemplateLiteral(["Less than or equal to"], ["Less than or equal to"]),
    _templateObject19 = _taggedTemplateLiteral(["Contains"], ["Contains"]),
    _templateObject20 = _taggedTemplateLiteral(["Does not contain"], ["Does not contain"]),
    _templateObject21 = _taggedTemplateLiteral(["Starts with"], ["Starts with"]),
    _templateObject22 = _taggedTemplateLiteral(["Ends with"], ["Ends with"]),
    _templateObject23 = _taggedTemplateLiteral(["Before"], ["Before"]),
    _templateObject24 = _taggedTemplateLiteral(["After"], ["After"]),
    _templateObject25 = _taggedTemplateLiteral(["Inside"], ["Inside"]),
    _templateObject26 = _taggedTemplateLiteral(["Raw data"], ["Raw data"]),
    _templateObject27 = _taggedTemplateLiteral(["Just a table with the rows in the answer, no additional operations."], ["Just a table with the rows in the answer, no additional operations."]),
    _templateObject28 = _taggedTemplateLiteral(["Count of rows"], ["Count of rows"]),
    _templateObject29 = _taggedTemplateLiteral(["Total number of rows in the answer."], ["Total number of rows in the answer."]),
    _templateObject30 = _taggedTemplateLiteral(["Sum of ..."], ["Sum of ..."]),
    _templateObject31 = _taggedTemplateLiteral(["Sum of all the values of a column."], ["Sum of all the values of a column."]),
    _templateObject32 = _taggedTemplateLiteral(["Average of ..."], ["Average of ..."]),
    _templateObject33 = _taggedTemplateLiteral(["Average of all the values of a column"], ["Average of all the values of a column"]),
    _templateObject34 = _taggedTemplateLiteral(["Number of distinct values of ..."], ["Number of distinct values of ..."]),
    _templateObject35 = _taggedTemplateLiteral(["Number of unique values of a column among all the rows in the answer."], ["Number of unique values of a column among all the rows in the answer."]),
    _templateObject36 = _taggedTemplateLiteral(["Cumulative sum of ..."], ["Cumulative sum of ..."]),
    _templateObject37 = _taggedTemplateLiteral(["Additive sum of all the values of a column.\ne.x. total revenue over time."], ["Additive sum of all the values of a column.\\ne.x. total revenue over time."]),
    _templateObject38 = _taggedTemplateLiteral(["Cumulative count of rows"], ["Cumulative count of rows"]),
    _templateObject39 = _taggedTemplateLiteral(["Additive count of the number of rows.\ne.x. total number of sales over time."], ["Additive count of the number of rows.\\ne.x. total number of sales over time."]),
    _templateObject40 = _taggedTemplateLiteral(["Standard deviation of ..."], ["Standard deviation of ..."]),
    _templateObject41 = _taggedTemplateLiteral(["Number which expresses how much the values of a column vary among all rows in the answer."], ["Number which expresses how much the values of a column vary among all rows in the answer."]),
    _templateObject42 = _taggedTemplateLiteral(["Minimum of ..."], ["Minimum of ..."]),
    _templateObject43 = _taggedTemplateLiteral(["Minimum value of a column"], ["Minimum value of a column"]),
    _templateObject44 = _taggedTemplateLiteral(["Maximum of ..."], ["Maximum of ..."]),
    _templateObject45 = _taggedTemplateLiteral(["Maximum value of a column"], ["Maximum value of a column"]),
    _templateObject46 = _taggedTemplateLiteral(["Break out by dimension"], ["Break out by dimension"]);

exports.isFieldType = isFieldType;
exports.getFieldType = getFieldType;
exports.getOperators = getOperators;
exports.getAggregators = getAggregators;
exports.getAggregatorsWithFields = getAggregatorsWithFields;
exports.getAggregator = getAggregator;
exports.getBreakouts = getBreakouts;
exports.addValidOperatorsToFields = addValidOperatorsToFields;
exports.hasLatitudeAndLongitudeColumns = hasLatitudeAndLongitudeColumns;
exports.foreignKeyCountsByOriginTable = foreignKeyCountsByOriginTable;
exports.getIconForField = getIconForField;
exports.computeMetadataStrength = computeMetadataStrength;
exports.getFilterArgumentFormatOptions = getFilterArgumentFormatOptions;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _c3po = __webpack_require__(2);

var _types = __webpack_require__(42);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// primary field types used for picking operators, etc
var NUMBER = exports.NUMBER = "NUMBER";
var STRING = exports.STRING = "STRING";
var STRING_LIKE = exports.STRING_LIKE = "STRING_LIKE";
var BOOLEAN = exports.BOOLEAN = "BOOLEAN";
var DATE_TIME = exports.DATE_TIME = "DATE_TIME";
var LOCATION = exports.LOCATION = "LOCATION";
var COORDINATE = exports.COORDINATE = "COORDINATE";
var FOREIGN_KEY = exports.FOREIGN_KEY = "FOREIGN_KEY";

// other types used for various purporses
var ENTITY = exports.ENTITY = "ENTITY";
var SUMMABLE = exports.SUMMABLE = "SUMMABLE";
var CATEGORY = exports.CATEGORY = "CATEGORY";
var DIMENSION = exports.DIMENSION = "DIMENSION";

var UNKNOWN = exports.UNKNOWN = "UNKNOWN";

// define various type hierarchies
// NOTE: be sure not to create cycles using the "other" types
var TYPES = (_TYPES = {}, _defineProperty(_TYPES, DATE_TIME, {
  base: [_types.TYPE.DateTime],
  special: [_types.TYPE.DateTime]
}), _defineProperty(_TYPES, NUMBER, {
  base: [_types.TYPE.Number],
  special: [_types.TYPE.Number]
}), _defineProperty(_TYPES, STRING, {
  base: [_types.TYPE.Text],
  special: [_types.TYPE.Text]
}), _defineProperty(_TYPES, STRING_LIKE, {
  base: [_types.TYPE.TextLike]
}), _defineProperty(_TYPES, BOOLEAN, {
  base: [_types.TYPE.Boolean]
}), _defineProperty(_TYPES, COORDINATE, {
  special: [_types.TYPE.Coordinate]
}), _defineProperty(_TYPES, LOCATION, {
  special: [_types.TYPE.Address]
}), _defineProperty(_TYPES, ENTITY, {
  special: [_types.TYPE.FK, _types.TYPE.PK, _types.TYPE.Name]
}), _defineProperty(_TYPES, FOREIGN_KEY, {
  special: [_types.TYPE.FK]
}), _defineProperty(_TYPES, SUMMABLE, {
  include: [NUMBER],
  exclude: [ENTITY, LOCATION, DATE_TIME]
}), _defineProperty(_TYPES, CATEGORY, {
  base: [_types.TYPE.Boolean],
  special: [_types.TYPE.Category],
  include: [LOCATION]
}), _defineProperty(_TYPES, DIMENSION, {
  include: [DATE_TIME, CATEGORY, ENTITY]
}), _TYPES);

function isFieldType(type, field) {
  if (!field) return false;

  var typeDefinition = TYPES[type];
  // check to see if it belongs to any of the field types:
  var _arr = ["base", "special"];
  for (var _i = 0; _i < _arr.length; _i++) {
    var prop = _arr[_i];
    var allowedTypes = typeDefinition[prop];
    if (!allowedTypes) continue;

    var fieldType = field[prop + "_type"];
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = allowedTypes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var allowedType = _step3.value;

        if ((0, _types.isa)(fieldType, allowedType)) return true;
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }
  }

  // recursively check to see if it's NOT another field type:
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (typeDefinition.exclude || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var excludedType = _step.value;

      if (isFieldType(excludedType, field)) return false;
    }

    // recursively check to see if it's another field type:
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = (typeDefinition.include || [])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var includedType = _step2.value;

      if (isFieldType(includedType, field)) return true;
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return false;
}

function getFieldType(field) {
  // try more specific types first, then more generic types
  var _arr2 = [DATE_TIME, LOCATION, COORDINATE, FOREIGN_KEY, NUMBER, STRING, STRING_LIKE, BOOLEAN];
  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
    var type = _arr2[_i2];
    if (isFieldType(type, field)) return type;
  }
}

var isDate = exports.isDate = isFieldType.bind(null, DATE_TIME);
var isNumeric = exports.isNumeric = isFieldType.bind(null, NUMBER);
var isBoolean = exports.isBoolean = isFieldType.bind(null, BOOLEAN);
var isString = exports.isString = isFieldType.bind(null, STRING);
var isSummable = exports.isSummable = isFieldType.bind(null, SUMMABLE);
var isCategory = exports.isCategory = isFieldType.bind(null, CATEGORY);

var isDimension = exports.isDimension = function isDimension(col) {
  return col && col.source !== "aggregation";
};
var isMetric = exports.isMetric = function isMetric(col) {
  return col && col.source !== "breakout" && isSummable(col);
};

var isFK = exports.isFK = function isFK(field) {
  return field && (0, _types.isFK)(field.special_type);
};
var isPK = exports.isPK = function isPK(field) {
  return field && (0, _types.isPK)(field.special_type);
};
var isEntityName = exports.isEntityName = function isEntityName(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Name);
};

var isAny = exports.isAny = function isAny(col) {
  return true;
};

var isNumericBaseType = exports.isNumericBaseType = function isNumericBaseType(field) {
  return (0, _types.isa)(field && field.base_type, _types.TYPE.Number);
};

// ZipCode, ID, etc derive from Number but should not be formatted as numbers
var isNumber = exports.isNumber = function isNumber(field) {
  return field && isNumericBaseType(field) && (field.special_type == null || field.special_type === _types.TYPE.Number);
};

var isTime = exports.isTime = function isTime(field) {
  return (0, _types.isa)(field && field.base_type, _types.TYPE.Time);
};

var isAddress = exports.isAddress = function isAddress(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Address);
};
var isState = exports.isState = function isState(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.State);
};
var isCountry = exports.isCountry = function isCountry(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Country);
};
var isCoordinate = exports.isCoordinate = function isCoordinate(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Coordinate);
};
var isLatitude = exports.isLatitude = function isLatitude(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Latitude);
};
var isLongitude = exports.isLongitude = function isLongitude(field) {
  return (0, _types.isa)(field && field.special_type, _types.TYPE.Longitude);
};

var isID = exports.isID = function isID(field) {
  return isFK(field) || isPK(field);
};

// operator argument constructors:

function freeformArgument(field, table) {
  return {
    type: "text"
  };
}

function numberArgument(field, table) {
  return {
    type: "number"
  };
}

function comparableArgument(field, table) {
  if (isDate(field)) {
    return {
      type: "date"
    };
  }

  if (isNumeric(field)) {
    return {
      type: "number"
    };
  }

  return {
    type: "text"
  };
}

function equivalentArgument(field, table) {
  if (isBoolean(field)) {
    return {
      type: "select",
      values: [{ key: true, name: (0, _c3po.t)(_templateObject) }, { key: false, name: (0, _c3po.t)(_templateObject2) }],
      default: true
    };
  }

  if (isDate(field)) {
    return {
      type: "date"
    };
  }

  if (isNumeric(field)) {
    return {
      type: "number"
    };
  }

  return {
    type: "text"
  };
}

function longitudeFieldSelectArgument(field, table) {
  var values = table.fields.filter(function (field) {
    return (0, _types.isa)(field.special_type, _types.TYPE.Longitude);
  }).map(function (field) {
    return {
      key: field.id,
      name: field.display_name
    };
  });
  if (values.length === 1) {
    return {
      type: "hidden",
      default: values[0].key
    };
  } else {
    return {
      type: "select",
      values: values
    };
  }
}

var CASE_SENSITIVE_OPTION = {
  "case-sensitive": {
    defaultValue: true
  }
};

var OPERATORS = {
  "=": {
    validArgumentsFilters: [equivalentArgument],
    multi: true
  },
  "!=": {
    validArgumentsFilters: [equivalentArgument],
    multi: true
  },
  IS_NULL: {
    validArgumentsFilters: []
  },
  NOT_NULL: {
    validArgumentsFilters: []
  },
  "<": {
    validArgumentsFilters: [comparableArgument]
  },
  "<=": {
    validArgumentsFilters: [comparableArgument]
  },
  ">": {
    validArgumentsFilters: [comparableArgument]
  },
  ">=": {
    validArgumentsFilters: [comparableArgument]
  },
  INSIDE: {
    validArgumentsFilters: [longitudeFieldSelectArgument, numberArgument, numberArgument, numberArgument, numberArgument],
    placeholders: [(0, _c3po.t)(_templateObject3), (0, _c3po.t)(_templateObject4), (0, _c3po.t)(_templateObject5), (0, _c3po.t)(_templateObject6), (0, _c3po.t)(_templateObject7)],
    formatOptions: [{ hide: true }, { column: { special_type: _types.TYPE.Latitude }, compact: true }, { column: { special_type: _types.TYPE.Longitude }, compact: true }, { column: { special_type: _types.TYPE.Latitude }, compact: true }, { column: { special_type: _types.TYPE.Longitude }, compact: true }]
  },
  BETWEEN: {
    validArgumentsFilters: [comparableArgument, comparableArgument]
  },
  STARTS_WITH: {
    validArgumentsFilters: [freeformArgument],
    options: CASE_SENSITIVE_OPTION,
    optionsDefaults: { "case-sensitive": false }
  },
  ENDS_WITH: {
    validArgumentsFilters: [freeformArgument],
    options: CASE_SENSITIVE_OPTION,
    optionsDefaults: { "case-sensitive": false }
  },
  CONTAINS: {
    validArgumentsFilters: [freeformArgument],
    options: CASE_SENSITIVE_OPTION,
    optionsDefaults: { "case-sensitive": false }
  },
  DOES_NOT_CONTAIN: {
    validArgumentsFilters: [freeformArgument],
    options: CASE_SENSITIVE_OPTION,
    optionsDefaults: { "case-sensitive": false }
  }
};

var DEFAULT_OPERATORS = [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject9) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }];

// ordered list of operators and metadata per type
var OPERATORS_BY_TYPE_ORDERED = (_OPERATORS_BY_TYPE_OR = {}, _defineProperty(_OPERATORS_BY_TYPE_OR, NUMBER, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject12) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject13) }, { name: ">", verboseName: (0, _c3po.t)(_templateObject14) }, { name: "<", verboseName: (0, _c3po.t)(_templateObject15) }, { name: "BETWEEN", verboseName: (0, _c3po.t)(_templateObject16) }, { name: ">=", verboseName: (0, _c3po.t)(_templateObject17) }, { name: "<=", verboseName: (0, _c3po.t)(_templateObject18) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, STRING, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject9) }, { name: "CONTAINS", verboseName: (0, _c3po.t)(_templateObject19) }, { name: "DOES_NOT_CONTAIN", verboseName: (0, _c3po.t)(_templateObject20) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }, { name: "STARTS_WITH", verboseName: (0, _c3po.t)(_templateObject21) }, { name: "ENDS_WITH", verboseName: (0, _c3po.t)(_templateObject22) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, STRING_LIKE, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject9) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, DATE_TIME, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "<", verboseName: (0, _c3po.t)(_templateObject23) }, { name: ">", verboseName: (0, _c3po.t)(_templateObject24) }, { name: "BETWEEN", verboseName: (0, _c3po.t)(_templateObject16) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, LOCATION, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject9) }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, COORDINATE, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8) }, { name: "!=", verboseName: (0, _c3po.t)(_templateObject9) }, { name: "INSIDE", verboseName: (0, _c3po.t)(_templateObject25) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, BOOLEAN, [{ name: "=", verboseName: (0, _c3po.t)(_templateObject8), multi: false }, { name: "IS_NULL", verboseName: (0, _c3po.t)(_templateObject10) }, { name: "NOT_NULL", verboseName: (0, _c3po.t)(_templateObject11) }]), _defineProperty(_OPERATORS_BY_TYPE_OR, FOREIGN_KEY, DEFAULT_OPERATORS), _defineProperty(_OPERATORS_BY_TYPE_OR, UNKNOWN, DEFAULT_OPERATORS), _OPERATORS_BY_TYPE_OR);

var MORE_VERBOSE_NAMES = {
  "equal to": "is equal to",
  "not equal to": "is not equal to",
  before: "is before",
  after: "is after",
  "not empty": "is not empty",
  "less than": "is less than",
  "greater than": "is greater than",
  "less than or equal to": "is less than or equal to",
  "greater than or equal to": "is greater than or equal to"
};

function getOperators(field, table) {
  var type = getFieldType(field) || UNKNOWN;
  return OPERATORS_BY_TYPE_ORDERED[type].map(function (operatorForType) {
    var operator = OPERATORS[operatorForType.name];
    var verboseNameLower = operatorForType.verboseName.toLowerCase();
    return _extends({}, operator, operatorForType, {
      moreVerboseName: MORE_VERBOSE_NAMES[verboseNameLower] || verboseNameLower,
      fields: operator.validArgumentsFilters.map(function (validArgumentsFilter) {
        return validArgumentsFilter(field, table);
      })
    });
  });
}

// Breakouts and Aggregation options
function allFields(fields) {
  return fields;
}

function summableFields(fields) {
  return _underscore2.default.filter(fields, isSummable);
}

function dimensionFields(fields) {
  return _underscore2.default.filter(fields, isDimension);
}

var Aggregators = [{
  name: (0, _c3po.t)(_templateObject26),
  short: "rows",
  description: (0, _c3po.t)(_templateObject27),
  validFieldsFilters: [],
  requiresField: false,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject28),
  short: "count",
  description: (0, _c3po.t)(_templateObject29),
  validFieldsFilters: [],
  requiresField: false,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject30),
  short: "sum",
  description: (0, _c3po.t)(_templateObject31),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject32),
  short: "avg",
  description: (0, _c3po.t)(_templateObject33),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject34),
  short: "distinct",
  description: (0, _c3po.t)(_templateObject35),
  validFieldsFilters: [allFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject36),
  short: "cum_sum",
  description: (0, _c3po.t)(_templateObject37),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject38),
  short: "cum_count",
  description: (0, _c3po.t)(_templateObject39),
  validFieldsFilters: [],
  requiresField: false,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject40),
  short: "stddev",
  description: (0, _c3po.t)(_templateObject41),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "standard-deviation-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject42),
  short: "min",
  description: (0, _c3po.t)(_templateObject43),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}, {
  name: (0, _c3po.t)(_templateObject44),
  short: "max",
  description: (0, _c3po.t)(_templateObject45),
  validFieldsFilters: [summableFields],
  requiresField: true,
  requiredDriverFeature: "basic-aggregations"
}];

var BreakoutAggregator = {
  name: (0, _c3po.t)(_templateObject46),
  short: "breakout",
  validFieldsFilters: [dimensionFields]
};

function populateFields(aggregator, fields) {
  return {
    name: aggregator.name,
    short: aggregator.short,
    description: aggregator.description || "",
    advanced: aggregator.advanced || false,
    fields: _underscore2.default.map(aggregator.validFieldsFilters, function (validFieldsFilterFn) {
      return validFieldsFilterFn(fields);
    }),
    validFieldsFilters: aggregator.validFieldsFilters,
    requiresField: aggregator.requiresField,
    requiredDriverFeature: aggregator.requiredDriverFeature
  };
}

// TODO: unit test
function getAggregators(table) {
  var supportedAggregations = Aggregators.filter(function (agg) {
    return !(agg.requiredDriverFeature && table.db && !_underscore2.default.contains(table.db.features, agg.requiredDriverFeature));
  });
  return _underscore2.default.map(supportedAggregations, function (aggregator) {
    return populateFields(aggregator, table.fields);
  });
}

function getAggregatorsWithFields(table) {
  return getAggregators(table).filter(function (aggregation) {
    return !aggregation.requiresField || aggregation.fields.reduce(function (ok, fields) {
      return ok && fields.length > 0;
    }, true);
  });
}

// TODO: unit test
function getAggregator(short) {
  return _underscore2.default.findWhere(Aggregators, { short: short });
}

var isCompatibleAggregatorForField = exports.isCompatibleAggregatorForField = function isCompatibleAggregatorForField(aggregator, field) {
  return aggregator.validFieldsFilters.every(function (filter) {
    return filter([field]).length === 1;
  });
};

function getBreakouts(fields) {
  var result = populateFields(BreakoutAggregator, fields);
  result.fields = result.fields[0];
  result.validFieldsFilter = result.validFieldsFilters[0];
  return result;
}

function addValidOperatorsToFields(table) {
  var _iteratorNormalCompletion4 = true;
  var _didIteratorError4 = false;
  var _iteratorError4 = undefined;

  try {
    for (var _iterator4 = table.fields[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
      var field = _step4.value;

      field.operators = getOperators(field, table);
    }
  } catch (err) {
    _didIteratorError4 = true;
    _iteratorError4 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion4 && _iterator4.return) {
        _iterator4.return();
      }
    } finally {
      if (_didIteratorError4) {
        throw _iteratorError4;
      }
    }
  }

  table.aggregation_options = getAggregatorsWithFields(table);
  table.breakout_options = getBreakouts(table.fields);
  return table;
}

function hasLatitudeAndLongitudeColumns(columnDefs) {
  var hasLatitude = false;
  var hasLongitude = false;
  var _iteratorNormalCompletion5 = true;
  var _didIteratorError5 = false;
  var _iteratorError5 = undefined;

  try {
    for (var _iterator5 = columnDefs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
      var col = _step5.value;

      if ((0, _types.isa)(col.special_type, _types.TYPE.Latitude)) {
        hasLatitude = true;
      }
      if ((0, _types.isa)(col.special_type, _types.TYPE.Longitude)) {
        hasLongitude = true;
      }
    }
  } catch (err) {
    _didIteratorError5 = true;
    _iteratorError5 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion5 && _iterator5.return) {
        _iterator5.return();
      }
    } finally {
      if (_didIteratorError5) {
        throw _iteratorError5;
      }
    }
  }

  return hasLatitude && hasLongitude;
}

function foreignKeyCountsByOriginTable(fks) {
  if (fks === null || !Array.isArray(fks)) {
    return null;
  }

  return fks.map(function (fk) {
    return "origin" in fk ? fk.origin.table.id : null;
  }).reduce(function (prev, curr, idx, array) {
    if (curr in prev) {
      prev[curr]++;
    } else {
      prev[curr] = 1;
    }

    return prev;
  }, {});
}

var ICON_MAPPING = exports.ICON_MAPPING = (_ICON_MAPPING = {}, _defineProperty(_ICON_MAPPING, DATE_TIME, "calendar"), _defineProperty(_ICON_MAPPING, LOCATION, "location"), _defineProperty(_ICON_MAPPING, COORDINATE, "location"), _defineProperty(_ICON_MAPPING, STRING, "string"), _defineProperty(_ICON_MAPPING, STRING_LIKE, "string"), _defineProperty(_ICON_MAPPING, NUMBER, "int"), _defineProperty(_ICON_MAPPING, BOOLEAN, "io"), _defineProperty(_ICON_MAPPING, FOREIGN_KEY, "connections"), _ICON_MAPPING);

function getIconForField(field) {
  return ICON_MAPPING[getFieldType(field)] || "unknown";
}

function computeMetadataStrength(table) {
  var total = 0;
  var completed = 0;
  function score(value) {
    total++;
    if (value) {
      completed++;
    }
  }

  score(table.description);
  if (table.fields) {
    table.fields.forEach(function (field) {
      score(field.description);
      score(field.special_type);
      if (isFK(field)) {
        score(field.target);
      }
    });
  }

  return completed / total;
}

function getFilterArgumentFormatOptions(operator, index) {
  return operator && operator.formatOptions && operator.formatOptions[index] || {};
}

/***/ }),

/***/ 103:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.performUndo = exports.dismissUndo = exports.addUndo = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*  weak */

exports.createUndo = createUndo;

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var _ref2 = arguments[1];
  var type = _ref2.type,
      payload = _ref2.payload,
      error = _ref2.error;

  switch (type) {
    case ADD_UNDO:
      if (error) {
        console.warn("ADD_UNDO", payload);
        return state;
      }
      var previous = state[state.length - 1];
      // if last undo was same type then merge them
      if (previous && payload.type != null && payload.type === previous.type) {
        return state.slice(0, -1).concat(_extends({}, payload, {
          count: previous.count + payload.count,
          actions: [].concat(_toConsumableArray(previous.actions), _toConsumableArray(payload.actions)),
          _domId: previous._domId // use original _domId so we don't get funky animations swapping for the new one
        }));
      } else {
        return state.concat(payload);
      }
    case DISMISS_UNDO:
      if (error) {
        console.warn("DISMISS_UNDO", payload);
        return state;
      }
      return state.filter(function (undo) {
        return undo.id !== payload;
      });
  }
  return state;
};

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _redux = __webpack_require__(24);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var ADD_UNDO = "metabase/questions/ADD_UNDO";
var DISMISS_UNDO = "metabase/questions/DISMISS_UNDO";
var PERFORM_UNDO = "metabase/questions/PERFORM_UNDO";

var nextUndoId = 0;

// A convenience shorthand for creating single undos
function createUndo(_ref) {
  var type = _ref.type,
      message = _ref.message,
      action = _ref.action;

  return {
    type: type,
    count: 1,
    message: message,
    actions: action ? [action] : null
  };
}

var addUndo = exports.addUndo = (0, _redux.createThunkAction)(ADD_UNDO, function (undo) {
  return function (dispatch, getState) {
    var id = nextUndoId++;
    setTimeout(function () {
      return dispatch(dismissUndo(id, false));
    }, 5000);
    return _extends({}, undo, { id: id, _domId: id });
  };
});

var dismissUndo = exports.dismissUndo = (0, _redux.createAction)(DISMISS_UNDO, function (undoId) {
  var track = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (track) {
    _analytics2.default.trackEvent("Undo", "Dismiss Undo");
  }
  return undoId;
});

var performUndo = exports.performUndo = (0, _redux.createThunkAction)(PERFORM_UNDO, function (undoId) {
  return function (dispatch, getState) {
    _analytics2.default.trackEvent("Undo", "Perform Undo");
    var undo = _underscore2.default.findWhere(getState().undo, { id: undoId });
    if (undo) {
      undo.actions.map(function (action) {
        return dispatch(action);
      });
      dispatch(dismissUndo(undoId, false));
    }
  };
});

/***/ }),

/***/ 106:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetched = exports.states = exports.clearRequestState = exports.setRequestState = exports.SET_REQUEST_STATE = undefined;

var _handleActions;

var _redux = __webpack_require__(24);

var _icepick = __webpack_require__(14);

var _redux2 = __webpack_require__(116);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*  weak */

var SET_REQUEST_STATE = exports.SET_REQUEST_STATE = "metabase/requests/SET_REQUEST_STATE";
var CLEAR_REQUEST_STATE = "metabase/requests/CLEAR_REQUEST_STATE";

var setRequestState = exports.setRequestState = (0, _redux.createAction)(SET_REQUEST_STATE);
var clearRequestState = exports.clearRequestState = (0, _redux.createAction)(CLEAR_REQUEST_STATE);

// For a given state path, returns the current request state ("LOADING", "LOADED" or a request error)
var states = exports.states = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, SET_REQUEST_STATE, {
  next: function next(state, _ref) {
    var payload = _ref.payload;
    return (0, _icepick.assocIn)(state, payload.statePath, {
      state: payload.state,
      error: payload.error
    });
  }
}), _defineProperty(_handleActions, CLEAR_REQUEST_STATE, {
  next: function next(state, _ref2) {
    var payload = _ref2.payload;
    return (0, _icepick.assocIn)(state, payload.statePath, undefined);
  }
}), _handleActions), {});

// For given state path, returns true if the data has been successfully fetched at least once
var fetched = exports.fetched = (0, _redux.handleActions)(_defineProperty({}, SET_REQUEST_STATE, {
  next: function next(state, _ref3) {
    var payload = _ref3.payload;

    var isFetch = payload.statePath[payload.statePath.length - 1] === "fetch";

    if (isFetch) {
      var statePathWithoutFetch = payload.statePath.slice(0, -1);
      return (0, _icepick.assocIn)(state, statePathWithoutFetch, (0, _icepick.getIn)(state, statePathWithoutFetch) || payload.state === "LOADED");
    } else {
      return state;
    }
  }
}), {});

exports.default = (0, _redux2.combineReducers)({ states: states, fetched: fetched });

/***/ }),

/***/ 107:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setErrorPage = exports.SET_ERROR_PAGE = undefined;

var _handleActions;

var _redux = __webpack_require__(24);

var _reactRouterRedux = __webpack_require__(19);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SET_ERROR_PAGE = exports.SET_ERROR_PAGE = "metabase/app/SET_ERROR_PAGE";

var setErrorPage = exports.setErrorPage = (0, _redux.createAction)(SET_ERROR_PAGE, function (error) {
  console.error("Error:", error);
  return error;
});

var errorPage = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, SET_ERROR_PAGE, function (state, _ref) {
  var payload = _ref.payload;
  return payload;
}), _defineProperty(_handleActions, _reactRouterRedux.LOCATION_CHANGE, function () {
  return null;
}), _handleActions), null);

exports.default = (0, _redux.combineReducers)({
  errorPage: errorPage
});

/***/ }),

/***/ 108:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Category"], ["Category"]);

var _schema_metadata = __webpack_require__(10);

var _PivotByAction = __webpack_require__(179);

var _PivotByAction2 = _interopRequireDefault(_PivotByAction);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = (0, _PivotByAction2.default)((0, _c3po.t)(_templateObject), "label", function (field) {
  return (0, _schema_metadata.isCategory)(field) && !(0, _schema_metadata.isAddress)(field);
});

/***/ }),

/***/ 109:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Which fields do you want to use for the X and Y axes?"], ["Which fields do you want to use for the X and Y axes?"]),
    _templateObject2 = _taggedTemplateLiteral(["Data"], ["Data"]),
    _templateObject3 = _taggedTemplateLiteral(["Choose fields"], ["Choose fields"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _CardRenderer = __webpack_require__(257);

var _CardRenderer2 = _interopRequireDefault(_CardRenderer);

var _LegendHeader = __webpack_require__(142);

var _LegendHeader2 = _interopRequireDefault(_LegendHeader);

var _TitleLegendHeader = __webpack_require__(258);

__webpack_require__(469);

var _schema_metadata = __webpack_require__(10);

var _utils = __webpack_require__(21);

var _dom = __webpack_require__(28);

var _formatting = __webpack_require__(8);

var _settings = __webpack_require__(45);

var _errors = __webpack_require__(75);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_SERIES = 20;

var MUTE_STYLE = "opacity: 0.25;";
for (var i = 0; i < MAX_SERIES; i++) {
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg.stacked .stack._" + i + " .area", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg.stacked .stack._" + i + " .line", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg.stacked .stack._" + i + " .bar", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg.stacked .dc-tooltip._" + i + " .dot", MUTE_STYLE);

  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg:not(.stacked) .sub._" + i + " .bar", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg:not(.stacked) .sub._" + i + " .line", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg:not(.stacked) .sub._" + i + " .dot", MUTE_STYLE);
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg:not(.stacked) .sub._" + i + " .bubble", MUTE_STYLE);

  // row charts don't support multiseries
  (0, _dom.addCSSRule)(".LineAreaBarChart.mute-" + i + " svg:not(.stacked) .row", MUTE_STYLE);
}

var LineAreaBarChart = (_temp = _class = function (_Component) {
  _inherits(LineAreaBarChart, _Component);

  function LineAreaBarChart() {
    _classCallCheck(this, LineAreaBarChart);

    return _possibleConstructorReturn(this, (LineAreaBarChart.__proto__ || Object.getPrototypeOf(LineAreaBarChart)).apply(this, arguments));
  }

  _createClass(LineAreaBarChart, [{
    key: "getHoverClasses",
    value: function getHoverClasses() {
      var hovered = this.props.hovered;

      if (hovered && hovered.index != null) {
        var seriesClasses = _underscore2.default.range(0, MAX_SERIES).filter(function (n) {
          return n !== hovered.index;
        }).map(function (n) {
          return "mute-" + n;
        });
        var axisClasses = hovered.axisIndex === 0 ? "mute-yr" : hovered.axisIndex === 1 ? "mute-yl" : null;
        return seriesClasses.concat(axisClasses);
      } else {
        return null;
      }
    }
  }, {
    key: "getFidelity",
    value: function getFidelity() {
      var fidelity = { x: 0, y: 0 };
      var size = this.props.gridSize || { width: Infinity, height: Infinity };
      if (size.width >= 5) {
        fidelity.x = 2;
      } else if (size.width >= 4) {
        fidelity.x = 1;
      }
      if (size.height >= 5) {
        fidelity.y = 2;
      } else if (size.height >= 4) {
        fidelity.y = 1;
      }

      return fidelity;
    }
  }, {
    key: "getSettings",
    value: function getSettings() {
      var fidelity = this.getFidelity();

      var settings = _extends({}, this.props.settings);

      // smooth interpolation at smallest x/y fidelity
      if (fidelity.x === 0 && fidelity.y === 0) {
        settings["line.interpolate"] = "cardinal";
      }

      // no axis in < 1 fidelity
      if (fidelity.x < 1 || fidelity.y < 1) {
        settings["graph.y_axis.axis_enabled"] = false;
      }

      // no labels in < 2 fidelity
      if (fidelity.x < 2 || fidelity.y < 2) {
        settings["graph.y_axis.labels_enabled"] = false;
      }

      return settings;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          series = _props.series,
          hovered = _props.hovered,
          showTitle = _props.showTitle,
          actionButtons = _props.actionButtons,
          onChangeCardAndRun = _props.onChangeCardAndRun,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable;


      var settings = this.getSettings();

      var multiseriesHeaderSeries = void 0;
      if (series.length > 1) {
        multiseriesHeaderSeries = series;
      }

      var hasTitle = showTitle && settings["card.title"];

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("LineAreaBarChart flex flex-column p1", this.getHoverClasses(), this.props.className)
        },
        hasTitle && _react2.default.createElement(_TitleLegendHeader.TitleLegendHeader, {
          series: series,
          settings: settings,
          onChangeCardAndRun: onChangeCardAndRun,
          actionButtons: actionButtons
        }),
        multiseriesHeaderSeries || !hasTitle && actionButtons ? // always show action buttons if we have them
        _react2.default.createElement(_LegendHeader2.default, {
          className: "flex-no-shrink",
          series: multiseriesHeaderSeries,
          settings: settings,
          hovered: hovered,
          onHoverChange: this.props.onHoverChange,
          actionButtons: !hasTitle ? actionButtons : null,
          onChangeCardAndRun: onChangeCardAndRun,
          onVisualizationClick: onVisualizationClick,
          visualizationIsClickable: visualizationIsClickable
        }) : null,
        _react2.default.createElement(_CardRenderer2.default, _extends({}, this.props, {
          series: series,
          settings: settings,
          className: "renderer flex-full",
          maxSeries: MAX_SERIES,
          renderer: this.constructor.renderer
        }))
      );
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return (0, _utils.getChartTypeFromData)(cols, rows, false) != null;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(series, settings) {
      var singleSeriesHasNoRows = function singleSeriesHasNoRows(_ref) {
        var _ref$data = _ref.data,
            cols = _ref$data.cols,
            rows = _ref$data.rows;
        return rows.length < 1;
      };
      if (_underscore2.default.every(series, singleSeriesHasNoRows)) {
        throw new _errors.MinRowsError(1, 0);
      }

      var dimensions = (settings["graph.dimensions"] || []).filter(function (name) {
        return name;
      });
      var metrics = (settings["graph.metrics"] || []).filter(function (name) {
        return name;
      });
      if (dimensions.length < 1 || metrics.length < 1) {
        throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject), (0, _c3po.t)(_templateObject2), (0, _c3po.t)(_templateObject3));
      }
    }
  }, {
    key: "seriesAreCompatible",
    value: function seriesAreCompatible(initialSeries, newSeries) {
      var initialSettings = (0, _settings.getSettings)([initialSeries]);
      var newSettings = (0, _settings.getSettings)([newSeries]);

      var initialDimensions = getColumnsFromNames(initialSeries.data.cols, initialSettings["graph.dimensions"]);
      var newDimensions = getColumnsFromNames(newSeries.data.cols, newSettings["graph.dimensions"]);
      var newMetrics = getColumnsFromNames(newSeries.data.cols, newSettings["graph.metrics"]);

      // must have at least one dimension and one metric
      if (newDimensions.length === 0 || newMetrics.length === 0) {
        return false;
      }

      // all metrics must be numeric
      if (!_underscore2.default.all(newMetrics, _schema_metadata.isNumeric)) {
        return false;
      }

      // both or neither primary dimension must be dates
      if ((0, _schema_metadata.isDate)(initialDimensions[0]) !== (0, _schema_metadata.isDate)(newDimensions[0])) {
        return false;
      }

      // both or neither primary dimension must be numeric
      // a timestamp field is both date and number so don't enforce the condition if both fields are dates; see #2811
      if ((0, _schema_metadata.isNumeric)(initialDimensions[0]) !== (0, _schema_metadata.isNumeric)(newDimensions[0]) && !((0, _schema_metadata.isDate)(initialDimensions[0]) && (0, _schema_metadata.isDate)(newDimensions[0]))) {
        return false;
      }

      return true;
    }
  }, {
    key: "transformSeries",
    value: function transformSeries(series) {
      var _ref2;

      var newSeries = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(series.map(function (s, seriesIndex) {
        return transformSingleSeries(s, series, seriesIndex);
      })));
      if (_underscore2.default.isEqual(series, newSeries) || newSeries.length === 0) {
        return series;
      } else {
        return newSeries;
      }
    }
  }]);

  return LineAreaBarChart;
}(_react.Component), _class.noHeader = true, _class.supportsSeries = true, _class.minSize = { width: 4, height: 3 }, _class.propTypes = {
  series: _propTypes2.default.array.isRequired,
  actionButtons: _propTypes2.default.node,
  showTitle: _propTypes2.default.bool,
  isDashboard: _propTypes2.default.bool
}, _class.defaultProps = {}, _temp);
LineAreaBarChart.displayName = "LineAreaBarChart";
exports.default = LineAreaBarChart;


function getColumnsFromNames(cols, names) {
  if (!names) {
    return [];
  }
  return names.map(function (name) {
    return _underscore2.default.findWhere(cols, { name: name });
  });
}

function transformSingleSeries(s, series, seriesIndex) {
  var card = s.card,
      data = s.data;

  // HACK: prevents cards from being transformed too many times

  if (card._transformed) {
    return [s];
  }

  var cols = data.cols,
      rows = data.rows;

  var settings = (0, _settings.getSettings)([s]);

  var dimensions = settings["graph.dimensions"].filter(function (d) {
    return d != null;
  });
  var metrics = settings["graph.metrics"].filter(function (d) {
    return d != null;
  });
  var dimensionColumnIndexes = dimensions.map(function (dimensionName) {
    return _underscore2.default.findIndex(cols, function (col) {
      return col.name === dimensionName;
    });
  });
  var metricColumnIndexes = metrics.map(function (metricName) {
    return _underscore2.default.findIndex(cols, function (col) {
      return col.name === metricName;
    });
  });
  var bubbleColumnIndex = settings["scatter.bubble"] && _underscore2.default.findIndex(cols, function (col) {
    return col.name === settings["scatter.bubble"];
  });
  var extraColumnIndexes = bubbleColumnIndex && bubbleColumnIndex >= 0 ? [bubbleColumnIndex] : [];

  if (dimensions.length > 1) {
    var _dimensionColumnIndex2 = _slicedToArray(dimensionColumnIndexes, 2),
        _dimensionColumnIndex = _dimensionColumnIndex2[0],
        seriesColumnIndex = _dimensionColumnIndex2[1];

    var rowColumnIndexes = [_dimensionColumnIndex].concat(metricColumnIndexes, extraColumnIndexes);

    var breakoutValues = [];
    var breakoutRowsByValue = new Map();

    var _loop = function _loop(rowIndex) {
      var row = rows[rowIndex];
      var seriesValue = row[seriesColumnIndex];

      var seriesRows = breakoutRowsByValue.get(seriesValue);
      if (!seriesRows) {
        breakoutRowsByValue.set(seriesValue, seriesRows = []);
        breakoutValues.push(seriesValue);
      }

      var newRow = rowColumnIndexes.map(function (columnIndex) {
        return row[columnIndex];
      });
      // $FlowFixMe: _origin not typed
      newRow._origin = { seriesIndex: seriesIndex, rowIndex: rowIndex, row: row, cols: cols };
      seriesRows.push(newRow);
    };

    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {
      _loop(rowIndex);
    }

    return breakoutValues.map(function (breakoutValue) {
      return {
        card: _extends({}, card, {
          // if multiseries include the card title as well as the breakout value
          name: [
          // show series title if it's multiseries
          series.length > 1 && card.name,
          // always show grouping value
          (0, _formatting.formatValue)(breakoutValue, { column: cols[seriesColumnIndex] })].filter(function (n) {
            return n;
          }).join(": "),
          _transformed: true,
          _breakoutValue: breakoutValue,
          _breakoutColumn: cols[seriesColumnIndex]
        }),
        data: {
          rows: breakoutRowsByValue.get(breakoutValue),
          cols: rowColumnIndexes.map(function (i) {
            return cols[i];
          }),
          _rawCols: cols
        },
        // for when the legend header for the breakout is clicked
        clicked: {
          dimensions: [{
            value: breakoutValue,
            column: cols[seriesColumnIndex]
          }]
        }
      };
    });
  }

  // dimensions.length <= 1
  var dimensionColumnIndex = dimensionColumnIndexes[0];
  return metricColumnIndexes.map(function (metricColumnIndex) {
    var col = cols[metricColumnIndex];
    var rowColumnIndexes = [dimensionColumnIndex].concat(metricColumnIndex, extraColumnIndexes);
    return {
      card: _extends({}, card, {
        name: [
        // show series title if it's multiseries
        series.length > 1 && card.name,
        // show column name if there are multiple metrics
        metricColumnIndexes.length > 1 && (0, _utils.getFriendlyName)(col)].filter(function (n) {
          return n;
        }).join(": "),
        _transformed: true,
        _seriesIndex: seriesIndex
      }),
      data: {
        rows: rows.map(function (row, rowIndex) {
          var newRow = rowColumnIndexes.map(function (i) {
            return row[i];
          });
          // $FlowFixMe: _origin not typed
          newRow._origin = { seriesIndex: seriesIndex, rowIndex: rowIndex, row: row, cols: cols };
          return newRow;
        }),
        cols: rowColumnIndexes.map(function (i) {
          return cols[i];
        }),
        _rawCols: cols
      }
    };
  });
}

/***/ }),

/***/ 110:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMultiCardSeries = exports.isRemappedToString = exports.isDimensionNumeric = exports.isDimensionTimeseries = exports.getFirstNonEmptySeries = exports.isNormalized = exports.isStacked = exports.isHistogramBar = exports.isOrdinal = exports.isHistogram = exports.isQuantitative = exports.isTimeseries = exports.NULL_DIMENSION_WARNING = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /// Utility functions used by both the LineAreaBar renderer and the RowRenderer

exports.initChart = initChart;
exports.makeIndexMap = makeIndexMap;
exports.forceSortedGroup = forceSortedGroup;
exports.forceSortedGroupsOfGroups = forceSortedGroupsOfGroups;
exports.reduceGroup = reduceGroup;
exports.HACK_parseTimestamp = HACK_parseTimestamp;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _dataset = __webpack_require__(84);

var _time = __webpack_require__(73);

var _numeric = __webpack_require__(131);

var _timeseries = __webpack_require__(145);

var _utils = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NULL_DIMENSION_WARNING = exports.NULL_DIMENSION_WARNING = "Data includes missing dimension values.";

function initChart(chart, element) {
  // set the bounds
  chart.width((0, _utils.getAvailableCanvasWidth)(element));
  chart.height((0, _utils.getAvailableCanvasHeight)(element));
  // disable animations
  chart.transitionDuration(0);
  // disable brush
  if (chart.brushOn) {
    chart.brushOn(false);
  }
}

function makeIndexMap(values) {
  var indexMap = new Map();
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = values.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = _slicedToArray(_step.value, 2),
          index = _step$value[0],
          _key = _step$value[1];

      indexMap.set(_key, index);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return indexMap;
}

// HACK: This ensures each group is sorted by the same order as xValues,
// otherwise we can end up with line charts with x-axis labels in the correct order
// but the points in the wrong order. There may be a more efficient way to do this.
function forceSortedGroup(group, indexMap) {
  // $FlowFixMe
  var sorted = group.top(Infinity).sort(function (a, b) {
    return indexMap.get(a.key) - indexMap.get(b.key);
  });
  for (var i = 0; i < sorted.length; i++) {
    sorted[i].index = i;
  }
  group.all = function () {
    return sorted;
  };
}

function forceSortedGroupsOfGroups(groupsOfGroups, indexMap) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = groupsOfGroups[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var groups = _step2.value;
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = groups[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var group = _step3.value;

          forceSortedGroup(group, indexMap);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}

/*
 * The following functions are actually just used by LineAreaBarRenderer but moved here in interest of making that namespace more concise
 */

function reduceGroup(group, key, warnUnaggregated) {
  return group.reduce(function (acc, d) {
    if (acc == null && d[key] == null) {
      return null;
    } else {
      if (acc != null) {
        warnUnaggregated();
        return acc + (d[key] || 0);
      } else {
        return d[key] || 0;
      }
    }
  }, function (acc, d) {
    if (acc == null && d[key] == null) {
      return null;
    } else {
      if (acc != null) {
        warnUnaggregated();
        return acc - (d[key] || 0);
      } else {
        return -(d[key] || 0);
      }
    }
  }, function () {
    return null;
  });
}

// Crossfilter calls toString on each moment object, which calls format(), which is very slow.
// Replace toString with a function that just returns the unparsed ISO input date, since that works
// just as well and is much faster
function moment_fast_toString() {
  return this._i;
}

function HACK_parseTimestamp(value, unit, warn) {
  if (value == null) {
    warn(NULL_DIMENSION_WARNING);
    return null;
  } else {
    var m = (0, _time.parseTimestamp)(value, unit);
    m.toString = moment_fast_toString;
    return m;
  }
}

/************************************************************ PROPERTIES ************************************************************/

var isTimeseries = exports.isTimeseries = function isTimeseries(settings) {
  return settings["graph.x_axis.scale"] === "timeseries";
};
var isQuantitative = exports.isQuantitative = function isQuantitative(settings) {
  return ["linear", "log", "pow"].indexOf(settings["graph.x_axis.scale"]) >= 0;
};
var isHistogram = exports.isHistogram = function isHistogram(settings) {
  return settings["graph.x_axis._scale_original"] === "histogram" || settings["graph.x_axis.scale"] === "histogram";
};
var isOrdinal = exports.isOrdinal = function isOrdinal(settings) {
  return !isTimeseries(settings) && !isHistogram(settings);
};

// bar histograms have special tick formatting:
// * aligned with beginning of bar to show bin boundaries
// * label only shows beginning value of bin
// * includes an extra tick at the end for the end of the last bin
var isHistogramBar = exports.isHistogramBar = function isHistogramBar(_ref) {
  var settings = _ref.settings,
      chartType = _ref.chartType;
  return isHistogram(settings) && chartType === "bar";
};

var isStacked = exports.isStacked = function isStacked(settings, datas) {
  return settings["stackable.stack_type"] && datas.length > 1;
};
var isNormalized = exports.isNormalized = function isNormalized(settings, datas) {
  return isStacked(settings, datas) && settings["stackable.stack_type"] === "normalized";
};

// find the first nonempty single series
var getFirstNonEmptySeries = exports.getFirstNonEmptySeries = function getFirstNonEmptySeries(series) {
  return _underscore2.default.find(series, function (s) {
    return !(0, _dataset.datasetContainsNoResults)(s.data);
  });
};
var isDimensionTimeseries = exports.isDimensionTimeseries = function isDimensionTimeseries(series) {
  return (0, _timeseries.dimensionIsTimeseries)(getFirstNonEmptySeries(series).data);
};
var isDimensionNumeric = exports.isDimensionNumeric = function isDimensionNumeric(series) {
  return (0, _numeric.dimensionIsNumeric)(getFirstNonEmptySeries(series).data);
};

function hasRemappingAndValuesAreStrings(_ref2) {
  var cols = _ref2.cols;
  var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  var column = cols[i];

  if (column.remapping && column.remapping.size > 0) {
    // We have remapped values, so check their type for determining whether the dimension is numeric
    // ES6 Map makes the lookup of first value a little verbose
    return typeof column.remapping.values().next().value === "string";
  } else {
    return false;
  }
}

var isRemappedToString = exports.isRemappedToString = function isRemappedToString(series) {
  return hasRemappingAndValuesAreStrings(getFirstNonEmptySeries(series).data);
};

// is this a dashboard multiseries?
// TODO: better way to detect this?
var isMultiCardSeries = exports.isMultiCardSeries = function isMultiCardSeries(series) {
  return series.length > 1 && (0, _icepick.getIn)(series, [0, "card", "id"]) !== (0, _icepick.getIn)(series, [1, "card", "id"]);
};

/***/ }),

/***/ 111:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GRAPH_AXIS_SETTINGS = exports.GRAPH_COLORS_SETTINGS = exports.LINE_SETTINGS_2 = exports.GRAPH_GOAL_SETTINGS = exports.STACKABLE_SETTINGS = exports.LINE_SETTINGS = exports.GRAPH_BUBBLE_SETTINGS = exports.GRAPH_DATA_SETTINGS = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["X-axis"], ["X-axis"]),
    _templateObject2 = _taggedTemplateLiteral(["Add a series breakout..."], ["Add a series breakout..."]),
    _templateObject3 = _taggedTemplateLiteral(["Y-axis"], ["Y-axis"]),
    _templateObject4 = _taggedTemplateLiteral(["Add another series..."], ["Add another series..."]),
    _templateObject5 = _taggedTemplateLiteral(["Bubble size"], ["Bubble size"]),
    _templateObject6 = _taggedTemplateLiteral(["Style"], ["Style"]),
    _templateObject7 = _taggedTemplateLiteral(["Line"], ["Line"]),
    _templateObject8 = _taggedTemplateLiteral(["Curve"], ["Curve"]),
    _templateObject9 = _taggedTemplateLiteral(["Step"], ["Step"]),
    _templateObject10 = _taggedTemplateLiteral(["Show point markers on lines"], ["Show point markers on lines"]),
    _templateObject11 = _taggedTemplateLiteral(["Stacking"], ["Stacking"]),
    _templateObject12 = _taggedTemplateLiteral(["Don't stack"], ["Don't stack"]),
    _templateObject13 = _taggedTemplateLiteral(["Stack"], ["Stack"]),
    _templateObject14 = _taggedTemplateLiteral(["Stack - 100%"], ["Stack - 100%"]),
    _templateObject15 = _taggedTemplateLiteral(["Show goal"], ["Show goal"]),
    _templateObject16 = _taggedTemplateLiteral(["Goal value"], ["Goal value"]),
    _templateObject17 = _taggedTemplateLiteral(["Replace missing values with"], ["Replace missing values with"]),
    _templateObject18 = _taggedTemplateLiteral(["Zero"], ["Zero"]),
    _templateObject19 = _taggedTemplateLiteral(["Nothing"], ["Nothing"]),
    _templateObject20 = _taggedTemplateLiteral(["Linear Interpolated"], ["Linear Interpolated"]),
    _templateObject21 = _taggedTemplateLiteral(["X-axis scale"], ["X-axis scale"]),
    _templateObject22 = _taggedTemplateLiteral(["Timeseries"], ["Timeseries"]),
    _templateObject23 = _taggedTemplateLiteral(["Linear"], ["Linear"]),
    _templateObject24 = _taggedTemplateLiteral(["Power"], ["Power"]),
    _templateObject25 = _taggedTemplateLiteral(["Log"], ["Log"]),
    _templateObject26 = _taggedTemplateLiteral(["Histogram"], ["Histogram"]),
    _templateObject27 = _taggedTemplateLiteral(["Ordinal"], ["Ordinal"]),
    _templateObject28 = _taggedTemplateLiteral(["Y-axis scale"], ["Y-axis scale"]),
    _templateObject29 = _taggedTemplateLiteral(["Show x-axis line and marks"], ["Show x-axis line and marks"]),
    _templateObject30 = _taggedTemplateLiteral(["Hide"], ["Hide"]),
    _templateObject31 = _taggedTemplateLiteral(["Show"], ["Show"]),
    _templateObject32 = _taggedTemplateLiteral(["Compact"], ["Compact"]),
    _templateObject33 = _taggedTemplateLiteral(["Rotate 45\xB0"], ["Rotate 45\xB0"]),
    _templateObject34 = _taggedTemplateLiteral(["Rotate 90\xB0"], ["Rotate 90\xB0"]),
    _templateObject35 = _taggedTemplateLiteral(["Show y-axis line and marks"], ["Show y-axis line and marks"]),
    _templateObject36 = _taggedTemplateLiteral(["Auto y-axis range"], ["Auto y-axis range"]),
    _templateObject37 = _taggedTemplateLiteral(["Min"], ["Min"]),
    _templateObject38 = _taggedTemplateLiteral(["Max"], ["Max"]),
    _templateObject39 = _taggedTemplateLiteral(["Use a split y-axis when necessary"], ["Use a split y-axis when necessary"]),
    _templateObject40 = _taggedTemplateLiteral(["Show label on x-axis"], ["Show label on x-axis"]),
    _templateObject41 = _taggedTemplateLiteral(["X-axis label"], ["X-axis label"]),
    _templateObject42 = _taggedTemplateLiteral(["Show label on y-axis"], ["Show label on y-axis"]),
    _templateObject43 = _taggedTemplateLiteral(["Y-axis label"], ["Y-axis label"]);

var _formatting = __webpack_require__(8);

var _schema_metadata = __webpack_require__(10);

var _c3po = __webpack_require__(2);

var _settings = __webpack_require__(45);

var _utils = __webpack_require__(21);

var _numeric = __webpack_require__(131);

var _timeseries = __webpack_require__(145);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function getSeriesDefaultTitles(series, vizSettings) {
  return series.map(function (s) {
    return s.card.name;
  });
}

function getSeriesTitles(series, vizSettings) {
  return vizSettings["graph.series_labels"] || getSeriesDefaultTitles(series, vizSettings);
}

var GRAPH_DATA_SETTINGS = exports.GRAPH_DATA_SETTINGS = {
  "graph._dimension_filter": {
    getDefault: function getDefault(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          card = _ref2[0].card;

      return card.display === "scatter" ? _schema_metadata.isAny : _schema_metadata.isDimension;
    },
    useRawSeries: true
  },
  "graph._metric_filter": {
    getDefault: function getDefault(_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          card = _ref4[0].card;

      return card.display === "scatter" ? _schema_metadata.isNumeric : _schema_metadata.isMetric;
    },
    useRawSeries: true
  },
  "graph.dimensions": {
    section: "Data",
    title: (0, _c3po.t)(_templateObject),
    widget: "fields",
    isValid: function isValid(_ref5, vizSettings) {
      var _ref6 = _slicedToArray(_ref5, 1),
          _ref6$ = _ref6[0],
          card = _ref6$.card,
          data = _ref6$.data;

      return (0, _utils.columnsAreValid)(card.visualization_settings["graph.dimensions"], data, vizSettings["graph._dimension_filter"]) && (0, _utils.columnsAreValid)(card.visualization_settings["graph.metrics"], data, vizSettings["graph._metric_filter"]);
    },
    getDefault: function getDefault(series, vizSettings) {
      return (0, _settings.getDefaultColumns)(series).dimensions;
    },
    persistDefault: true,
    getProps: function getProps(_ref7, vizSettings) {
      var _ref8 = _slicedToArray(_ref7, 1),
          _ref8$ = _ref8[0],
          card = _ref8$.card,
          data = _ref8$.data;

      var value = vizSettings["graph.dimensions"];
      var options = data.cols.filter(vizSettings["graph._dimension_filter"]).map(_settings.getOptionFromColumn);
      return {
        options: options,
        addAnother: options.length > value.length && value.length < 2 && vizSettings["graph.metrics"].length < 2 ? (0, _c3po.t)(_templateObject2) : null
      };
    },
    readDependencies: ["graph._dimension_filter", "graph._metric_filter"],
    writeDependencies: ["graph.metrics"],
    dashboard: false,
    useRawSeries: true
  },
  "graph.metrics": {
    section: "Data",
    title: (0, _c3po.t)(_templateObject3),
    widget: "fields",
    isValid: function isValid(_ref9, vizSettings) {
      var _ref10 = _slicedToArray(_ref9, 1),
          _ref10$ = _ref10[0],
          card = _ref10$.card,
          data = _ref10$.data;

      return (0, _utils.columnsAreValid)(card.visualization_settings["graph.dimensions"], data, vizSettings["graph._dimension_filter"]) && (0, _utils.columnsAreValid)(card.visualization_settings["graph.metrics"], data, vizSettings["graph._metric_filter"]);
    },
    getDefault: function getDefault(series, vizSettings) {
      return (0, _settings.getDefaultColumns)(series).metrics;
    },
    persistDefault: true,
    getProps: function getProps(_ref11, vizSettings) {
      var _ref12 = _slicedToArray(_ref11, 1),
          _ref12$ = _ref12[0],
          card = _ref12$.card,
          data = _ref12$.data;

      var value = vizSettings["graph.dimensions"];
      var options = data.cols.filter(vizSettings["graph._metric_filter"]).map(_settings.getOptionFromColumn);
      return {
        options: options,
        addAnother: options.length > value.length && vizSettings["graph.dimensions"].length < 2 ? (0, _c3po.t)(_templateObject4) : null
      };
    },
    readDependencies: ["graph._dimension_filter", "graph._metric_filter"],
    writeDependencies: ["graph.dimensions"],
    dashboard: false,
    useRawSeries: true
  }
};

var GRAPH_BUBBLE_SETTINGS = exports.GRAPH_BUBBLE_SETTINGS = {
  "scatter.bubble": {
    section: "Data",
    title: (0, _c3po.t)(_templateObject5),
    widget: "field",
    isValid: function isValid(_ref13, vizSettings) {
      var _ref14 = _slicedToArray(_ref13, 1),
          _ref14$ = _ref14[0],
          card = _ref14$.card,
          data = _ref14$.data;

      return (0, _utils.columnsAreValid)([card.visualization_settings["scatter.bubble"]], data, _schema_metadata.isNumeric);
    },
    getDefault: function getDefault(series) {
      return (0, _settings.getDefaultColumns)(series).bubble;
    },
    getProps: function getProps(_ref15, vizSettings, onChange) {
      var _ref16 = _slicedToArray(_ref15, 1),
          _ref16$ = _ref16[0],
          card = _ref16$.card,
          data = _ref16$.data;

      var options = data.cols.filter(_schema_metadata.isNumeric).map(_settings.getOptionFromColumn);
      return {
        options: options,
        onRemove: vizSettings["scatter.bubble"] ? function () {
          return onChange(null);
        } : null
      };
    },
    writeDependencies: ["graph.dimensions"],
    dashboard: false,
    useRawSeries: true
  }
};

var LINE_SETTINGS = exports.LINE_SETTINGS = {
  "line.interpolate": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject6),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject7), value: "linear" }, { name: (0, _c3po.t)(_templateObject8), value: "cardinal" }, { name: (0, _c3po.t)(_templateObject9), value: "step-after" }]
    },
    getDefault: function getDefault() {
      return "linear";
    }
  },
  "line.marker_enabled": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject10),
    widget: "toggle"
  }
};

var STACKABLE_SETTINGS = exports.STACKABLE_SETTINGS = {
  "stackable.stack_type": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject11),
    widget: "radio",
    getProps: function getProps(series, vizSettings) {
      return {
        options: [{ name: (0, _c3po.t)(_templateObject12), value: null }, { name: (0, _c3po.t)(_templateObject13), value: "stacked" }, { name: (0, _c3po.t)(_templateObject14), value: "normalized" }]
      };
    },
    getDefault: function getDefault(_ref17, vizSettings) {
      var _ref18 = _slicedToArray(_ref17, 1),
          _ref18$ = _ref18[0],
          card = _ref18$.card,
          data = _ref18$.data;

      return (
        // legacy setting and default for D-M-M+ charts
        vizSettings["stackable.stacked"] || card.display === "area" && vizSettings["graph.metrics"].length > 1 ? "stacked" : null
      );
    },
    getHidden: function getHidden(series) {
      return series.length < 2;
    },
    readDependencies: ["graph.metrics"]
  }
};

var GRAPH_GOAL_SETTINGS = exports.GRAPH_GOAL_SETTINGS = {
  "graph.show_goal": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject15),
    widget: "toggle",
    default: false
  },
  "graph.goal_value": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject16),
    widget: "number",
    default: 0,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["graph.show_goal"] !== true;
    },
    readDependencies: ["graph.show_goal"]
  }
};

var LINE_SETTINGS_2 = exports.LINE_SETTINGS_2 = {
  "line.missing": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject17),
    widget: "select",
    default: "interpolate",
    getProps: function getProps(series, vizSettings) {
      return {
        options: [{ name: (0, _c3po.t)(_templateObject18), value: "zero" }, { name: (0, _c3po.t)(_templateObject19), value: "none" }, { name: (0, _c3po.t)(_templateObject20), value: "interpolate" }]
      };
    }
  }
};

var GRAPH_COLORS_SETTINGS = exports.GRAPH_COLORS_SETTINGS = {
  "graph.colors": {
    section: "Display",
    getTitle: function getTitle(_ref19) {
      var _ref20 = _slicedToArray(_ref19, 1),
          display = _ref20[0].card.display;

      return (0, _formatting.capitalize)(display === "scatter" ? "bubble" : display) + " colors";
    },
    widget: "colors",
    readDependencies: ["graph.dimensions", "graph.metrics", "graph.series_labels"],
    getDefault: function getDefault(_ref21, vizSettings) {
      var _ref22 = _slicedToArray(_ref21, 1),
          card = _ref22[0].card;

      return (0, _utils.getCardColors)(card);
    },
    getProps: function getProps(series, vizSettings) {
      return { seriesTitles: getSeriesTitles(series, vizSettings) };
    }
  }
};

var GRAPH_AXIS_SETTINGS = exports.GRAPH_AXIS_SETTINGS = {
  "graph.x_axis._is_timeseries": {
    readDependencies: ["graph.dimensions"],
    getDefault: function getDefault(_ref23, vizSettings) {
      var _ref24 = _slicedToArray(_ref23, 1),
          data = _ref24[0].data;

      return (0, _timeseries.dimensionIsTimeseries)(data, _underscore2.default.findIndex(data.cols, function (c) {
        return c.name === vizSettings["graph.dimensions"].filter(function (d) {
          return d;
        })[0];
      }));
    }
  },
  "graph.x_axis._is_numeric": {
    readDependencies: ["graph.dimensions"],
    getDefault: function getDefault(_ref25, vizSettings) {
      var _ref26 = _slicedToArray(_ref25, 1),
          data = _ref26[0].data;

      return (0, _numeric.dimensionIsNumeric)(data, _underscore2.default.findIndex(data.cols, function (c) {
        return c.name === vizSettings["graph.dimensions"].filter(function (d) {
          return d;
        })[0];
      }));
    }
  },
  "graph.x_axis._is_histogram": {
    getDefault: function getDefault(_ref27, vizSettings) {
      var _ref28 = _slicedToArray(_ref27, 1),
          cols = _ref28[0].data.cols;

      return (
        // matches binned numeric columns, and date extracts like day-of-week, etc
        cols[0].binning_info != null || /^\w+-of-\w+$/.test(cols[0].unit)
      );
    }
  },
  "graph.x_axis.scale": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject21),
    widget: "select",
    default: "ordinal",
    readDependencies: ["graph.x_axis._is_timeseries", "graph.x_axis._is_numeric", "graph.x_axis._is_histogram"],
    getDefault: function getDefault(series, vizSettings) {
      return vizSettings["graph.x_axis._is_histogram"] ? "histogram" : vizSettings["graph.x_axis._is_timeseries"] ? "timeseries" : vizSettings["graph.x_axis._is_numeric"] ? "linear" : "ordinal";
    },
    getProps: function getProps(series, vizSettings) {
      var options = [];
      if (vizSettings["graph.x_axis._is_timeseries"]) {
        options.push({ name: (0, _c3po.t)(_templateObject22), value: "timeseries" });
      }
      if (vizSettings["graph.x_axis._is_numeric"]) {
        options.push({ name: (0, _c3po.t)(_templateObject23), value: "linear" });
        if (!vizSettings["graph.x_axis._is_histogram"]) {
          options.push({ name: (0, _c3po.t)(_templateObject24), value: "pow" });
          options.push({ name: (0, _c3po.t)(_templateObject25), value: "log" });
        }
        options.push({ name: (0, _c3po.t)(_templateObject26), value: "histogram" });
      }
      options.push({ name: (0, _c3po.t)(_templateObject27), value: "ordinal" });
      return { options: options };
    }
  },
  "graph.y_axis.scale": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject28),
    widget: "select",
    default: "linear",
    getProps: function getProps(series, vizSettings) {
      return {
        options: [{ name: (0, _c3po.t)(_templateObject23), value: "linear" }, { name: (0, _c3po.t)(_templateObject24), value: "pow" }, { name: (0, _c3po.t)(_templateObject25), value: "log" }]
      };
    }
  },
  "graph.x_axis.axis_enabled": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject29),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject30), value: false }, { name: (0, _c3po.t)(_templateObject31), value: true }, { name: (0, _c3po.t)(_templateObject32), value: "compact" }, { name: (0, _c3po.t)(_templateObject33), value: "rotate-45" }, { name: (0, _c3po.t)(_templateObject34), value: "rotate-90" }]
    },
    default: true
  },
  "graph.y_axis.axis_enabled": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject35),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject30), value: false }, { name: (0, _c3po.t)(_templateObject31), value: true }]
    },
    default: true
  },
  "graph.y_axis.auto_range": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject36),
    widget: "toggle",
    default: true
  },
  "graph.y_axis.min": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject37),
    widget: "number",
    default: 0,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["graph.y_axis.auto_range"] !== false;
    }
  },
  "graph.y_axis.max": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject38),
    widget: "number",
    default: 100,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["graph.y_axis.auto_range"] !== false;
    }
  },
  /*
  "graph.y_axis_right.auto_range": {
      section: "Axes",
      title: t`Auto right-hand y-axis range`,
      widget: "toggle",
      default: true
  },
  "graph.y_axis_right.min": {
      section: "Axes",
      title: t`Min`,
      widget: "number",
      default: 0,
      getHidden: (series, vizSettings) => vizSettings["graph.y_axis_right.auto_range"] !== false
  },
  "graph.y_axis_right.max": {
      section: "Axes",
      title: t`Max`,
      widget: "number",
      default: 100,
      getHidden: (series, vizSettings) => vizSettings["graph.y_axis_right.auto_range"] !== false
  },
  */
  "graph.y_axis.auto_split": {
    section: "Axes",
    title: (0, _c3po.t)(_templateObject39),
    widget: "toggle",
    default: true,
    getHidden: function getHidden(series) {
      return series.length < 2;
    }
  },
  "graph.x_axis.labels_enabled": {
    section: "Labels",
    title: (0, _c3po.t)(_templateObject40),
    widget: "toggle",
    default: true
  },
  "graph.x_axis.title_text": {
    section: "Labels",
    title: (0, _c3po.t)(_templateObject41),
    widget: "input",
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["graph.x_axis.labels_enabled"] === false;
    },
    getDefault: function getDefault(series, vizSettings) {
      return series.length === 1 ? (0, _utils.getFriendlyName)(series[0].data.cols[0]) : null;
    }
  },
  "graph.y_axis.labels_enabled": {
    section: "Labels",
    title: (0, _c3po.t)(_templateObject42),
    widget: "toggle",
    default: true
  },
  "graph.y_axis.title_text": {
    section: "Labels",
    title: (0, _c3po.t)(_templateObject43),
    widget: "input",
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["graph.y_axis.labels_enabled"] === false;
    },
    getDefault: function getDefault(series, vizSettings) {
      return series.length === 1 ? (0, _utils.getFriendlyName)(series[0].data.cols[1]) : null;
    }
  },
  "graph.series_labels": {
    section: "Labels",
    title: "Series labels",
    widget: "inputGroup",
    readDependencies: ["graph.dimensions", "graph.metrics"],
    getHidden: function getHidden(series) {
      return series.length < 2;
    },
    getDefault: function getDefault(series, vizSettings) {
      return getSeriesDefaultTitles(series, vizSettings);
    }
  }
};

/***/ }),

/***/ 117:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.format = format;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _expressions = __webpack_require__(118);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

// convert a MBQL expression back into an expression string
function format(expr, _ref) {
  var _ref$tableMetadata = _ref.tableMetadata,
      tableMetadata = _ref$tableMetadata === undefined ? {} : _ref$tableMetadata,
      _ref$customFields = _ref.customFields,
      customFields = _ref$customFields === undefined ? {} : _ref$customFields,
      _ref$operators = _ref.operators,
      operators = _ref$operators === undefined ? _expressions.VALID_OPERATORS : _ref$operators,
      _ref$aggregations = _ref.aggregations,
      aggregations = _ref$aggregations === undefined ? _expressions.VALID_AGGREGATIONS : _ref$aggregations;
  var parens = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var info = { tableMetadata: tableMetadata, customFields: customFields, operators: operators, aggregations: aggregations };
  if (expr == null || _underscore2.default.isEqual(expr, [])) {
    return "";
  }
  if (typeof expr === "number") {
    return formatLiteral(expr);
  }
  if ((0, _expressions.isField)(expr)) {
    return formatField(expr, info);
  }
  if ((0, _expressions.isMetric)(expr)) {
    return formatMetric(expr, info);
  }
  if ((0, _expressions.isMath)(expr)) {
    return formatMath(expr, info, parens);
  }
  if ((0, _expressions.isAggregation)(expr)) {
    return formatAggregation(expr, info);
  }
  if ((0, _expressions.isExpressionReference)(expr)) {
    return formatExpressionReference(expr, info);
  }
  throw new Error("Unknown expression " + JSON.stringify(expr));
}

function formatLiteral(expr) {
  return JSON.stringify(expr);
}

function formatField(_ref2, _ref3) {
  var _ref4 = _slicedToArray(_ref2, 2),
      fieldId = _ref4[1];

  var fields = _ref3.tableMetadata.fields;

  var field = _underscore2.default.findWhere(fields, { id: fieldId });
  if (!field) {
    throw "field with ID does not exist: " + fieldId;
  }
  return (0, _expressions.formatFieldName)(field);
}

function formatMetric(_ref5, _ref6) {
  var _ref7 = _slicedToArray(_ref5, 2),
      metricId = _ref7[1];

  var metrics = _ref6.tableMetadata.metrics;

  var metric = _underscore2.default.findWhere(metrics, { id: metricId });
  if (!metric) {
    throw "metric with ID does not exist: " + metricId;
  }
  return (0, _expressions.formatMetricName)(metric);
}

function formatExpressionReference(_ref8) {
  var _ref9 = _slicedToArray(_ref8, 2),
      expressionName = _ref9[1];

  return (0, _expressions.formatExpressionName)(expressionName);
}

function formatMath(_ref10, info, parens) {
  var _ref11 = _toArray(_ref10),
      operator = _ref11[0],
      args = _ref11.slice(1);

  var formatted = args.map(function (arg) {
    return format(arg, info, true);
  }).join(" " + operator + " ");
  return parens ? "(" + formatted + ")" : formatted;
}

function formatAggregation(_ref12, info) {
  var _ref13 = _toArray(_ref12),
      aggregation = _ref13[0],
      args = _ref13.slice(1);

  var aggregations = info.aggregations;

  return args.length === 0 ? aggregations.get(aggregation) : aggregations.get(aggregation) + "(" + args.map(function (arg) {
    return format(arg, info);
  }).join(", ") + ")";
}

/***/ }),

/***/ 118:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VALID_AGGREGATIONS = exports.VALID_OPERATORS = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _config = __webpack_require__(232);

Object.defineProperty(exports, "VALID_OPERATORS", {
  enumerable: true,
  get: function get() {
    return _config.VALID_OPERATORS;
  }
});
Object.defineProperty(exports, "VALID_AGGREGATIONS", {
  enumerable: true,
  get: function get() {
    return _config.VALID_AGGREGATIONS;
  }
});
exports.getAggregationFromName = getAggregationFromName;
exports.isReservedWord = isReservedWord;
exports.formatAggregationName = formatAggregationName;
exports.formatMetricName = formatMetricName;
exports.formatFieldName = formatFieldName;
exports.formatExpressionName = formatExpressionName;
exports.isExpression = isExpression;
exports.isField = isField;
exports.isMetric = isMetric;
exports.isMath = isMath;
exports.isAggregation = isAggregation;
exports.isExpressionReference = isExpressionReference;
exports.isValidArg = isValidArg;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _util = __webpack_require__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AGG_NAMES_MAP = new Map(Array.from(_config.VALID_AGGREGATIONS).map(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      short = _ref2[0],
      displayName = _ref2[1];

  return (
    // case-insensitive
    [displayName.toLowerCase(), short]
  );
}));

function getAggregationFromName(name) {
  // case-insensitive
  return AGG_NAMES_MAP.get(name.toLowerCase());
}

function isReservedWord(word) {
  return !!getAggregationFromName(word);
}

function formatAggregationName(aggregationOption) {
  return _config.VALID_AGGREGATIONS.get(aggregationOption.short);
}

function formatIdentifier(name) {
  return (/^\w+$/.test(name) && !isReservedWord(name) ? name : JSON.stringify(name)
  );
}

function formatMetricName(metric) {
  return formatIdentifier(metric.name);
}

function formatFieldName(field) {
  return formatIdentifier(field.display_name);
}

function formatExpressionName(name) {
  return formatIdentifier(name);
}

// move to query lib

function isExpression(expr) {
  return isMath(expr) || isAggregation(expr) || isField(expr) || isMetric(expr) || isExpressionReference(expr);
}

function isField(expr) {
  return Array.isArray(expr) && expr.length === 2 && (0, _util.mbqlEq)(expr[0], "field-id") && typeof expr[1] === "number";
}

function isMetric(expr) {
  // case sensitive, unlike most mbql
  return Array.isArray(expr) && expr.length === 2 && expr[0] === "METRIC" && typeof expr[1] === "number";
}

function isMath(expr) {
  return Array.isArray(expr) && _config.VALID_OPERATORS.has(expr[0]) && _underscore2.default.all(expr.slice(1), isValidArg);
}

function isAggregation(expr) {
  return Array.isArray(expr) && _config.VALID_AGGREGATIONS.has(expr[0]) && _underscore2.default.all(expr.slice(1), isValidArg);
}

function isExpressionReference(expr) {
  return Array.isArray(expr) && expr.length === 2 && (0, _util.mbqlEq)(expr[0], "expression") && typeof expr[1] === "string";
}

function isValidArg(arg) {
  return isExpression(arg) || isField(arg) || typeof arg === "number";
}

/***/ }),

/***/ 119:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.countLines = undefined;
exports.createMultiwordSearchRegex = createMultiwordSearchRegex;
exports.caseInsensitiveSearch = caseInsensitiveSearch;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Creates a regex that will find an order dependent, case insensitive substring. All whitespace will be rendered as ".*" in the regex, to create a fuzzy search.
function createMultiwordSearchRegex(input) {
  if (input) {
    return new RegExp(_underscore2.default.map(input.split(/\s+/), function (word) {
      return RegExp.escape(word);
    }).join(".*"), "i");
  }
}

var countLines = exports.countLines = function countLines(str) {
  return str.split(/\n/g).length;
};

function caseInsensitiveSearch(haystack, needle) {
  return !needle || haystack != null && haystack.toLowerCase().indexOf(needle.toLowerCase()) >= 0;
}

/***/ }),

/***/ 12:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerAnalyticsClickListener = registerAnalyticsClickListener;

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _debug = __webpack_require__(227);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*global ga*/


// Simple module for in-app analytics.  Currently sends data to GA but could be extended to anything else.
var MetabaseAnalytics = {
  // track a pageview (a.k.a. route change)
  trackPageView: function trackPageView(url) {
    if (url) {
      // scrub query builder urls to remove serialized json queries from path
      url = url.lastIndexOf("/q/", 0) === 0 ? "/q/" : url;

      var _MetabaseSettings$get = _settings2.default.get("version"),
          tag = _MetabaseSettings$get.tag;

      // $FlowFixMe


      ga("set", "dimension1", tag);
      ga("set", "page", url);
      ga("send", "pageview", url);
    }
  },

  // track an event
  trackEvent: function trackEvent(category, action, label, value) {
    var _MetabaseSettings$get2 = _settings2.default.get("version"),
        tag = _MetabaseSettings$get2.tag;

    // category & action are required, rest are optional


    if (category && action) {
      // $FlowFixMe
      ga("set", "dimension1", tag);
      ga("send", "event", category, action, label, value);
    }
    if (_debug.DEBUG) {
      console.log("trackEvent", { category: category, action: action, label: label, value: value });
    }
  }
};

exports.default = MetabaseAnalytics;
function registerAnalyticsClickListener() {
  // $FlowFixMe
  document.body.addEventListener("click", function (e) {
    var node = e.target;

    // check the target and all parent elements
    while (node) {
      if (node.dataset && node.dataset.metabaseEvent) {
        // we expect our event to be a semicolon delimited string
        var parts = node.dataset.metabaseEvent.split(";").map(function (p) {
          return p.trim();
        });
        MetabaseAnalytics.trackEvent.apply(MetabaseAnalytics, _toConsumableArray(parts));
      }
      node = node.parentNode;
    }
  }, true);
}

/***/ }),

/***/ 124:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.navigateToNewCardFromDashboard = exports.deletePublicLink = exports.DELETE_PUBLIC_LINK = exports.createPublicLink = exports.CREATE_PUBLIC_LINK = exports.setParameterValue = exports.setParameterDefaultValue = exports.setParameterName = exports.removeParameter = exports.addParameter = exports.setParameterMapping = exports.setEditingParameter = exports.onReplaceAllDashCardVisualizationSettings = exports.onUpdateDashCardVisualizationSettings = exports.revertToRevision = exports.fetchRevisions = exports.updateEmbeddingParams = exports.updateEnableEmbedding = exports.fetchDashboard = exports.markCardAsSlow = exports.fetchCardData = exports.fetchDashboardCardData = exports.fetchDataOrError = exports.clearCardData = exports.removeCardFromDashboard = exports.saveDashboardAndCards = exports.addTextDashCardToDashboard = exports.addDashCardToDashboard = exports.addCardToDashboard = exports.deleteCard = exports.fetchCards = exports.setDashCardAttributes = exports.setDashboardAttributes = exports.markNewCardSeen = exports.setEditingDashboard = exports.initialize = exports.SET_PARAMETER_DEFAULT_VALUE = exports.SET_PARAMETER_VALUE = exports.SET_PARAMETER_NAME = exports.SET_PARAMETER_MAPPING = exports.REMOVE_PARAMETER = exports.ADD_PARAMETER = exports.SET_EDITING_PARAMETER_ID = exports.MARK_NEW_CARD_SEEN = exports.REVERT_TO_REVISION = exports.FETCH_REVISIONS = exports.CLEAR_CARD_DATA = exports.MARK_CARD_AS_SLOW = exports.FETCH_CARD_DATA = exports.FETCH_DASHBOARD_CARD_DATA = exports.UPDATE_DASHCARD_ID = exports.REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS = exports.UPDATE_DASHCARD_VISUALIZATION_SETTINGS = exports.SET_DASHCARD_ATTRIBUTES = exports.REMOVE_CARD_FROM_DASH = exports.ADD_CARD_TO_DASH = exports.SET_DASHBOARD_ATTRIBUTES = exports.SAVE_DASHBOARD_AND_CARDS = exports.FETCH_DASHBOARD = exports.DELETE_CARD = exports.FETCH_CARDS = exports.SET_EDITING_DASHBOARD = exports.INITIALIZE = undefined;

var _handleActions, _handleActions2, _handleActions4, _handleActions5, _handleActions6, _handleActions7, _handleActions9, _handleActions11;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var fetchDataOrError = exports.fetchDataOrError = function () {
  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(dataPromise) {
    return regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.prev = 0;
            _context6.next = 3;
            return dataPromise;

          case 3:
            return _context6.abrupt("return", _context6.sent);

          case 6:
            _context6.prev = 6;
            _context6.t0 = _context6["catch"](0);
            return _context6.abrupt("return", { error: _context6.t0 });

          case 9:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this, [[0, 6]]);
  }));

  return function fetchDataOrError(_x10) {
    return _ref10.apply(this, arguments);
  };
}();

var _icepick = __webpack_require__(14);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _redux = __webpack_require__(24);

var _normalizr = __webpack_require__(156);

var _dashboards = __webpack_require__(160);

var _Dashboard = __webpack_require__(199);

var _Card = __webpack_require__(37);

var _Parameter = __webpack_require__(85);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _dashboard_grid = __webpack_require__(271);

var _card2 = __webpack_require__(62);

var _metadata = __webpack_require__(16);

var _reactRouterRedux = __webpack_require__(19);

var _services = __webpack_require__(15);

var _selectors = __webpack_require__(147);

var _utils3 = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /*  weak */

var DATASET_SLOW_TIMEOUT = 15 * 1000;

// normalizr schemas
var dashcard = new _normalizr.schema.Entity("dashcard");
var card = new _normalizr.schema.Entity("card");
var dashboard = new _normalizr.schema.Entity("dashboard", {
  ordered_cards: [dashcard]
});

// action constants

var INITIALIZE = exports.INITIALIZE = "metabase/dashboard/INITIALIZE";

var SET_EDITING_DASHBOARD = exports.SET_EDITING_DASHBOARD = "metabase/dashboard/SET_EDITING_DASHBOARD";

var FETCH_CARDS = exports.FETCH_CARDS = "metabase/dashboard/FETCH_CARDS";
var DELETE_CARD = exports.DELETE_CARD = "metabase/dashboard/DELETE_CARD";

// NOTE: this is used in metabase/redux/metadata but can't be imported directly due to circular reference
var FETCH_DASHBOARD = exports.FETCH_DASHBOARD = "metabase/dashboard/FETCH_DASHBOARD";
var SAVE_DASHBOARD_AND_CARDS = exports.SAVE_DASHBOARD_AND_CARDS = "metabase/dashboard/SAVE_DASHBOARD_AND_CARDS";
var SET_DASHBOARD_ATTRIBUTES = exports.SET_DASHBOARD_ATTRIBUTES = "metabase/dashboard/SET_DASHBOARD_ATTRIBUTES";

var ADD_CARD_TO_DASH = exports.ADD_CARD_TO_DASH = "metabase/dashboard/ADD_CARD_TO_DASH";
var REMOVE_CARD_FROM_DASH = exports.REMOVE_CARD_FROM_DASH = "metabase/dashboard/REMOVE_CARD_FROM_DASH";
var SET_DASHCARD_ATTRIBUTES = exports.SET_DASHCARD_ATTRIBUTES = "metabase/dashboard/SET_DASHCARD_ATTRIBUTES";
var UPDATE_DASHCARD_VISUALIZATION_SETTINGS = exports.UPDATE_DASHCARD_VISUALIZATION_SETTINGS = "metabase/dashboard/UPDATE_DASHCARD_VISUALIZATION_SETTINGS";
var REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS = exports.REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS = "metabase/dashboard/REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS";
var UPDATE_DASHCARD_ID = exports.UPDATE_DASHCARD_ID = "metabase/dashboard/UPDATE_DASHCARD_ID";

var FETCH_DASHBOARD_CARD_DATA = exports.FETCH_DASHBOARD_CARD_DATA = "metabase/dashboard/FETCH_DASHBOARD_CARD_DATA";
var FETCH_CARD_DATA = exports.FETCH_CARD_DATA = "metabase/dashboard/FETCH_CARD_DATA";
var MARK_CARD_AS_SLOW = exports.MARK_CARD_AS_SLOW = "metabase/dashboard/MARK_CARD_AS_SLOW";
var CLEAR_CARD_DATA = exports.CLEAR_CARD_DATA = "metabase/dashboard/CLEAR_CARD_DATA";

var FETCH_REVISIONS = exports.FETCH_REVISIONS = "metabase/dashboard/FETCH_REVISIONS";
var REVERT_TO_REVISION = exports.REVERT_TO_REVISION = "metabase/dashboard/REVERT_TO_REVISION";

var MARK_NEW_CARD_SEEN = exports.MARK_NEW_CARD_SEEN = "metabase/dashboard/MARK_NEW_CARD_SEEN";

var SET_EDITING_PARAMETER_ID = exports.SET_EDITING_PARAMETER_ID = "metabase/dashboard/SET_EDITING_PARAMETER_ID";
var ADD_PARAMETER = exports.ADD_PARAMETER = "metabase/dashboard/ADD_PARAMETER";
var REMOVE_PARAMETER = exports.REMOVE_PARAMETER = "metabase/dashboard/REMOVE_PARAMETER";
var SET_PARAMETER_MAPPING = exports.SET_PARAMETER_MAPPING = "metabase/dashboard/SET_PARAMETER_MAPPING";
var SET_PARAMETER_NAME = exports.SET_PARAMETER_NAME = "metabase/dashboard/SET_PARAMETER_NAME";
var SET_PARAMETER_VALUE = exports.SET_PARAMETER_VALUE = "metabase/dashboard/SET_PARAMETER_VALUE";
var SET_PARAMETER_DEFAULT_VALUE = exports.SET_PARAMETER_DEFAULT_VALUE = "metabase/dashboard/SET_PARAMETER_DEFAULT_VALUE";

function getDashboardType(id) {
  if (_utils2.default.isUUID(id)) {
    return "public";
  } else if (_utils2.default.isJWT(id)) {
    return "embed";
  } else if (/\/auto\/dashboard/.test(id)) {
    return "transient";
  } else {
    return "normal";
  }
}

// action creators

var initialize = exports.initialize = (0, _redux.createAction)(INITIALIZE);
var setEditingDashboard = exports.setEditingDashboard = (0, _redux.createAction)(SET_EDITING_DASHBOARD);

var markNewCardSeen = exports.markNewCardSeen = (0, _redux.createAction)(MARK_NEW_CARD_SEEN);

// these operations don't get saved to server immediately
var setDashboardAttributes = exports.setDashboardAttributes = (0, _redux.createAction)(SET_DASHBOARD_ATTRIBUTES);
var setDashCardAttributes = exports.setDashCardAttributes = (0, _redux.createAction)(SET_DASHCARD_ATTRIBUTES);

// TODO: consolidate with questions reducer
var fetchCards = exports.fetchCards = (0, _redux.createThunkAction)(FETCH_CARDS, function () {
  var filterMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "all";

  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      var cards, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, c;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _services.CardApi.list({ f: filterMode });

            case 2:
              cards = _context.sent;
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 6;

              for (_iterator = cards[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                c = _step.value;

                c.updated_at = (0, _moment2.default)(c.updated_at);
              }
              _context.next = 14;
              break;

            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](6);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 14:
              _context.prev = 14;
              _context.prev = 15;

              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }

            case 17:
              _context.prev = 17;

              if (!_didIteratorError) {
                _context.next = 20;
                break;
              }

              throw _iteratorError;

            case 20:
              return _context.finish(17);

            case 21:
              return _context.finish(14);

            case 22:
              return _context.abrupt("return", (0, _normalizr.normalize)(cards, [card]));

            case 23:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this, [[6, 10, 14, 22], [15,, 17, 21]]);
    }));

    return function (_x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();
});

var deleteCard = exports.deleteCard = (0, _redux.createThunkAction)(DELETE_CARD, function (cardId) {
  return function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _services.CardApi.delete({ cardId: cardId });

            case 2:
              return _context2.abrupt("return", cardId);

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    return function (_x4, _x5) {
      return _ref2.apply(this, arguments);
    };
  }();
});

var addCardToDashboard = exports.addCardToDashboard = function addCardToDashboard(_ref3) {
  var dashId = _ref3.dashId,
      cardId = _ref3.cardId;

  return function (dispatch, getState) {
    var _getState$dashboard = getState().dashboard,
        dashboards = _getState$dashboard.dashboards,
        dashcards = _getState$dashboard.dashcards,
        cards = _getState$dashboard.cards;

    var dashboard = dashboards[dashId];
    var existingCards = dashboard.ordered_cards.map(function (id) {
      return dashcards[id];
    }).filter(function (dc) {
      return !dc.isRemoved;
    });
    var card = cards[cardId];
    var dashcard = _extends({
      id: Math.random(), // temporary id
      dashboard_id: dashId,
      card_id: card.id,
      card: card,
      series: []
    }, (0, _dashboard_grid.getPositionForNewDashCard)(existingCards), {
      parameter_mappings: [],
      visualization_settings: {}
    });
    dispatch((0, _redux.createAction)(ADD_CARD_TO_DASH)(dashcard));
    dispatch(fetchCardData(card, dashcard, { reload: true, clear: true }));
  };
};

var addDashCardToDashboard = exports.addDashCardToDashboard = function addDashCardToDashboard(_ref4) {
  var dashId = _ref4.dashId,
      dashcardOverrides = _ref4.dashcardOverrides;

  return function (dispatch, getState) {
    var _getState$dashboard2 = getState().dashboard,
        dashboards = _getState$dashboard2.dashboards,
        dashcards = _getState$dashboard2.dashcards;

    var dashboard = dashboards[dashId];
    var existingCards = dashboard.ordered_cards.map(function (id) {
      return dashcards[id];
    }).filter(function (dc) {
      return !dc.isRemoved;
    });
    var dashcard = _extends({
      id: Math.random(), // temporary id
      card_id: null,
      card: null,
      dashboard_id: dashId,
      series: []
    }, (0, _dashboard_grid.getPositionForNewDashCard)(existingCards), {
      parameter_mappings: [],
      visualization_settings: {}
    });
    _underscore2.default.extend(dashcard, dashcardOverrides);
    dispatch((0, _redux.createAction)(ADD_CARD_TO_DASH)(dashcard));
  };
};

var addTextDashCardToDashboard = exports.addTextDashCardToDashboard = function addTextDashCardToDashboard(_ref5) {
  var dashId = _ref5.dashId;

  var virtualTextCard = (0, _card2.createCard)();
  virtualTextCard.display = "text";
  virtualTextCard.archived = false;

  var dashcardOverrides = {
    card: virtualTextCard,
    visualization_settings: {
      virtual_card: virtualTextCard
    }
  };
  return addDashCardToDashboard({
    dashId: dashId,
    dashcardOverrides: dashcardOverrides
  });
};

var saveDashboardAndCards = exports.saveDashboardAndCards = (0, _redux.createThunkAction)(SAVE_DASHBOARD_AND_CARDS, function () {
  return function () {
    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(dispatch, getState) {
      var _this = this;

      var _getState$dashboard3, dashboards, dashcards, dashboardId, dashboard, updatedDashcards, id, name, description, parameters, _cards, result;

      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _getState$dashboard3 = getState().dashboard, dashboards = _getState$dashboard3.dashboards, dashcards = _getState$dashboard3.dashcards, dashboardId = _getState$dashboard3.dashboardId;
              dashboard = _extends({}, dashboards[dashboardId], {
                ordered_cards: dashboards[dashboardId].ordered_cards.map(function (dashcardId) {
                  return dashcards[dashcardId];
                })
              });

              // remove isRemoved dashboards

              _context5.next = 4;
              return Promise.all(dashboard.ordered_cards.filter(function (dc) {
                return dc.isRemoved && !dc.isAdded;
              }).map(function (dc) {
                return _services.DashboardApi.removecard({
                  dashId: dashboard.id,
                  dashcardId: dc.id
                });
              }));

            case 4:
              _context5.next = 6;
              return Promise.all(dashboard.ordered_cards.filter(function (dc) {
                return !dc.isRemoved;
              }).map(function () {
                var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dc) {
                  var result;
                  return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          if (!dc.isAdded) {
                            _context3.next = 8;
                            break;
                          }

                          _context3.next = 3;
                          return _services.DashboardApi.addcard({
                            dashId: dashboard.id,
                            cardId: dc.card_id
                          });

                        case 3:
                          result = _context3.sent;

                          dispatch(updateDashcardId(dc.id, result.id));

                          // mark isAdded because addcard doesn't record the position
                          return _context3.abrupt("return", _extends({}, result, {
                            col: dc.col,
                            row: dc.row,
                            sizeX: dc.sizeX,
                            sizeY: dc.sizeY,
                            series: dc.series,
                            parameter_mappings: dc.parameter_mappings,
                            visualization_settings: dc.visualization_settings,
                            isAdded: true
                          }));

                        case 8:
                          return _context3.abrupt("return", dc);

                        case 9:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3, _this);
                }));

                return function (_x8) {
                  return _ref7.apply(this, arguments);
                };
              }()));

            case 6:
              updatedDashcards = _context5.sent;
              _context5.next = 9;
              return Promise.all(dashboard.ordered_cards.filter(function (dc) {
                return dc.card.isDirty;
              }).map(function () {
                var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dc) {
                  return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                      switch (_context4.prev = _context4.next) {
                        case 0:
                          return _context4.abrupt("return", _services.CardApi.update(dc.card));

                        case 1:
                        case "end":
                          return _context4.stop();
                      }
                    }
                  }, _callee4, _this);
                }));

                return function (_x9) {
                  return _ref8.apply(this, arguments);
                };
              }()));

            case 9:
              if (!dashboard.isDirty) {
                _context5.next = 13;
                break;
              }

              id = dashboard.id, name = dashboard.name, description = dashboard.description, parameters = dashboard.parameters;
              _context5.next = 13;
              return dispatch((0, _dashboards.saveDashboard)({ id: id, name: name, description: description, parameters: parameters }));

            case 13:
              if (!_underscore2.default.some(updatedDashcards, function (dc) {
                return dc.isDirty || dc.isAdded;
              })) {
                _context5.next = 20;
                break;
              }

              _cards = updatedDashcards.map(function (_ref9) {
                var id = _ref9.id,
                    card_id = _ref9.card_id,
                    row = _ref9.row,
                    col = _ref9.col,
                    sizeX = _ref9.sizeX,
                    sizeY = _ref9.sizeY,
                    series = _ref9.series,
                    parameter_mappings = _ref9.parameter_mappings,
                    visualization_settings = _ref9.visualization_settings;
                return {
                  id: id,
                  card_id: card_id,
                  row: row,
                  col: col,
                  sizeX: sizeX,
                  sizeY: sizeY,
                  series: series,
                  visualization_settings: visualization_settings,
                  parameter_mappings: parameter_mappings && parameter_mappings.filter(function (mapping) {
                    return (
                      // filter out mappings for deleted paramters
                      _underscore2.default.findWhere(dashboard.parameters, {
                        id: mapping.parameter_id
                      }) && (
                      // filter out mappings for deleted series
                      card_id === mapping.card_id || _underscore2.default.findWhere(series, { id: mapping.card_id }))
                    );
                  })
                };
              });
              _context5.next = 17;
              return _services.DashboardApi.reposition_cards({
                dashId: dashboard.id,
                cards: _cards
              });

            case 17:
              result = _context5.sent;

              if (!(result.status !== "ok")) {
                _context5.next = 20;
                break;
              }

              throw new Error(result.status);

            case 20:
              _context5.next = 22;
              return dispatch((0, _dashboards.saveDashboard)(dashboard));

            case 22:

              // make sure that we've fully cleared out any dirty state from editing (this is overkill, but simple)
              dispatch(fetchDashboard(dashboard.id, null, true)); // disable using query parameters when saving

            case 23:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    return function (_x6, _x7) {
      return _ref6.apply(this, arguments);
    };
  }();
});

var removeCardFromDashboard = exports.removeCardFromDashboard = (0, _redux.createAction)(REMOVE_CARD_FROM_DASH);

var updateDashcardId = (0, _redux.createAction)(UPDATE_DASHCARD_ID, function (oldDashcardId, newDashcardId) {
  return { oldDashcardId: oldDashcardId, newDashcardId: newDashcardId };
});

var clearCardData = exports.clearCardData = (0, _redux.createAction)(CLEAR_CARD_DATA, function (cardId, dashcardId) {
  return { cardId: cardId, dashcardId: dashcardId };
});

var fetchDashboardCardData = exports.fetchDashboardCardData = (0, _redux.createThunkAction)(FETCH_DASHBOARD_CARD_DATA, function (options) {
  return function () {
    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(dispatch, getState) {
      var dashboard, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _dashcard, _cards2, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _card;

      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              dashboard = (0, _selectors.getDashboardComplete)(getState());

              if (!dashboard) {
                _context7.next = 48;
                break;
              }

              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context7.prev = 5;
              _iterator2 = dashboard.ordered_cards[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context7.next = 34;
                break;
              }

              _dashcard = _step2.value;

              if (!_underscore2.default.isObject(_dashcard.visualization_settings.virtual_card)) {
                _context7.next = 11;
                break;
              }

              return _context7.abrupt("continue", 31);

            case 11:
              _cards2 = [_dashcard.card].concat(_dashcard.series || []);
              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context7.prev = 15;

              for (_iterator3 = _cards2[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                _card = _step3.value;

                dispatch(fetchCardData(_card, _dashcard, options));
              }
              _context7.next = 23;
              break;

            case 19:
              _context7.prev = 19;
              _context7.t0 = _context7["catch"](15);
              _didIteratorError3 = true;
              _iteratorError3 = _context7.t0;

            case 23:
              _context7.prev = 23;
              _context7.prev = 24;

              if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
              }

            case 26:
              _context7.prev = 26;

              if (!_didIteratorError3) {
                _context7.next = 29;
                break;
              }

              throw _iteratorError3;

            case 29:
              return _context7.finish(26);

            case 30:
              return _context7.finish(23);

            case 31:
              _iteratorNormalCompletion2 = true;
              _context7.next = 7;
              break;

            case 34:
              _context7.next = 40;
              break;

            case 36:
              _context7.prev = 36;
              _context7.t1 = _context7["catch"](5);
              _didIteratorError2 = true;
              _iteratorError2 = _context7.t1;

            case 40:
              _context7.prev = 40;
              _context7.prev = 41;

              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }

            case 43:
              _context7.prev = 43;

              if (!_didIteratorError2) {
                _context7.next = 46;
                break;
              }

              throw _iteratorError2;

            case 46:
              return _context7.finish(43);

            case 47:
              return _context7.finish(40);

            case 48:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7, undefined, [[5, 36, 40, 48], [15, 19, 23, 31], [24,, 26, 30], [41,, 43, 47]]);
    }));

    return function (_x11, _x12) {
      return _ref11.apply(this, arguments);
    };
  }();
});

var fetchCardData = exports.fetchCardData = (0, _redux.createThunkAction)(FETCH_CARD_DATA, function (card, dashcard) {
  var _ref12 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      reload = _ref12.reload,
      clear = _ref12.clear;

  return function () {
    var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(dispatch, getState) {
      var dashboardType, _getState$dashboard4, dashboardId, dashboards, parameterValues, dashcardData, dashboard, datasetQuery, lastResult, result, slowCardTimer;

      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              if (card.dataset_query) {
                _context8.next = 2;
                break;
              }

              return _context8.abrupt("return", {
                dashcard_id: dashcard.id,
                card_id: card.id,
                result: { error: { status: 403 } }
              });

            case 2:
              dashboardType = getDashboardType(dashcard.dashboard_id);
              _getState$dashboard4 = getState().dashboard, dashboardId = _getState$dashboard4.dashboardId, dashboards = _getState$dashboard4.dashboards, parameterValues = _getState$dashboard4.parameterValues, dashcardData = _getState$dashboard4.dashcardData;
              dashboard = dashboards[dashboardId];

              // if we have a parameter, apply it to the card query before we execute

              datasetQuery = (0, _Card.applyParameters)(card, dashboard.parameters, parameterValues, dashcard && dashcard.parameter_mappings);

              if (reload) {
                _context8.next = 10;
                break;
              }

              // if reload not set, check to see if the last result has the same query dict and return that
              lastResult = (0, _icepick.getIn)(dashcardData, [dashcard.id, card.id]);
              // "constraints" is added by the backend, remove it when comparing

              if (!(lastResult && _utils2.default.equals(_underscore2.default.omit(lastResult.json_query, "constraints"), datasetQuery))) {
                _context8.next = 10;
                break;
              }

              return _context8.abrupt("return", {
                dashcard_id: dashcard.id,
                card_id: card.id,
                result: lastResult
              });

            case 10:

              if (clear) {
                // clears the card data to indicate the card is reloading
                dispatch(clearCardData(card.id, dashcard.id));
              }

              result = null;

              // start a timer that will show the expected card duration if the query takes too long

              slowCardTimer = setTimeout(function () {
                if (result === null) {
                  dispatch(markCardAsSlow(card, datasetQuery));
                }
              }, DATASET_SLOW_TIMEOUT);

              // make the actual request

              if (!(dashboardType === "public")) {
                _context8.next = 19;
                break;
              }

              _context8.next = 16;
              return fetchDataOrError(_services.PublicApi.dashboardCardQuery({
                uuid: dashcard.dashboard_id,
                cardId: card.id,
                parameters: datasetQuery.parameters ? JSON.stringify(datasetQuery.parameters) : undefined
              }));

            case 16:
              result = _context8.sent;
              _context8.next = 34;
              break;

            case 19:
              if (!(dashboardType === "embed")) {
                _context8.next = 25;
                break;
              }

              _context8.next = 22;
              return fetchDataOrError(_services.EmbedApi.dashboardCardQuery(_extends({
                token: dashcard.dashboard_id,
                dashcardId: dashcard.id,
                cardId: card.id
              }, (0, _Parameter.getParametersBySlug)(dashboard.parameters, parameterValues))));

            case 22:
              result = _context8.sent;
              _context8.next = 34;
              break;

            case 25:
              if (!(dashboardType === "transient")) {
                _context8.next = 31;
                break;
              }

              _context8.next = 28;
              return fetchDataOrError(_services.MetabaseApi.dataset(datasetQuery));

            case 28:
              result = _context8.sent;
              _context8.next = 34;
              break;

            case 31:
              _context8.next = 33;
              return fetchDataOrError(_services.CardApi.query({ cardId: card.id, parameters: datasetQuery.parameters }));

            case 33:
              result = _context8.sent;

            case 34:

              clearTimeout(slowCardTimer);

              return _context8.abrupt("return", {
                dashcard_id: dashcard.id,
                card_id: card.id,
                result: result
              });

            case 36:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, this);
    }));

    return function (_x14, _x15) {
      return _ref13.apply(this, arguments);
    };
  }();
});

var markCardAsSlow = exports.markCardAsSlow = (0, _redux.createAction)(MARK_CARD_AS_SLOW, function (card) {
  return {
    id: card.id,
    result: true
  };
});

var fetchDashboard = exports.fetchDashboard = (0, _redux.createThunkAction)(FETCH_DASHBOARD, function (dashId, queryParams) {
  var enableDefaultParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var result = void 0;
  return function () {
    var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(dispatch, getState) {
      var dashboardType, subPath, parameterValues, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, parameter;

      return regeneratorRuntime.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              dashboardType = getDashboardType(dashId);

              if (!(dashboardType === "public")) {
                _context9.next = 8;
                break;
              }

              _context9.next = 4;
              return _services.PublicApi.dashboard({ uuid: dashId });

            case 4:
              result = _context9.sent;

              result = _extends({}, result, {
                id: dashId,
                ordered_cards: result.ordered_cards.map(function (dc) {
                  return _extends({}, dc, {
                    dashboard_id: dashId
                  });
                })
              });
              _context9.next = 26;
              break;

            case 8:
              if (!(dashboardType === "embed")) {
                _context9.next = 15;
                break;
              }

              _context9.next = 11;
              return _services.EmbedApi.dashboard({ token: dashId });

            case 11:
              result = _context9.sent;

              result = _extends({}, result, {
                id: dashId,
                ordered_cards: result.ordered_cards.map(function (dc) {
                  return _extends({}, dc, {
                    dashboard_id: dashId
                  });
                })
              });
              _context9.next = 26;
              break;

            case 15:
              if (!(dashboardType === "transient")) {
                _context9.next = 23;
                break;
              }

              subPath = dashId.split("/").slice(3).join("/");
              _context9.next = 19;
              return _services.AutoApi.dashboard({ subPath: subPath });

            case 19:
              result = _context9.sent;

              result = _extends({}, result, {
                id: dashId,
                ordered_cards: result.ordered_cards.map(function (dc) {
                  return _extends({}, dc, {
                    dashboard_id: dashId
                  });
                })
              });
              _context9.next = 26;
              break;

            case 23:
              _context9.next = 25;
              return _services.DashboardApi.get({ dashId: dashId });

            case 25:
              result = _context9.sent;

            case 26:
              parameterValues = {};

              if (!result.parameters) {
                _context9.next = 47;
                break;
              }

              _iteratorNormalCompletion4 = true;
              _didIteratorError4 = false;
              _iteratorError4 = undefined;
              _context9.prev = 31;

              for (_iterator4 = result.parameters[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                parameter = _step4.value;

                if (queryParams && queryParams[parameter.slug] != null) {
                  parameterValues[parameter.id] = queryParams[parameter.slug];
                } else if (enableDefaultParameters && parameter.default != null) {
                  parameterValues[parameter.id] = parameter.default;
                }
              }
              _context9.next = 39;
              break;

            case 35:
              _context9.prev = 35;
              _context9.t0 = _context9["catch"](31);
              _didIteratorError4 = true;
              _iteratorError4 = _context9.t0;

            case 39:
              _context9.prev = 39;
              _context9.prev = 40;

              if (!_iteratorNormalCompletion4 && _iterator4.return) {
                _iterator4.return();
              }

            case 42:
              _context9.prev = 42;

              if (!_didIteratorError4) {
                _context9.next = 45;
                break;
              }

              throw _iteratorError4;

            case 45:
              return _context9.finish(42);

            case 46:
              return _context9.finish(39);

            case 47:

              if (dashboardType === "normal" || dashboardType === "transient") {
                // fetch database metadata for every card
                _underscore2.default.chain(result.ordered_cards).map(function (dc) {
                  return [dc.card].concat(dc.series);
                }).flatten().filter(function (card) {
                  return card && card.dataset_query && card.dataset_query.database;
                }).map(function (card) {
                  return card.dataset_query.database;
                }).uniq().each(function (dbId) {
                  return dispatch((0, _metadata.fetchDatabaseMetadata)(dbId));
                });
              }

              // copy over any virtual cards from the dashcard to the underlying card/question
              result.ordered_cards.forEach(function (card) {
                if (card.visualization_settings.virtual_card) {
                  card.card = Object.assign(card.card || {}, card.visualization_settings.virtual_card);
                }
              });

              if (result.param_values) {
                dispatch((0, _metadata.addParamValues)(result.param_values));
              }
              if (result.param_fields) {
                dispatch((0, _metadata.addFields)(result.param_fields));
              }

              return _context9.abrupt("return", _extends({}, (0, _normalizr.normalize)(result, dashboard), { // includes `result` and `entities`
                dashboardId: dashId,
                parameterValues: parameterValues
              }));

            case 52:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9, this, [[31, 35, 39, 47], [40,, 42, 46]]);
    }));

    return function (_x17, _x18) {
      return _ref14.apply(this, arguments);
    };
  }();
});

var UPDATE_ENABLE_EMBEDDING = "metabase/dashboard/UPDATE_ENABLE_EMBEDDING";
var updateEnableEmbedding = exports.updateEnableEmbedding = (0, _redux.createAction)(UPDATE_ENABLE_EMBEDDING, function (_ref15, enable_embedding) {
  var id = _ref15.id;
  return _services.DashboardApi.update({ id: id, enable_embedding: enable_embedding });
});

var UPDATE_EMBEDDING_PARAMS = "metabase/dashboard/UPDATE_EMBEDDING_PARAMS";
var updateEmbeddingParams = exports.updateEmbeddingParams = (0, _redux.createAction)(UPDATE_EMBEDDING_PARAMS, function (_ref16, embedding_params) {
  var id = _ref16.id;
  return _services.DashboardApi.update({ id: id, embedding_params: embedding_params });
});

var fetchRevisions = exports.fetchRevisions = (0, _redux.createThunkAction)(FETCH_REVISIONS, function (_ref17) {
  var entity = _ref17.entity,
      id = _ref17.id;

  return function () {
    var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(dispatch, getState) {
      var revisions;
      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return _services.RevisionApi.list({ entity: entity, id: id });

            case 2:
              revisions = _context10.sent;
              return _context10.abrupt("return", { entity: entity, id: id, revisions: revisions });

            case 4:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10, this);
    }));

    return function (_x19, _x20) {
      return _ref18.apply(this, arguments);
    };
  }();
});

var revertToRevision = exports.revertToRevision = (0, _redux.createThunkAction)(REVERT_TO_REVISION, function (_ref19) {
  var entity = _ref19.entity,
      id = _ref19.id,
      revision_id = _ref19.revision_id;

  return function () {
    var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return _services.RevisionApi.revert({ entity: entity, id: id, revision_id: revision_id });

            case 2:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11, this);
    }));

    return function (_x21, _x22) {
      return _ref20.apply(this, arguments);
    };
  }();
});

var onUpdateDashCardVisualizationSettings = exports.onUpdateDashCardVisualizationSettings = (0, _redux.createAction)(UPDATE_DASHCARD_VISUALIZATION_SETTINGS, function (id, settings) {
  return { id: id, settings: settings };
});
var onReplaceAllDashCardVisualizationSettings = exports.onReplaceAllDashCardVisualizationSettings = (0, _redux.createAction)(REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS, function (id, settings) {
  return { id: id, settings: settings };
});

var setEditingParameter = exports.setEditingParameter = (0, _redux.createAction)(SET_EDITING_PARAMETER_ID);
var setParameterMapping = exports.setParameterMapping = (0, _redux.createThunkAction)(SET_PARAMETER_MAPPING, function (parameter_id, dashcard_id, card_id, target) {
  return function (dispatch, getState) {
    var parameter_mappings = getState().dashboard.dashcards[dashcard_id].parameter_mappings || [];
    parameter_mappings = parameter_mappings.filter(function (m) {
      return m.card_id !== card_id || m.parameter_id !== parameter_id;
    });
    if (target) {
      parameter_mappings = parameter_mappings.concat({
        parameter_id: parameter_id,
        card_id: card_id,
        target: target
      });
    }
    dispatch(setDashCardAttributes({
      id: dashcard_id,
      attributes: { parameter_mappings: parameter_mappings }
    }));
  };
});

function updateParameter(dispatch, getState, id, parameterUpdater) {
  var dashboard = (0, _selectors.getDashboard)(getState());
  var index = _underscore2.default.findIndex(dashboard && dashboard.parameters, function (p) {
    return p.id === id;
  });
  if (index >= 0) {
    var parameters = (0, _icepick.assoc)(dashboard.parameters, index, parameterUpdater(dashboard.parameters[index]));
    dispatch(setDashboardAttributes({ id: dashboard.id, attributes: { parameters: parameters } }));
  }
}

function updateParameters(dispatch, getState, parametersUpdater) {
  var dashboard = (0, _selectors.getDashboard)(getState());
  if (dashboard) {
    var parameters = parametersUpdater(dashboard.parameters || []);
    dispatch(setDashboardAttributes({ id: dashboard.id, attributes: { parameters: parameters } }));
  }
}

var addParameter = exports.addParameter = (0, _redux.createThunkAction)(ADD_PARAMETER, function (parameterOption) {
  return function (dispatch, getState) {
    var parameter = void 0;
    updateParameters(dispatch, getState, function (parameters) {
      parameter = (0, _Dashboard.createParameter)(parameterOption, parameters);
      return parameters.concat(parameter);
    });
    return parameter;
  };
});

var removeParameter = exports.removeParameter = (0, _redux.createThunkAction)(REMOVE_PARAMETER, function (parameterId) {
  return function (dispatch, getState) {
    updateParameters(dispatch, getState, function (parameters) {
      return parameters.filter(function (p) {
        return p.id !== parameterId;
      });
    });
    return { id: parameterId };
  };
});

var setParameterName = exports.setParameterName = (0, _redux.createThunkAction)(SET_PARAMETER_NAME, function (parameterId, name) {
  return function (dispatch, getState) {
    updateParameter(dispatch, getState, parameterId, function (parameter) {
      return (0, _Dashboard.setParameterName)(parameter, name);
    });
    return { id: parameterId, name: name };
  };
});

var setParameterDefaultValue = exports.setParameterDefaultValue = (0, _redux.createThunkAction)(SET_PARAMETER_DEFAULT_VALUE, function (parameterId, defaultValue) {
  return function (dispatch, getState) {
    updateParameter(dispatch, getState, parameterId, function (parameter) {
      return (0, _Dashboard.setParameterDefaultValue)(parameter, defaultValue);
    });
    return { id: parameterId, defaultValue: defaultValue };
  };
});

var setParameterValue = exports.setParameterValue = (0, _redux.createThunkAction)(SET_PARAMETER_VALUE, function (parameterId, value) {
  return function (dispatch, getState) {
    return { id: parameterId, value: value };
  };
});

var CREATE_PUBLIC_LINK = exports.CREATE_PUBLIC_LINK = "metabase/dashboard/CREATE_PUBLIC_LINK";
var createPublicLink = exports.createPublicLink = (0, _redux.createAction)(CREATE_PUBLIC_LINK, function () {
  var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_ref22) {
    var id = _ref22.id;

    var _ref23, uuid;

    return regeneratorRuntime.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return _services.DashboardApi.createPublicLink({ id: id });

          case 2:
            _ref23 = _context12.sent;
            uuid = _ref23.uuid;
            return _context12.abrupt("return", { id: id, uuid: uuid });

          case 5:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12, undefined);
  }));

  return function (_x23) {
    return _ref21.apply(this, arguments);
  };
}());

var DELETE_PUBLIC_LINK = exports.DELETE_PUBLIC_LINK = "metabase/dashboard/DELETE_PUBLIC_LINK";
var deletePublicLink = exports.deletePublicLink = (0, _redux.createAction)(DELETE_PUBLIC_LINK, function () {
  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref25) {
    var id = _ref25.id;
    return regeneratorRuntime.wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.next = 2;
            return _services.DashboardApi.deletePublicLink({ id: id });

          case 2:
            return _context13.abrupt("return", { id: id });

          case 3:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, undefined);
  }));

  return function (_x24) {
    return _ref24.apply(this, arguments);
  };
}());

/**
 * All navigation actions from dashboards to cards (e.x. clicking a title, drill through)
 * should go through this action, which merges any currently applied dashboard filters
 * into the new card / URL parameters.
 *
 * User-triggered events that are handled here:
 *     - clicking a dashcard legend:
 *         * question title legend (only for single-question cards)
 *         * series legend (multi-aggregation, multi-breakout, multiple questions)
 *     - clicking the visualization inside dashcard
 *         * drill-through (single series, multi-aggregation, multi-breakout, multiple questions)
 *         * (not in 0.24.2 yet: drag on line/area/bar visualization)
 *     - those all can be applied without or with a dashboard filter
 */

var NAVIGATE_TO_NEW_CARD = "metabase/dashboard/NAVIGATE_TO_NEW_CARD";
var navigateToNewCardFromDashboard = exports.navigateToNewCardFromDashboard = (0, _redux.createThunkAction)(NAVIGATE_TO_NEW_CARD, function (_ref26) {
  var nextCard = _ref26.nextCard,
      previousCard = _ref26.previousCard,
      dashcard = _ref26.dashcard;
  return function (dispatch, getState) {
    var _getState = getState(),
        metadata = _getState.metadata;

    var _getState$dashboard5 = getState().dashboard,
        dashboardId = _getState$dashboard5.dashboardId,
        dashboards = _getState$dashboard5.dashboards,
        parameterValues = _getState$dashboard5.parameterValues;

    var dashboard = dashboards[dashboardId];
    var cardIsDirty = !_underscore2.default.isEqual(previousCard.dataset_query, nextCard.dataset_query);
    var cardAfterClick = (0, _utils3.getCardAfterVisualizationClick)(nextCard, previousCard);

    // clicking graph title with a filter applied loses display type and visualization settings; see #5278
    var cardWithVizSettings = _extends({}, cardAfterClick, {
      display: cardAfterClick.display || previousCard.display,
      visualization_settings: cardAfterClick.visualization_settings || previousCard.visualization_settings
    });

    var url = (0, _Card.questionUrlWithParameters)(cardWithVizSettings, metadata, dashboard.parameters, parameterValues, dashcard && dashcard.parameter_mappings, cardIsDirty);

    dispatch((0, _reactRouterRedux.push)(url));
  };
});

// reducers

var dashboardId = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, INITIALIZE, { next: function next(state) {
    return null;
  } }), _defineProperty(_handleActions, FETCH_DASHBOARD, {
  next: function next(state, _ref27) {
    var dashboardId = _ref27.payload.dashboardId;
    return dashboardId;
  }
}), _handleActions), null);

var isEditing = (0, _redux.handleActions)((_handleActions2 = {}, _defineProperty(_handleActions2, INITIALIZE, { next: function next(state) {
    return false;
  } }), _defineProperty(_handleActions2, SET_EDITING_DASHBOARD, { next: function next(state, _ref28) {
    var payload = _ref28.payload;
    return payload;
  } }), _handleActions2), false);

// TODO: consolidate with questions reducer
var cards = (0, _redux.handleActions)(_defineProperty({}, FETCH_CARDS, {
  next: function next(state, _ref29) {
    var payload = _ref29.payload;
    return _extends({}, payload.entities.card);
  }
}), {});

var cardList = (0, _redux.handleActions)((_handleActions4 = {}, _defineProperty(_handleActions4, FETCH_CARDS, { next: function next(state, _ref30) {
    var payload = _ref30.payload;
    return payload.result;
  } }), _defineProperty(_handleActions4, DELETE_CARD, { next: function next(state, _ref31) {
    var payload = _ref31.payload;
    return state;
  } }), _handleActions4), null);

var dashboards = (0, _redux.handleActions)((_handleActions5 = {}, _defineProperty(_handleActions5, FETCH_DASHBOARD, {
  next: function next(state, _ref32) {
    var payload = _ref32.payload;
    return _extends({}, state, payload.entities.dashboard);
  }
}), _defineProperty(_handleActions5, SET_DASHBOARD_ATTRIBUTES, {
  next: function next(state, _ref33) {
    var _ref33$payload = _ref33.payload,
        id = _ref33$payload.id,
        attributes = _ref33$payload.attributes;
    return _extends({}, state, _defineProperty({}, id, _extends({}, state[id], attributes, { isDirty: true })));
  }
}), _defineProperty(_handleActions5, ADD_CARD_TO_DASH, function (state, _ref34) {
  var dashcard = _ref34.payload;
  return _extends({}, state, _defineProperty({}, dashcard.dashboard_id, _extends({}, state[dashcard.dashboard_id], {
    ordered_cards: [].concat(_toConsumableArray(state[dashcard.dashboard_id].ordered_cards), [dashcard.id])
  })));
}), _defineProperty(_handleActions5, CREATE_PUBLIC_LINK, {
  next: function next(state, _ref35) {
    var payload = _ref35.payload;
    return (0, _icepick.assocIn)(state, [payload.id, "public_uuid"], payload.uuid);
  }
}), _defineProperty(_handleActions5, DELETE_PUBLIC_LINK, {
  next: function next(state, _ref36) {
    var payload = _ref36.payload;
    return (0, _icepick.assocIn)(state, [payload.id, "public_uuid"], null);
  }
}), _defineProperty(_handleActions5, UPDATE_EMBEDDING_PARAMS, {
  next: function next(state, _ref37) {
    var payload = _ref37.payload;
    return (0, _icepick.assocIn)(state, [payload.id, "embedding_params"], payload.embedding_params);
  }
}), _defineProperty(_handleActions5, UPDATE_ENABLE_EMBEDDING, {
  next: function next(state, _ref38) {
    var payload = _ref38.payload;
    return (0, _icepick.assocIn)(state, [payload.id, "enable_embedding"], payload.enable_embedding);
  }
}), _handleActions5), {});

var dashcards = (0, _redux.handleActions)((_handleActions6 = {}, _defineProperty(_handleActions6, FETCH_DASHBOARD, {
  next: function next(state, _ref39) {
    var payload = _ref39.payload;
    return _extends({}, state, payload.entities.dashcard);
  }
}), _defineProperty(_handleActions6, SET_DASHCARD_ATTRIBUTES, {
  next: function next(state, _ref40) {
    var _ref40$payload = _ref40.payload,
        id = _ref40$payload.id,
        attributes = _ref40$payload.attributes;
    return _extends({}, state, _defineProperty({}, id, _extends({}, state[id], attributes, { isDirty: true })));
  }
}), _defineProperty(_handleActions6, UPDATE_DASHCARD_VISUALIZATION_SETTINGS, {
  next: function next(state, _ref41) {
    var _ref41$payload = _ref41.payload,
        id = _ref41$payload.id,
        settings = _ref41$payload.settings;
    return (0, _icepick.chain)(state).updateIn([id, "visualization_settings"], function () {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _extends({}, value, settings);
    }).assocIn([id, "isDirty"], true).value();
  }
}), _defineProperty(_handleActions6, REPLACE_ALL_DASHCARD_VISUALIZATION_SETTINGS, {
  next: function next(state, _ref42) {
    var _ref42$payload = _ref42.payload,
        id = _ref42$payload.id,
        settings = _ref42$payload.settings;
    return (0, _icepick.chain)(state).assocIn([id, "visualization_settings"], settings).assocIn([id, "isDirty"], true).value();
  }
}), _defineProperty(_handleActions6, ADD_CARD_TO_DASH, function (state, _ref43) {
  var dashcard = _ref43.payload;
  return _extends({}, state, _defineProperty({}, dashcard.id, _extends({}, dashcard, { isAdded: true, justAdded: true })));
}), _defineProperty(_handleActions6, REMOVE_CARD_FROM_DASH, function (state, _ref44) {
  var dashcardId = _ref44.payload.dashcardId;
  return _extends({}, state, _defineProperty({}, dashcardId, _extends({}, state[dashcardId], { isRemoved: true })));
}), _defineProperty(_handleActions6, MARK_NEW_CARD_SEEN, function (state, _ref45) {
  var dashcardId = _ref45.payload;
  return _extends({}, state, _defineProperty({}, dashcardId, _extends({}, state[dashcardId], { justAdded: false })));
}), _handleActions6), {});

var editingParameterId = (0, _redux.handleActions)((_handleActions7 = {}, _defineProperty(_handleActions7, SET_EDITING_PARAMETER_ID, { next: function next(state, _ref46) {
    var payload = _ref46.payload;
    return payload;
  } }), _defineProperty(_handleActions7, ADD_PARAMETER, { next: function next(state, _ref47) {
    var id = _ref47.payload.id;
    return id;
  } }), _handleActions7), null);

var revisions = (0, _redux.handleActions)(_defineProperty({}, FETCH_REVISIONS, {
  next: function next(state, _ref48) {
    var _ref48$payload = _ref48.payload,
        entity = _ref48$payload.entity,
        id = _ref48$payload.id,
        revisions = _ref48$payload.revisions;
    return _extends({}, state, _defineProperty({}, entity + "-" + id, revisions));
  }
}), {});

var dashcardData = (0, _redux.handleActions)((_handleActions9 = {}, _defineProperty(_handleActions9, INITIALIZE, { next: function next(state) {
    return {};
  } }), _defineProperty(_handleActions9, FETCH_CARD_DATA, {
  next: function next(state, _ref49) {
    var _ref49$payload = _ref49.payload,
        dashcard_id = _ref49$payload.dashcard_id,
        card_id = _ref49$payload.card_id,
        result = _ref49$payload.result;
    return (0, _icepick.assocIn)(state, [dashcard_id, card_id], result);
  }
}), _defineProperty(_handleActions9, CLEAR_CARD_DATA, {
  next: function next(state, _ref50) {
    var _ref50$payload = _ref50.payload,
        cardId = _ref50$payload.cardId,
        dashcardId = _ref50$payload.dashcardId;
    return (0, _icepick.assocIn)(state, [dashcardId, cardId]);
  }
}), _defineProperty(_handleActions9, UPDATE_DASHCARD_ID, {
  next: function next(state, _ref51) {
    var _ref51$payload = _ref51.payload,
        oldDashcardId = _ref51$payload.oldDashcardId,
        newDashcardId = _ref51$payload.newDashcardId;
    return (0, _icepick.chain)(state).assoc(newDashcardId, state[oldDashcardId]).dissoc(oldDashcardId).value();
  }
}), _handleActions9), {});

var slowCards = (0, _redux.handleActions)(_defineProperty({}, MARK_CARD_AS_SLOW, {
  next: function next(state, _ref52) {
    var _ref52$payload = _ref52.payload,
        id = _ref52$payload.id,
        result = _ref52$payload.result;
    return _extends({}, state, _defineProperty({}, id, result));
  }
}), {});

var parameterValues = (0, _redux.handleActions)((_handleActions11 = {}, _defineProperty(_handleActions11, INITIALIZE, { next: function next() {
    return {};
  } }), _defineProperty(_handleActions11, SET_PARAMETER_VALUE, {
  next: function next(state, _ref53) {
    var _ref53$payload = _ref53.payload,
        id = _ref53$payload.id,
        value = _ref53$payload.value;
    return (0, _icepick.assoc)(state, id, value);
  }
}), _defineProperty(_handleActions11, REMOVE_PARAMETER, {
  next: function next(state, _ref54) {
    var id = _ref54.payload.id;
    return (0, _icepick.dissoc)(state, id);
  }
}), _defineProperty(_handleActions11, FETCH_DASHBOARD, {
  next: function next(state, _ref55) {
    var parameterValues = _ref55.payload.parameterValues;
    return parameterValues;
  }
}), _handleActions11), {});

exports.default = (0, _redux.combineReducers)({
  dashboardId: dashboardId,
  isEditing: isEditing,
  cards: cards,
  cardList: cardList,
  dashboards: dashboards,
  dashcards: dashcards,
  editingParameterId: editingParameterId,
  revisions: revisions,
  dashcardData: dashcardData,
  slowCards: slowCards,
  parameterValues: parameterValues
});

/***/ }),

/***/ 126:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Toggle = __webpack_require__(475);

var _Toggle2 = _interopRequireDefault(_Toggle);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Toggle = (_temp = _class = function (_Component) {
  _inherits(Toggle, _Component);

  function Toggle(props, context) {
    _classCallCheck(this, Toggle);

    var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props, context));

    _this.onClick = _this.onClick.bind(_this);
    return _this;
  }

  _createClass(Toggle, [{
    key: "onClick",
    value: function onClick() {
      if (this.props.onChange) {
        this.props.onChange(!this.props.value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement("a", {
        className: (0, _classnames2.default)(_Toggle2.default.toggle, "no-decoration", _defineProperty({}, _Toggle2.default.selected, this.props.value)) + " " + (this.props.className || ""),
        style: { color: this.props.color || null },
        onClick: this.props.onChange ? this.onClick : null
      });
    }
  }]);

  return Toggle;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.bool.isRequired,
  onChange: _propTypes2.default.func
}, _temp);
Toggle.displayName = "Toggle";
exports.default = Toggle;

/***/ }),

/***/ 129:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.currentUser = exports.clearCurrentUser = exports.CLEAR_CURRENT_USER = exports.loadCurrentUser = exports.LOAD_CURRENT_USER = exports.refreshCurrentUser = exports.REFRESH_CURRENT_USER = undefined;

var _handleActions;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _redux = __webpack_require__(24);

var _actions = __webpack_require__(149);

var _auth = __webpack_require__(184);

var _services = __webpack_require__(15);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var REFRESH_CURRENT_USER = exports.REFRESH_CURRENT_USER = "metabase/user/REFRESH_CURRENT_USER";
var refreshCurrentUser = exports.refreshCurrentUser = (0, _redux.createAction)(REFRESH_CURRENT_USER, function () {
  try {
    return _services.UserApi.current();
  } catch (e) {
    return null;
  }
});

var LOAD_CURRENT_USER = exports.LOAD_CURRENT_USER = "metabase/user/LOAD_CURRENT_USER";
var loadCurrentUser = exports.loadCurrentUser = (0, _redux.createThunkAction)(LOAD_CURRENT_USER, function () {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (getState().currentUser) {
                _context.next = 3;
                break;
              }

              _context.next = 3;
              return dispatch(refreshCurrentUser());

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
});

var CLEAR_CURRENT_USER = exports.CLEAR_CURRENT_USER = "metabase/user/CLEAR_CURRENT_USER";
var clearCurrentUser = exports.clearCurrentUser = (0, _redux.createAction)(CLEAR_CURRENT_USER);

var currentUser = exports.currentUser = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, _auth.LOGOUT, { next: function next(state, _ref2) {
    var payload = _ref2.payload;
    return null;
  } }), _defineProperty(_handleActions, CLEAR_CURRENT_USER, { next: function next(state, payload) {
    return null;
  } }), _defineProperty(_handleActions, REFRESH_CURRENT_USER, { next: function next(state, _ref3) {
    var payload = _ref3.payload;
    return payload;
  } }), _defineProperty(_handleActions, _actions.CLOSE_QB_NEWB_MODAL, {
  next: function next(state, _ref4) {
    var payload = _ref4.payload;
    return _extends({}, state, { is_qbnewb: false });
  }
}), _handleActions), null);

/***/ }),

/***/ 130:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _keyboard = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// keep track of the order popovers were opened so we only close the last one when clicked outside
var popoverStack = [];

var OnClickOutsideWrapper = (_temp2 = _class = function (_Component) {
  _inherits(OnClickOutsideWrapper, _Component);

  function OnClickOutsideWrapper() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, OnClickOutsideWrapper);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = OnClickOutsideWrapper.__proto__ || Object.getPrototypeOf(OnClickOutsideWrapper)).call.apply(_ref, [this].concat(args))), _this), _this._handleClick = function (e) {
      if (!_reactDom2.default.findDOMNode(_this).contains(e.target)) {
        setTimeout(_this._handleDismissal, 0);
      }
    }, _this._handleKeyPress = function (e) {
      if (e.keyCode === _keyboard.KEYCODE_ESCAPE) {
        e.preventDefault();
        _this._handleDismissal();
      }
    }, _this._handleDismissal = function (e) {
      // only propagate event for the popover on top of the stack
      if (_this === popoverStack[popoverStack.length - 1]) {
        _this.props.handleDismissal(e);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(OnClickOutsideWrapper, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      // necessary to ignore click events that fire immediately, causing modals/popovers to close prematurely
      this._timeout = setTimeout(function () {
        popoverStack.push(_this2);

        // HACK: set the z-index of the parent element to ensure it"s always on top
        // NOTE: this actually doesn"t seem to be working correctly for popovers since PopoverBody creates a stacking context
        _reactDom2.default.findDOMNode(_this2).parentNode.style.zIndex = popoverStack.length + 2; // HACK: add 2 to ensure it"s in front of main and nav elements

        if (_this2.props.dismissOnEscape) {
          document.addEventListener("keydown", _this2._handleKeyPress, false);
        }
        if (_this2.props.dismissOnClickOutside) {
          window.addEventListener("mousedown", _this2._handleClick, true);
        }
      }, 0);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this3 = this;

      document.removeEventListener("keydown", this._handleKeyPress, false);
      window.removeEventListener("mousedown", this._handleClick, true);
      clearTimeout(this._timeout);

      // remove from the stack after a delay, if it is removed through some other
      // means this will happen too early causing parent modal to close
      setTimeout(function () {
        var index = popoverStack.indexOf(_this3);
        if (index >= 0) {
          popoverStack.splice(index, 1);
        }
      }, 0);
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return OnClickOutsideWrapper;
}(_react.Component), _class.propTypes = {
  handleDismissal: _propTypes2.default.func.isRequired
}, _class.defaultProps = {
  dismissOnClickOutside: true,
  dismissOnEscape: true
}, _temp2);
OnClickOutsideWrapper.displayName = "OnClickOutsideWrapper";
exports.default = OnClickOutsideWrapper;

/***/ }),

/***/ 131:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dimensionIsNumeric = dimensionIsNumeric;
exports.precision = precision;
exports.decimalCount = decimalCount;
exports.computeNumericDataInverval = computeNumericDataInverval;
exports.logTickFormat = logTickFormat;

var _schema_metadata = __webpack_require__(10);

function dimensionIsNumeric(_ref) {
  var cols = _ref.cols,
      rows = _ref.rows;
  var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  return (0, _schema_metadata.isNumeric)(cols[i]) || typeof (rows[0] && rows[0][i]) === "number";
} /*  weak */

function precision(a) {
  if (!isFinite(a)) {
    return 0;
  }
  if (!a) {
    return 0;
  }
  var e = 1;
  while (Math.round(a / e) !== a / e) {
    e /= 10;
  }
  while (Math.round(a / Math.pow(10, e)) === a / Math.pow(10, e)) {
    e *= 10;
  }
  return e;
}

function decimalCount(a) {
  if (!isFinite(a)) return 0;
  var e = 1,
      p = 0;
  while (Math.round(a * e) / e !== a) {
    e *= 10;
    p++;
  }
  return p;
}

function computeNumericDataInverval(xValues) {
  var bestPrecision = Infinity;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = xValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var value = _step.value;

      var p = precision(value) || 1;
      if (p < bestPrecision) {
        bestPrecision = p;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return bestPrecision;
}

// logTickFormat(chart.xAxis())
function logTickFormat(axis) {
  var superscript = "⁰¹²³⁴⁵⁶⁷⁸⁹";
  var formatPower = function formatPower(d) {
    return (d + "").split("").map(function (c) {
      return superscript[c];
    }).join("");
  };
  var formatTick = function formatTick(d) {
    return 10 + formatPower(Math.round(Math.log(d) / Math.LN10));
  };
  axis.tickFormat(formatTick);
}

/***/ }),

/***/ 132:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Query2 = __webpack_require__(175);

var _Query3 = _interopRequireDefault(_Query2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * A query type for queries that are attached to a specific database table
 * and form a single MBQL / native query clause
 */
var AtomicQuery = function (_Query) {
  _inherits(AtomicQuery, _Query);

  function AtomicQuery() {
    _classCallCheck(this, AtomicQuery);

    return _possibleConstructorReturn(this, (AtomicQuery.__proto__ || Object.getPrototypeOf(AtomicQuery)).apply(this, arguments));
  }

  _createClass(AtomicQuery, [{
    key: "tables",

    /**
     * Tables this query could use, if the database is set
     */
    value: function tables() {
      return null;
    }
  }, {
    key: "databaseId",
    value: function databaseId() {
      return null;
    }
  }, {
    key: "database",
    value: function database() {
      return null;
    }
  }, {
    key: "engine",
    value: function engine() {
      return null;
    }
  }]);

  return AtomicQuery;
}(_Query3.default);

exports.default = AtomicQuery;

/***/ }),

/***/ 133:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NATIVE_QUERY_TEMPLATE = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _Query = __webpack_require__(175);

var _Query2 = _interopRequireDefault(_Query);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _string = __webpack_require__(119);

var _formatting = __webpack_require__(8);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _engine = __webpack_require__(211);

var _icepick = __webpack_require__(14);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _AtomicQuery2 = __webpack_require__(132);

var _AtomicQuery3 = _interopRequireDefault(_AtomicQuery2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

var NATIVE_QUERY_TEMPLATE = exports.NATIVE_QUERY_TEMPLATE = {
  database: null,
  type: "native",
  native: {
    query: "",
    template_tags: {}
  }
};

var NativeQuery = function (_AtomicQuery) {
  _inherits(NativeQuery, _AtomicQuery);

  function NativeQuery(question) {
    var datasetQuery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NATIVE_QUERY_TEMPLATE;

    _classCallCheck(this, NativeQuery);

    var _this = _possibleConstructorReturn(this, (NativeQuery.__proto__ || Object.getPrototypeOf(NativeQuery)).call(this, question, datasetQuery));

    _this._nativeDatasetQuery = datasetQuery;
    return _this;
  }
  // For Flow type completion


  _createClass(NativeQuery, [{
    key: "canRun",


    /* Query superclass methods */

    value: function canRun() {
      return this.databaseId() != null && this.queryText().length > 0 && (!this.requiresTable() || this.collection());
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.databaseId() == null || this.queryText().length == 0;
    }
  }, {
    key: "databases",
    value: function databases() {
      return _get(NativeQuery.prototype.__proto__ || Object.getPrototypeOf(NativeQuery.prototype), "databases", this).call(this).filter(function (database) {
        return database.native_permissions === "write";
      });
    }

    /* AtomicQuery superclass methods */

  }, {
    key: "tables",
    value: function tables() {
      var database = this.database();
      return database && database.tables || null;
    }
  }, {
    key: "databaseId",
    value: function databaseId() {
      // same for both structured and native
      return this._nativeDatasetQuery.database;
    }
  }, {
    key: "database",
    value: function database() {
      var databaseId = this.databaseId();
      return databaseId != null ? this._metadata.databases[databaseId] : null;
    }
  }, {
    key: "engine",
    value: function engine() {
      var database = this.database();
      return database && database.engine;
    }

    /* Methods unique to this query type */

    /**
     * @returns a new query with the provided Database set.
     */

  }, {
    key: "setDatabase",
    value: function setDatabase(database) {
      if (database.id !== this.databaseId()) {
        // TODO: this should reset the rest of the query?
        return new NativeQuery(this._originalQuestion, (0, _icepick.assoc)(this.datasetQuery(), "database", database.id));
      } else {
        return this;
      }
    }
  }, {
    key: "hasWritePermission",
    value: function hasWritePermission() {
      var database = this.database();
      return database != null && database.native_permissions === "write";
    }
  }, {
    key: "supportsNativeParameters",
    value: function supportsNativeParameters() {
      var database = this.database();
      return database != null && _underscore2.default.contains(database.features, "native-parameters");
    }
  }, {
    key: "table",
    value: function table() {
      var database = this.database();
      var collection = this.collection();
      if (!database || !collection) {
        return null;
      }
      return _underscore2.default.findWhere(database.tables, { name: collection }) || null;
    }
  }, {
    key: "queryText",
    value: function queryText() {
      return (0, _icepick.getIn)(this.datasetQuery(), ["native", "query"]) || "";
    }
  }, {
    key: "updateQueryText",
    value: function updateQueryText(newQueryText) {
      return new NativeQuery(this._originalQuestion, (0, _icepick.chain)(this._datasetQuery).assocIn(["native", "query"], newQueryText).assocIn(["native", "template_tags"], this._getUpdatedTemplateTags(newQueryText)).value());
    }
  }, {
    key: "collection",
    value: function collection() {
      return (0, _icepick.getIn)(this.datasetQuery(), ["native", "collection"]);
    }
  }, {
    key: "updateCollection",
    value: function updateCollection(newCollection) {
      return new NativeQuery(this._originalQuestion, (0, _icepick.assocIn)(this._datasetQuery, ["native", "collection"], newCollection));
    }
  }, {
    key: "lineCount",
    value: function lineCount() {
      var queryText = this.queryText();
      return queryText ? (0, _string.countLines)(queryText) : 0;
    }

    /**
     * The ACE Editor mode name, e.g. 'ace/mode/json'
     */

  }, {
    key: "aceMode",
    value: function aceMode() {
      return (0, _engine.getEngineNativeAceMode)(this.engine());
    }

    /**
     * Name used to describe the text written in that mode, e.g. 'JSON'. Used to fill in the blank in 'This question is written in _______'.
     */

  }, {
    key: "nativeQueryLanguage",
    value: function nativeQueryLanguage() {
      return (0, _engine.getEngineNativeType)(this.engine()).toUpperCase();
    }

    /**
     * Whether the DB selector should be a DB + Table selector. Mongo needs both DB + Table.
     */

  }, {
    key: "requiresTable",
    value: function requiresTable() {
      return (0, _engine.getEngineNativeRequiresTable)(this.engine());
    }

    // $FlowFixMe

  }, {
    key: "templateTags",
    value: function templateTags() {
      return Object.values(this.templateTagsMap());
    }
  }, {
    key: "templateTagsMap",
    value: function templateTagsMap() {
      return (0, _icepick.getIn)(this.datasetQuery(), ["native", "template_tags"]) || {};
    }
  }, {
    key: "setDatasetQuery",
    value: function setDatasetQuery(datasetQuery) {
      return new NativeQuery(this._originalQuestion, datasetQuery);
    }

    /**
     * special handling for NATIVE cards to automatically detect parameters ... {{varname}}
     */

  }, {
    key: "_getUpdatedTemplateTags",
    value: function _getUpdatedTemplateTags(queryText) {
      if (queryText && this.supportsNativeParameters()) {
        var tags = [];

        // look for variable usage in the query (like '{{varname}}').  we only allow alphanumeric characters for the variable name
        // a variable name can optionally end with :start or :end which is not considered part of the actual variable name
        // expected pattern is like mustache templates, so we are looking for something like {{category}} or {{date:start}}
        // anything that doesn't match our rule is ignored, so {{&foo!}} would simply be ignored
        var match = void 0,
            re = /\{\{\s*([A-Za-z0-9_]+?)\s*\}\}/g;
        while ((match = re.exec(queryText)) != null) {
          tags.push(match[1]);
        }

        // eliminate any duplicates since it's allowed for a user to reference the same variable multiple times
        var existingTemplateTags = this.templateTagsMap();

        tags = _underscore2.default.uniq(tags);
        var existingTags = Object.keys(existingTemplateTags);

        // if we ended up with any variables in the query then update the card parameters list accordingly
        if (tags.length > 0 || existingTags.length > 0) {
          var newTags = _underscore2.default.difference(tags, existingTags);
          var oldTags = _underscore2.default.difference(existingTags, tags);

          var templateTags = _extends({}, existingTemplateTags);
          if (oldTags.length === 1 && newTags.length === 1) {
            // renaming
            templateTags[newTags[0]] = _extends({}, templateTags[oldTags[0]]);

            if (templateTags[newTags[0]].display_name === (0, _formatting.humanize)(oldTags[0])) {
              templateTags[newTags[0]].display_name = (0, _formatting.humanize)(newTags[0]);
            }

            templateTags[newTags[0]].name = newTags[0];
            delete templateTags[oldTags[0]];
          } else {
            // remove old vars
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = oldTags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var name = _step.value;

                delete templateTags[name];
              }

              // create new vars
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
              for (var _iterator2 = newTags[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var tagName = _step2.value;

                templateTags[tagName] = {
                  id: _utils2.default.uuid(),
                  name: tagName,
                  display_name: (0, _formatting.humanize)(tagName),
                  type: null
                };
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }

          // ensure all tags have an id since we need it for parameter values to work
          // $FlowFixMe
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;

          try {
            for (var _iterator3 = Object.values(templateTags)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var tag = _step3.value;

              if (tag.id == undefined) {
                tag.id = _utils2.default.uuid();
              }
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }

          return templateTags;
        }
      }
      return {};
    }
  }], [{
    key: "isDatasetQueryType",
    value: function isDatasetQueryType(datasetQuery) {
      return datasetQuery.type === NATIVE_QUERY_TEMPLATE.type;
    }
  }]);

  return NativeQuery;
}(_AtomicQuery3.default);

exports.default = NativeQuery;

/***/ }),

/***/ 136:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DimensionPicker = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _AccordianList = __webpack_require__(161);

var _AccordianList2 = _interopRequireDefault(_AccordianList);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _QueryDefinitionTooltip = __webpack_require__(240);

var _QueryDefinitionTooltip2 = _interopRequireDefault(_QueryDefinitionTooltip);

var _formatting = __webpack_require__(8);

var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

// import type { Section } from "metabase/components/AccordianList";
var FieldList = function (_Component) {
  _inherits(FieldList, _Component);

  function FieldList() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, FieldList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FieldList.__proto__ || Object.getPrototypeOf(FieldList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      sections: []
    }, _this.itemIsSelected = function (item) {
      return item.dimension && item.dimension.isSameBaseDimension(_this.props.field);
    }, _this.renderItemExtra = function (item) {
      var _this$props = _this.props,
          field = _this$props.field,
          enableSubDimensions = _this$props.enableSubDimensions,
          metadata = _this$props.tableMetadata.metadata;


      return _react2.default.createElement(
        "div",
        { className: "Field-extra flex align-center" },
        item.segment && _this.renderSegmentTooltip(item.segment),
        item.dimension && item.dimension.tag && _react2.default.createElement(
          "span",
          { className: "h5 text-grey-2 px1" },
          item.dimension.tag
        ),
        enableSubDimensions && item.dimension && item.dimension.dimensions().length > 0 ? _react2.default.createElement(
          _PopoverWithTrigger2.default,
          {
            className: _this.props.className,
            hasArrow: false,
            triggerElement: _this.renderSubDimensionTrigger(item.dimension),
            tetherOptions: {
              attachment: "top left",
              targetAttachment: "top right",
              targetOffset: "0 0",
              constraints: [{
                to: "window",
                attachment: "together",
                pin: ["left", "right"]
              }]
            }
          },
          _react2.default.createElement(DimensionPicker, {
            dimension: _Dimension2.default.parseMBQL(field, metadata),
            dimensions: item.dimension.dimensions(),
            onChangeDimension: function onChangeDimension(dimension) {
              return _this.props.onFieldChange(dimension.mbql());
            }
          })
        ) : null
      );
    }, _this.renderItemIcon = function (item) {
      var name = void 0;
      if (item.segment) {
        name = "staroutline";
      } else if (item.dimension) {
        name = item.dimension.icon();
      }
      return _react2.default.createElement(_Icon2.default, { name: name || "unknown", size: 18 });
    }, _this.getItemClasses = function (item, itemIndex) {
      if (item.segment) {
        return "List-item--segment";
      } else {
        return null;
      }
    }, _this.renderSectionIcon = function (section, sectionIndex) {
      if (sectionIndex > 0) {
        return _react2.default.createElement(_Icon2.default, { name: "connections", size: 18 });
      } else {
        return _react2.default.createElement(_Icon2.default, { name: "table2", size: 18 });
      }
    }, _this.onChange = function (item) {
      var _this$props2 = _this.props,
          field = _this$props2.field,
          enableSubDimensions = _this$props2.enableSubDimensions,
          onFilterChange = _this$props2.onFilterChange,
          onFieldChange = _this$props2.onFieldChange;

      if (item.segment && onFilterChange) {
        onFilterChange(item.value);
      } else if (field != null && _this.itemIsSelected(item)) {
        // ensure if we select the same item we don't reset datetime-field's unit
        onFieldChange(field);
      } else {
        var dimension = item.dimension.defaultDimension() || item.dimension;
        var shouldExcludeBinning = !enableSubDimensions && dimension instanceof _Dimension.BinnedDimension;

        if (shouldExcludeBinning) {
          // If we don't let user choose the sub-dimension, we don't want to treat the field
          // as a binned field (which would use the default binning)
          // Let's unwrap the base field of the binned field instead
          onFieldChange(dimension.baseDimension().mbql());
        } else {
          onFieldChange(dimension.mbql());
        }
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(FieldList, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.componentWillReceiveProps(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      var tableMetadata = newProps.tableMetadata,
          fieldOptions = newProps.fieldOptions,
          segmentOptions = newProps.segmentOptions,
          hideSectionHeader = newProps.hideSectionHeader;

      var tableName = tableMetadata.display_name;

      var specialOptions = [];
      if (segmentOptions) {
        specialOptions = segmentOptions.map(function (segment) {
          return {
            name: segment.name,
            value: ["SEGMENT", segment.id],
            segment: segment
          };
        });
      }

      var getSectionItems = function getSectionItems(sectionOptions) {
        return sectionOptions.dimensions.map(function (dimension) {
          return {
            name: dimension.displayName(),
            dimension: dimension
          };
        });
      };

      var mainSection = {
        name: hideSectionHeader ? null : (0, _formatting.singularize)(tableName),
        items: specialOptions.concat(getSectionItems(fieldOptions))
      };

      var fkSections = fieldOptions.fks.map(function (fkOptions) {
        return {
          name: hideSectionHeader ? null : (0, _formatting.stripId)(fkOptions.field.display_name),
          items: getSectionItems(fkOptions)
        };
      });

      var sections = [];
      if (mainSection.items.length > 0) {
        sections.push(mainSection);
      }
      sections.push.apply(sections, _toConsumableArray(fkSections));

      this.setState({ sections: sections });
    }
  }, {
    key: "renderSubDimensionTrigger",
    value: function renderSubDimensionTrigger(dimension) {
      var _props = this.props,
          field = _props.field,
          metadata = _props.tableMetadata.metadata;

      var subDimension = dimension.isSameBaseDimension(field) ? _Dimension2.default.parseMBQL(field, metadata) : dimension.defaultDimension();
      var name = subDimension ? subDimension.subTriggerDisplayName() : null;
      return _react2.default.createElement(
        "div",
        { className: "FieldList-grouping-trigger flex align-center p1 cursor-pointer" },
        name && _react2.default.createElement(
          "h4",
          { className: "mr1" },
          name
        ),
        _react2.default.createElement(_Icon2.default, { name: "chevronright", size: 16 })
      );
    }
  }, {
    key: "renderSegmentTooltip",
    value: function renderSegmentTooltip(segment) {
      var tableMetadata = this.props.tableMetadata;

      return _react2.default.createElement(
        "div",
        { className: "p1" },
        _react2.default.createElement(
          _Tooltip2.default,
          {
            tooltip: _react2.default.createElement(_QueryDefinitionTooltip2.default, {
              object: segment,
              tableMetadata: tableMetadata
            })
          },
          _react2.default.createElement("span", { className: "QuestionTooltipTarget" })
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(_AccordianList2.default, {
        className: this.props.className,
        maxHeight: this.props.maxHeight,
        sections: this.state.sections,
        onChange: this.onChange,
        itemIsSelected: this.itemIsSelected,
        renderSectionIcon: this.renderSectionIcon,
        renderItemExtra: this.renderItemExtra,
        renderItemIcon: this.renderItemIcon,
        getItemClasses: this.getItemClasses,
        alwaysExpanded: this.props.alwaysExpanded
      });
    }
  }]);

  return FieldList;
}(_react.Component);

FieldList.displayName = "FieldList";
exports.default = FieldList;
var DimensionPicker = exports.DimensionPicker = function DimensionPicker(_ref2) {
  var className = _ref2.className,
      dimension = _ref2.dimension,
      dimensions = _ref2.dimensions,
      onChangeDimension = _ref2.onChangeDimension;

  return _react2.default.createElement(
    "ul",
    { className: "px2 py1" },
    dimensions.map(function (d, index) {
      return _react2.default.createElement(
        "li",
        {
          key: index,
          className: (0, _classnames2.default)("List-item", {
            "List-item--selected": d.isEqual(dimension)
          })
        },
        _react2.default.createElement(
          "a",
          {
            className: "List-item-title full px2 py1 cursor-pointer",
            onClick: function onClick() {
              return onChangeDimension(d);
            }
          },
          d.subDisplayName()
        )
      );
    })
  );
};
DimensionPicker.displayName = "DimensionPicker";

/***/ }),

/***/ 137:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ALL_OPERATORS = exports.EMPTINESS_OPERATORS = exports.DATE_OPERATORS = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2, _class2, _temp4;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["All Time"], ["All Time"]),
    _templateObject2 = _taggedTemplateLiteral(["Previous"], ["Previous"]),
    _templateObject3 = _taggedTemplateLiteral(["Next"], ["Next"]),
    _templateObject4 = _taggedTemplateLiteral(["Current"], ["Current"]),
    _templateObject5 = _taggedTemplateLiteral(["Before"], ["Before"]),
    _templateObject6 = _taggedTemplateLiteral(["After"], ["After"]),
    _templateObject7 = _taggedTemplateLiteral(["On"], ["On"]),
    _templateObject8 = _taggedTemplateLiteral(["Between"], ["Between"]),
    _templateObject9 = _taggedTemplateLiteral(["Is Empty"], ["Is Empty"]),
    _templateObject10 = _taggedTemplateLiteral(["Not Empty"], ["Not Empty"]);

exports.getDateTimeFieldTarget = getDateTimeFieldTarget;
exports.getOperator = getOperator;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _SpecificDatePicker = __webpack_require__(416);

var _SpecificDatePicker2 = _interopRequireDefault(_SpecificDatePicker);

var _RelativeDatePicker = __webpack_require__(419);

var _RelativeDatePicker2 = _interopRequireDefault(_RelativeDatePicker);

var _DateOperatorSelector = __webpack_require__(420);

var _DateOperatorSelector2 = _interopRequireDefault(_DateOperatorSelector);

var _DateUnitSelector = __webpack_require__(246);

var _DateUnitSelector2 = _interopRequireDefault(_DateUnitSelector);

var _Calendar = __webpack_require__(138);

var _Calendar2 = _interopRequireDefault(_Calendar);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _util = __webpack_require__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SingleDatePicker = function SingleDatePicker(_ref) {
  var _ref$filter = _slicedToArray(_ref.filter, 3),
      op = _ref$filter[0],
      field = _ref$filter[1],
      value = _ref$filter[2],
      onFilterChange = _ref.onFilterChange,
      hideTimeSelectors = _ref.hideTimeSelectors;

  return _react2.default.createElement(
    "div",
    { className: "mx2" },
    _react2.default.createElement(_SpecificDatePicker2.default, {
      value: value,
      onChange: function onChange(value) {
        return onFilterChange([op, field, value]);
      },
      hideTimeSelectors: hideTimeSelectors,
      calendar: true
    })
  );
};

SingleDatePicker.displayName = "SingleDatePicker";
var MultiDatePicker = function MultiDatePicker(_ref2) {
  var _ref2$filter = _slicedToArray(_ref2.filter, 4),
      op = _ref2$filter[0],
      field = _ref2$filter[1],
      startValue = _ref2$filter[2],
      endValue = _ref2$filter[3],
      onFilterChange = _ref2.onFilterChange,
      hideTimeSelectors = _ref2.hideTimeSelectors;

  return _react2.default.createElement(
    "div",
    { className: "mx2 mb1" },
    _react2.default.createElement(
      "div",
      { className: "Grid Grid--1of2 Grid--gutters" },
      _react2.default.createElement(
        "div",
        { className: "Grid-cell" },
        _react2.default.createElement(_SpecificDatePicker2.default, {
          value: startValue,
          hideTimeSelectors: hideTimeSelectors,
          onChange: function onChange(value) {
            return onFilterChange([op, field, value, endValue]);
          }
        })
      ),
      _react2.default.createElement(
        "div",
        { className: "Grid-cell" },
        _react2.default.createElement(_SpecificDatePicker2.default, {
          value: endValue,
          hideTimeSelectors: hideTimeSelectors,
          onChange: function onChange(value) {
            return onFilterChange([op, field, startValue, value]);
          }
        })
      )
    ),
    _react2.default.createElement(
      "div",
      { className: "Calendar--noContext" },
      _react2.default.createElement(_Calendar2.default, {
        initial: startValue ? (0, _moment2.default)(startValue) : (0, _moment2.default)(),
        selected: startValue && (0, _moment2.default)(startValue),
        selectedEnd: endValue && (0, _moment2.default)(endValue),
        onChange: function onChange(startValue, endValue) {
          return onFilterChange([op, field, startValue, endValue]);
        },
        isDual: true
      })
    )
  );
};

MultiDatePicker.displayName = "MultiDatePicker";
var PreviousPicker = function PreviousPicker(props) {
  return _react2.default.createElement(_RelativeDatePicker2.default, _extends({}, props, { formatter: function formatter(value) {
      return value * -1;
    } }));
};

PreviousPicker.displayName = "PreviousPicker";
PreviousPicker.horizontalLayout = true;

var NextPicker = function NextPicker(props) {
  return _react2.default.createElement(_RelativeDatePicker2.default, props);
};

NextPicker.displayName = "NextPicker";
NextPicker.horizontalLayout = true;

var CurrentPicker = (_temp2 = _class = function (_Component) {
  _inherits(CurrentPicker, _Component);

  function CurrentPicker() {
    var _ref3;

    var _temp, _this, _ret;

    _classCallCheck(this, CurrentPicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref3 = CurrentPicker.__proto__ || Object.getPrototypeOf(CurrentPicker)).call.apply(_ref3, [this].concat(args))), _this), _this.state = {
      showUnits: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(CurrentPicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          _props$filter = _slicedToArray(_props.filter, 4),
          operator = _props$filter[0],
          field = _props$filter[1],
          intervals = _props$filter[2],
          unit = _props$filter[3],
          onFilterChange = _props.onFilterChange;

      return _react2.default.createElement(
        "div",
        { className: "flex-full mr2 mb2" },
        _react2.default.createElement(_DateUnitSelector2.default, {
          value: unit,
          open: this.state.showUnits,
          onChange: function onChange(value) {
            onFilterChange([operator, field, intervals, value]);
            _this2.setState({ showUnits: false });
          },
          togglePicker: function togglePicker() {
            return _this2.setState({ showUnits: !_this2.state.showUnits });
          },
          formatter: function formatter(val) {
            return val;
          },
          periods: _RelativeDatePicker.DATE_PERIODS
        })
      );
    }
  }]);

  return CurrentPicker;
}(_react.Component), _class.horizontalLayout = true, _temp2);
CurrentPicker.displayName = "CurrentPicker";


var getIntervals = function getIntervals(_ref4) {
  var _ref5 = _slicedToArray(_ref4, 4),
      op = _ref5[0],
      field = _ref5[1],
      value = _ref5[2],
      unit = _ref5[3];

  return (0, _util.mbqlEq)(op, "time-interval") && typeof value === "number" ? Math.abs(value) : 30;
};
var getUnit = function getUnit(_ref6) {
  var _ref7 = _slicedToArray(_ref6, 4),
      op = _ref7[0],
      field = _ref7[1],
      value = _ref7[2],
      unit = _ref7[3];

  return (0, _util.mbqlEq)(op, "time-interval") && unit ? unit : "day";
};
var getOptions = function getOptions(_ref8) {
  var _ref9 = _slicedToArray(_ref8, 5),
      op = _ref9[0],
      field = _ref9[1],
      value = _ref9[2],
      unit = _ref9[3],
      options = _ref9[4];

  return (0, _util.mbqlEq)(op, "time-interval") && options || {};
};

var getDate = function getDate(value) {
  if (typeof value !== "string" || !(0, _moment2.default)(value).isValid()) {
    value = (0, _moment2.default)().format("YYYY-MM-DD");
  }
  return value;
};

var hasTime = function hasTime(value) {
  return typeof value === "string" && /T\d{2}:\d{2}:\d{2}$/.test(value);
};

function getDateTimeField(field, bucketing) {
  var target = getDateTimeFieldTarget(field);
  if (bucketing) {
    // $FlowFixMe
    return ["datetime-field", target, bucketing];
  } else {
    return target;
  }
}

function getDateTimeFieldTarget(field) {
  if (_query2.default.isDatetimeField(field)) {
    // $FlowFixMe:
    return field[1];
  } else {
    // $FlowFixMe
    return field;
  }
}

// wraps values in "datetime-field" is any of them have a time component
function getDateTimeFieldAndValues(filter, count) {
  var values = filter.slice(2, 2 + count).map(function (value) {
    return value && getDate(value);
  });
  var bucketing = _underscore2.default.any(values, hasTime) ? "minute" : null;
  var field = getDateTimeField(filter[1], bucketing);
  // $FlowFixMe
  return [field].concat(_toConsumableArray(values));
}

var ALL_TIME_OPERATOR = {
  name: "all",
  displayName: (0, _c3po.t)(_templateObject),
  init: function init() {
    return null;
  },
  test: function test(op) {
    return op === null;
  }
};

var DATE_OPERATORS = exports.DATE_OPERATORS = [{
  name: "previous",
  displayName: (0, _c3po.t)(_templateObject2),
  init: function init(filter) {
    return ["time-interval", getDateTimeField(filter[1]), -getIntervals(filter), getUnit(filter), getOptions(filter)];
  },
  test: function test(_ref10) {
    var _ref11 = _slicedToArray(_ref10, 3),
        op = _ref11[0],
        field = _ref11[1],
        value = _ref11[2];

    return (
      // $FlowFixMe
      (0, _util.mbqlEq)(op, "time-interval") && value < 0 || Object.is(value, -0)
    );
  },
  widget: PreviousPicker,
  options: { "include-current": true }
}, {
  name: "next",
  displayName: (0, _c3po.t)(_templateObject3),
  init: function init(filter) {
    return ["time-interval", getDateTimeField(filter[1]), getIntervals(filter), getUnit(filter), getOptions(filter)];
  },
  // $FlowFixMe
  test: function test(_ref12) {
    var _ref13 = _slicedToArray(_ref12, 3),
        op = _ref13[0],
        field = _ref13[1],
        value = _ref13[2];

    return (0, _util.mbqlEq)(op, "time-interval") && value >= 0;
  },
  widget: NextPicker,
  options: { "include-current": true }
}, {
  name: "current",
  displayName: (0, _c3po.t)(_templateObject4),
  init: function init(filter) {
    return ["time-interval", getDateTimeField(filter[1]), "current", getUnit(filter)];
  },
  test: function test(_ref14) {
    var _ref15 = _slicedToArray(_ref14, 3),
        op = _ref15[0],
        field = _ref15[1],
        value = _ref15[2];

    return (0, _util.mbqlEq)(op, "time-interval") && value === "current";
  },
  widget: CurrentPicker
}, {
  name: "before",
  displayName: (0, _c3po.t)(_templateObject5),
  init: function init(filter) {
    return ["<"].concat(_toConsumableArray(getDateTimeFieldAndValues(filter, 1)));
  },
  test: function test(_ref16) {
    var _ref17 = _slicedToArray(_ref16, 1),
        op = _ref17[0];

    return op === "<";
  },
  widget: SingleDatePicker
}, {
  name: "after",
  displayName: (0, _c3po.t)(_templateObject6),
  init: function init(filter) {
    return [">"].concat(_toConsumableArray(getDateTimeFieldAndValues(filter, 1)));
  },
  test: function test(_ref18) {
    var _ref19 = _slicedToArray(_ref18, 1),
        op = _ref19[0];

    return op === ">";
  },
  widget: SingleDatePicker
}, {
  name: "on",
  displayName: (0, _c3po.t)(_templateObject7),
  init: function init(filter) {
    return ["="].concat(_toConsumableArray(getDateTimeFieldAndValues(filter, 1)));
  },
  test: function test(_ref20) {
    var _ref21 = _slicedToArray(_ref20, 1),
        op = _ref21[0];

    return op === "=";
  },
  widget: SingleDatePicker
}, {
  name: "between",
  displayName: (0, _c3po.t)(_templateObject8),
  init: function init(filter) {
    return ["BETWEEN"].concat(_toConsumableArray(getDateTimeFieldAndValues(filter, 2)));
  },
  test: function test(_ref22) {
    var _ref23 = _slicedToArray(_ref22, 1),
        op = _ref23[0];

    return (0, _util.mbqlEq)(op, "between");
  },
  widget: MultiDatePicker
}];

var EMPTINESS_OPERATORS = exports.EMPTINESS_OPERATORS = [{
  name: "empty",
  displayName: (0, _c3po.t)(_templateObject9),
  init: function init(filter) {
    return ["IS_NULL", getDateTimeField(filter[1])];
  },
  test: function test(_ref24) {
    var _ref25 = _slicedToArray(_ref24, 1),
        op = _ref25[0];

    return op === "IS_NULL";
  }
}, {
  name: "not-empty",
  displayName: (0, _c3po.t)(_templateObject10),
  init: function init(filter) {
    return ["NOT_NULL", getDateTimeField(filter[1])];
  },
  test: function test(_ref26) {
    var _ref27 = _slicedToArray(_ref26, 1),
        op = _ref27[0];

    return op === "NOT_NULL";
  }
}];

var ALL_OPERATORS = exports.ALL_OPERATORS = DATE_OPERATORS.concat(EMPTINESS_OPERATORS);

function getOperator(filter) {
  var operators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALL_OPERATORS;

  return _underscore2.default.find(operators, function (o) {
    return o.test(filter);
  });
}

var DatePicker = (_temp4 = _class2 = function (_Component2) {
  _inherits(DatePicker, _Component2);

  function DatePicker() {
    var _ref28;

    var _temp3, _this3, _ret2;

    _classCallCheck(this, DatePicker);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp3 = (_this3 = _possibleConstructorReturn(this, (_ref28 = DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call.apply(_ref28, [this].concat(args))), _this3), _this3.state = {
      operators: []
    }, _temp3), _possibleConstructorReturn(_this3, _ret2);
  }

  _createClass(DatePicker, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var operators = this.props.operators || DATE_OPERATORS;
      if (!this.props.hideEmptinessOperators) {
        operators = operators.concat(EMPTINESS_OPERATORS);
      }

      var operator = getOperator(this.props.filter, operators) || operators[0];
      this.props.onFilterChange(operator.init(this.props.filter));

      this.setState({ operators: operators });
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          filter = _props2.filter,
          onFilterChange = _props2.onFilterChange,
          includeAllTime = _props2.includeAllTime;
      var operators = this.state.operators;

      if (includeAllTime) {
        operators = [ALL_TIME_OPERATOR].concat(_toConsumableArray(operators));
      }

      var operator = getOperator(this.props.filter, operators);
      var Widget = operator && operator.widget;

      return _react2.default.createElement(
        "div",
        {
          // apply flex to align the operator selector and the "Widget" if necessary
          className: (0, _classnames2.default)("border-top pt2", {
            "flex align-center": Widget && Widget.horizontalLayout
          }),
          style: { minWidth: 380 }
        },
        _react2.default.createElement(_DateOperatorSelector2.default, {
          operator: operator && operator.name,
          operators: operators,
          onOperatorChange: function onOperatorChange(operator) {
            return onFilterChange(operator.init(filter));
          }
        }),
        Widget && _react2.default.createElement(Widget, _extends({}, this.props, {
          filter: filter,
          hideHoursAndMinutes: this.props.hideTimeSelectors,
          onFilterChange: function (_onFilterChange) {
            function onFilterChange(_x2) {
              return _onFilterChange.apply(this, arguments);
            }

            onFilterChange.toString = function () {
              return _onFilterChange.toString();
            };

            return onFilterChange;
          }(function (filter) {
            if (operator && operator.init) {
              onFilterChange(operator.init(filter));
            } else {
              onFilterChange(filter);
            }
          })
        }))
      );
    }
  }]);

  return DatePicker;
}(_react.Component), _class2.propTypes = {
  filter: _propTypes2.default.array.isRequired,
  onFilterChange: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string,
  hideEmptinessOperators: _propTypes2.default.bool,
  hideTimeSelectors: _propTypes2.default.bool,
  operators: _propTypes2.default.array
}, _temp4);
DatePicker.displayName = "DatePicker";
exports.default = DatePicker;

/***/ }),

/***/ 138:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp2;

var _templateObject = _taggedTemplateLiteral(["Su"], ["Su"]),
    _templateObject2 = _taggedTemplateLiteral(["Mo"], ["Mo"]),
    _templateObject3 = _taggedTemplateLiteral(["Tu"], ["Tu"]),
    _templateObject4 = _taggedTemplateLiteral(["We"], ["We"]),
    _templateObject5 = _taggedTemplateLiteral(["Th"], ["Th"]),
    _templateObject6 = _taggedTemplateLiteral(["Fr"], ["Fr"]),
    _templateObject7 = _taggedTemplateLiteral(["Sa"], ["Sa"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

__webpack_require__(417);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _c3po = __webpack_require__(2);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Calendar = (_temp = _class = function (_Component) {
  _inherits(Calendar, _Component);

  function Calendar(props) {
    _classCallCheck(this, Calendar);

    var _this = _possibleConstructorReturn(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call(this, props));

    _this.onClickDay = function (date) {
      var _this$props = _this.props,
          selected = _this$props.selected,
          selectedEnd = _this$props.selectedEnd,
          isRangePicker = _this$props.isRangePicker;

      if (!isRangePicker || !selected || selectedEnd) {
        _this.props.onChange(date.format("YYYY-MM-DD"), null);
      } else if (!selectedEnd) {
        if (date.isAfter(selected)) {
          _this.props.onChange(selected.format("YYYY-MM-DD"), date.format("YYYY-MM-DD"));
        } else {
          _this.props.onChange(date.format("YYYY-MM-DD"), selected.format("YYYY-MM-DD"));
        }
      }
    };

    _this.previous = function () {
      _this.setState({ current: (0, _moment2.default)(_this.state.current).add(-1, "M") });
    };

    _this.next = function () {
      _this.setState({ current: (0, _moment2.default)(_this.state.current).add(1, "M") });
    };

    _this.state = {
      current: (0, _moment2.default)(props.initial || undefined)
    };
    return _this;
  }

  _createClass(Calendar, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (
      // `selected` became null or not null
      nextProps.selected == null !== (this.props.selected == null) ||
      // `selectedEnd` became null or not null
      nextProps.selectedEnd == null !== (this.props.selectedEnd == null) ||
      // `selected` is not null and doesn't match previous `selected`
      nextProps.selected != null && !(0, _moment2.default)(nextProps.selected).isSame(this.props.selected, "day") ||
      // `selectedEnd` is not null and doesn't match previous `selectedEnd`
      nextProps.selectedEnd != null && !(0, _moment2.default)(nextProps.selectedEnd).isSame(this.props.selectedEnd, "day")) {
        var resetCurrent = false;
        if (nextProps.selected != null && nextProps.selectedEnd != null) {
          // reset if `current` isn't between `selected` and `selectedEnd` month
          resetCurrent = nextProps.selected.isAfter(this.state.current, "month") && nextProps.selectedEnd.isBefore(this.state.current, "month");
        } else if (nextProps.selected != null) {
          // reset if `current` isn't in `selected` month
          resetCurrent = nextProps.selected.isAfter(this.state.current, "month") || nextProps.selected.isBefore(this.state.current, "month");
        }
        if (resetCurrent) {
          this.setState({ current: nextProps.selected });
        }
      }
    }
  }, {
    key: "renderMonthHeader",
    value: function renderMonthHeader(current, side) {
      return _react2.default.createElement(
        "div",
        { className: "Calendar-header flex align-center" },
        side !== "right" && _react2.default.createElement(
          "div",
          {
            className: "bordered rounded p1 cursor-pointer transition-border border-hover px1",
            onClick: this.previous
          },
          _react2.default.createElement(_Icon2.default, { name: "chevronleft", size: 10 })
        ),
        _react2.default.createElement("span", { className: "flex-full" }),
        _react2.default.createElement(
          "h4",
          { className: "cursor-pointer rounded p1" },
          current.format("MMMM YYYY")
        ),
        _react2.default.createElement("span", { className: "flex-full" }),
        side !== "left" && _react2.default.createElement(
          "div",
          {
            className: "bordered border-hover rounded p1 transition-border cursor-pointer px1",
            onClick: this.next
          },
          _react2.default.createElement(_Icon2.default, { name: "chevronright", size: 10 })
        )
      );
    }
  }, {
    key: "renderDayNames",
    value: function renderDayNames() {
      var names = [(0, _c3po.t)(_templateObject), (0, _c3po.t)(_templateObject2), (0, _c3po.t)(_templateObject3), (0, _c3po.t)(_templateObject4), (0, _c3po.t)(_templateObject5), (0, _c3po.t)(_templateObject6), (0, _c3po.t)(_templateObject7)];
      return _react2.default.createElement(
        "div",
        { className: "Calendar-day-names Calendar-week py1" },
        names.map(function (name) {
          return _react2.default.createElement(
            "span",
            { key: name, className: "Calendar-day-name text-centered" },
            name
          );
        })
      );
    }
  }, {
    key: "renderWeeks",
    value: function renderWeeks(current) {
      var weeks = [],
          done = false,
          date = (0, _moment2.default)(current).startOf("month").day("Sunday"),
          monthIndex = date.month(),
          count = 0;

      while (!done) {
        weeks.push(_react2.default.createElement(Week, {
          key: date.toString(),
          date: (0, _moment2.default)(date),
          month: current,
          onClickDay: this.onClickDay,
          selected: this.props.selected,
          selectedEnd: this.props.selectedEnd
        }));
        date.add(1, "w");
        done = count++ > 2 && monthIndex !== date.month();
        monthIndex = date.month();
      }

      return _react2.default.createElement(
        "div",
        { className: "Calendar-weeks relative" },
        weeks
      );
    }
  }, {
    key: "renderCalender",
    value: function renderCalender(current, side) {
      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("Calendar Grid-cell", {
            "Calendar--range": this.props.selected && this.props.selectedEnd
          })
        },
        this.renderMonthHeader(current, side),
        this.renderDayNames(current),
        this.renderWeeks(current)
      );
    }
  }, {
    key: "render",
    value: function render() {
      var current = this.state.current;

      if (this.props.isDual) {
        return _react2.default.createElement(
          "div",
          { className: "Grid Grid--1of2 Grid--gutters" },
          this.renderCalender(current, "left"),
          this.renderCalender((0, _moment2.default)(current).add(1, "month"), "right")
        );
      } else {
        return this.renderCalender(current);
      }
    }
  }]);

  return Calendar;
}(_react.Component), _class.propTypes = {
  selected: _propTypes2.default.object,
  selectedEnd: _propTypes2.default.object,
  onChange: _propTypes2.default.func.isRequired,
  isRangePicker: _propTypes2.default.bool,
  isDual: _propTypes2.default.bool
}, _class.defaultProps = {
  isRangePicker: true
}, _temp);
Calendar.displayName = "Calendar";
exports.default = Calendar;
var Week = (_temp2 = _class2 = function (_Component2) {
  _inherits(Week, _Component2);

  function Week() {
    _classCallCheck(this, Week);

    return _possibleConstructorReturn(this, (Week.__proto__ || Object.getPrototypeOf(Week)).apply(this, arguments));
  }

  _createClass(Week, [{
    key: "render",
    value: function render() {
      var days = [];
      var _props = this.props,
          date = _props.date,
          month = _props.month,
          selected = _props.selected,
          selectedEnd = _props.selectedEnd;


      for (var i = 0; i < 7; i++) {
        var classes = (0, _classnames2.default)("Calendar-day p1 cursor-pointer text-centered", {
          "Calendar-day--today": date.isSame(new Date(), "day"),
          "Calendar-day--this-month": date.month() === month.month(),
          "Calendar-day--selected": selected && date.isSame(selected, "day"),
          "Calendar-day--selected-end": selectedEnd && date.isSame(selectedEnd, "day"),
          "Calendar-day--week-start": i === 0,
          "Calendar-day--week-end": i === 6,
          "Calendar-day--in-range": !(date.isSame(selected, "day") || date.isSame(selectedEnd, "day")) && (date.isSame(selected, "day") || date.isSame(selectedEnd, "day") || selectedEnd && selectedEnd.isAfter(date, "day") && date.isAfter(selected, "day"))
        });
        days.push(_react2.default.createElement(
          "span",
          {
            key: date.toString(),
            className: classes,
            onClick: this.props.onClickDay.bind(null, date)
          },
          date.date()
        ));
        date = (0, _moment2.default)(date).add(1, "d");
      }

      return _react2.default.createElement(
        "div",
        { className: "Calendar-week", key: days[0].toString() },
        days
      );
    }
  }]);

  return Week;
}(_react.Component), _class2.propTypes = {
  selected: _propTypes2.default.object,
  selectedEnd: _propTypes2.default.object,
  onClickDay: _propTypes2.default.func.isRequired
}, _temp2);
Week.displayName = "Week";

/***/ }),

/***/ 139:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Location"], ["Location"]);

var _schema_metadata = __webpack_require__(10);

var _PivotByAction = __webpack_require__(179);

var _PivotByAction2 = _interopRequireDefault(_PivotByAction);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = (0, _PivotByAction2.default)((0, _c3po.t)(_templateObject), "location", function (field) {
  return (0, _schema_metadata.isAddress)(field);
});

/***/ }),

/***/ 140:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Time"], ["Time"]);

var _schema_metadata = __webpack_require__(10);

var _PivotByAction = __webpack_require__(179);

var _PivotByAction2 = _interopRequireDefault(_PivotByAction);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = (0, _PivotByAction2.default)((0, _c3po.t)(_templateObject), "clock", function (field) {
  return (0, _schema_metadata.isDate)(field);
});

/***/ }),

/***/ 141:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PivotByCategoryAction = __webpack_require__(108);

var _PivotByCategoryAction2 = _interopRequireDefault(_PivotByCategoryAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (props) {
  return (0, _PivotByCategoryAction2.default)(props);
};

/***/ }),

/***/ 142:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Legend = __webpack_require__(182);

var _Legend2 = _interopRequireDefault(_Legend);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _LegendItem = __webpack_require__(183);

var _LegendItem2 = _interopRequireDefault(_LegendItem);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _colors = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DEFAULT_COLORS = Object.values(_colors.normal);

var LegendHeader = (_temp = _class = function (_Component) {
  _inherits(LegendHeader, _Component);

  function LegendHeader(props, context) {
    _classCallCheck(this, LegendHeader);

    var _this = _possibleConstructorReturn(this, (LegendHeader.__proto__ || Object.getPrototypeOf(LegendHeader)).call(this, props, context));

    _this.state = {
      width: 0
    };
    return _this;
  }

  _createClass(LegendHeader, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var width = _reactDom2.default.findDOMNode(this).offsetWidth;
      if (width !== this.state.width) {
        this.setState({ width: width });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          series = _props.series,
          hovered = _props.hovered,
          onRemoveSeries = _props.onRemoveSeries,
          actionButtons = _props.actionButtons,
          onHoverChange = _props.onHoverChange,
          onChangeCardAndRun = _props.onChangeCardAndRun,
          settings = _props.settings,
          description = _props.description,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable;

      var showDots = series.length > 1;
      var isNarrow = this.state.width < 150;
      var showTitles = !showDots || !isNarrow;
      var colors = settings["graph.colors"] || DEFAULT_COLORS;
      var customTitles = settings["graph.series_labels"];
      var titles = customTitles && customTitles.length === series.length ? customTitles : series.map(function (thisSeries) {
        return thisSeries.card.name;
      });

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(_Legend2.default.LegendHeader, "Card-title mx1 flex flex-no-shrink flex-row align-center")
        },
        series.map(function (s, index) {
          return [_react2.default.createElement(_LegendItem2.default, {
            key: index,
            title: titles[index],
            description: description,
            color: colors[index % colors.length],
            showDot: showDots,
            showTitle: showTitles,
            isMuted: hovered && hovered.index != null && index !== hovered.index,
            onMouseEnter: function onMouseEnter() {
              return onHoverChange && onHoverChange({ index: index });
            },
            onMouseLeave: function onMouseLeave() {
              return onHoverChange && onHoverChange(null);
            },
            onClick: s.clicked && visualizationIsClickable(s.clicked) ? function (e) {
              return onVisualizationClick(_extends({}, s.clicked, {
                element: e.currentTarget
              }));
            } : onChangeCardAndRun ? function () {
              return onChangeCardAndRun({
                nextCard: s.card,
                seriesIndex: index
              });
            } : null
          }), onRemoveSeries && index > 0 && _react2.default.createElement(_Icon2.default, {
            name: "close",
            className: "text-grey-2 flex-no-shrink mr1 cursor-pointer",
            width: 12,
            height: 12,
            onClick: function onClick() {
              return onRemoveSeries(s.card);
            }
          })];
        }),
        actionButtons && _react2.default.createElement(
          "span",
          { className: "flex-no-shrink flex-align-right relative" },
          actionButtons
        )
      );
    }
  }]);

  return LegendHeader;
}(_react.Component), _class.propTypes = {
  series: _propTypes2.default.array.isRequired,
  hovered: _propTypes2.default.object,
  onHoverChange: _propTypes2.default.func,
  onRemoveSeries: _propTypes2.default.func,
  onChangeCardAndRun: _propTypes2.default.func,
  actionButtons: _propTypes2.default.node,
  description: _propTypes2.default.string
}, _class.defaultProps = {
  series: [],
  settings: {},
  visualizationIsClickable: function visualizationIsClickable() {
    return false;
  }
}, _temp);
LegendHeader.displayName = "LegendHeader";
exports.default = LegendHeader;

/***/ }),

/***/ 143:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
   Creates a bordered container for an <Icon /> component
   based on the <Icon /> component's size.

   usage:
   <IconBorder {...props} >
   <Icon name={chevrondown} size={12} />
   </IconBorder>
 */

var IconBorder = (_temp = _class = function (_Component) {
  _inherits(IconBorder, _Component);

  function IconBorder() {
    _classCallCheck(this, IconBorder);

    return _possibleConstructorReturn(this, (IconBorder.__proto__ || Object.getPrototypeOf(IconBorder)).apply(this, arguments));
  }

  _createClass(IconBorder, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          borderWidth = _props.borderWidth,
          borderStyle = _props.borderStyle,
          borderColor = _props.borderColor,
          borderRadius = _props.borderRadius,
          className = _props.className,
          style = _props.style,
          children = _props.children;

      var size = parseInt(children.props.size || children.props.width, 10) * 2;
      var styles = _extends({
        width: size,
        height: size,
        borderWidth: borderWidth,
        borderStyle: borderStyle,
        borderColor: borderColor,
        borderRadius: borderRadius
      }, style);

      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)("flex layout-centered", className), style: styles },
        children
      );
    }
  }]);

  return IconBorder;
}(_react.Component), _class.propTypes = {
  borderWidth: _propTypes2.default.string,
  borderStyle: _propTypes2.default.string,
  borderColor: _propTypes2.default.string,
  borderRadius: _propTypes2.default.string,
  style: _propTypes2.default.object,
  children: _propTypes2.default.any.isRequired
}, _class.defaultProps = {
  borderWidth: "1px",
  borderStyle: "solid",
  borderColor: "currentcolor",
  borderRadius: "99px",
  style: {}
}, _temp);
IconBorder.displayName = "IconBorder";
exports.default = IconBorder;

/***/ }),

/***/ 144:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scatterRenderer = exports.barRenderer = exports.areaRenderer = exports.lineRenderer = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["\"", "\" is an unaggregated field: if it has more than one value at a point on the x-axis, the values will be summed."], ["\"", "\" is an unaggregated field: if it has more than one value at a point on the x-axis, the values will be summed."]),
    _templateObject2 = _taggedTemplateLiteral(["This chart type requires at least 2 columns."], ["This chart type requires at least 2 columns."]),
    _templateObject3 = _taggedTemplateLiteral(["This chart type doesn't support more than ", " series of data."], ["This chart type doesn't support more than ", " series of data."]),
    _templateObject4 = _taggedTemplateLiteral(["Goal"], ["Goal"]);

exports.default = lineAreaBar;

var _crossfilter = __webpack_require__(210);

var _crossfilter2 = _interopRequireDefault(_crossfilter);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _dc = __webpack_require__(123);

var _dc2 = _interopRequireDefault(_dc);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _c3po = __webpack_require__(2);

var _utils = __webpack_require__(21);

var _timeseries = __webpack_require__(145);

var _numeric = __webpack_require__(131);

var _apply_axis = __webpack_require__(262);

var _apply_tooltips = __webpack_require__(478);

var _fill_data = __webpack_require__(480);

var _fill_data2 = _interopRequireDefault(_fill_data);

var _renderer_utils = __webpack_require__(110);

var _LineAreaBarPostRender = __webpack_require__(263);

var _LineAreaBarPostRender2 = _interopRequireDefault(_LineAreaBarPostRender);

var _formatting = __webpack_require__(8);

var _Card = __webpack_require__(37);

var _actions = __webpack_require__(61);

var _addons = __webpack_require__(481);

var _brush = __webpack_require__(482);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); } /*  weak */

var BAR_PADDING_RATIO = 0.2;
var DEFAULT_INTERPOLATION = "linear";

var UNAGGREGATED_DATA_WARNING = function UNAGGREGATED_DATA_WARNING(col) {
  return (0, _c3po.t)(_templateObject, (0, _utils.getFriendlyName)(col));
};

var enableBrush = function enableBrush(series, onChangeCardAndRun) {
  return !!(onChangeCardAndRun && !(0, _renderer_utils.isMultiCardSeries)(series) && (0, _Card.isStructured)(series[0].card) && !(0, _renderer_utils.isRemappedToString)(series));
};

/************************************************************ SETUP ************************************************************/

function checkSeriesIsValid(_ref) {
  var series = _ref.series,
      maxSeries = _ref.maxSeries;

  if ((0, _renderer_utils.getFirstNonEmptySeries)(series).data.cols.length < 2) {
    throw new Error((0, _c3po.t)(_templateObject2));
  }

  if (series.length > maxSeries) {
    throw new Error((0, _c3po.t)(_templateObject3, maxSeries));
  }
}

function getDatas(_ref2, warn) {
  var settings = _ref2.settings,
      series = _ref2.series;

  return series.map(function (s) {
    return s.data.rows.map(function (row) {
      var newRow = [
      // don't parse as timestamp if we're going to display as a quantitative scale, e.x. years and Unix timestamps
      (0, _renderer_utils.isDimensionTimeseries)(series) && !(0, _renderer_utils.isQuantitative)(settings) ? (0, _renderer_utils.HACK_parseTimestamp)(row[0], s.data.cols[0].unit, warn) : (0, _renderer_utils.isDimensionNumeric)(series) ? row[0] : String(row[0])].concat(_toConsumableArray(row.slice(1)));
      // $FlowFixMe: _origin not typed
      newRow._origin = row._origin;
      return newRow;
    });
  });
}

function getXInterval(_ref3, xValues) {
  var settings = _ref3.settings,
      series = _ref3.series;

  if ((0, _renderer_utils.isTimeseries)(settings)) {
    // compute the interval
    var unit = (0, _timeseries.minTimeseriesUnit)(series.map(function (s) {
      return s.data.cols[0].unit;
    }));
    return (0, _timeseries.computeTimeseriesDataInverval)(xValues, unit);
  } else if ((0, _renderer_utils.isQuantitative)(settings) || (0, _renderer_utils.isHistogram)(settings)) {
    // Get the bin width from binning_info, if available
    // TODO: multiseries?
    var binningInfo = (0, _renderer_utils.getFirstNonEmptySeries)(series).data.cols[0].binning_info;
    if (binningInfo) return binningInfo.bin_width;

    // Otherwise try to infer from the X values
    return (0, _numeric.computeNumericDataInverval)(xValues);
  }
}

function getXAxisProps(props, datas) {
  var xValues = (0, _utils.getXValues)(datas, props.chartType);

  return {
    xValues: xValues,
    xDomain: _d3.default.extent(xValues),
    xInterval: getXInterval(props, xValues)
  };
}

///------------------------------------------------------------ DIMENSIONS & GROUPS ------------------------------------------------------------///

function getDimensionsAndGroupsForScatterChart(datas) {
  var dataset = (0, _crossfilter2.default)();
  datas.map(function (data) {
    return dataset.add(data);
  });

  var dimension = dataset.dimension(function (row) {
    return row;
  });
  var groups = datas.map(function (data) {
    var dim = (0, _crossfilter2.default)(data).dimension(function (row) {
      return row;
    });
    return [dim.group().reduceSum(function (d) {
      return d[2] || 1;
    })];
  });

  return { dimension: dimension, groups: groups };
}

/// Add '% ' in from of the names of the appropriate series. E.g. 'Sum' becomes '% Sum'
function addPercentSignsToDisplayNames(series) {
  return series.map(function (s) {
    return (0, _icepick.updateIn)(s, ["data", "cols", 1], function (col) {
      return _extends({}, col, {
        display_name: "% " + (0, _utils.getFriendlyName)(col)
      });
    });
  });
}

function getDimensionsAndGroupsAndUpdateSeriesDisplayNamesForStackedChart(props, datas, warn) {
  var dataset = (0, _crossfilter2.default)();

  var normalized = (0, _renderer_utils.isNormalized)(props.settings, datas);
  // get the sum of the metric for each dimension value in order to scale
  var scaleFactors = {};
  if (normalized) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = datas[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var data = _step.value;
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _step2$value = _slicedToArray(_step2.value, 2),
                d = _step2$value[0],
                m = _step2$value[1];

            scaleFactors[d] = (scaleFactors[d] || 0) + m;
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    props.series = addPercentSignsToDisplayNames(props.series);
  }

  datas.map(function (data, i) {
    return dataset.add(data.map(function (d) {
      var _ref4;

      return _ref4 = {}, _defineProperty(_ref4, 0, d[0]), _defineProperty(_ref4, i + 1, normalized ? d[1] / scaleFactors[d[0]] : d[1]), _ref4;
    }));
  });

  var dimension = dataset.dimension(function (d) {
    return d[0];
  });
  var groups = [datas.map(function (data, seriesIndex) {
    return (0, _renderer_utils.reduceGroup)(dimension.group(), seriesIndex + 1, function () {
      return warn(UNAGGREGATED_DATA_WARNING(props.series[seriesIndex].data.cols[0]));
    });
  })];

  return { dimension: dimension, groups: groups };
}

function getDimensionsAndGroupsForOther(_ref5, datas, warn) {
  var series = _ref5.series;

  var dataset = (0, _crossfilter2.default)();
  datas.map(function (data) {
    return dataset.add(data);
  });

  var dimension = dataset.dimension(function (d) {
    return d[0];
  });
  var groups = datas.map(function (data, seriesIndex) {
    // If the value is empty, pass a dummy array to crossfilter
    data = data.length > 0 ? data : [[null, null]];

    var dim = (0, _crossfilter2.default)(data).dimension(function (d) {
      return d[0];
    });

    return data[0].slice(1).map(function (_, metricIndex) {
      return (0, _renderer_utils.reduceGroup)(dim.group(), metricIndex + 1, function () {
        return warn(UNAGGREGATED_DATA_WARNING(series[seriesIndex].data.cols[0]));
      });
    });
  });

  return { dimension: dimension, groups: groups };
}

/// Return an object containing the `dimension` and `groups` for the chart(s).
/// For normalized stacked charts, this also updates the dispaly names to add a percent in front of the name (e.g. 'Sum' becomes '% Sum')
function getDimensionsAndGroupsAndUpdateSeriesDisplayNames(props, datas, warn) {
  var settings = props.settings,
      chartType = props.chartType;


  return chartType === "scatter" ? getDimensionsAndGroupsForScatterChart(datas) : (0, _renderer_utils.isStacked)(settings, datas) ? getDimensionsAndGroupsAndUpdateSeriesDisplayNamesForStackedChart(props, datas, warn) : getDimensionsAndGroupsForOther(props, datas, warn);
}

///------------------------------------------------------------ Y AXIS PROPS ------------------------------------------------------------///

function getYAxisSplit(_ref6, datas, yExtents) {
  var settings = _ref6.settings,
      chartType = _ref6.chartType,
      isScalarSeries = _ref6.isScalarSeries,
      series = _ref6.series;

  // don't auto-split if the metric columns are all identical, i.e. it's a breakout multiseries
  var hasDifferentYAxisColumns = _underscore2.default.uniq(series.map(function (s) {
    return s.data.cols[1];
  })).length > 1;
  if (!isScalarSeries && chartType !== "scatter" && !(0, _renderer_utils.isStacked)(settings, datas) && hasDifferentYAxisColumns && settings["graph.y_axis.auto_split"] !== false) {
    return (0, _utils.computeSplit)(yExtents);
  }
  return [series.map(function (s, i) {
    return i;
  })];
}

function getYAxisSplitLeftAndRight(series, yAxisSplit, yExtents) {
  return yAxisSplit.map(function (indexes) {
    var _ref7;

    return {
      series: indexes.map(function (index) {
        return series[index];
      }),
      extent: _d3.default.extent((_ref7 = []).concat.apply(_ref7, _toConsumableArray(indexes.map(function (index) {
        return yExtents[index];
      }))))
    };
  });
}

function getIsSplitYAxis(left, right) {
  return right && right.series.length && left && left.series.length > 0;
}

function getYAxisProps(props, groups, datas) {
  var _ref8;

  var yExtents = groups.map(function (group) {
    return _d3.default.extent(group[0].all(), function (d) {
      return d.value;
    });
  });
  var yAxisSplit = getYAxisSplit(props, datas, yExtents);

  var _getYAxisSplitLeftAnd = getYAxisSplitLeftAndRight(props.series, yAxisSplit, yExtents),
      _getYAxisSplitLeftAnd2 = _slicedToArray(_getYAxisSplitLeftAnd, 2),
      yLeftSplit = _getYAxisSplitLeftAnd2[0],
      yRightSplit = _getYAxisSplitLeftAnd2[1];

  return {
    yExtents: yExtents,
    yAxisSplit: yAxisSplit,
    yExtent: _d3.default.extent((_ref8 = []).concat.apply(_ref8, _toConsumableArray(yExtents))),
    yLeftSplit: yLeftSplit,
    yRightSplit: yRightSplit,
    isSplit: getIsSplitYAxis(yLeftSplit, yRightSplit)
  };
}

/// make the `onBrushChange()` and `onBrushEnd()` functions we'll use later, as well as an `isBrushing()` function to check
/// current status.
function makeBrushChangeFunctions(_ref9) {
  var series = _ref9.series,
      onChangeCardAndRun = _ref9.onChangeCardAndRun;

  var _isBrushing = false;

  var isBrushing = function isBrushing() {
    return _isBrushing;
  };

  function onBrushChange() {
    _isBrushing = true;
  }

  function onBrushEnd(range) {
    _isBrushing = false;
    if (range) {
      var column = series[0].data.cols[0];
      var card = series[0].card;

      var _range = _slicedToArray(range, 2),
          start = _range[0],
          end = _range[1];

      if ((0, _renderer_utils.isDimensionTimeseries)(series)) {
        onChangeCardAndRun({
          nextCard: (0, _actions.updateDateTimeFilter)(card, column, start, end),
          previousCard: card
        });
      } else {
        onChangeCardAndRun({
          nextCard: (0, _actions.updateNumericFilter)(card, column, start, end),
          previousCard: card
        });
      }
    }
  }

  return { isBrushing: isBrushing, onBrushChange: onBrushChange, onBrushEnd: onBrushEnd };
}

/************************************************************ INDIVIDUAL CHART SETUP ************************************************************/

function getDcjsChart(cardType, parent) {
  switch (cardType) {
    case "line":
      return (0, _addons.lineAddons)(_dc2.default.lineChart(parent));
    case "area":
      return (0, _addons.lineAddons)(_dc2.default.lineChart(parent));
    case "bar":
      return _dc2.default.barChart(parent);
    case "scatter":
      return _dc2.default.bubbleChart(parent);
    default:
      return _dc2.default.barChart(parent);
  }
}

function applyChartLineBarSettings(chart, settings, chartType) {
  // LINE/AREA:
  // for chart types that have an 'interpolate' option (line/area charts), enable based on settings
  if (chart.interpolate) chart.interpolate(settings["line.interpolate"] || DEFAULT_INTERPOLATION);

  // AREA:
  if (chart.renderArea) chart.renderArea(chartType === "area");

  // BAR:
  if (chart.barPadding) chart.barPadding(BAR_PADDING_RATIO).centerBar(settings["graph.x_axis.scale"] !== "ordinal");
}

// TODO - give this a good name when I figure out what it does
function doScatterChartStuff(chart, datas, index, _ref10) {
  var yExtent = _ref10.yExtent,
      yExtents = _ref10.yExtents;

  chart.keyAccessor(function (d) {
    return d.key[0];
  }).valueAccessor(function (d) {
    return d.key[1];
  });

  if (chart.radiusValueAccessor) {
    var isBubble = datas[index][0].length > 2;
    if (isBubble) {
      var BUBBLE_SCALE_FACTOR_MAX = 64;
      chart.radiusValueAccessor(function (d) {
        return d.value;
      }).r(_d3.default.scale.sqrt().domain([0, yExtent[1] * BUBBLE_SCALE_FACTOR_MAX]).range([0, 1]));
    } else {
      chart.radiusValueAccessor(function (d) {
        return 1;
      });
      chart.MIN_RADIUS = 3;
    }
    chart.minRadiusWithLabel(Infinity);
  }
}

/// set the colors for a CHART based on the number of series and type of chart
/// see https://dc-js.github.io/dc.js/docs/html/dc.colorMixin.html
function setChartColor(_ref11, chart, groups, index) {
  var settings = _ref11.settings,
      chartType = _ref11.chartType;

  var group = groups[index];
  var colors = settings["graph.colors"];

  // multiple series
  if (groups.length > 1 || chartType === "scatter") {
    // multiple stacks
    if (group.length > 1) {
      // compute shades of the assigned color
      chart.ordinalColors((0, _utils.colorShades)(colors[index % colors.length], group.length));
    } else {
      chart.colors(colors[index % colors.length]);
    }
  } else {
    chart.ordinalColors(colors);
  }
}

/// Return a sequence of little charts for each of the groups.
function getCharts(props, yAxisProps, parent, datas, groups, dimension, _ref12) {
  var onBrushChange = _ref12.onBrushChange,
      onBrushEnd = _ref12.onBrushEnd;
  var settings = props.settings,
      chartType = props.chartType,
      series = props.series,
      onChangeCardAndRun = props.onChangeCardAndRun;
  var yAxisSplit = yAxisProps.yAxisSplit;


  return groups.map(function (group, index) {
    var chart = getDcjsChart(chartType, parent);

    if (enableBrush(series, onChangeCardAndRun)) (0, _brush.initBrush)(parent, chart, onBrushChange, onBrushEnd);

    // disable clicks
    chart.onClick = function () {};

    chart.dimension(dimension).group(group[0]).transitionDuration(0).useRightYAxis(yAxisSplit.length > 1 && yAxisSplit[1].includes(index));

    if (chartType === "scatter") doScatterChartStuff(chart, datas, index, yAxisProps);

    if (chart.defined) {
      chart.defined(settings["line.missing"] === "none" ? function (d) {
        return d.y != null;
      } : function (d) {
        return true;
      });
    }

    setChartColor(props, chart, groups, index);

    for (var i = 1; i < group.length; i++) {
      chart.stack(group[i]);
    }

    applyChartLineBarSettings(chart, settings, chartType);

    return chart;
  });
}

/************************************************************ OTHER SETUP ************************************************************/

/// Add a `goalChart` to the end of `charts`, and return an appropriate `onGoalHover` function as needed.
function addGoalChartAndGetOnGoalHover(_ref13, xDomain, parent, charts) {
  var settings = _ref13.settings,
      onHoverChange = _ref13.onHoverChange;

  if (!settings["graph.show_goal"]) return function () {};

  var goalValue = settings["graph.goal_value"];
  var goalData = [[xDomain[0], goalValue], [xDomain[1], goalValue]];
  var goalDimension = (0, _crossfilter2.default)(goalData).dimension(function (d) {
    return d[0];
  });

  // Take the last point rather than summing in case xDomain[0] === xDomain[1], e.x. when the chart
  // has just a single row / datapoint
  var goalGroup = goalDimension.group().reduce(function (p, d) {
    return d[1];
  }, function (p, d) {
    return p;
  }, function () {
    return 0;
  });
  var goalIndex = charts.length;

  var goalChart = _dc2.default.lineChart(parent).dimension(goalDimension).group(goalGroup).on("renderlet", function (chart) {
    // remove "sub" class so the goal is not used in voronoi computation
    chart.select(".sub._" + goalIndex).classed("sub", false).classed("goal", true);
  });
  charts.push(goalChart);

  return function (element) {
    onHoverChange(element && {
      element: element,
      data: [{ key: (0, _c3po.t)(_templateObject4), value: goalValue }]
    });
  };
}

function applyXAxisSettings(parent, series, xAxisProps) {
  if ((0, _renderer_utils.isTimeseries)(parent.settings)) (0, _apply_axis.applyChartTimeseriesXAxis)(parent, series, xAxisProps);else if ((0, _renderer_utils.isQuantitative)(parent.settings)) (0, _apply_axis.applyChartQuantitativeXAxis)(parent, series, xAxisProps);else (0, _apply_axis.applyChartOrdinalXAxis)(parent, series, xAxisProps);
}

function applyYAxisSettings(parent, _ref14) {
  var yLeftSplit = _ref14.yLeftSplit,
      yRightSplit = _ref14.yRightSplit;

  if (yLeftSplit && yLeftSplit.series.length > 0) (0, _apply_axis.applyChartYAxis)(parent, yLeftSplit.series, yLeftSplit.extent, "left");
  if (yRightSplit && yRightSplit.series.length > 0) (0, _apply_axis.applyChartYAxis)(parent, yRightSplit.series, yRightSplit.extent, "right");
}

// TODO - better name
function doGroupedBarStuff(parent) {
  parent.on("renderlet.grouped-bar", function (chart) {
    // HACK: dc.js doesn't support grouped bar charts so we need to manually resize/reposition them
    // https://github.com/dc-js/dc.js/issues/558
    var barCharts = chart.selectAll(".sub rect:first-child")[0].map(function (node) {
      return node.parentNode.parentNode.parentNode;
    });
    if (barCharts.length > 0) {
      var oldBarWidth = parseFloat(barCharts[0].querySelector("rect").getAttribute("width"));
      var newBarWidthTotal = oldBarWidth / barCharts.length;
      var seriesPadding = newBarWidthTotal < 4 ? 0 : newBarWidthTotal < 8 ? 1 : 2;
      var newBarWidth = Math.max(1, newBarWidthTotal - seriesPadding);

      chart.selectAll("g.sub rect").attr("width", newBarWidth);
      barCharts.forEach(function (barChart, index) {
        barChart.setAttribute("transform", "translate(" + (newBarWidth + seriesPadding) * index + ", 0)");
      });
    }
  });
}

// TODO - better name
function doHistogramBarStuff(parent) {
  parent.on("renderlet.histogram-bar", function (chart) {
    var barCharts = chart.selectAll(".sub rect:first-child")[0].map(function (node) {
      return node.parentNode.parentNode.parentNode;
    });
    if (!barCharts.length) return;

    // manually size bars to fill space, minus 1 pixel padding
    var bars = barCharts[0].querySelectorAll("rect");
    var barWidth = parseFloat(bars[0].getAttribute("width"));
    var newBarWidth = parseFloat(bars[1].getAttribute("x")) - parseFloat(bars[0].getAttribute("x")) - 1;
    if (newBarWidth > barWidth) {
      chart.selectAll("g.sub .bar").attr("width", newBarWidth);
    }

    // shift half of bar width so ticks line up with start of each bar
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = barCharts[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var barChart = _step3.value;

        barChart.setAttribute("transform", "translate(" + barWidth / 2 + ", 0)");
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }
  });
}

/************************************************************ PUTTING IT ALL TOGETHER ************************************************************/

function lineAreaBar(element, props) {
  var onRender = props.onRender,
      chartType = props.chartType,
      isScalarSeries = props.isScalarSeries,
      settings = props.settings;


  var warnings = {};
  var warn = function warn(id) {
    warnings[id] = (warnings[id] || 0) + 1;
  };

  checkSeriesIsValid(props);

  // force histogram to be ordinal axis with zero-filled missing points
  settings["graph.x_axis._scale_original"] = settings["graph.x_axis.scale"];
  if ((0, _renderer_utils.isHistogram)(settings)) {
    settings["line.missing"] = "zero";
    settings["graph.x_axis.scale"] = "ordinal";
  }

  var datas = getDatas(props, warn);
  var xAxisProps = getXAxisProps(props, datas);

  datas = (0, _fill_data2.default)(props, xAxisProps, datas);
  xAxisProps = getXAxisProps(props, datas);

  if (isScalarSeries) xAxisProps.xValues = datas.map(function (data) {
    return data[0][0];
  }); // TODO - what is this for?

  var _getDimensionsAndGrou = getDimensionsAndGroupsAndUpdateSeriesDisplayNames(props, datas, warn),
      dimension = _getDimensionsAndGrou.dimension,
      groups = _getDimensionsAndGrou.groups;

  var yAxisProps = getYAxisProps(props, groups, datas);

  // Don't apply to linear or timeseries X-axis since the points are always plotted in order
  if (!(0, _renderer_utils.isTimeseries)(settings) && !(0, _renderer_utils.isQuantitative)(settings)) (0, _renderer_utils.forceSortedGroupsOfGroups)(groups, (0, _renderer_utils.makeIndexMap)(xAxisProps.xValues));

  var parent = _dc2.default.compositeChart(element);
  (0, _renderer_utils.initChart)(parent, element);

  parent.settings = settings;

  var brushChangeFunctions = makeBrushChangeFunctions(props);

  var charts = getCharts(props, yAxisProps, parent, datas, groups, dimension, brushChangeFunctions);
  var onGoalHover = addGoalChartAndGetOnGoalHover(props, xAxisProps.xDomain, parent, charts);

  parent.compose(charts);

  if (groups.length > 1 && !props.isScalarSeries) {
    doGroupedBarStuff(parent);
  } else if ((0, _renderer_utils.isHistogramBar)(props)) {
    doHistogramBarStuff(parent);
  }

  // HACK: compositeChart + ordinal X axis shenanigans. See https://github.com/dc-js/dc.js/issues/678 and https://github.com/dc-js/dc.js/issues/662
  parent._rangeBandPadding(chartType === "bar" ? BAR_PADDING_RATIO : 1); //

  applyXAxisSettings(parent, props.series, xAxisProps);

  // override tick format for bars. ticks are aligned with beginning of bar, so just show the start value
  if ((0, _renderer_utils.isHistogramBar)(props)) parent.xAxis().tickFormat(function (d) {
    return (0, _formatting.formatNumber)(d);
  });

  applyYAxisSettings(parent, yAxisProps);

  (0, _apply_tooltips.setupTooltips)(props, datas, parent, brushChangeFunctions);

  parent.render();

  // apply any on-rendering functions (this code lives in `LineAreaBarPostRenderer`)
  (0, _LineAreaBarPostRender2.default)(parent, onGoalHover, yAxisProps.isSplit, (0, _renderer_utils.isStacked)(parent.settings, datas));

  // only ordinal axis can display "null" values
  if ((0, _renderer_utils.isOrdinal)(parent.settings)) delete warnings[_renderer_utils.NULL_DIMENSION_WARNING];

  if (onRender) onRender({
    yAxisSplit: yAxisProps.yAxisSplit,
    warnings: Object.keys(warnings)
  });

  return parent;
}

var lineRenderer = exports.lineRenderer = function lineRenderer(element, props) {
  return lineAreaBar(element, _extends({}, props, { chartType: "line" }));
};
var areaRenderer = exports.areaRenderer = function areaRenderer(element, props) {
  return lineAreaBar(element, _extends({}, props, { chartType: "area" }));
};
var barRenderer = exports.barRenderer = function barRenderer(element, props) {
  return lineAreaBar(element, _extends({}, props, { chartType: "bar" }));
};
var scatterRenderer = exports.scatterRenderer = function scatterRenderer(element, props) {
  return lineAreaBar(element, _extends({}, props, { chartType: "scatter" }));
};

/***/ }),

/***/ 145:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dimensionIsTimeseries = dimensionIsTimeseries;
exports.minTimeseriesUnit = minTimeseriesUnit;
exports.computeTimeseriesDataInverval = computeTimeseriesDataInverval;
exports.computeTimeseriesTicksInterval = computeTimeseriesTicksInterval;

var _d = __webpack_require__(26);

var _d2 = _interopRequireDefault(_d);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _schema_metadata = __webpack_require__(10);

var _time = __webpack_require__(73);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TIMESERIES_UNITS = new Set(["minute", "hour", "day", "week", "month", "quarter", "year"]);

// investigate the response from a dataset query and determine if the dimension is a timeseries
/*  weak */

function dimensionIsTimeseries(_ref) {
  var cols = _ref.cols,
      rows = _ref.rows;
  var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  return (0, _schema_metadata.isDate)(cols[i]) && (cols[i].unit == null || TIMESERIES_UNITS.has(cols[i].unit)) || (0, _moment2.default)(rows[0] && rows[0][i], _moment2.default.ISO_8601).isValid();
}

// mostly matches
// https://github.com/mbostock/d3/wiki/Time-Scales
// https://github.com/mbostock/d3/wiki/Time-Intervals
// Use UTC methods to avoid issues with daylight savings
// NOTE: smaller modulos within an interval type must be multiples of larger ones (e.x. can't do both 2 days and 7 days i.e. week)
//
// Count and time interval for axis.ticks() (see https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Axes.md#ticks)
// is specified by rangeFn and count, e.g.
//
// xAxis.ticks(interval.rangeFn, interval.count) -> xAxis.ticks(d3.time.minutes, 15) // every 15 minutes
//
// TODO - I'm not sure what the appropriate thing to put for rangeFn for milliseconds is. This matches the previous
// behavior, which may have been wrong in the first place. See https://github.com/d3/d3/issues/1529 for a similar issue
var TIMESERIES_INTERVALS = [{ interval: "ms", count: 1, rangeFn: undefined, testFn: function testFn(d) {
    return 0;
  } }, //  (0) millisecond
{
  interval: "second",
  count: 1,
  rangeFn: _d2.default.time.seconds,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).milliseconds();
  }
}, //  (1) 1 second
{
  interval: "second",
  count: 5,
  rangeFn: _d2.default.time.seconds,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).seconds() % 5;
  }
}, //  (2) 5 seconds
{
  interval: "second",
  count: 15,
  rangeFn: _d2.default.time.seconds,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).seconds() % 15;
  }
}, //  (3) 15 seconds
{
  interval: "second",
  count: 30,
  rangeFn: _d2.default.time.seconds,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).seconds() % 30;
  }
}, //  (4) 30 seconds
{
  interval: "minute",
  count: 1,
  rangeFn: _d2.default.time.minutes,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).seconds();
  }
}, //  (5) 1 minute
{
  interval: "minute",
  count: 5,
  rangeFn: _d2.default.time.minutes,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).minutes() % 5;
  }
}, //  (6) 5 minutes
{
  interval: "minute",
  count: 15,
  rangeFn: _d2.default.time.minutes,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).minutes() % 15;
  }
}, //  (7) 15 minutes
{
  interval: "minute",
  count: 30,
  rangeFn: _d2.default.time.minutes,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).minutes() % 30;
  }
}, //  (8) 30 minutes
{
  interval: "hour",
  count: 1,
  rangeFn: _d2.default.time.hours,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).minutes();
  }
}, //  (9) 1 hour
{
  interval: "hour",
  count: 3,
  rangeFn: _d2.default.time.hours,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).hours() % 3;
  }
}, // (10) 3 hours
{
  interval: "hour",
  count: 6,
  rangeFn: _d2.default.time.hours,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).hours() % 6;
  }
}, // (11) 6 hours
{
  interval: "hour",
  count: 12,
  rangeFn: _d2.default.time.hours,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).hours() % 12;
  }
}, // (12) 12 hours
{
  interval: "day",
  count: 1,
  rangeFn: _d2.default.time.days,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).hours();
  }
}, // (13) 1 day
{
  interval: "week",
  count: 1,
  rangeFn: _d2.default.time.weeks,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).date() % 7;
  }
}, // (14) 7 days / 1 week
{
  interval: "month",
  count: 1,
  rangeFn: _d2.default.time.months,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).date();
  }
}, // (15) 1 months
{
  interval: "month",
  count: 3,
  rangeFn: _d2.default.time.months,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).month() % 3;
  }
}, // (16) 3 months / 1 quarter
{
  interval: "year",
  count: 1,
  rangeFn: _d2.default.time.years,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).month();
  }
}, // (17) 1 year
{
  interval: "year",
  count: 5,
  rangeFn: _d2.default.time.years,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).year() % 5;
  }
}, // (18) 5 year
{
  interval: "year",
  count: 10,
  rangeFn: _d2.default.time.years,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).year() % 10;
  }
}, // (19) 10 year
{
  interval: "year",
  count: 50,
  rangeFn: _d2.default.time.years,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).year() % 50;
  }
}, // (20) 50 year
{
  interval: "year",
  count: 100,
  rangeFn: _d2.default.time.years,
  testFn: function testFn(d) {
    return (0, _time.parseTimestamp)(d).year() % 100;
  }
}];

// mapping from Metabase "unit" to d3 intervals above
var INTERVAL_INDEX_BY_UNIT = {
  minute: 1,
  hour: 9,
  day: 13,
  week: 14,
  month: 15,
  quarter: 16,
  year: 17
};

function minTimeseriesUnit(units) {
  return units.reduce(function (minUnit, unit) {
    return unit != null && (minUnit == null || INTERVAL_INDEX_BY_UNIT[unit] < INTERVAL_INDEX_BY_UNIT[minUnit]) ? unit : minUnit;
  }, null);
}

function computeTimeseriesDataInvervalIndex(xValues, unit) {
  if (unit && INTERVAL_INDEX_BY_UNIT[unit] != undefined) {
    return INTERVAL_INDEX_BY_UNIT[unit];
  }
  // Keep track of the value seen for each level of granularity,
  // if any don't match then we know the data is *at least* that granular.
  var values = [];
  var index = TIMESERIES_INTERVALS.length;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = xValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var xValue = _step.value;

      // Only need to check more granular than the current interval
      for (var i = 0; i < TIMESERIES_INTERVALS.length && i < index; i++) {
        var interval = TIMESERIES_INTERVALS[i];
        var value = interval.testFn(xValue);
        if (values[i] === undefined) {
          values[i] = value;
        } else if (values[i] !== value) {
          index = i;
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return index - 1;
}

function computeTimeseriesDataInverval(xValues, unit) {
  return TIMESERIES_INTERVALS[computeTimeseriesDataInvervalIndex(xValues, unit)];
}

// ------------------------- Computing the TIMESERIES_INTERVALS entry to use for a chart ------------------------- //

/// The number of milliseconds between each tick for an entry in TIMESERIES_INTERVALS.
/// For example a "5 seconds" interval would have a tick "distance" of 5000 milliseconds.
function intervalTickDistanceMilliseconds(interval) {
  // add COUNT nuumber of INTERVALS to the UNIX timestamp 0. e.g. add '5 hours' to 0. Then get the new timestamp
  // (in milliseconds). Since we added to 0 this will be the interval between each tick
  return (0, _moment2.default)(0).add(interval.count, interval.interval).valueOf();
}

/// Return the number of ticks we can expect to see over a time range using the TIMESERIES_INTERVALS entry interval.
/// for example a "5 seconds" interval over a time range of a minute should have an expected tick count of 20.
function expectedTickCount(interval, timeRangeMilliseconds) {
  return Math.ceil(timeRangeMilliseconds / intervalTickDistanceMilliseconds(interval));
}

/// Get the appropriate tick interval option option from the TIMESERIES_INTERVALS above based on the xAxis bucketing
/// and the max number of ticks we want to show (itself calculated from chart width).
function timeseriesTicksInterval(xInterval, timeRangeMilliseconds, maxTickCount) {
  // first we want to find out where in TIMESERIES_INTERVALS we should start looking for a good match. Find the
  // interval with a matching interval and count (e.g. `hour` and `1`) and we'll start there.
  var initialIndex = _underscore2.default.findIndex(TIMESERIES_INTERVALS, function (_ref2) {
    var interval = _ref2.interval,
        count = _ref2.count;

    return interval === xInterval.interval && count === xInterval.count;
  });
  // if we weren't able to find soemthing matching then we'll start from the beginning and try everything
  if (initialIndex === -1) initialIndex = 0;

  // now starting at the TIMESERIES_INTERVALS entry in question, calculate the expected tick count for that interval
  // based on the time range we are displaying. If the expected tick count is less than or equal to the target
  // maxTickCount, we can go ahead and use this interval. Otherwise continue on to the next larger interval, for
  // example every 3 hours instead of every one hour. Continue until we find something with an interval large enough
  // to keep the total tick count under the max tick count
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = _underscore2.default.rest(TIMESERIES_INTERVALS, initialIndex)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var interval = _step2.value;

      if (expectedTickCount(interval, timeRangeMilliseconds) <= maxTickCount) return interval;
    }

    // If we still failed to find an interval that will produce less ticks than the max then fall back to the largest
    // tick interval (every 100 years)
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return TIMESERIES_INTERVALS[TIMESERIES_INTERVALS.length - 1];
}

/// return the maximum number of ticks to show for a timeseries chart of a given width. Unlike other chart types, this
/// isn't smart enough to actually estimate how much space each tick will take. Instead the estimated with is
/// hardcoded below.
/// TODO - it would be nice to rework this a bit so we
function maxTicksForChartWidth(chartWidth) {
  var MIN_PIXELS_PER_TICK = 160;
  return Math.floor(chartWidth / MIN_PIXELS_PER_TICK); // round down so we don't end up with too many ticks
}

/// return the range, in milliseconds, of the xDomain. ("Range" in this sense refers to the total "width"" of the
/// chart in millisecodns.)
function timeRangeMilliseconds(xDomain) {
  var startTime = xDomain[0]; // these are UNIX timestamps in milliseconds
  var endTime = xDomain[1];
  return endTime - startTime;
}

/// return the appropriate entry in TIMESERIES_INTERVALS for a given chart with domain, interval, and width.
/// The entry is used to calculate how often a tick should be displayed for this chart (e.g. one tick every 5 minutes)
function computeTimeseriesTicksInterval(xDomain, xInterval, chartWidth) {
  return timeseriesTicksInterval(xInterval, timeRangeMilliseconds(xDomain), maxTicksForChartWidth(chartWidth));
}

/***/ }),

/***/ 146:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

__webpack_require__(342);

__webpack_require__(496);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

__webpack_require__(744);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _actions = __webpack_require__(61);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeafletMap = function (_Component) {
  _inherits(LeafletMap, _Component);

  function LeafletMap() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LeafletMap);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LeafletMap.__proto__ || Object.getPrototypeOf(LeafletMap)).call.apply(_ref, [this].concat(args))), _this), _this.onFilter = function (e) {
      var bounds = e.layer.getBounds();

      var _this$props = _this.props,
          _this$props$series = _slicedToArray(_this$props.series, 1),
          _this$props$series$ = _this$props$series[0],
          card = _this$props$series$.card,
          cols = _this$props$series$.data.cols,
          settings = _this$props.settings,
          setCardAndRun = _this$props.setCardAndRun;

      var latitudeColumn = _underscore2.default.findWhere(cols, {
        name: settings["map.latitude_column"]
      });
      var longitudeColumn = _underscore2.default.findWhere(cols, {
        name: settings["map.longitude_column"]
      });

      setCardAndRun((0, _actions.updateLatLonFilter)(card, latitudeColumn, longitudeColumn, bounds));

      _this.props.onFiltering(false);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(LeafletMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      try {
        var element = _reactDom2.default.findDOMNode(this.refs.map);

        var map = this.map = _leaflet2.default.map(element, {
          scrollWheelZoom: false,
          minZoom: 2,
          drawControlTooltips: false,
          zoomSnap: false
        });

        var drawnItems = new _leaflet2.default.FeatureGroup();
        map.addLayer(drawnItems);
        var drawControl = this.drawControl = new _leaflet2.default.Control.Draw({
          draw: {
            rectangle: false,
            polyline: false,
            polygon: false,
            circle: false,
            marker: false
          },
          edit: {
            featureGroup: drawnItems,
            edit: false,
            remove: false
          }
        });
        map.addControl(drawControl);
        map.on("draw:created", this.onFilter);

        map.setView([0, 0], 8);

        var mapTileUrl = _settings2.default.get("map_tile_server_url");
        var mapTileAttribution = mapTileUrl.indexOf("openstreetmap.org") >= 0 ? 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors' : null;

        _leaflet2.default.tileLayer(mapTileUrl, { attribution: mapTileAttribution }).addTo(map);

        map.on("moveend", function () {
          var _map$getCenter = map.getCenter(),
              lat = _map$getCenter.lat,
              lng = _map$getCenter.lng;

          _this2.props.onMapCenterChange(lat, lng);
        });
        map.on("zoomend", function () {
          var zoom = map.getZoom();
          _this2.props.onMapZoomChange(zoom);
        });
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _props = this.props,
          bounds = _props.bounds,
          settings = _props.settings;

      if (!prevProps || prevProps.points !== this.props.points || prevProps.width !== this.props.width || prevProps.height !== this.props.height) {
        this.map.invalidateSize();

        if (settings["map.center_latitude"] != null || settings["map.center_longitude"] != null || settings["map.zoom"] != null) {
          this.map.setView([settings["map.center_latitude"], settings["map.center_longitude"]], settings["map.zoom"]);
        } else {
          // compute ideal lat and lon zoom separately and use the lesser zoom to ensure the bounds are visible
          var latZoom = this.map.getBoundsZoom(_leaflet2.default.latLngBounds([[bounds.getSouth(), 0], [bounds.getNorth(), 0]]));
          var lonZoom = this.map.getBoundsZoom(_leaflet2.default.latLngBounds([[0, bounds.getWest()], [0, bounds.getEast()]]));
          var zoom = Math.min(latZoom, lonZoom);
          // NOTE: unclear why calling `fitBounds` twice is sometimes required to get it to work
          this.map.fitBounds(bounds);
          this.map.setZoom(zoom);
          this.map.fitBounds(bounds);
        }
      }
    }
  }, {
    key: "startFilter",
    value: function startFilter() {
      this._filter = new _leaflet2.default.Draw.Rectangle(this.map, this.drawControl.options.rectangle);
      this._filter.enable();
      this.props.onFiltering(true);
    }
  }, {
    key: "stopFilter",
    value: function stopFilter() {
      this._filter && this._filter.disable();
      this.props.onFiltering(false);
    }
  }, {
    key: "render",
    value: function render() {
      var className = this.props.className;

      return _react2.default.createElement("div", { className: className, ref: "map" });
    }
  }, {
    key: "_getLatLonIndexes",
    value: function _getLatLonIndexes() {
      var _props2 = this.props,
          settings = _props2.settings,
          _props2$series = _slicedToArray(_props2.series, 1),
          cols = _props2$series[0].data.cols;

      return {
        latitudeIndex: _underscore2.default.findIndex(cols, function (col) {
          return col.name === settings["map.latitude_column"];
        }),
        longitudeIndex: _underscore2.default.findIndex(cols, function (col) {
          return col.name === settings["map.longitude_column"];
        })
      };
    }
  }, {
    key: "_getLatLonColumns",
    value: function _getLatLonColumns() {
      var _props$series = _slicedToArray(this.props.series, 1),
          cols = _props$series[0].data.cols;

      var _getLatLonIndexes2 = this._getLatLonIndexes(),
          latitudeIndex = _getLatLonIndexes2.latitudeIndex,
          longitudeIndex = _getLatLonIndexes2.longitudeIndex;

      return {
        latitudeColumn: cols[latitudeIndex],
        longitudeColumn: cols[longitudeIndex]
      };
    }
  }, {
    key: "_getMetricColumn",
    value: function _getMetricColumn() {
      var _props3 = this.props,
          settings = _props3.settings,
          _props3$series = _slicedToArray(_props3.series, 1),
          cols = _props3$series[0].data.cols;

      return _underscore2.default.findWhere(cols, { name: settings["map.metric_column"] });
    }
  }]);

  return LeafletMap;
}(_react.Component);

LeafletMap.displayName = "LeafletMap";
exports.default = LeafletMap;

/***/ }),

/***/ 147:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeGetParameterMappingOptions = exports.getParameters = exports.getMappingsByParameter = exports.getParameterTarget = exports.getIsEditingParameter = exports.getEditingParameter = exports.getEditingParameterId = exports.getCardList = exports.getIsDirty = exports.getDashboardComplete = exports.getDashboard = exports.getParameterValues = exports.getRevisions = exports.getCardIdList = exports.getSlowCards = exports.getCardData = exports.getDashcards = exports.getDashboards = exports.getCards = exports.getIsEditing = exports.getDashboardId = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*  weak */

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _reselect = __webpack_require__(87);

var _metadata = __webpack_require__(30);

var _Dashboard = __webpack_require__(199);

var Dashboard = _interopRequireWildcard(_Dashboard);

var _Parameter = __webpack_require__(85);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var getDashboardId = exports.getDashboardId = function getDashboardId(state) {
  return state.dashboard.dashboardId;
};
var getIsEditing = exports.getIsEditing = function getIsEditing(state) {
  return state.dashboard.isEditing;
};
var getCards = exports.getCards = function getCards(state) {
  return state.dashboard.cards;
};
var getDashboards = exports.getDashboards = function getDashboards(state) {
  return state.dashboard.dashboards;
};
var getDashcards = exports.getDashcards = function getDashcards(state) {
  return state.dashboard.dashcards;
};
var getCardData = exports.getCardData = function getCardData(state) {
  return state.dashboard.dashcardData;
};
var getSlowCards = exports.getSlowCards = function getSlowCards(state) {
  return state.dashboard.slowCards;
};
var getCardIdList = exports.getCardIdList = function getCardIdList(state) {
  return state.dashboard.cardList;
};
var getRevisions = exports.getRevisions = function getRevisions(state) {
  return state.dashboard.revisions;
};
var getParameterValues = exports.getParameterValues = function getParameterValues(state) {
  return state.dashboard.parameterValues;
};

var getDashboard = exports.getDashboard = (0, _reselect.createSelector)([getDashboardId, getDashboards], function (dashboardId, dashboards) {
  return dashboards[dashboardId];
});

var getDashboardComplete = exports.getDashboardComplete = (0, _reselect.createSelector)([getDashboard, getDashcards], function (dashboard, dashcards) {
  return dashboard && _extends({}, dashboard, {
    ordered_cards: dashboard.ordered_cards.map(function (id) {
      return dashcards[id];
    }).filter(function (dc) {
      return !dc.isRemoved;
    })
  });
});

var getIsDirty = exports.getIsDirty = (0, _reselect.createSelector)([getDashboard, getDashcards], function (dashboard, dashcards) {
  return !!(dashboard && (dashboard.isDirty || _underscore2.default.some(dashboard.ordered_cards, function (id) {
    return !(dashcards[id].isAdded && dashcards[id].isRemoved) && (dashcards[id].isDirty || dashcards[id].isAdded || dashcards[id].isRemoved);
  })));
});

var getCardList = exports.getCardList = (0, _reselect.createSelector)([getCardIdList, getCards], function (cardIdList, cards) {
  return cardIdList && cardIdList.map(function (id) {
    return cards[id];
  });
});

var getEditingParameterId = exports.getEditingParameterId = function getEditingParameterId(state) {
  return state.dashboard.editingParameterId;
};

var getEditingParameter = exports.getEditingParameter = (0, _reselect.createSelector)([getDashboard, getEditingParameterId], function (dashboard, editingParameterId) {
  return editingParameterId != null ? _underscore2.default.findWhere(dashboard.parameters, { id: editingParameterId }) : null;
});

var getIsEditingParameter = exports.getIsEditingParameter = function getIsEditingParameter(state) {
  return state.dashboard.editingParameterId != null;
};

var getCard = function getCard(state, props) {
  return props.card;
};
var getDashCard = function getDashCard(state, props) {
  return props.dashcard;
};

var getParameterTarget = exports.getParameterTarget = (0, _reselect.createSelector)([getEditingParameter, getCard, getDashCard], function (parameter, card, dashcard) {
  var mapping = _underscore2.default.findWhere(dashcard.parameter_mappings, {
    card_id: card.id,
    parameter_id: parameter.id
  });
  return mapping && mapping.target;
});

var getMappingsByParameter = exports.getMappingsByParameter = (0, _reselect.createSelector)([_metadata.getMetadata, getDashboardComplete], function (metadata, dashboard) {
  if (!dashboard) {
    return {};
  }

  var mappingsByParameter = {};
  var mappings = [];
  var countsByParameter = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = dashboard.ordered_cards[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var dashcard = _step.value;

      var cards = [dashcard.card].concat(dashcard.series);
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = (dashcard.parameter_mappings || [])[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var mapping = _step4.value;

          var card = _underscore2.default.findWhere(cards, { id: mapping.card_id });
          var fieldId = card && (0, _Parameter.getParameterTargetFieldId)(mapping.target, card.dataset_query);
          var field = metadata.fields[fieldId];
          var _values = field && field.fieldValues() || [];
          if (_values.length) {
            countsByParameter[mapping.parameter_id] = countsByParameter[mapping.parameter_id] || {};
          }
          var _iteratorNormalCompletion5 = true;
          var _didIteratorError5 = false;
          var _iteratorError5 = undefined;

          try {
            for (var _iterator5 = _values[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
              var value = _step5.value;

              countsByParameter[mapping.parameter_id][value] = (countsByParameter[mapping.parameter_id][value] || 0) + 1;
            }
          } catch (err) {
            _didIteratorError5 = true;
            _iteratorError5 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion5 && _iterator5.return) {
                _iterator5.return();
              }
            } finally {
              if (_didIteratorError5) {
                throw _iteratorError5;
              }
            }
          }

          var augmentedMapping = _extends({}, mapping, {
            parameter_id: mapping.parameter_id,
            dashcard_id: dashcard.id,
            card_id: mapping.card_id,
            field_id: fieldId,
            values: _values
          });
          mappingsByParameter = (0, _icepick.setIn)(mappingsByParameter, [mapping.parameter_id, dashcard.id, mapping.card_id], augmentedMapping);
          mappings.push(augmentedMapping);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var mappingsWithValuesByParameter = {};
  // update max values overlap for each mapping
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    var _loop = function _loop() {
      var mapping = _step2.value;

      if (mapping.values && mapping.values.length > 0) {
        var _overlapMax = Math.max.apply(Math, _toConsumableArray(mapping.values.map(function (value) {
          return countsByParameter[mapping.parameter_id][value];
        })));
        mappingsByParameter = (0, _icepick.setIn)(mappingsByParameter, [mapping.parameter_id, mapping.dashcard_id, mapping.card_id, "overlapMax"], _overlapMax);
        mappingsWithValuesByParameter[mapping.parameter_id] = (mappingsWithValuesByParameter[mapping.parameter_id] || 0) + 1;
      }
    };

    for (var _iterator2 = mappings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      _loop();
    }
    // update count of mappings with values
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = mappings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var _mapping = _step3.value;

      mappingsByParameter = (0, _icepick.setIn)(mappingsByParameter, [_mapping.parameter_id, _mapping.dashcard_id, _mapping.card_id, "mappingsWithValues"], mappingsWithValuesByParameter[_mapping.parameter_id] || 0);
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  return mappingsByParameter;
});

/** Returns the dashboard's parameters objects, with field_id added, if appropriate */
var getParameters = exports.getParameters = (0, _reselect.createSelector)([_metadata.getMetadata, getDashboard, getMappingsByParameter], function (metadata, dashboard, mappingsByParameter) {
  return (dashboard && dashboard.parameters || []).map(function (parameter) {
    // get the unique list of field IDs these mappings reference
    var fieldIds = _underscore2.default.chain(mappingsByParameter[parameter.id]).map(_underscore2.default.values).flatten().map(function (m) {
      return m.field_id;
    }).uniq().filter(function (fieldId) {
      return fieldId != null;
    }).value();
    var fieldIdsWithFKResolved = _underscore2.default.chain(fieldIds).map(function (id) {
      return metadata.fields[id];
    }).filter(function (f) {
      return f;
    }).map(function (f) {
      return (f.target || f).id;
    }).uniq().value();
    return _extends({}, parameter, {
      field_ids: fieldIds,
      // if there's a single uniqe field (accounting for FKs) then
      // include it as the one true field_id
      field_id: fieldIdsWithFKResolved.length === 1 ? fieldIdsWithFKResolved[0] : null
    });
  });
});

var makeGetParameterMappingOptions = exports.makeGetParameterMappingOptions = function makeGetParameterMappingOptions() {
  var getParameterMappingOptions = (0, _reselect.createSelector)([_metadata.getMetadata, getEditingParameter, getCard], function (metadata, parameter, card) {
    return Dashboard.getParameterMappingOptions(metadata, parameter, card);
  });
  return getParameterMappingOptions;
};

/***/ }),

/***/ 149:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onReplaceAllVisualizationSettings = exports.onUpdateVisualizationSettings = exports.onRestoreOriginalQuery = exports.reloadCardFn = exports.onSetCardAttribute = exports.setDisplayFn = exports.setSourceTableFn = exports.setDatabaseFn = exports.setQueryModeFn = exports.onCancelEditing = exports.onBeginEditing = exports.toggleDataReferenceFn = exports.viewPreviousObjectDetail = exports.VIEW_PREVIOUS_OBJECT_DETAIL = exports.viewNextObjectDetail = exports.VIEW_NEXT_OBJECT_DETAIL = exports.archiveQuestion = exports.ARCHIVE_QUESTION = exports.loadObjectDetailFKReferences = exports.LOAD_OBJECT_DETAIL_FK_REFERENCES = exports.followForeignKey = undefined;
exports.FOLLOW_FOREIGN_KEY = exports.cancelQuery = exports.CANCEL_QUERY = exports.queryErrored = exports.QUERY_ERRORED = exports.queryCompleted = exports.QUERY_COMPLETED = exports.getDisplayTypeForCard = exports.runQuestionQuery = exports.RUN_QUERY = exports.removeQueryExpression = exports.updateQueryExpression = exports.addQueryExpression = exports.updateQueryLimit = exports.removeQueryOrderBy = exports.updateQueryOrderBy = exports.addQueryOrderBy = exports.removeQueryAggregation = exports.updateQueryAggregation = exports.addQueryAggregation = exports.removeQueryFilter = exports.REMOVE_QUERY_FILTER = exports.updateQueryFilter = exports.UPDATE_QUERY_FILTER = exports.addQueryFilter = exports.ADD_QUERY_FILTER = exports.removeQueryBreakout = exports.updateQueryBreakout = exports.addQueryBreakout = exports.setQuerySourceTable = exports.SET_QUERY_SOURCE_TABLE = exports.setQueryDatabase = exports.SET_QUERY_DATABASE = exports.setQueryMode = exports.SET_QUERY_MODE = exports.setDatasetQuery = exports.SET_DATASET_QUERY = exports.apiUpdateQuestion = exports.API_UPDATE_QUESTION = exports.apiCreateQuestion = exports.API_CREATE_QUESTION = exports.updateQuestion = exports.UPDATE_QUESTION = exports.navigateToNewCardInsideQB = exports.NAVIGATE_TO_NEW_CARD = exports.setCardAndRun = exports.SET_CARD_AND_RUN = exports.reloadCard = exports.RELOAD_CARD = exports.setParameterValue = exports.SET_PARAMETER_VALUE = exports.updateTemplateTag = exports.UPDATE_TEMPLATE_TAG = exports.replaceAllCardVisualizationSettings = exports.REPLACE_ALL_CARD_VISUALIZATION_SETTINGS = exports.updateCardVisualizationSettings = exports.UPDATE_CARD_VISUALIZATION_SETTINGS = exports.setCardVisualization = exports.SET_CARD_VISUALIZATION = exports.setCardAttribute = exports.SET_CARD_ATTRIBUTE = exports.loadDatabaseFields = exports.LOAD_DATABASE_FIELDS = exports.loadTableMetadata = exports.LOAD_TABLE_METADATA = exports.loadMetadataForCard = exports.LOAD_METADATA_FOR_CARD = exports.cancelEditing = exports.CANCEL_EDITING = exports.beginEditing = exports.BEGIN_EDITING = exports.closeQbNewbModal = exports.CLOSE_QB_NEWB_MODAL = exports.closeQbTutorial = exports.CLOSE_QB_TUTORIAL = exports.setIsShowingTemplateTagsEditor = exports.SET_IS_SHOWING_TEMPLATE_TAGS_EDITOR = exports.toggleTemplateTagsEditor = exports.TOGGLE_TEMPLATE_TAGS_EDITOR = exports.toggleDataReference = exports.TOGGLE_DATA_REFERENCE = exports.initializeQB = exports.INITIALIZE_QB = exports.resetQB = exports.RESET_QB = exports.redirectToNewQuestionFlow = exports.REDIRECT_TO_NEW_QUESTION_FLOW = exports.updateUrl = exports.UPDATE_URL = exports.updateEmbeddingParams = exports.UPDATE_EMBEDDING_PARAMS = exports.updateEnableEmbedding = exports.UPDATE_ENABLE_EMBEDDING = exports.deletePublicLink = exports.DELETE_PUBLIC_LINK = exports.createPublicLink = exports.CREATE_PUBLIC_LINK = exports.popState = exports.POP_STATE = exports.SET_CURRENT_STATE = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _alert = __webpack_require__(208);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reduxActions = __webpack_require__(101);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _redux = __webpack_require__(24);

var _reactRouterRedux = __webpack_require__(19);

var _app = __webpack_require__(107);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _card = __webpack_require__(62);

var _formatting = __webpack_require__(8);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _types = __webpack_require__(42);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _engine = __webpack_require__(211);

var _promise = __webpack_require__(201);

var _undo = __webpack_require__(103);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _Card = __webpack_require__(37);

var _selectors = __webpack_require__(215);

var _metadata = __webpack_require__(30);

var _metadata2 = __webpack_require__(16);

var _services = __webpack_require__(15);

var _url = __webpack_require__(300);

var _querystring = __webpack_require__(104);

var _querystring2 = _interopRequireDefault(_querystring);

var _utils3 = __webpack_require__(21);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _NativeQuery = __webpack_require__(133);

var _NativeQuery2 = _interopRequireDefault(_NativeQuery);

var _settings = __webpack_require__(45);

var _requests = __webpack_require__(106);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /* weak*/


var getTemplateTagCount = function getTemplateTagCount(question) {
  var query = question.query();
  return query instanceof _NativeQuery2.default ? query.templateTags().length : 0;
};

var SET_CURRENT_STATE = exports.SET_CURRENT_STATE = "metabase/qb/SET_CURRENT_STATE";
var setCurrentState = (0, _reduxActions.createAction)(SET_CURRENT_STATE);

var POP_STATE = exports.POP_STATE = "metabase/qb/POP_STATE";
var popState = exports.popState = (0, _redux.createThunkAction)(POP_STATE, function (location) {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      var card;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              card = getState().qb.card;

              if (location.state && location.state.card) {
                if (!_utils2.default.equals(card, location.state.card)) {
                  dispatch(setCardAndRun(location.state.card, false));
                  dispatch(setCurrentState(location.state));
                }
              }

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
});

var CREATE_PUBLIC_LINK = exports.CREATE_PUBLIC_LINK = "metabase/card/CREATE_PUBLIC_LINK";
var createPublicLink = exports.createPublicLink = (0, _reduxActions.createAction)(CREATE_PUBLIC_LINK, function (_ref2) {
  var id = _ref2.id;
  return _services.CardApi.createPublicLink({ id: id });
});

var DELETE_PUBLIC_LINK = exports.DELETE_PUBLIC_LINK = "metabase/card/DELETE_PUBLIC_LINK";
var deletePublicLink = exports.deletePublicLink = (0, _reduxActions.createAction)(DELETE_PUBLIC_LINK, function (_ref3) {
  var id = _ref3.id;
  return _services.CardApi.deletePublicLink({ id: id });
});

var UPDATE_ENABLE_EMBEDDING = exports.UPDATE_ENABLE_EMBEDDING = "metabase/card/UPDATE_ENABLE_EMBEDDING";
var updateEnableEmbedding = exports.updateEnableEmbedding = (0, _reduxActions.createAction)(UPDATE_ENABLE_EMBEDDING, function (_ref4, enable_embedding) {
  var id = _ref4.id;
  return _services.CardApi.update({ id: id, enable_embedding: enable_embedding });
});

var UPDATE_EMBEDDING_PARAMS = exports.UPDATE_EMBEDDING_PARAMS = "metabase/card/UPDATE_EMBEDDING_PARAMS";
var updateEmbeddingParams = exports.updateEmbeddingParams = (0, _reduxActions.createAction)(UPDATE_EMBEDDING_PARAMS, function (_ref5, embedding_params) {
  var id = _ref5.id;
  return _services.CardApi.update({ id: id, embedding_params: embedding_params });
});

// TODO Atte Keinänen 6/8/17: Should use the stored question by default instead of requiring an explicit `card` parameter
var UPDATE_URL = exports.UPDATE_URL = "metabase/qb/UPDATE_URL";
var updateUrl = exports.updateUrl = (0, _redux.createThunkAction)(UPDATE_URL, function (card, _ref6) {
  var _ref6$dirty = _ref6.dirty,
      dirty = _ref6$dirty === undefined ? false : _ref6$dirty,
      _ref6$replaceState = _ref6.replaceState,
      replaceState = _ref6$replaceState === undefined ? false : _ref6$replaceState,
      _ref6$preserveParamet = _ref6.preserveParameters,
      preserveParameters = _ref6$preserveParamet === undefined ? true : _ref6$preserveParamet;
  return function (dispatch, getState) {
    if (!card) {
      return;
    }
    var copy = (0, _card.cleanCopyCard)(card);
    var newState = {
      card: copy,
      cardId: copy.id,
      serializedCard: (0, _card.serializeCardForUrl)(copy)
    };

    var currentState = getState().qb.currentState;


    if (_utils2.default.equals(currentState, newState)) {
      return;
    }

    var url = (0, _card.urlForCardState)(newState, dirty);

    // if the serialized card is identical replace the previous state instead of adding a new one
    // e.x. when saving a new card we want to replace the state and URL with one with the new card ID
    replaceState = replaceState || currentState && currentState.serializedCard === newState.serializedCard;

    var urlParsed = (0, _url.parse)(url);
    var locationDescriptor = {
      pathname: urlParsed.pathname,
      search: preserveParameters ? window.location.search : "",
      hash: urlParsed.hash,
      state: newState
    };

    if (locationDescriptor.pathname === window.location.pathname && (locationDescriptor.search || "") === (window.location.search || "") && (locationDescriptor.hash || "") === (window.location.hash || "")) {
      replaceState = true;
    }

    // this is necessary because we can't get the state from history.state
    dispatch(setCurrentState(newState));
    if (replaceState) {
      dispatch((0, _reactRouterRedux.replace)(locationDescriptor));
    } else {
      dispatch((0, _reactRouterRedux.push)(locationDescriptor));
    }
  };
});

var REDIRECT_TO_NEW_QUESTION_FLOW = exports.REDIRECT_TO_NEW_QUESTION_FLOW = "metabase/qb/REDIRECT_TO_NEW_QUESTION_FLOW";
var redirectToNewQuestionFlow = exports.redirectToNewQuestionFlow = (0, _redux.createThunkAction)(REDIRECT_TO_NEW_QUESTION_FLOW, function () {
  return function (dispatch, getState) {
    return dispatch((0, _reactRouterRedux.replace)("/question/new"));
  };
});

var RESET_QB = exports.RESET_QB = "metabase/qb/RESET_QB";
var resetQB = exports.resetQB = (0, _reduxActions.createAction)(RESET_QB);

var INITIALIZE_QB = exports.INITIALIZE_QB = "metabase/qb/INITIALIZE_QB";
var initializeQB = exports.initializeQB = function initializeQB(location, params) {
  return function () {
    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      var _getState, currentUser, card, databasesList, originalCard, uiControls, options, serializedCard, hash, sampleDataset, preserveParameters, databaseId, question, originalQuestion;

      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              // do this immediately to ensure old state is cleared before the user sees it
              dispatch(resetQB());
              dispatch(cancelQuery());

              _getState = getState(), currentUser = _getState.currentUser;
              card = void 0, databasesList = void 0, originalCard = void 0;
              uiControls = {
                isEditing: false,
                isShowingTemplateTagsEditor: false
              };

              // always start the QB by loading up the databases for the application

              _context2.prev = 5;
              _context2.next = 8;
              return dispatch((0, _metadata2.fetchDatabases)());

            case 8:
              databasesList = (0, _metadata.getDatabasesList)(getState());
              _context2.next = 16;
              break;

            case 11:
              _context2.prev = 11;
              _context2.t0 = _context2["catch"](5);

              console.error("error fetching dbs", _context2.t0);

              // if we can't actually get the databases list then bail now
              dispatch((0, _app.setErrorPage)(_context2.t0));

              return _context2.abrupt("return", { uiControls: uiControls });

            case 16:

              // load up or initialize the card we'll be working on
              options = {};
              serializedCard = void 0;
              // hash can contain either query params starting with ? or a base64 serialized card

              if (location.hash) {
                hash = location.hash.replace(/^#/, "");

                if (hash.charAt(0) === "?") {
                  options = _querystring2.default.parse(hash.substring(1));
                } else {
                  serializedCard = hash;
                }
              }
              sampleDataset = _underscore2.default.findWhere(databasesList, { is_sample: true });
              preserveParameters = false;

              if (!(params.cardId || serializedCard)) {
                _context2.next = 51;
                break;
              }

              _context2.prev = 22;

              // if we have a serialized card then unpack it and use it
              card = serializedCard ? (0, _card.deserializeCardFromUrl)(serializedCard) : {};

              // load the card either from `cardId` parameter or the serialized card

              if (!params.cardId) {
                _context2.next = 32;
                break;
              }

              _context2.next = 27;
              return (0, _card.loadCard)(params.cardId);

            case 27:
              card = _context2.sent;

              // when we are loading from a card id we want an explicit clone of the card we loaded which is unmodified
              originalCard = _utils2.default.copy(card);
              // for showing the "started from" lineage correctly when adding filters/breakouts and when going back and forth
              // in browser history, the original_card_id has to be set for the current card (simply the id of card itself for now)
              card.original_card_id = card.id;
              _context2.next = 37;
              break;

            case 32:
              if (!card.original_card_id) {
                _context2.next = 37;
                break;
              }

              _context2.next = 35;
              return (0, _card.loadCard)(card.original_card_id);

            case 35:
              originalCard = _context2.sent;

              // if the cards are equal then show the original
              if ((0, _Card.cardIsEquivalent)(card, originalCard)) {
                card = _utils2.default.copy(originalCard);
              }

            case 37:

              _analytics2.default.trackEvent("QueryBuilder", "Query Loaded", card.dataset_query.type);

              // if we have deserialized card from the url AND loaded a card by id then the user should be dropped into edit mode
              uiControls.isEditing = !!options.edit;

              // if this is the users first time loading a saved card on the QB then show them the newb modal
              if (params.cardId && currentUser.is_qbnewb) {
                uiControls.isShowingNewbModal = true;
                _analytics2.default.trackEvent("QueryBuilder", "Show Newb Modal");
              }

              if (card.archived) {
                // use the error handler in App.jsx for showing "This question has been archived" message
                dispatch((0, _app.setErrorPage)({
                  data: {
                    error_code: "archived"
                  },
                  context: "query-builder"
                }));
                card = null;
              }

              preserveParameters = true;
              _context2.next = 49;
              break;

            case 44:
              _context2.prev = 44;
              _context2.t1 = _context2["catch"](22);

              console.warn("initializeQb failed because of an error:", _context2.t1);
              card = null;
              dispatch((0, _app.setErrorPage)(_context2.t1));

            case 49:
              _context2.next = 67;
              break;

            case 51:
              if (!(options.tutorial !== undefined && sampleDataset)) {
                _context2.next = 57;
                break;
              }

              // we are launching the QB tutorial
              card = (0, _card.startNewCard)("query", sampleDataset.id);

              uiControls.isShowingTutorial = true;
              _analytics2.default.trackEvent("QueryBuilder", "Tutorial Start", true);
              _context2.next = 67;
              break;

            case 57:
              if (!(!options.db && !options.table && !options.segment && !options.metric)) {
                _context2.next = 61;
                break;
              }

              _context2.next = 60;
              return dispatch(redirectToNewQuestionFlow());

            case 60:
              return _context2.abrupt("return");

            case 61:
              databaseId = options.db ? parseInt(options.db) : undefined;

              card = (0, _card.startNewCard)("query", databaseId);

              // initialize parts of the query based on optional parameters supplied
              if (options.table != undefined && card.dataset_query.query) {
                card.dataset_query.query.source_table = parseInt(options.table);
              }

              if (options.segment != undefined && card.dataset_query.query) {
                card.dataset_query.query.filter = ["AND", ["SEGMENT", parseInt(options.segment)]];
              }

              if (options.metric != undefined && card.dataset_query.query) {
                card.dataset_query.query.aggregation = ["METRIC", parseInt(options.metric)];
              }

              _analytics2.default.trackEvent("QueryBuilder", "Query Started", card.dataset_query.type);

            case 67:

              /**** All actions are dispatched here ****/

              // Update the question to Redux state together with the initial state of UI controls
              dispatch.action(INITIALIZE_QB, {
                card: card,
                originalCard: originalCard,
                uiControls: uiControls
              });

              // Fetch alerts for the current question if the question is saved
              card && card.id && dispatch((0, _alert.fetchAlertsForQuestion)(card.id));

              // Fetch the question metadata
              card && dispatch(loadMetadataForCard(card));

              question = card && new _Question2.default((0, _metadata.getMetadata)(getState()), card);

              // if we have loaded up a card that we can run then lets kick that off as well

              if (question) {
                if (question.canRun()) {
                  // NOTE: timeout to allow Parameters widget to set parameterValues
                  setTimeout(function () {
                    return (
                      // TODO Atte Keinänen 5/31/17: Check if it is dangerous to create a question object without metadata
                      dispatch(runQuestionQuery({ shouldUpdateUrl: false }))
                    );
                  }, 0);
                }

                // clean up the url and make sure it reflects our card state
                originalQuestion = originalCard && new _Question2.default((0, _metadata.getMetadata)(getState()), originalCard);

                dispatch(updateUrl(card, {
                  dirty: !originalQuestion || originalQuestion && question.isDirtyComparedTo(originalQuestion),
                  replaceState: true,
                  preserveParameters: preserveParameters
                }));
              }

            case 72:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, undefined, [[5, 11], [22, 44]]);
    }));

    return function (_x3, _x4) {
      return _ref7.apply(this, arguments);
    };
  }();
};

var TOGGLE_DATA_REFERENCE = exports.TOGGLE_DATA_REFERENCE = "metabase/qb/TOGGLE_DATA_REFERENCE";
var toggleDataReference = exports.toggleDataReference = (0, _reduxActions.createAction)(TOGGLE_DATA_REFERENCE, function () {
  _analytics2.default.trackEvent("QueryBuilder", "Toggle Data Reference");
});

var TOGGLE_TEMPLATE_TAGS_EDITOR = exports.TOGGLE_TEMPLATE_TAGS_EDITOR = "metabase/qb/TOGGLE_TEMPLATE_TAGS_EDITOR";
var toggleTemplateTagsEditor = exports.toggleTemplateTagsEditor = (0, _reduxActions.createAction)(TOGGLE_TEMPLATE_TAGS_EDITOR, function () {
  _analytics2.default.trackEvent("QueryBuilder", "Toggle Template Tags Editor");
});

var SET_IS_SHOWING_TEMPLATE_TAGS_EDITOR = exports.SET_IS_SHOWING_TEMPLATE_TAGS_EDITOR = "metabase/qb/SET_IS_SHOWING_TEMPLATE_TAGS_EDITOR";
var setIsShowingTemplateTagsEditor = exports.setIsShowingTemplateTagsEditor = function setIsShowingTemplateTagsEditor(isShowingTemplateTagsEditor) {
  return {
    type: SET_IS_SHOWING_TEMPLATE_TAGS_EDITOR,
    isShowingTemplateTagsEditor: isShowingTemplateTagsEditor
  };
};

var CLOSE_QB_TUTORIAL = exports.CLOSE_QB_TUTORIAL = "metabase/qb/CLOSE_QB_TUTORIAL";
var closeQbTutorial = exports.closeQbTutorial = (0, _reduxActions.createAction)(CLOSE_QB_TUTORIAL, function () {
  _analytics2.default.trackEvent("QueryBuilder", "Tutorial Close");
});

var CLOSE_QB_NEWB_MODAL = exports.CLOSE_QB_NEWB_MODAL = "metabase/qb/CLOSE_QB_NEWB_MODAL";
var closeQbNewbModal = exports.closeQbNewbModal = (0, _redux.createThunkAction)(CLOSE_QB_NEWB_MODAL, function () {
  return function () {
    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dispatch, getState) {
      var _getState2, currentUser;

      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              // persist the fact that this user has seen the NewbModal
              _getState2 = getState(), currentUser = _getState2.currentUser;
              _context3.next = 3;
              return _services.UserApi.update_qbnewb({ id: currentUser.id });

            case 3:
              _analytics2.default.trackEvent("QueryBuilder", "Close Newb Modal");

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, undefined);
    }));

    return function (_x5, _x6) {
      return _ref8.apply(this, arguments);
    };
  }();
});

var BEGIN_EDITING = exports.BEGIN_EDITING = "metabase/qb/BEGIN_EDITING";
var beginEditing = exports.beginEditing = (0, _reduxActions.createAction)(BEGIN_EDITING, function () {
  _analytics2.default.trackEvent("QueryBuilder", "Edit Begin");
});

var CANCEL_EDITING = exports.CANCEL_EDITING = "metabase/qb/CANCEL_EDITING";
var cancelEditing = exports.cancelEditing = (0, _redux.createThunkAction)(CANCEL_EDITING, function () {
  return function (dispatch, getState) {
    // clone
    var card = _utils2.default.copy((0, _selectors.getOriginalCard)(getState()));

    dispatch(loadMetadataForCard(card));

    // we do this to force the indication of the fact that the card should not be considered dirty when the url is updated
    dispatch(runQuestionQuery({ overrideWithCard: card, shouldUpdateUrl: false }));
    dispatch(updateUrl(card, { dirty: false }));

    _analytics2.default.trackEvent("QueryBuilder", "Edit Cancel");
    return card;
  };
});

// TODO Atte Keinänen 6/8/17: Could (should?) use the stored question by default instead of always requiring the explicit `card` parameter
var LOAD_METADATA_FOR_CARD = exports.LOAD_METADATA_FOR_CARD = "metabase/qb/LOAD_METADATA_FOR_CARD";
var loadMetadataForCard = exports.loadMetadataForCard = (0, _redux.createThunkAction)(LOAD_METADATA_FOR_CARD, function (card) {
  return function () {
    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(dispatch, getState) {
      var loadMetadataForAtomicQuery = function () {
        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(singleQuery) {
          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  if (!(singleQuery instanceof _StructuredQuery2.default && singleQuery.tableId() != null)) {
                    _context4.next = 3;
                    break;
                  }

                  _context4.next = 3;
                  return dispatch(loadTableMetadata(singleQuery.tableId()));

                case 3:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));

        return function loadMetadataForAtomicQuery(_x9) {
          return _ref10.apply(this, arguments);
        };
      }();

      var query;
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (!(!card && !card.dataset_query)) {
                _context5.next = 2;
                break;
              }

              return _context5.abrupt("return");

            case 2:
              query = card && new _Question2.default((0, _metadata.getMetadata)(getState()), card).query();

              if (!query) {
                _context5.next = 6;
                break;
              }

              _context5.next = 6;
              return loadMetadataForAtomicQuery(query);

            case 6:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, undefined);
    }));

    return function (_x7, _x8) {
      return _ref9.apply(this, arguments);
    };
  }();
});

var LOAD_TABLE_METADATA = exports.LOAD_TABLE_METADATA = "metabase/qb/LOAD_TABLE_METADATA";
var loadTableMetadata = exports.loadTableMetadata = (0, _redux.createThunkAction)(LOAD_TABLE_METADATA, function (tableId) {
  return function () {
    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(dispatch, getState) {
      var foreignKeys;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.prev = 0;
              _context6.next = 3;
              return dispatch((0, _metadata2.fetchTableMetadata)(tableId));

            case 3:
              _context6.next = 5;
              return _services.MetabaseApi.table_fks({ tableId: tableId });

            case 5:
              foreignKeys = _context6.sent;
              return _context6.abrupt("return", { foreignKeys: foreignKeys });

            case 9:
              _context6.prev = 9;
              _context6.t0 = _context6["catch"](0);

              console.error("error getting table metadata", _context6.t0);
              return _context6.abrupt("return", {});

            case 13:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, undefined, [[0, 9]]);
    }));

    return function (_x10, _x11) {
      return _ref11.apply(this, arguments);
    };
  }();
});

// TODO Atte Keinänen 7/5/17: Move the API call to redux/metadata for being able to see the db fields in the new metadata object
var LOAD_DATABASE_FIELDS = exports.LOAD_DATABASE_FIELDS = "metabase/qb/LOAD_DATABASE_FIELDS";
var loadDatabaseFields = exports.loadDatabaseFields = (0, _redux.createThunkAction)(LOAD_DATABASE_FIELDS, function (dbId) {
  return function () {
    var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(dispatch, getState) {
      var _getState3, databaseFields, fields;

      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              // if we already have the metadata loaded for the given table then we are done
              _getState3 = getState(), databaseFields = _getState3.qb.databaseFields;
              _context7.prev = 1;
              fields = void 0;

              if (!databaseFields[dbId]) {
                _context7.next = 7;
                break;
              }

              fields = databaseFields[dbId];
              _context7.next = 10;
              break;

            case 7:
              _context7.next = 9;
              return _services.MetabaseApi.db_fields({ dbId: dbId });

            case 9:
              fields = _context7.sent;

            case 10:
              return _context7.abrupt("return", {
                id: dbId,
                fields: fields
              });

            case 13:
              _context7.prev = 13;
              _context7.t0 = _context7["catch"](1);

              console.error("error getting database fields", _context7.t0);
              return _context7.abrupt("return", {});

            case 17:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7, undefined, [[1, 13]]);
    }));

    return function (_x12, _x13) {
      return _ref12.apply(this, arguments);
    };
  }();
});

function updateVisualizationSettings(card, isEditing, display, vizSettings) {
  // don't need to store undefined
  vizSettings = _utils2.default.copy(vizSettings);
  for (var name in vizSettings) {
    if (vizSettings[name] === undefined) {
      delete vizSettings[name];
    }
  }

  // make sure that something actually changed
  if (card.display === display && _underscore2.default.isEqual(card.visualization_settings, vizSettings)) return card;

  var updatedCard = _utils2.default.copy(card);

  // when the visualization changes on saved card we change this into a new card w/ a known starting point
  if (!isEditing && updatedCard.id) {
    delete updatedCard.id;
    delete updatedCard.name;
    delete updatedCard.description;
  }

  updatedCard.display = display;
  updatedCard.visualization_settings = vizSettings;

  return updatedCard;
}

var SET_CARD_ATTRIBUTE = exports.SET_CARD_ATTRIBUTE = "metabase/qb/SET_CARD_ATTRIBUTE";
var setCardAttribute = exports.setCardAttribute = (0, _reduxActions.createAction)(SET_CARD_ATTRIBUTE, function (attr, value) {
  return { attr: attr, value: value };
});

var SET_CARD_VISUALIZATION = exports.SET_CARD_VISUALIZATION = "metabase/qb/SET_CARD_VISUALIZATION";
var setCardVisualization = exports.setCardVisualization = (0, _redux.createThunkAction)(SET_CARD_VISUALIZATION, function (display) {
  return function (dispatch, getState) {
    var _getState4 = getState(),
        _getState4$qb = _getState4.qb,
        card = _getState4$qb.card,
        uiControls = _getState4$qb.uiControls;

    var updatedCard = updateVisualizationSettings(card, uiControls.isEditing, display, card.visualization_settings);
    dispatch(updateUrl(updatedCard, { dirty: true }));
    return updatedCard;
  };
});

var UPDATE_CARD_VISUALIZATION_SETTINGS = exports.UPDATE_CARD_VISUALIZATION_SETTINGS = "metabase/qb/UPDATE_CARD_VISUALIZATION_SETTINGS";
var updateCardVisualizationSettings = exports.updateCardVisualizationSettings = (0, _redux.createThunkAction)(UPDATE_CARD_VISUALIZATION_SETTINGS, function (settings) {
  return function (dispatch, getState) {
    var _getState5 = getState(),
        _getState5$qb = _getState5.qb,
        card = _getState5$qb.card,
        uiControls = _getState5$qb.uiControls;

    var updatedCard = updateVisualizationSettings(card, uiControls.isEditing, card.display, _extends({}, card.visualization_settings, settings));
    dispatch(updateUrl(updatedCard, { dirty: true }));
    return updatedCard;
  };
});

var REPLACE_ALL_CARD_VISUALIZATION_SETTINGS = exports.REPLACE_ALL_CARD_VISUALIZATION_SETTINGS = "metabase/qb/REPLACE_ALL_CARD_VISUALIZATION_SETTINGS";
var replaceAllCardVisualizationSettings = exports.replaceAllCardVisualizationSettings = (0, _redux.createThunkAction)(REPLACE_ALL_CARD_VISUALIZATION_SETTINGS, function (settings) {
  return function (dispatch, getState) {
    var _getState6 = getState(),
        _getState6$qb = _getState6.qb,
        card = _getState6$qb.card,
        uiControls = _getState6$qb.uiControls;

    var updatedCard = updateVisualizationSettings(card, uiControls.isEditing, card.display, settings);
    dispatch(updateUrl(updatedCard, { dirty: true }));
    return updatedCard;
  };
});

var UPDATE_TEMPLATE_TAG = exports.UPDATE_TEMPLATE_TAG = "metabase/qb/UPDATE_TEMPLATE_TAG";
var updateTemplateTag = exports.updateTemplateTag = (0, _redux.createThunkAction)(UPDATE_TEMPLATE_TAG, function (templateTag) {
  return function (dispatch, getState) {
    var _getState7 = getState(),
        _getState7$qb = _getState7.qb,
        card = _getState7$qb.card,
        uiControls = _getState7$qb.uiControls;

    var updatedCard = _utils2.default.copy(card);

    // when the query changes on saved card we change this into a new query w/ a known starting point
    if (!uiControls.isEditing && updatedCard.id) {
      delete updatedCard.id;
      delete updatedCard.name;
      delete updatedCard.description;
    }

    return (0, _icepick.assocIn)(updatedCard, ["dataset_query", "native", "template_tags", templateTag.name], templateTag);
  };
});

var SET_PARAMETER_VALUE = exports.SET_PARAMETER_VALUE = "metabase/qb/SET_PARAMETER_VALUE";
var setParameterValue = exports.setParameterValue = (0, _reduxActions.createAction)(SET_PARAMETER_VALUE, function (parameterId, value) {
  return { id: parameterId, value: value };
});

// reloadCard
var RELOAD_CARD = exports.RELOAD_CARD = "metabase/qb/RELOAD_CARD";
var reloadCard = exports.reloadCard = (0, _redux.createThunkAction)(RELOAD_CARD, function () {
  return function () {
    var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(dispatch, getState) {
      var card;
      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              // clone
              card = _utils2.default.copy((0, _selectors.getOriginalCard)(getState()));


              dispatch(loadMetadataForCard(card));

              // we do this to force the indication of the fact that the card should not be considered dirty when the url is updated
              dispatch(runQuestionQuery({ overrideWithCard: card, shouldUpdateUrl: false }));
              dispatch(updateUrl(card, { dirty: false }));

              return _context8.abrupt("return", card);

            case 5:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, undefined);
    }));

    return function (_x14, _x15) {
      return _ref13.apply(this, arguments);
    };
  }();
});

/**
 * `setCardAndRun` is used when:
 *     - navigating browser history
 *     - clicking in the entity details view
 *     - `navigateToNewCardInsideQB` is being called (see below)
 */
var SET_CARD_AND_RUN = exports.SET_CARD_AND_RUN = "metabase/qb/SET_CARD_AND_RUN";
var setCardAndRun = exports.setCardAndRun = function setCardAndRun(nextCard) {
  var shouldUpdateUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  return function () {
    var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(dispatch, getState) {
      var card, originalCard;
      return regeneratorRuntime.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              // clone
              card = _utils2.default.copy(nextCard);

              if (!card.original_card_id) {
                _context9.next = 7;
                break;
              }

              _context9.next = 4;
              return (0, _card.loadCard)(card.original_card_id);

            case 4:
              _context9.t0 = _context9.sent;
              _context9.next = 8;
              break;

            case 7:
              _context9.t0 = // Otherwise, use a current card as the original card if the card has been saved
              // This is needed for checking whether the card is in dirty state or not
              card.id ? card : null;

            case 8:
              originalCard = _context9.t0;


              // Update the card and originalCard before running the actual query
              dispatch.action(SET_CARD_AND_RUN, { card: card, originalCard: originalCard });
              dispatch(runQuestionQuery({ shouldUpdateUrl: shouldUpdateUrl }));

              // Load table & database metadata for the current question
              dispatch(loadMetadataForCard(card));

            case 12:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9, undefined);
    }));

    return function (_x17, _x18) {
      return _ref14.apply(this, arguments);
    };
  }();
};

/**
 * User-triggered events that are handled with this action:
 *     - clicking a legend:
 *         * series legend (multi-aggregation, multi-breakout, multiple questions)
 *     - clicking the visualization itself
 *         * drill-through (single series, multi-aggregation, multi-breakout, multiple questions)
 *         * (not in 0.24.2 yet: drag on line/area/bar visualization)
 *     - clicking an action widget action
 *
 * All these events can be applied either for an unsaved question or a saved question.
 */
var NAVIGATE_TO_NEW_CARD = exports.NAVIGATE_TO_NEW_CARD = "metabase/qb/NAVIGATE_TO_NEW_CARD";
var navigateToNewCardInsideQB = exports.navigateToNewCardInsideQB = (0, _redux.createThunkAction)(NAVIGATE_TO_NEW_CARD, function (_ref15) {
  var nextCard = _ref15.nextCard,
      previousCard = _ref15.previousCard;

  return function () {
    var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(dispatch, getState) {
      var nextCardIsClean;
      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              nextCardIsClean = _underscore2.default.isEqual(previousCard.dataset_query, nextCard.dataset_query) && previousCard.display === nextCard.display;

              if (!nextCardIsClean) {
                _context10.next = 11;
                break;
              }

              _context10.t0 = dispatch;
              _context10.t1 = setCardAndRun;
              _context10.next = 6;
              return (0, _card.loadCard)(nextCard.id);

            case 6:
              _context10.t2 = _context10.sent;
              _context10.t3 = (0, _context10.t1)(_context10.t2);
              (0, _context10.t0)(_context10.t3);
              _context10.next = 12;
              break;

            case 11:
              dispatch(setCardAndRun((0, _utils3.getCardAfterVisualizationClick)(nextCard, previousCard)));

            case 12:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10, undefined);
    }));

    return function (_x19, _x20) {
      return _ref16.apply(this, arguments);
    };
  }();
});

// TODO Atte Keinänen 6/2/2017 See if we should stick to `updateX` naming convention instead of `setX` in all Redux actions
// We talked with Tom that `setX` method names could be reserved to metabase-lib classes

/**
 * Replaces the currently actived question with the given Question object.
 * Also shows/hides the template tag editor if the number of template tags has changed.
 */
var UPDATE_QUESTION = exports.UPDATE_QUESTION = "metabase/qb/UPDATE_QUESTION";
var updateQuestion = exports.updateQuestion = function updateQuestion(newQuestion) {
  var _ref17 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      doNotClearNameAndId = _ref17.doNotClearNameAndId;

  return function (dispatch, getState) {
    // TODO Atte Keinänen 6/2/2017 Ways to have this happen automatically when modifying a question?
    // Maybe the Question class or a QB-specific question wrapper class should know whether it's being edited or not?
    if (!doNotClearNameAndId && !(0, _selectors.getIsEditing)(getState()) && newQuestion.isSaved()) {
      newQuestion = newQuestion.withoutNameAndId();
    }

    // Replace the current question with a new one
    dispatch.action(UPDATE_QUESTION, { card: newQuestion.card() });

    // See if the template tags editor should be shown/hidden
    var oldQuestion = (0, _selectors.getQuestion)(getState());
    var oldTagCount = getTemplateTagCount(oldQuestion);
    var newTagCount = getTemplateTagCount(newQuestion);

    if (newTagCount > oldTagCount) {
      dispatch(setIsShowingTemplateTagsEditor(true));
    } else if (newTagCount === 0 && !(0, _selectors.getIsShowingDataReference)(getState())) {
      dispatch(setIsShowingTemplateTagsEditor(false));
    }
  };
};

var API_CREATE_QUESTION = exports.API_CREATE_QUESTION = "metabase/qb/API_CREATE_QUESTION";
var apiCreateQuestion = exports.apiCreateQuestion = function apiCreateQuestion(question) {
  return function () {
    var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(dispatch, getState) {
      var series, questionWithVizSettings, resultsMetadata, createdQuestion;
      return regeneratorRuntime.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              // Needed for persisting visualization columns for pulses/alerts, see #6749
              series = (0, _selectors.getTransformedSeries)(getState());
              questionWithVizSettings = series ? getQuestionWithDefaultVisualizationSettings(question, series) : question;
              resultsMetadata = (0, _selectors.getResultsMetadata)(getState());
              _context11.next = 5;
              return questionWithVizSettings.setQuery(question.query().clean()).setResultsMetadata(resultsMetadata).apiCreate();

            case 5:
              createdQuestion = _context11.sent;


              // remove the databases in the store that are used to populate the QB databases list.
              // This is done when saving a Card because the newly saved card will be eligible for use as a source query
              // so we want the databases list to be re-fetched next time we hit "New Question" so it shows up
              dispatch((0, _requests.clearRequestState)({ statePath: ["metadata", "databases"] }));

              dispatch(updateUrl(createdQuestion.card(), { dirty: false }));
              _analytics2.default.trackEvent("QueryBuilder", "Create Card", createdQuestion.query().datasetQuery().type);

              dispatch.action(API_CREATE_QUESTION, createdQuestion.card());

            case 10:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11, undefined);
    }));

    return function (_x22, _x23) {
      return _ref18.apply(this, arguments);
    };
  }();
};

var API_UPDATE_QUESTION = exports.API_UPDATE_QUESTION = "metabase/qb/API_UPDATE_QUESTION";
var apiUpdateQuestion = exports.apiUpdateQuestion = function apiUpdateQuestion(question) {
  return function () {
    var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(dispatch, getState) {
      var series, questionWithVizSettings, resultsMetadata, updatedQuestion;
      return regeneratorRuntime.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              question = question || (0, _selectors.getQuestion)(getState());

              // Needed for persisting visualization columns for pulses/alerts, see #6749
              series = (0, _selectors.getTransformedSeries)(getState());
              questionWithVizSettings = series ? getQuestionWithDefaultVisualizationSettings(question, series) : question;
              resultsMetadata = (0, _selectors.getResultsMetadata)(getState());
              _context12.next = 6;
              return questionWithVizSettings.setQuery(question.query().clean()).setResultsMetadata(resultsMetadata).apiUpdate();

            case 6:
              updatedQuestion = _context12.sent;
              _context12.next = 9;
              return dispatch((0, _alert.fetchAlertsForQuestion)(updatedQuestion.id()));

            case 9:

              // remove the databases in the store that are used to populate the QB databases list.
              // This is done when saving a Card because the newly saved card will be eligible for use as a source query
              // so we want the databases list to be re-fetched next time we hit "New Question" so it shows up
              dispatch((0, _requests.clearRequestState)({ statePath: ["metadata", "databases"] }));

              dispatch(updateUrl(updatedQuestion.card(), { dirty: false }));
              _analytics2.default.trackEvent("QueryBuilder", "Update Card", updatedQuestion.query().datasetQuery().type);

              dispatch.action(API_UPDATE_QUESTION, updatedQuestion.card());

            case 13:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12, undefined);
    }));

    return function (_x24, _x25) {
      return _ref19.apply(this, arguments);
    };
  }();
};

// setDatasetQuery
// TODO Atte Keinänen 6/1/17: Deprecated, superseded by updateQuestion
var SET_DATASET_QUERY = exports.SET_DATASET_QUERY = "metabase/qb/SET_DATASET_QUERY";
var setDatasetQuery = exports.setDatasetQuery = (0, _redux.createThunkAction)(SET_DATASET_QUERY, function (dataset_query) {
  var run = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function (dispatch, getState) {
    var _getState8 = getState(),
        uiControls = _getState8.qb.uiControls;

    var question = (0, _selectors.getQuestion)(getState());

    var newQuestion = question;

    // when the query changes on saved card we change this into a new query w/ a known starting point
    if (!uiControls.isEditing && question.isSaved()) {
      newQuestion = newQuestion.withoutNameAndId();
    }

    newQuestion = newQuestion.setDatasetQuery(dataset_query);

    var oldTagCount = getTemplateTagCount(question);
    var newTagCount = getTemplateTagCount(newQuestion);

    var openTemplateTagsEditor = uiControls.isShowingTemplateTagsEditor;
    if (newTagCount > oldTagCount) {
      openTemplateTagsEditor = true;
    } else if (newTagCount === 0) {
      openTemplateTagsEditor = false;
    }

    // run updated query
    if (run) {
      dispatch(runQuestionQuery({ overrideWithCard: newQuestion.card() }));
    }

    return {
      card: newQuestion.card(),
      openTemplateTagsEditor: openTemplateTagsEditor
    };
  };
});

// setQueryMode
var SET_QUERY_MODE = exports.SET_QUERY_MODE = "metabase/qb/SET_QUERY_MODE";
var setQueryMode = exports.setQueryMode = (0, _redux.createThunkAction)(SET_QUERY_MODE, function (type) {
  return function (dispatch, getState) {
    // TODO Atte Keinänen 6/1/17: Should use `queryResults` instead
    var _getState9 = getState(),
        _getState9$qb = _getState9.qb,
        card = _getState9$qb.card,
        queryResult = _getState9$qb.queryResult,
        uiControls = _getState9$qb.uiControls;

    var tableMetadata = (0, _selectors.getTableMetadata)(getState());

    // if the type didn't actually change then nothing has been modified
    if (type === card.dataset_query.type) {
      return card;
    }

    // if we are going from MBQL -> Native then attempt to carry over the query
    if (type === "native" && queryResult && queryResult.data && queryResult.data.native_form) {
      var updatedCard = _utils2.default.copy(card);
      var datasetQuery = updatedCard.dataset_query;
      var nativeQuery = _underscore2.default.pick(queryResult.data.native_form, "query", "collection");

      // when the driver requires JSON we need to stringify it because it's been parsed already
      if ((0, _engine.getEngineNativeType)(tableMetadata.db.engine) === "json") {
        nativeQuery.query = (0, _engine.formatJsonQuery)(queryResult.data.native_form.query, tableMetadata.db.engine);
      } else {
        nativeQuery.query = (0, _formatting.formatSQL)(nativeQuery.query);
      }

      datasetQuery.type = "native";
      datasetQuery.native = nativeQuery;
      delete datasetQuery.query;

      // when the query changes on saved card we change this into a new query w/ a known starting point
      if (!uiControls.isEditing && updatedCard.id) {
        delete updatedCard.id;
        delete updatedCard.name;
        delete updatedCard.description;
      }

      updatedCard.dataset_query = datasetQuery;

      dispatch(loadMetadataForCard(updatedCard));

      _analytics2.default.trackEvent("QueryBuilder", "MBQL->Native");

      return updatedCard;

      // we are translating an empty query
    } else {
      var databaseId = card.dataset_query.database;

      // only carry over the database id if the user can write native queries
      if (type === "native") {
        var nativeDatabases = (0, _selectors.getNativeDatabases)(getState());
        if (!_underscore2.default.findWhere(nativeDatabases, { id: databaseId })) {
          databaseId = nativeDatabases.length > 0 ? nativeDatabases[0].id : null;
        }
      }

      var newCard = (0, _card.startNewCard)(type, databaseId);

      dispatch(loadMetadataForCard(newCard));

      return newCard;
    }
  };
});

// TODO Atte Keinänen: The heavy lifting should be moved to StructuredQuery and NativeQuery
// Question.js could possibly provide a helper method like `Question.setDatabaseId` that delegates it to respective query classes

// setQueryDatabase
var SET_QUERY_DATABASE = exports.SET_QUERY_DATABASE = "metabase/qb/SET_QUERY_DATABASE";
var setQueryDatabase = exports.setQueryDatabase = (0, _redux.createThunkAction)(SET_QUERY_DATABASE, function (databaseId) {
  return function () {
    var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(dispatch, getState) {
      var _getState10, _getState10$qb, card, uiControls, databases, existingQuery, updatedCard, database, tables, table, _updatedCard;

      return regeneratorRuntime.wrap(function _callee13$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              _getState10 = getState(), _getState10$qb = _getState10.qb, card = _getState10$qb.card, uiControls = _getState10$qb.uiControls;
              databases = (0, _metadata.getDatabases)(getState());

              // picking the same database doesn't change anything

              if (!(databaseId === card.dataset_query.database)) {
                _context13.next = 4;
                break;
              }

              return _context13.abrupt("return", card);

            case 4:
              existingQuery = card.dataset_query.native ? card.dataset_query.native.query : undefined;

              if (uiControls.isEditing) {
                _context13.next = 13;
                break;
              }

              updatedCard = (0, _card.startNewCard)(card.dataset_query.type, databaseId);

              if (existingQuery) {
                updatedCard.dataset_query.native.query = existingQuery;
                updatedCard.dataset_query.native.template_tags = card.dataset_query.native.template_tags;
              }

              // set the initial collection for the query if this is a native query
              // this is only used for Mongo queries which need to be ran against a specific collection
              if (updatedCard.dataset_query.type === "native") {
                database = databases[databaseId], tables = database ? database.tables : [], table = tables.length > 0 ? tables[0] : null;

                if (table) updatedCard.dataset_query.native.collection = table.name;
              }

              dispatch(loadMetadataForCard(updatedCard));

              return _context13.abrupt("return", updatedCard);

            case 13:
              // if we are editing a saved query we don't want to replace the card, so just start a fresh query only
              // TODO: should this clear the visualization as well?
              _updatedCard = _utils2.default.copy(card);

              _updatedCard.dataset_query = (0, _query.createQuery)(card.dataset_query.type, databaseId);
              if (existingQuery) {
                _updatedCard.dataset_query.native.query = existingQuery;
                _updatedCard.dataset_query.native.template_tags = card.dataset_query.native.template_tags;
              }

              dispatch(loadMetadataForCard(_updatedCard));

              return _context13.abrupt("return", _updatedCard);

            case 18:
            case "end":
              return _context13.stop();
          }
        }
      }, _callee13, undefined);
    }));

    return function (_x27, _x28) {
      return _ref20.apply(this, arguments);
    };
  }();
});

// TODO Atte Keinänen: The heavy lifting should be moved to StructuredQuery and NativeQuery
// Question.js could possibly provide a helper method like `Question.setSourceTable` that delegates it to respective query classes

// setQuerySourceTable
var SET_QUERY_SOURCE_TABLE = exports.SET_QUERY_SOURCE_TABLE = "metabase/qb/SET_QUERY_SOURCE_TABLE";
var setQuerySourceTable = exports.setQuerySourceTable = (0, _redux.createThunkAction)(SET_QUERY_SOURCE_TABLE, function (sourceTable) {
  return function () {
    var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(dispatch, getState) {
      var _getState11, _getState11$qb, card, uiControls, tableId, databaseId, table, query, updatedCard;

      return regeneratorRuntime.wrap(function _callee14$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              _getState11 = getState(), _getState11$qb = _getState11.qb, card = _getState11$qb.card, uiControls = _getState11$qb.uiControls;

              // this will either be the id or an object with an id

              tableId = sourceTable.id || sourceTable;

              // if the table didn't actually change then nothing is modified

              if (!(tableId === card.dataset_query.query.source_table)) {
                _context14.next = 4;
                break;
              }

              return _context14.abrupt("return", card);

            case 4:

              // load up all the table metadata via the api
              dispatch(loadTableMetadata(tableId));

              // find the database associated with this table
              databaseId = void 0;

              if (_underscore2.default.isObject(sourceTable)) {
                databaseId = sourceTable.db_id;
              } else {
                table = (0, _metadata.getTables)(getState())[tableId];

                if (table) {
                  databaseId = table.db_id;
                }
              }

              if (uiControls.isEditing) {
                _context14.next = 11;
                break;
              }

              return _context14.abrupt("return", (0, _card.startNewCard)(card.dataset_query.type, databaseId, tableId));

            case 11:
              // if we are editing a saved query we don't want to replace the card, so just start a fresh query only
              // TODO: should this clear the visualization as well?
              query = (0, _query.createQuery)(card.dataset_query.type, databaseId, tableId);
              updatedCard = _utils2.default.copy(card);

              updatedCard.dataset_query = query;
              return _context14.abrupt("return", updatedCard);

            case 15:
            case "end":
              return _context14.stop();
          }
        }
      }, _callee14, undefined);
    }));

    return function (_x29, _x30) {
      return _ref21.apply(this, arguments);
    };
  }();
});

function createQueryAction(action, updaterFunction, event) {
  return (0, _redux.createThunkAction)(action, function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return function (dispatch, getState) {
      var _getState12 = getState(),
          card = _getState12.qb.card;

      if (card.dataset_query.type === "query") {
        var datasetQuery = _utils2.default.copy(card.dataset_query);
        updaterFunction.apply(undefined, [datasetQuery.query].concat(args));
        dispatch(setDatasetQuery(datasetQuery));
        _analytics2.default.trackEvent.apply(_analytics2.default, _toConsumableArray(typeof event === "function" ? event.apply(undefined, args) : event));
      }
      return null;
    };
  });
}

var addQueryBreakout = exports.addQueryBreakout = createQueryAction("metabase/qb/ADD_QUERY_BREAKOUT", _query2.default.addBreakout, ["QueryBuilder", "Add GroupBy"]);
var updateQueryBreakout = exports.updateQueryBreakout = createQueryAction("metabase/qb/UPDATE_QUERY_BREAKOUT", _query2.default.updateBreakout, ["QueryBuilder", "Modify GroupBy"]);
var removeQueryBreakout = exports.removeQueryBreakout = createQueryAction("metabase/qb/REMOVE_QUERY_BREAKOUT", _query2.default.removeBreakout, ["QueryBuilder", "Remove GroupBy"]);
// Exported for integration tests
var ADD_QUERY_FILTER = exports.ADD_QUERY_FILTER = "metabase/qb/ADD_QUERY_FILTER";
var addQueryFilter = exports.addQueryFilter = createQueryAction(ADD_QUERY_FILTER, _query2.default.addFilter, ["QueryBuilder", "Add Filter"]);
var UPDATE_QUERY_FILTER = exports.UPDATE_QUERY_FILTER = "metabase/qb/UPDATE_QUERY_FILTER";
var updateQueryFilter = exports.updateQueryFilter = createQueryAction(UPDATE_QUERY_FILTER, _query2.default.updateFilter, ["QueryBuilder", "Modify Filter"]);
var REMOVE_QUERY_FILTER = exports.REMOVE_QUERY_FILTER = "metabase/qb/REMOVE_QUERY_FILTER";
var removeQueryFilter = exports.removeQueryFilter = createQueryAction(REMOVE_QUERY_FILTER, _query2.default.removeFilter, ["QueryBuilder", "Remove Filter"]);
var addQueryAggregation = exports.addQueryAggregation = createQueryAction("metabase/qb/ADD_QUERY_AGGREGATION", _query2.default.addAggregation, ["QueryBuilder", "Add Aggregation"]);
var updateQueryAggregation = exports.updateQueryAggregation = createQueryAction("metabase/qb/UPDATE_QUERY_AGGREGATION", _query2.default.updateAggregation, ["QueryBuilder", "Set Aggregation"]);
var removeQueryAggregation = exports.removeQueryAggregation = createQueryAction("metabase/qb/REMOVE_QUERY_AGGREGATION", _query2.default.removeAggregation, ["QueryBuilder", "Remove Aggregation"]);
var addQueryOrderBy = exports.addQueryOrderBy = createQueryAction("metabase/qb/ADD_QUERY_ORDER_BY", _query2.default.addOrderBy, ["QueryBuilder", "Add OrderBy"]);
var updateQueryOrderBy = exports.updateQueryOrderBy = createQueryAction("metabase/qb/UPDATE_QUERY_ORDER_BY", _query2.default.updateOrderBy, ["QueryBuilder", "Set OrderBy"]);
var removeQueryOrderBy = exports.removeQueryOrderBy = createQueryAction("metabase/qb/REMOVE_QUERY_ORDER_BY", _query2.default.removeOrderBy, ["QueryBuilder", "Remove OrderBy"]);
var updateQueryLimit = exports.updateQueryLimit = createQueryAction("metabase/qb/UPDATE_QUERY_LIMIT", _query2.default.updateLimit, ["QueryBuilder", "Update Limit"]);
var addQueryExpression = exports.addQueryExpression = createQueryAction("metabase/qb/ADD_QUERY_EXPRESSION", _query2.default.addExpression, ["QueryBuilder", "Add Expression"]);
var updateQueryExpression = exports.updateQueryExpression = createQueryAction("metabase/qb/UPDATE_QUERY_EXPRESSION", _query2.default.updateExpression, ["QueryBuilder", "Set Expression"]);
var removeQueryExpression = exports.removeQueryExpression = createQueryAction("metabase/qb/REMOVE_QUERY_EXPRESSION", _query2.default.removeExpression, ["QueryBuilder", "Remove Expression"]);

/**
 * Queries the result for the currently active question or alternatively for the card provided in `overrideWithCard`.
 * The API queries triggered by this action creator can be cancelled using the deferred provided in RUN_QUERY action.
 */
var RUN_QUERY = exports.RUN_QUERY = "metabase/qb/RUN_QUERY";
var runQuestionQuery = exports.runQuestionQuery = function runQuestionQuery() {
  var _ref22 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref22$shouldUpdateUr = _ref22.shouldUpdateUrl,
      shouldUpdateUrl = _ref22$shouldUpdateUr === undefined ? true : _ref22$shouldUpdateUr,
      _ref22$ignoreCache = _ref22.ignoreCache,
      ignoreCache = _ref22$ignoreCache === undefined ? false : _ref22$ignoreCache,
      overrideWithCard = _ref22.overrideWithCard;

  return function () {
    var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(dispatch, getState) {
      var questionFromCard, question, originalQuestion, cardIsDirty, startTime, cancelQueryDeferred;
      return regeneratorRuntime.wrap(function _callee15$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              questionFromCard = function questionFromCard(c) {
                return c && new _Question2.default((0, _metadata.getMetadata)(getState()), c);
              };

              question = overrideWithCard ? questionFromCard(overrideWithCard) : (0, _selectors.getQuestion)(getState());
              originalQuestion = (0, _selectors.getOriginalQuestion)(getState());
              cardIsDirty = originalQuestion ? question.isDirtyComparedTo(originalQuestion) : true;


              if (shouldUpdateUrl) {
                dispatch(updateUrl(question.card(), { dirty: cardIsDirty }));
              }

              startTime = new Date();
              cancelQueryDeferred = (0, _promise.defer)();


              question.apiGetResults({
                cancelDeferred: cancelQueryDeferred,
                isDirty: cardIsDirty
              }).then(function (queryResults) {
                return dispatch(queryCompleted(question.card(), queryResults));
              }).catch(function (error) {
                return dispatch(queryErrored(startTime, error));
              });

              _analytics2.default.trackEvent("QueryBuilder", "Run Query", question.query().datasetQuery().type);

              // TODO Move this out from Redux action asap
              // HACK: prevent SQL editor from losing focus
              try {
                ace.edit("id_sql").focus();
              } catch (e) {}

              dispatch.action(RUN_QUERY, { cancelQueryDeferred: cancelQueryDeferred });

            case 11:
            case "end":
              return _context15.stop();
          }
        }
      }, _callee15, undefined);
    }));

    return function (_x32, _x33) {
      return _ref23.apply(this, arguments);
    };
  }();
};

var getDisplayTypeForCard = exports.getDisplayTypeForCard = function getDisplayTypeForCard(card, queryResults) {
  // TODO Atte Keinänen 6/1/17: Make a holistic decision based on all queryResults, not just one
  // This method seems to has been a candidate for a rewrite anyway
  var queryResult = queryResults[0];

  var cardDisplay = card.display;

  // try a little logic to pick a smart display for the data
  // TODO: less hard-coded rules for picking chart type
  var isScalarVisualization = card.display === "scalar" || card.display === "progress";
  if (!isScalarVisualization && queryResult.data.rows && queryResult.data.rows.length === 1 && queryResult.data.cols.length === 1) {
    // if we have a 1x1 data result then this should always be viewed as a scalar
    cardDisplay = "scalar";
  } else if (isScalarVisualization && queryResult.data.rows && (queryResult.data.rows.length > 1 || queryResult.data.cols.length > 1)) {
    // any time we were a scalar and now have more than 1x1 data switch to table view
    cardDisplay = "table";
  } else if (!card.display) {
    // if our query aggregation is "rows" then ALWAYS set the display to "table"
    cardDisplay = "table";
  }

  return cardDisplay;
};

var QUERY_COMPLETED = exports.QUERY_COMPLETED = "metabase/qb/QUERY_COMPLETED";
var queryCompleted = exports.queryCompleted = function queryCompleted(card, queryResults) {
  return function () {
    var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee16$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              dispatch.action(QUERY_COMPLETED, {
                card: card,
                cardDisplay: getDisplayTypeForCard(card, queryResults),
                queryResults: queryResults
              });

            case 1:
            case "end":
              return _context16.stop();
          }
        }
      }, _callee16, undefined);
    }));

    return function (_x34, _x35) {
      return _ref24.apply(this, arguments);
    };
  }();
};

/**
 * Saves to `visualization_settings` property of a question those visualization settings that
 * 1) don't have a value yet and 2) have `persistDefault` flag enabled.
 *
 * Needed for persisting visualization columns for pulses/alerts, see #6749.
 */
var getQuestionWithDefaultVisualizationSettings = function getQuestionWithDefaultVisualizationSettings(question, series) {
  var oldVizSettings = question.visualizationSettings();
  var newVizSettings = _extends({}, oldVizSettings, (0, _settings.getPersistableDefaultSettings)(series));

  // Don't update the question unnecessarily
  // (even if fields values haven't changed, updating the settings will make the question appear dirty)
  if (!_underscore2.default.isEqual(oldVizSettings, newVizSettings)) {
    return question.setVisualizationSettings(newVizSettings);
  } else {
    return question;
  }
};

var QUERY_ERRORED = exports.QUERY_ERRORED = "metabase/qb/QUERY_ERRORED";
var queryErrored = exports.queryErrored = (0, _redux.createThunkAction)(QUERY_ERRORED, function (startTime, error) {
  return function () {
    var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee17$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              if (!(error && error.isCancelled)) {
                _context17.next = 4;
                break;
              }

              return _context17.abrupt("return", null);

            case 4:
              return _context17.abrupt("return", { error: error, duration: new Date() - startTime });

            case 5:
            case "end":
              return _context17.stop();
          }
        }
      }, _callee17, undefined);
    }));

    return function (_x36, _x37) {
      return _ref25.apply(this, arguments);
    };
  }();
});

// cancelQuery
var CANCEL_QUERY = exports.CANCEL_QUERY = "metabase/qb/CANCEL_QUERY";
var cancelQuery = exports.cancelQuery = (0, _redux.createThunkAction)(CANCEL_QUERY, function () {
  return function () {
    var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(dispatch, getState) {
      var _getState13, _getState13$qb, uiControls, cancelQueryDeferred;

      return regeneratorRuntime.wrap(function _callee18$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              _getState13 = getState(), _getState13$qb = _getState13.qb, uiControls = _getState13$qb.uiControls, cancelQueryDeferred = _getState13$qb.cancelQueryDeferred;


              if (uiControls.isRunning && cancelQueryDeferred) {
                cancelQueryDeferred.resolve();
              }

            case 2:
            case "end":
              return _context18.stop();
          }
        }
      }, _callee18, undefined);
    }));

    return function (_x38, _x39) {
      return _ref26.apply(this, arguments);
    };
  }();
});

var FOLLOW_FOREIGN_KEY = exports.FOLLOW_FOREIGN_KEY = "metabase/qb/FOLLOW_FOREIGN_KEY";
var followForeignKey = exports.followForeignKey = (0, _redux.createThunkAction)(FOLLOW_FOREIGN_KEY, function (fk) {
  return function () {
    var _ref27 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(dispatch, getState) {
      var _getState14, _getState14$qb, card, queryResult, originValue, i, newCard;

      return regeneratorRuntime.wrap(function _callee19$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              // TODO Atte Keinänen 6/1/17: Should use `queryResults` instead
              _getState14 = getState(), _getState14$qb = _getState14.qb, card = _getState14$qb.card, queryResult = _getState14$qb.queryResult;

              if (!(!queryResult || !fk)) {
                _context19.next = 3;
                break;
              }

              return _context19.abrupt("return", false);

            case 3:

              // extract the value we will use to filter our new query
              originValue = void 0;

              for (i = 0; i < queryResult.data.cols.length; i++) {
                if ((0, _types.isPK)(queryResult.data.cols[i].special_type)) {
                  originValue = queryResult.data.rows[0][i];
                }
              }

              // action is on an FK column
              newCard = (0, _card.startNewCard)("query", card.dataset_query.database);


              newCard.dataset_query.query.source_table = fk.origin.table.id;
              newCard.dataset_query.query.aggregation = ["rows"];
              newCard.dataset_query.query.filter = ["AND", ["=", fk.origin.id, originValue]];

              // run it
              dispatch(setCardAndRun(newCard));

            case 10:
            case "end":
              return _context19.stop();
          }
        }
      }, _callee19, undefined);
    }));

    return function (_x40, _x41) {
      return _ref27.apply(this, arguments);
    };
  }();
});

var LOAD_OBJECT_DETAIL_FK_REFERENCES = exports.LOAD_OBJECT_DETAIL_FK_REFERENCES = "metabase/qb/LOAD_OBJECT_DETAIL_FK_REFERENCES";
var loadObjectDetailFKReferences = exports.loadObjectDetailFKReferences = (0, _redux.createThunkAction)(LOAD_OBJECT_DETAIL_FK_REFERENCES, function () {
  return function () {
    var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(dispatch, getState) {
      var getFKCount = function () {
        var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(card, queryResult, fk) {
          var fkQuery, info, result;
          return regeneratorRuntime.wrap(function _callee20$(_context20) {
            while (1) {
              switch (_context20.prev = _context20.next) {
                case 0:
                  fkQuery = (0, _query.createQuery)("query");

                  fkQuery.database = card.dataset_query.database;
                  fkQuery.query.source_table = fk.origin.table_id;
                  fkQuery.query.aggregation = ["count"];
                  fkQuery.query.filter = ["AND", ["=", fk.origin.id, getObjectDetailIdValue(queryResult.data)]];

                  info = { status: 0, value: null };
                  _context20.prev = 6;
                  _context20.next = 9;
                  return _services.MetabaseApi.dataset(fkQuery);

                case 9:
                  result = _context20.sent;

                  if (result && result.status === "completed" && result.data.rows.length > 0) {
                    info["value"] = result.data.rows[0][0];
                  } else {
                    // $FlowFixMe
                    info["value"] = "Unknown";
                  }
                  _context20.next = 16;
                  break;

                case 13:
                  _context20.prev = 13;
                  _context20.t0 = _context20["catch"](6);

                  console.error("error getting fk count", _context20.t0, fkQuery);

                case 16:
                  _context20.prev = 16;

                  info["status"] = 1;
                  return _context20.finish(16);

                case 19:
                  return _context20.abrupt("return", info);

                case 20:
                case "end":
                  return _context20.stop();
              }
            }
          }, _callee20, this, [[6, 13, 16, 19]]);
        }));

        return function getFKCount(_x44, _x45, _x46) {
          return _ref29.apply(this, arguments);
        };
      }();

      // TODO: there are possible cases where running a query would not require refreshing this data, but
      // skipping that for now because it's easier to just run this each time

      // run a query on FK origin table where FK origin field = objectDetailIdValue


      var _getState15, _getState15$qb, card, queryResult, tableForeignKeys, getObjectDetailIdValue, fkReferences, i, fk, info;

      return regeneratorRuntime.wrap(function _callee21$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              getObjectDetailIdValue = function getObjectDetailIdValue(data) {
                for (var i = 0; i < data.cols.length; i++) {
                  var coldef = data.cols[i];
                  if ((0, _types.isPK)(coldef.special_type)) {
                    return data.rows[0][i];
                  }
                }
              };

              // TODO Atte Keinänen 6/1/17: Should use `queryResults` instead
              _getState15 = getState(), _getState15$qb = _getState15.qb, card = _getState15$qb.card, queryResult = _getState15$qb.queryResult, tableForeignKeys = _getState15$qb.tableForeignKeys;
              fkReferences = {};
              i = 0;

            case 4:
              if (!(i < tableForeignKeys.length)) {
                _context21.next = 13;
                break;
              }

              fk = tableForeignKeys[i];
              _context21.next = 8;
              return getFKCount(card, queryResult, fk);

            case 8:
              info = _context21.sent;

              fkReferences[fk.origin.id] = info;

            case 10:
              i++;
              _context21.next = 4;
              break;

            case 13:
              return _context21.abrupt("return", fkReferences);

            case 14:
            case "end":
              return _context21.stop();
          }
        }
      }, _callee21, undefined);
    }));

    return function (_x42, _x43) {
      return _ref28.apply(this, arguments);
    };
  }();
});

var ARCHIVE_QUESTION = exports.ARCHIVE_QUESTION = "metabase/qb/ARCHIVE_QUESTION";
var archiveQuestion = exports.archiveQuestion = (0, _redux.createThunkAction)(ARCHIVE_QUESTION, function (questionId) {
  var archived = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return function () {
    var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(dispatch, getState) {
      var card, response, type;
      return regeneratorRuntime.wrap(function _callee22$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              card = _extends({}, getState().qb.card, { // grab the current card
                archived: archived
              });
              _context22.next = 3;
              return _services.CardApi.update(card);

            case 3:
              response = _context22.sent;
              type = archived ? "archived" : "unarchived";


              dispatch((0, _undo.addUndo)((0, _undo.createUndo)({
                type: type,
                // eslint-disable-next-line react/display-name
                message: function message() {
                  return _react2.default.createElement(
                    "div",
                    null,
                    " ",
                    "Question  was " + type + ".",
                    " "
                  );
                },
                action: archiveQuestion(card.id, !archived)
              })));

              dispatch((0, _reactRouterRedux.push)("/questions"));
              return _context22.abrupt("return", response);

            case 8:
            case "end":
              return _context22.stop();
          }
        }
      }, _callee22, undefined);
    }));

    return function (_x48, _x49) {
      return _ref30.apply(this, arguments);
    };
  }();
});

var VIEW_NEXT_OBJECT_DETAIL = exports.VIEW_NEXT_OBJECT_DETAIL = "metabase/qb/VIEW_NEXT_OBJECT_DETAIL";
var viewNextObjectDetail = exports.viewNextObjectDetail = function viewNextObjectDetail() {
  return function (dispatch, getState) {
    var question = (0, _selectors.getQuestion)(getState());
    var filter = question.query().filters()[0];

    var newFilter = ["=", filter[1], filter[2] + 1];

    dispatch.action(VIEW_NEXT_OBJECT_DETAIL);

    dispatch(updateQuestion(question.query().updateFilter(0, newFilter).question()));

    dispatch(runQuestionQuery());
  };
};

var VIEW_PREVIOUS_OBJECT_DETAIL = exports.VIEW_PREVIOUS_OBJECT_DETAIL = "metabase/qb/VIEW_PREVIOUS_OBJECT_DETAIL";

var viewPreviousObjectDetail = exports.viewPreviousObjectDetail = function viewPreviousObjectDetail() {
  return function (dispatch, getState) {
    var question = (0, _selectors.getQuestion)(getState());
    var filter = question.query().filters()[0];

    if (filter[2] === 1) {
      return false;
    }

    var newFilter = ["=", filter[1], filter[2] - 1];

    dispatch.action(VIEW_PREVIOUS_OBJECT_DETAIL);

    dispatch(updateQuestion(question.query().updateFilter(0, newFilter).question()));

    dispatch(runQuestionQuery());
  };
};

// these are just temporary mappings to appease the existing QB code and it's naming prefs
var toggleDataReferenceFn = exports.toggleDataReferenceFn = toggleDataReference;
var onBeginEditing = exports.onBeginEditing = beginEditing;
var onCancelEditing = exports.onCancelEditing = cancelEditing;
var setQueryModeFn = exports.setQueryModeFn = setQueryMode;
var setDatabaseFn = exports.setDatabaseFn = setQueryDatabase;
var setSourceTableFn = exports.setSourceTableFn = setQuerySourceTable;
var setDisplayFn = exports.setDisplayFn = setCardVisualization;
var onSetCardAttribute = exports.onSetCardAttribute = setCardAttribute;
var reloadCardFn = exports.reloadCardFn = reloadCard;
var onRestoreOriginalQuery = exports.onRestoreOriginalQuery = reloadCard;
var onUpdateVisualizationSettings = exports.onUpdateVisualizationSettings = updateCardVisualizationSettings;
var onReplaceAllVisualizationSettings = exports.onReplaceAllVisualizationSettings = replaceAllCardVisualizationSettings;

/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.I18NApi = exports.GeoJSONApi = exports.UtilApi = exports.UserApi = exports.SetupApi = exports.GettingStartedApi = exports.PermissionsApi = exports.SettingsApi = exports.SessionApi = exports.LabelApi = exports.RevisionsApi = exports.RevisionApi = exports.MetricApi = exports.SegmentApi = exports.AlertApi = exports.PulseApi = exports.XRayApi = exports.AsyncApi = exports.MetabaseApi = exports.LdapApi = exports.SlackApi = exports.EmailApi = exports.AutoApi = exports.EmbedApi = exports.PublicApi = exports.CollectionsApi = exports.DashboardApi = exports.CardApi = exports.ActivityApi = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.setPublicQuestionEndpoints = setPublicQuestionEndpoints;
exports.setPublicDashboardEndpoints = setPublicDashboardEndpoints;
exports.setEmbedQuestionEndpoints = setEmbedQuestionEndpoints;
exports.setEmbedDashboardEndpoints = setEmbedDashboardEndpoints;
exports.setFieldEndpoints = setFieldEndpoints;

var _api = __webpack_require__(205);

var _api2 = _interopRequireDefault(_api);

var _embed = __webpack_require__(224);

var _gaMetadata = __webpack_require__(367);

var _gaMetadata2 = _interopRequireDefault(_gaMetadata);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var GET = _api2.default.GET,
    PUT = _api2.default.PUT,
    POST = _api2.default.POST,
    DELETE = _api2.default.DELETE;


// use different endpoints for embed previews
var embedBase = _embed.IS_EMBED_PREVIEW ? "/api/preview_embed" : "/api/embed";

// $FlowFixMe: Flow doesn't understand webpack loader syntax
// eslint-disable-line import/default

var ActivityApi = exports.ActivityApi = {
  list: GET("/api/activity"),
  recent_views: GET("/api/activity/recent_views")
};

var CardApi = exports.CardApi = {
  list: GET("/api/card", function (cards, _ref) {
    var data = _ref.data;
    return (
      // HACK: support for the "q" query param until backend implements it
      cards.filter(function (card) {
        return !data.q || card.name.toLowerCase().indexOf(data.q.toLowerCase()) >= 0;
      })
    );
  }),
  create: POST("/api/card"),
  get: GET("/api/card/:cardId"),
  update: PUT("/api/card/:id"),
  delete: DELETE("/api/card/:cardId"),
  query: POST("/api/card/:cardId/query"),
  // isfavorite:                  GET("/api/card/:cardId/favorite"),
  favorite: POST("/api/card/:cardId/favorite"),
  unfavorite: DELETE("/api/card/:cardId/favorite"),
  updateLabels: POST("/api/card/:cardId/labels"),

  listPublic: GET("/api/card/public"),
  listEmbeddable: GET("/api/card/embeddable"),
  createPublicLink: POST("/api/card/:id/public_link"),
  deletePublicLink: DELETE("/api/card/:id/public_link")
};

var DashboardApi = exports.DashboardApi = {
  list: GET("/api/dashboard"),
  // creates a new empty dashboard
  create: POST("/api/dashboard"),
  // saves a complete transient dashboard
  save: POST("/api/dashboard/save"),
  get: GET("/api/dashboard/:dashId"),
  update: PUT("/api/dashboard/:id"),
  delete: DELETE("/api/dashboard/:dashId"),
  addcard: POST("/api/dashboard/:dashId/cards"),
  removecard: DELETE("/api/dashboard/:dashId/cards"),
  reposition_cards: PUT("/api/dashboard/:dashId/cards"),
  favorite: POST("/api/dashboard/:dashId/favorite"),
  unfavorite: DELETE("/api/dashboard/:dashId/favorite"),

  listPublic: GET("/api/dashboard/public"),
  listEmbeddable: GET("/api/dashboard/embeddable"),
  createPublicLink: POST("/api/dashboard/:id/public_link"),
  deletePublicLink: DELETE("/api/dashboard/:id/public_link")
};

var CollectionsApi = exports.CollectionsApi = {
  list: GET("/api/collection"),
  create: POST("/api/collection"),
  get: GET("/api/collection/:id"),
  update: PUT("/api/collection/:id"),
  delete: DELETE("/api/collection/:id"),
  graph: GET("/api/collection/graph"),
  updateGraph: PUT("/api/collection/graph")
};

var PublicApi = exports.PublicApi = {
  card: GET("/api/public/card/:uuid"),
  cardQuery: GET("/api/public/card/:uuid/query"),
  dashboard: GET("/api/public/dashboard/:uuid"),
  dashboardCardQuery: GET("/api/public/dashboard/:uuid/card/:cardId")
};

var EmbedApi = exports.EmbedApi = {
  card: GET(embedBase + "/card/:token"),
  cardQuery: GET(embedBase + "/card/:token/query"),
  dashboard: GET(embedBase + "/dashboard/:token"),
  dashboardCardQuery: GET(embedBase + "/dashboard/:token/dashcard/:dashcardId/card/:cardId")
};

var AutoApi = exports.AutoApi = {
  dashboard: GET("/api/automagic-dashboards/:subPath", {
    // this prevents the `subPath` parameter from being URL encoded
    raw: { subPath: true }
  }),
  db_candidates: GET("/api/automagic-dashboards/database/:id/candidates")
};

var EmailApi = exports.EmailApi = {
  updateSettings: PUT("/api/email"),
  sendTest: POST("/api/email/test"),
  clear: DELETE("/api/email")
};

var SlackApi = exports.SlackApi = {
  updateSettings: PUT("/api/slack/settings")
};

var LdapApi = exports.LdapApi = {
  updateSettings: PUT("/api/ldap/settings")
};

var MetabaseApi = exports.MetabaseApi = {
  db_list: GET("/api/database"),
  db_list_with_tables: GET("/api/database?include_tables=true&include_cards=true"),
  db_real_list_with_tables: GET("/api/database?include_tables=true&include_cards=false"),
  db_create: POST("/api/database"),
  db_validate: POST("/api/database/validate"),
  db_add_sample_dataset: POST("/api/database/sample_dataset"),
  db_get: GET("/api/database/:dbId"),
  db_update: PUT("/api/database/:id"),
  db_delete: DELETE("/api/database/:dbId"),
  db_metadata: GET("/api/database/:dbId/metadata"),
  // db_tables:                   GET("/api/database/:dbId/tables"),
  db_fields: GET("/api/database/:dbId/fields"),
  db_idfields: GET("/api/database/:dbId/idfields"),
  db_autocomplete_suggestions: GET("/api/database/:dbId/autocomplete_suggestions?prefix=:prefix"),
  db_sync_schema: POST("/api/database/:dbId/sync_schema"),
  db_rescan_values: POST("/api/database/:dbId/rescan_values"),
  db_discard_values: POST("/api/database/:dbId/discard_values"),
  table_list: GET("/api/table"),
  // table_get:                   GET("/api/table/:tableId"),
  table_update: PUT("/api/table/:id"),
  // table_fields:                GET("/api/table/:tableId/fields"),
  table_fks: GET("/api/table/:tableId/fks"),
  // table_reorder_fields:       POST("/api/table/:tableId/reorder"),
  table_query_metadata: GET("/api/table/:tableId/query_metadata", function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(table) {
      var _table$metrics, _table$segments, GA, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, field;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(table && table.db && table.db.engine === "googleanalytics")) {
                _context.next = 7;
                break;
              }

              _context.next = 3;
              return (0, _gaMetadata2.default)();

            case 3:
              GA = _context.sent;

              table.fields = table.fields.map(function (f) {
                return _extends({}, f, GA.fields[f.name]);
              });
              (_table$metrics = table.metrics).push.apply(_table$metrics, _toConsumableArray(GA.metrics));
              (_table$segments = table.segments).push.apply(_table$segments, _toConsumableArray(GA.segments));

            case 7:
              if (!(table && table.fields)) {
                _context.next = 27;
                break;
              }

              // replace dimension_options IDs with objects
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 11;
              for (_iterator = table.fields[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                field = _step.value;

                if (field.dimension_options) {
                  field.dimension_options = field.dimension_options.map(function (id) {
                    return table.dimension_options[id];
                  });
                }
                if (field.default_dimension_option) {
                  field.default_dimension_option = table.dimension_options[field.default_dimension_option];
                }
              }
              _context.next = 19;
              break;

            case 15:
              _context.prev = 15;
              _context.t0 = _context["catch"](11);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 19:
              _context.prev = 19;
              _context.prev = 20;

              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }

            case 22:
              _context.prev = 22;

              if (!_didIteratorError) {
                _context.next = 25;
                break;
              }

              throw _iteratorError;

            case 25:
              return _context.finish(22);

            case 26:
              return _context.finish(19);

            case 27:
              return _context.abrupt("return", table);

            case 28:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, undefined, [[11, 15, 19, 27], [20,, 22, 26]]);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }()),
  // table_sync_metadata:        POST("/api/table/:tableId/sync"),
  table_rescan_values: POST("/api/table/:tableId/rescan_values"),
  table_discard_values: POST("/api/table/:tableId/discard_values"),
  field_get: GET("/api/field/:fieldId"),
  // field_summary:               GET("/api/field/:fieldId/summary"),
  field_values: GET("/api/field/:fieldId/values"),
  field_values_update: POST("/api/field/:fieldId/values"),
  field_update: PUT("/api/field/:id"),
  field_dimension_update: POST("/api/field/:fieldId/dimension"),
  field_dimension_delete: DELETE("/api/field/:fieldId/dimension"),
  field_rescan_values: POST("/api/field/:fieldId/rescan_values"),
  field_discard_values: POST("/api/field/:fieldId/discard_values"),
  field_search: GET("/api/field/:fieldId/search/:searchFieldId"),
  field_remapping: GET("/api/field/:fieldId/remapping/:remappedFieldId"),
  dataset: POST("/api/dataset"),
  dataset_duration: POST("/api/dataset/duration")
};

var AsyncApi = exports.AsyncApi = {
  status: GET("/api/async/:jobId")
  // endpoints:                  GET("/api/async/running-jobs")
};

var XRayApi = exports.XRayApi = {
  // X-Rays
  // NOTE Atte Keinänen 9/28/17: All xrays endpoints are asynchronous.
  // You should use BackgroundJobRequest in `metabase/lib/promise` for invoking them.
  field_xray: GET("/api/x-ray/field/:fieldId"),
  table_xray: GET("/api/x-ray/table/:tableId"),
  segment_xray: GET("/api/x-ray/segment/:segmentId"),
  card_xray: GET("/api/x-ray/card/:cardId"),

  compare_shared_type: GET("/api/x-ray/compare/:modelTypePlural/:modelId1/:modelId2"),
  compare_two_types: GET("/api/x-ray/compare/:modelType1/:modelId1/:modelType2/:modelId2")
};

var PulseApi = exports.PulseApi = {
  list: GET("/api/pulse"),
  create: POST("/api/pulse"),
  get: GET("/api/pulse/:pulseId"),
  update: PUT("/api/pulse/:id"),
  delete: DELETE("/api/pulse/:pulseId"),
  test: POST("/api/pulse/test"),
  form_input: GET("/api/pulse/form_input"),
  preview_card: GET("/api/pulse/preview_card_info/:id")
};

var AlertApi = exports.AlertApi = {
  list: GET("/api/alert"),
  list_for_question: GET("/api/alert/question/:questionId"),
  create: POST("/api/alert"),
  update: PUT("/api/alert/:id"),
  delete: DELETE("/api/alert/:id"),
  unsubscribe: PUT("/api/alert/:id/unsubscribe")
};

var SegmentApi = exports.SegmentApi = {
  list: GET("/api/segment"),
  create: POST("/api/segment"),
  get: GET("/api/segment/:segmentId"),
  update: PUT("/api/segment/:id"),
  delete: DELETE("/api/segment/:segmentId")
};

var MetricApi = exports.MetricApi = {
  list: GET("/api/metric"),
  create: POST("/api/metric"),
  get: GET("/api/metric/:metricId"),
  update: PUT("/api/metric/:id"),
  update_important_fields: PUT("/api/metric/:metricId/important_fields"),
  delete: DELETE("/api/metric/:metricId")
};

var RevisionApi = exports.RevisionApi = {
  list: GET("/api/revision"),
  revert: POST("/api/revision/revert")
};

var RevisionsApi = exports.RevisionsApi = {
  get: GET("/api/:entity/:id/revisions")
};

var LabelApi = exports.LabelApi = {
  list: GET("/api/label"),
  create: POST("/api/label"),
  update: PUT("/api/label/:id"),
  delete: DELETE("/api/label/:id")
};

var SessionApi = exports.SessionApi = {
  create: POST("/api/session"),
  createWithGoogleAuth: POST("/api/session/google_auth"),
  delete: DELETE("/api/session"),
  properties: GET("/api/session/properties"),
  forgot_password: POST("/api/session/forgot_password"),
  reset_password: POST("/api/session/reset_password"),
  password_reset_token_valid: GET("/api/session/password_reset_token_valid")
};

var SettingsApi = exports.SettingsApi = {
  list: GET("/api/setting"),
  put: PUT("/api/setting/:key")
  // setAll:                      PUT("/api/setting"),
  // delete:                   DELETE("/api/setting/:key"),
};

var PermissionsApi = exports.PermissionsApi = {
  groups: GET("/api/permissions/group"),
  groupDetails: GET("/api/permissions/group/:id"),
  graph: GET("/api/permissions/graph"),
  updateGraph: PUT("/api/permissions/graph"),
  createGroup: POST("/api/permissions/group"),
  memberships: GET("/api/permissions/membership"),
  createMembership: POST("/api/permissions/membership"),
  deleteMembership: DELETE("/api/permissions/membership/:id"),
  updateGroup: PUT("/api/permissions/group/:id"),
  deleteGroup: DELETE("/api/permissions/group/:id")
};

var GettingStartedApi = exports.GettingStartedApi = {
  get: GET("/api/getting_started")
};

var SetupApi = exports.SetupApi = {
  create: POST("/api/setup"),
  validate_db: POST("/api/setup/validate"),
  admin_checklist: GET("/api/setup/admin_checklist")
};

var UserApi = exports.UserApi = {
  create: POST("/api/user"),
  list: GET("/api/user"),
  current: GET("/api/user/current"),
  // get:                         GET("/api/user/:userId"),
  update: PUT("/api/user/:id"),
  update_password: PUT("/api/user/:id/password"),
  update_qbnewb: PUT("/api/user/:id/qbnewb"),
  delete: DELETE("/api/user/:userId"),
  send_invite: POST("/api/user/:id/send_invite")
};

var UtilApi = exports.UtilApi = {
  password_check: POST("/api/util/password_check"),
  random_token: GET("/api/util/random_token"),
  logs: GET("/api/util/logs")
};

var GeoJSONApi = exports.GeoJSONApi = {
  get: GET("/api/geojson/:id")
};

var I18NApi = exports.I18NApi = {
  locale: GET("/app/locales/:locale.json")
};

function setPublicQuestionEndpoints(uuid) {
  setFieldEndpoints("/api/public/card/:uuid", { uuid: uuid });
}
function setPublicDashboardEndpoints(uuid) {
  setFieldEndpoints("/api/public/dashboard/:uuid", { uuid: uuid });
}
function setEmbedQuestionEndpoints(token) {
  if (!_embed.IS_EMBED_PREVIEW) {
    setFieldEndpoints("/api/embed/card/:token", { token: token });
  }
}
function setEmbedDashboardEndpoints(token) {
  if (!_embed.IS_EMBED_PREVIEW) {
    setFieldEndpoints("/api/embed/dashboard/:token", { token: token });
  }
}

function GET_with(url, params) {
  return function (data, options) {
    return GET(url)(_extends({}, params, data), options);
  };
}

function setFieldEndpoints(prefix, params) {
  MetabaseApi.field_values = GET_with(prefix + "/field/:fieldId/values", params);
  MetabaseApi.field_search = GET_with(prefix + "/field/:fieldId/search/:searchFieldId", params);
  MetabaseApi.field_remapping = GET_with(prefix + "/field/:fieldId/remapping/:remappedFieldId", params);
}

global.services = exports;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(68)))

/***/ }),

/***/ 157:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FieldSet;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function FieldSet(_ref) {
  var _ref$className = _ref.className,
      className = _ref$className === undefined ? "border-brand" : _ref$className,
      legend = _ref.legend,
      noPadding = _ref.noPadding,
      children = _ref.children;

  var fieldSetClassName = (0, _classnames2.default)("bordered rounded", { "px2 pb2": !noPadding });

  return _react2.default.createElement(
    "fieldset",
    { className: (0, _classnames2.default)(className, fieldSetClassName) },
    legend && _react2.default.createElement(
      "legend",
      { className: "h5 text-bold text-uppercase px1 text-nowrap text-grey-4" },
      legend
    ),
    _react2.default.createElement(
      "div",
      null,
      children
    )
  );
}
FieldSet.displayName = "FieldSet";

/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchRealDatabasesWithMetadata = exports.fetchRemapping = exports.addRemappings = exports.fetchDatabasesWithMetadata = exports.fetchSegmentRevisions = exports.FETCH_SEGMENT_REVISIONS = exports.fetchSegmentTable = exports.FETCH_SEGMENT_TABLE = exports.fetchSegmentFields = exports.FETCH_SEGMENT_FIELDS = exports.fetchMetricRevisions = exports.FETCH_METRIC_REVISIONS = exports.fetchMetricTable = exports.FETCH_METRIC_TABLE = exports.fetchRevisions = exports.FETCH_REVISIONS = exports.updateFieldDimension = exports.UPDATE_FIELD_DIMENSION = exports.deleteFieldDimension = exports.DELETE_FIELD_DIMENSION = exports.updateField = exports.UPDATE_FIELD = exports.addFields = exports.ADD_FIELDS = exports.addParamValues = exports.ADD_PARAM_VALUES = exports.updateFieldValues = exports.UPDATE_FIELD_VALUES = exports.fetchFieldValues = exports.FETCH_FIELD_VALUES = exports.fetchField = exports.FETCH_FIELD = exports.fetchTableMetadata = exports.FETCH_TABLE_METADATA = exports.fetchTables = exports.updateTable = exports.updateDatabase = exports.fetchDatabaseMetadata = exports.FETCH_DATABASE_METADATA = exports.fetchRealDatabases = exports.FETCH_REAL_DATABASES = exports.fetchDatabases = exports.FETCH_DATABASES = exports.updateSegment = exports.fetchSegments = exports.FETCH_SEGMENTS = exports.updateMetricImportantFields = exports.updateMetric = exports.fetchMetrics = exports.FETCH_METRICS = undefined;

var _handleActions2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _redux = __webpack_require__(24);

var _normalizr = __webpack_require__(156);

var _schema = __webpack_require__(424);

var _icepick = __webpack_require__(14);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _metadata = __webpack_require__(30);

var _services = __webpack_require__(15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var FETCH_METRICS = exports.FETCH_METRICS = "metabase/metadata/FETCH_METRICS";
var fetchMetrics = exports.fetchMetrics = (0, _redux.createThunkAction)(FETCH_METRICS, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              requestStatePath = ["metadata", "metrics"];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                  var metrics;
                  return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return _services.MetricApi.list();

                        case 2:
                          metrics = _context.sent;
                          return _context.abrupt("return", (0, _normalizr.normalize)(metrics, [_schema.MetricSchema]));

                        case 4:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee, undefined);
                }));

                return function getData() {
                  return _ref2.apply(this, arguments);
                };
              }();

              _context2.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context2.abrupt("return", _context2.sent);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, undefined);
    }));

    return function (_x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();
});

var UPDATE_METRIC = "metabase/metadata/UPDATE_METRIC";
var updateMetric = exports.updateMetric = (0, _redux.createThunkAction)(UPDATE_METRIC, function (metric) {
  var _this = this;

  return function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dispatch, getState) {
      var requestStatePath, existingStatePath, dependentRequestStatePaths, putData;
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              requestStatePath = ["metadata", "metrics", metric.id];
              existingStatePath = ["metadata", "metrics"];
              dependentRequestStatePaths = [["metadata", "revisions", "metric", metric.id]];

              putData = function () {
                var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                  var updatedMetric;
                  return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          _context3.next = 2;
                          return _services.MetricApi.update(metric);

                        case 2:
                          updatedMetric = _context3.sent;
                          return _context3.abrupt("return", (0, _normalizr.normalize)(updatedMetric, _schema.MetricSchema));

                        case 4:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3, _this);
                }));

                return function putData() {
                  return _ref4.apply(this, arguments);
                };
              }();

              _context4.next = 6;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                dependentRequestStatePaths: dependentRequestStatePaths,
                putData: putData
              });

            case 6:
              return _context4.abrupt("return", _context4.sent);

            case 7:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, _this);
    }));

    return function (_x4, _x5) {
      return _ref3.apply(this, arguments);
    };
  }();
});

var UPDATE_METRIC_IMPORTANT_FIELDS = "metabase/guide/UPDATE_METRIC_IMPORTANT_FIELDS";
var updateMetricImportantFields = exports.updateMetricImportantFields = (0, _redux.createThunkAction)(UPDATE_METRIC_IMPORTANT_FIELDS, function (metricId, importantFieldIds) {
  var _this2 = this;

  return function () {
    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(dispatch, getState) {
      var requestStatePath, existingStatePath, dependentRequestStatePaths, putData;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              requestStatePath = ["reference", "guide", "metric_important_fields", metricId];
              existingStatePath = requestStatePath;
              dependentRequestStatePaths = [["reference", "guide"]];

              putData = function () {
                var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
                  return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                      switch (_context5.prev = _context5.next) {
                        case 0:
                          _context5.next = 2;
                          return _services.MetricApi.update_important_fields({
                            metricId: metricId,
                            important_field_ids: importantFieldIds
                          });

                        case 2:
                        case "end":
                          return _context5.stop();
                      }
                    }
                  }, _callee5, _this2);
                }));

                return function putData() {
                  return _ref6.apply(this, arguments);
                };
              }();

              _context6.next = 6;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                dependentRequestStatePaths: dependentRequestStatePaths,
                putData: putData
              });

            case 6:
              return _context6.abrupt("return", _context6.sent);

            case 7:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, _this2);
    }));

    return function (_x6, _x7) {
      return _ref5.apply(this, arguments);
    };
  }();
});

var FETCH_SEGMENTS = exports.FETCH_SEGMENTS = "metabase/metadata/FETCH_SEGMENTS";
var fetchSegments = exports.fetchSegments = (0, _redux.createThunkAction)(FETCH_SEGMENTS, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              requestStatePath = ["metadata", "segments"];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                  var segments;
                  return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                      switch (_context7.prev = _context7.next) {
                        case 0:
                          _context7.next = 2;
                          return _services.SegmentApi.list();

                        case 2:
                          segments = _context7.sent;
                          return _context7.abrupt("return", (0, _normalizr.normalize)(segments, [_schema.SegmentSchema]));

                        case 4:
                        case "end":
                          return _context7.stop();
                      }
                    }
                  }, _callee7, undefined);
                }));

                return function getData() {
                  return _ref8.apply(this, arguments);
                };
              }();

              _context8.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context8.abrupt("return", _context8.sent);

            case 6:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, undefined);
    }));

    return function (_x9, _x10) {
      return _ref7.apply(this, arguments);
    };
  }();
});

var UPDATE_SEGMENT = "metabase/metadata/UPDATE_SEGMENT";
var updateSegment = exports.updateSegment = (0, _redux.createThunkAction)(UPDATE_SEGMENT, function (segment) {
  var _this3 = this;

  return function () {
    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(dispatch, getState) {
      var requestStatePath, existingStatePath, dependentRequestStatePaths, putData;
      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              requestStatePath = ["metadata", "segments", segment.id];
              existingStatePath = ["metadata", "segments"];
              dependentRequestStatePaths = [["metadata", "revisions", "segment", segment.id]];

              putData = function () {
                var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
                  var updatedSegment;
                  return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                      switch (_context9.prev = _context9.next) {
                        case 0:
                          _context9.next = 2;
                          return _services.SegmentApi.update(segment);

                        case 2:
                          updatedSegment = _context9.sent;
                          return _context9.abrupt("return", (0, _normalizr.normalize)(updatedSegment, _schema.SegmentSchema));

                        case 4:
                        case "end":
                          return _context9.stop();
                      }
                    }
                  }, _callee9, _this3);
                }));

                return function putData() {
                  return _ref10.apply(this, arguments);
                };
              }();

              _context10.next = 6;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                dependentRequestStatePaths: dependentRequestStatePaths,
                putData: putData
              });

            case 6:
              return _context10.abrupt("return", _context10.sent);

            case 7:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10, _this3);
    }));

    return function (_x11, _x12) {
      return _ref9.apply(this, arguments);
    };
  }();
});

var FETCH_DATABASES = exports.FETCH_DATABASES = "metabase/metadata/FETCH_DATABASES";
var fetchDatabases = exports.fetchDatabases = (0, _redux.createThunkAction)(FETCH_DATABASES, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              requestStatePath = ["metadata", "databases"];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
                  var databases;
                  return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                      switch (_context11.prev = _context11.next) {
                        case 0:
                          _context11.next = 2;
                          return _services.MetabaseApi.db_list_with_tables();

                        case 2:
                          databases = _context11.sent;
                          return _context11.abrupt("return", (0, _normalizr.normalize)(databases, [_schema.DatabaseSchema]));

                        case 4:
                        case "end":
                          return _context11.stop();
                      }
                    }
                  }, _callee11, undefined);
                }));

                return function getData() {
                  return _ref12.apply(this, arguments);
                };
              }();

              _context12.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context12.abrupt("return", _context12.sent);

            case 6:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12, undefined);
    }));

    return function (_x14, _x15) {
      return _ref11.apply(this, arguments);
    };
  }();
});

var FETCH_REAL_DATABASES = exports.FETCH_REAL_DATABASES = "metabase/metadata/FETCH_REAL_DATABASES";
var fetchRealDatabases = exports.fetchRealDatabases = (0, _redux.createThunkAction)(FETCH_REAL_DATABASES, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee14$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              requestStatePath = ["metadata", "databases"];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
                  var databases;
                  return regeneratorRuntime.wrap(function _callee13$(_context13) {
                    while (1) {
                      switch (_context13.prev = _context13.next) {
                        case 0:
                          _context13.next = 2;
                          return _services.MetabaseApi.db_real_list_with_tables();

                        case 2:
                          databases = _context13.sent;
                          return _context13.abrupt("return", (0, _normalizr.normalize)(databases, [_schema.DatabaseSchema]));

                        case 4:
                        case "end":
                          return _context13.stop();
                      }
                    }
                  }, _callee13, undefined);
                }));

                return function getData() {
                  return _ref14.apply(this, arguments);
                };
              }();

              _context14.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context14.abrupt("return", _context14.sent);

            case 6:
            case "end":
              return _context14.stop();
          }
        }
      }, _callee14, undefined);
    }));

    return function (_x17, _x18) {
      return _ref13.apply(this, arguments);
    };
  }();
});

var FETCH_DATABASE_METADATA = exports.FETCH_DATABASE_METADATA = "metabase/metadata/FETCH_DATABASE_METADATA";
var fetchDatabaseMetadata = exports.fetchDatabaseMetadata = (0, _redux.createThunkAction)(FETCH_DATABASE_METADATA, function (dbId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(dispatch, getState) {
      var _this4 = this;

      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee16$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              requestStatePath = ["metadata", "databases", dbId];
              existingStatePath = ["metadata"];

              getData = function () {
                var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
                  var databaseMetadata;
                  return regeneratorRuntime.wrap(function _callee15$(_context15) {
                    while (1) {
                      switch (_context15.prev = _context15.next) {
                        case 0:
                          _context15.next = 2;
                          return _services.MetabaseApi.db_metadata({ dbId: dbId });

                        case 2:
                          databaseMetadata = _context15.sent;
                          return _context15.abrupt("return", (0, _normalizr.normalize)(databaseMetadata, _schema.DatabaseSchema));

                        case 4:
                        case "end":
                          return _context15.stop();
                      }
                    }
                  }, _callee15, _this4);
                }));

                return function getData() {
                  return _ref16.apply(this, arguments);
                };
              }();

              _context16.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context16.abrupt("return", _context16.sent);

            case 6:
            case "end":
              return _context16.stop();
          }
        }
      }, _callee16, this);
    }));

    return function (_x20, _x21) {
      return _ref15.apply(this, arguments);
    };
  }();
});

var UPDATE_DATABASE = "metabase/metadata/UPDATE_DATABASE";
var updateDatabase = exports.updateDatabase = (0, _redux.createThunkAction)(UPDATE_DATABASE, function (database) {
  var _this5 = this;

  return function () {
    var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(dispatch, getState) {
      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee18$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              requestStatePath = ["metadata", "databases", database.id];
              existingStatePath = ["metadata", "databases"];

              putData = function () {
                var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
                  var slimDatabase, updatedDatabase;
                  return regeneratorRuntime.wrap(function _callee17$(_context17) {
                    while (1) {
                      switch (_context17.prev = _context17.next) {
                        case 0:
                          // make sure we don't send all the computed metadata
                          // there may be more that I'm missing?
                          slimDatabase = _underscore2.default.omit(database, "tables", "tables_lookup");
                          _context17.next = 3;
                          return _services.MetabaseApi.db_update(slimDatabase);

                        case 3:
                          updatedDatabase = _context17.sent;
                          return _context17.abrupt("return", (0, _normalizr.normalize)(updatedDatabase, _schema.DatabaseSchema));

                        case 5:
                        case "end":
                          return _context17.stop();
                      }
                    }
                  }, _callee17, _this5);
                }));

                return function putData() {
                  return _ref18.apply(this, arguments);
                };
              }();

              _context18.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context18.abrupt("return", _context18.sent);

            case 6:
            case "end":
              return _context18.stop();
          }
        }
      }, _callee18, _this5);
    }));

    return function (_x22, _x23) {
      return _ref17.apply(this, arguments);
    };
  }();
});

var UPDATE_TABLE = "metabase/metadata/UPDATE_TABLE";
var updateTable = exports.updateTable = (0, _redux.createThunkAction)(UPDATE_TABLE, function (table) {
  var _this6 = this;

  return function () {
    var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(dispatch, getState) {
      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee20$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              requestStatePath = ["metadata", "tables", table.id];
              existingStatePath = ["metadata", "tables"];

              putData = function () {
                var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
                  var slimTable, updatedTable;
                  return regeneratorRuntime.wrap(function _callee19$(_context19) {
                    while (1) {
                      switch (_context19.prev = _context19.next) {
                        case 0:
                          // make sure we don't send all the computed metadata
                          slimTable = _underscore2.default.omit(table, "fields", "fields_lookup", "aggregation_options", "breakout_options", "metrics", "segments");
                          _context19.next = 3;
                          return _services.MetabaseApi.table_update(slimTable);

                        case 3:
                          updatedTable = _context19.sent;
                          return _context19.abrupt("return", (0, _normalizr.normalize)(updatedTable, _schema.TableSchema));

                        case 5:
                        case "end":
                          return _context19.stop();
                      }
                    }
                  }, _callee19, _this6);
                }));

                return function putData() {
                  return _ref20.apply(this, arguments);
                };
              }();

              _context20.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context20.abrupt("return", _context20.sent);

            case 6:
            case "end":
              return _context20.stop();
          }
        }
      }, _callee20, _this6);
    }));

    return function (_x24, _x25) {
      return _ref19.apply(this, arguments);
    };
  }();
});

var FETCH_TABLES = "metabase/metadata/FETCH_TABLES";
var fetchTables = exports.fetchTables = (0, _redux.createThunkAction)(FETCH_TABLES, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee22$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              requestStatePath = ["metadata", "tables"];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
                  var tables;
                  return regeneratorRuntime.wrap(function _callee21$(_context21) {
                    while (1) {
                      switch (_context21.prev = _context21.next) {
                        case 0:
                          _context21.next = 2;
                          return _services.MetabaseApi.table_list();

                        case 2:
                          tables = _context21.sent;
                          return _context21.abrupt("return", (0, _normalizr.normalize)(tables, [_schema.TableSchema]));

                        case 4:
                        case "end":
                          return _context21.stop();
                      }
                    }
                  }, _callee21, undefined);
                }));

                return function getData() {
                  return _ref22.apply(this, arguments);
                };
              }();

              _context22.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context22.abrupt("return", _context22.sent);

            case 6:
            case "end":
              return _context22.stop();
          }
        }
      }, _callee22, undefined);
    }));

    return function (_x27, _x28) {
      return _ref21.apply(this, arguments);
    };
  }();
});

var FETCH_TABLE_METADATA = exports.FETCH_TABLE_METADATA = "metabase/metadata/FETCH_TABLE_METADATA";
var fetchTableMetadata = exports.fetchTableMetadata = (0, _redux.createThunkAction)(FETCH_TABLE_METADATA, function (tableId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(dispatch, getState) {
      var _this7 = this;

      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee24$(_context24) {
        while (1) {
          switch (_context24.prev = _context24.next) {
            case 0:
              requestStatePath = ["metadata", "tables", tableId];
              existingStatePath = ["metadata"];

              getData = function () {
                var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
                  var tableMetadata, fkTableIds, fkTables;
                  return regeneratorRuntime.wrap(function _callee23$(_context23) {
                    while (1) {
                      switch (_context23.prev = _context23.next) {
                        case 0:
                          _context23.next = 2;
                          return _services.MetabaseApi.table_query_metadata({
                            tableId: tableId
                          });

                        case 2:
                          tableMetadata = _context23.sent;
                          fkTableIds = _underscore2.default.chain(tableMetadata.fields).filter(function (field) {
                            return field.target;
                          }).map(function (field) {
                            return field.target.table_id;
                          }).uniq().value();
                          _context23.next = 6;
                          return Promise.all(fkTableIds.map(function (tableId) {
                            return _services.MetabaseApi.table_query_metadata({ tableId: tableId });
                          }));

                        case 6:
                          fkTables = _context23.sent;
                          return _context23.abrupt("return", (0, _normalizr.normalize)([tableMetadata].concat(fkTables), [_schema.TableSchema]));

                        case 8:
                        case "end":
                          return _context23.stop();
                      }
                    }
                  }, _callee23, _this7);
                }));

                return function getData() {
                  return _ref24.apply(this, arguments);
                };
              }();

              _context24.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context24.abrupt("return", _context24.sent);

            case 6:
            case "end":
              return _context24.stop();
          }
        }
      }, _callee24, this);
    }));

    return function (_x30, _x31) {
      return _ref23.apply(this, arguments);
    };
  }();
});

var FETCH_FIELD = exports.FETCH_FIELD = "metabase/metadata/FETCH_FIELD";
var fetchField = exports.fetchField = (0, _redux.createThunkAction)(FETCH_FIELD, function (fieldId, reload) {
  return function () {
    var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(dispatch, getState) {
      var _this8 = this;

      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee26$(_context26) {
        while (1) {
          switch (_context26.prev = _context26.next) {
            case 0:
              requestStatePath = ["metadata", "fields", fieldId];
              existingStatePath = requestStatePath;

              getData = function () {
                var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
                  return regeneratorRuntime.wrap(function _callee25$(_context25) {
                    while (1) {
                      switch (_context25.prev = _context25.next) {
                        case 0:
                          _context25.t0 = _normalizr.normalize;
                          _context25.next = 3;
                          return _services.MetabaseApi.field_get({ fieldId: fieldId });

                        case 3:
                          _context25.t1 = _context25.sent;
                          _context25.t2 = _schema.FieldSchema;
                          return _context25.abrupt("return", (0, _context25.t0)(_context25.t1, _context25.t2));

                        case 6:
                        case "end":
                          return _context25.stop();
                      }
                    }
                  }, _callee25, _this8);
                }));

                return function getData() {
                  return _ref26.apply(this, arguments);
                };
              }();

              _context26.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: true
              });

            case 5:
              return _context26.abrupt("return", _context26.sent);

            case 6:
            case "end":
              return _context26.stop();
          }
        }
      }, _callee26, this);
    }));

    return function (_x32, _x33) {
      return _ref25.apply(this, arguments);
    };
  }();
});
var FETCH_FIELD_VALUES = exports.FETCH_FIELD_VALUES = "metabase/metadata/FETCH_FIELD_VALUES";
var fetchFieldValues = exports.fetchFieldValues = (0, _redux.createThunkAction)(FETCH_FIELD_VALUES, function (fieldId, reload) {
  return function () {
    var _ref27 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee27$(_context27) {
        while (1) {
          switch (_context27.prev = _context27.next) {
            case 0:
              requestStatePath = ["metadata", "fields", fieldId, "values"];
              existingStatePath = requestStatePath;

              getData = function getData() {
                return _services.MetabaseApi.field_values({ fieldId: fieldId });
              };

              _context27.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context27.abrupt("return", _context27.sent);

            case 6:
            case "end":
              return _context27.stop();
          }
        }
      }, _callee27, this);
    }));

    return function (_x34, _x35) {
      return _ref27.apply(this, arguments);
    };
  }();
});

// Docstring from m.api.field:
// Update the human-readable values for a `Field` whose special type is
// `category`/`city`/`state`/`country` or whose base type is `type/Boolean`."
var UPDATE_FIELD_VALUES = exports.UPDATE_FIELD_VALUES = "metabase/metadata/UPDATE_FIELD_VALUES";
var updateFieldValues = exports.updateFieldValues = (0, _redux.createThunkAction)(UPDATE_FIELD_VALUES, function (fieldId, fieldValuePairs) {
  return function () {
    var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(dispatch, getState) {
      var _this9 = this;

      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee29$(_context29) {
        while (1) {
          switch (_context29.prev = _context29.next) {
            case 0:
              requestStatePath = ["metadata", "fields", fieldId, "dimension"];
              existingStatePath = ["metadata", "fields", fieldId];

              putData = function () {
                var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {
                  return regeneratorRuntime.wrap(function _callee28$(_context28) {
                    while (1) {
                      switch (_context28.prev = _context28.next) {
                        case 0:
                          _context28.next = 2;
                          return _services.MetabaseApi.field_values_update({
                            fieldId: fieldId,
                            values: fieldValuePairs
                          });

                        case 2:
                          return _context28.abrupt("return", _context28.sent);

                        case 3:
                        case "end":
                          return _context28.stop();
                      }
                    }
                  }, _callee28, _this9);
                }));

                return function putData() {
                  return _ref29.apply(this, arguments);
                };
              }();

              _context29.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context29.abrupt("return", _context29.sent);

            case 6:
            case "end":
              return _context29.stop();
          }
        }
      }, _callee29, this);
    }));

    return function (_x36, _x37) {
      return _ref28.apply(this, arguments);
    };
  }();
});

var ADD_PARAM_VALUES = exports.ADD_PARAM_VALUES = "metabase/metadata/ADD_PARAM_VALUES";
var addParamValues = exports.addParamValues = (0, _redux.createAction)(ADD_PARAM_VALUES);

var ADD_FIELDS = exports.ADD_FIELDS = "metabase/metadata/ADD_FIELDS";
var addFields = exports.addFields = (0, _redux.createAction)(ADD_FIELDS, function (fields) {
  return (0, _normalizr.normalize)(fields, [_schema.FieldSchema]);
});

var UPDATE_FIELD = exports.UPDATE_FIELD = "metabase/metadata/UPDATE_FIELD";
var updateField = exports.updateField = (0, _redux.createThunkAction)(UPDATE_FIELD, function (field) {
  return function () {
    var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31(dispatch, getState) {
      var _this10 = this;

      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee31$(_context31) {
        while (1) {
          switch (_context31.prev = _context31.next) {
            case 0:
              requestStatePath = ["metadata", "fields", field.id];
              existingStatePath = ["metadata", "fields"];

              putData = function () {
                var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
                  var slimField, updatedField;
                  return regeneratorRuntime.wrap(function _callee30$(_context30) {
                    while (1) {
                      switch (_context30.prev = _context30.next) {
                        case 0:
                          // make sure we don't send all the computed metadata
                          // there may be more that I'm missing?
                          slimField = _underscore2.default.omit(field, "operators_lookup");
                          _context30.next = 3;
                          return _services.MetabaseApi.field_update(slimField);

                        case 3:
                          updatedField = _context30.sent;
                          return _context30.abrupt("return", (0, _normalizr.normalize)(updatedField, _schema.FieldSchema));

                        case 5:
                        case "end":
                          return _context30.stop();
                      }
                    }
                  }, _callee30, _this10);
                }));

                return function putData() {
                  return _ref31.apply(this, arguments);
                };
              }();

              _context31.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context31.abrupt("return", _context31.sent);

            case 6:
            case "end":
              return _context31.stop();
          }
        }
      }, _callee31, this);
    }));

    return function (_x38, _x39) {
      return _ref30.apply(this, arguments);
    };
  }();
});

var DELETE_FIELD_DIMENSION = exports.DELETE_FIELD_DIMENSION = "metabase/metadata/DELETE_FIELD_DIMENSION";
var deleteFieldDimension = exports.deleteFieldDimension = (0, _redux.createThunkAction)(DELETE_FIELD_DIMENSION, function (fieldId) {
  return function () {
    var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33(dispatch, getState) {
      var _this11 = this;

      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee33$(_context33) {
        while (1) {
          switch (_context33.prev = _context33.next) {
            case 0:
              requestStatePath = ["metadata", "fields", fieldId, "dimension"];
              existingStatePath = ["metadata", "fields", fieldId];

              putData = function () {
                var _ref33 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {
                  return regeneratorRuntime.wrap(function _callee32$(_context32) {
                    while (1) {
                      switch (_context32.prev = _context32.next) {
                        case 0:
                          _context32.next = 2;
                          return _services.MetabaseApi.field_dimension_delete({ fieldId: fieldId });

                        case 2:
                          return _context32.abrupt("return", _context32.sent);

                        case 3:
                        case "end":
                          return _context32.stop();
                      }
                    }
                  }, _callee32, _this11);
                }));

                return function putData() {
                  return _ref33.apply(this, arguments);
                };
              }();

              _context33.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context33.abrupt("return", _context33.sent);

            case 6:
            case "end":
              return _context33.stop();
          }
        }
      }, _callee33, this);
    }));

    return function (_x40, _x41) {
      return _ref32.apply(this, arguments);
    };
  }();
});

var UPDATE_FIELD_DIMENSION = exports.UPDATE_FIELD_DIMENSION = "metabase/metadata/UPDATE_FIELD_DIMENSION";
var updateFieldDimension = exports.updateFieldDimension = (0, _redux.createThunkAction)(UPDATE_FIELD_DIMENSION, function (fieldId, dimension) {
  return function () {
    var _ref34 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35(dispatch, getState) {
      var _this12 = this;

      var requestStatePath, existingStatePath, putData;
      return regeneratorRuntime.wrap(function _callee35$(_context35) {
        while (1) {
          switch (_context35.prev = _context35.next) {
            case 0:
              requestStatePath = ["metadata", "fields", fieldId, "dimension"];
              existingStatePath = ["metadata", "fields", fieldId];

              putData = function () {
                var _ref35 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {
                  return regeneratorRuntime.wrap(function _callee34$(_context34) {
                    while (1) {
                      switch (_context34.prev = _context34.next) {
                        case 0:
                          _context34.next = 2;
                          return _services.MetabaseApi.field_dimension_update(_extends({
                            fieldId: fieldId
                          }, dimension));

                        case 2:
                          return _context34.abrupt("return", _context34.sent);

                        case 3:
                        case "end":
                          return _context34.stop();
                      }
                    }
                  }, _callee34, _this12);
                }));

                return function putData() {
                  return _ref35.apply(this, arguments);
                };
              }();

              _context35.next = 5;
              return (0, _redux.updateData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                putData: putData
              });

            case 5:
              return _context35.abrupt("return", _context35.sent);

            case 6:
            case "end":
              return _context35.stop();
          }
        }
      }, _callee35, this);
    }));

    return function (_x42, _x43) {
      return _ref34.apply(this, arguments);
    };
  }();
});

var FETCH_REVISIONS = exports.FETCH_REVISIONS = "metabase/metadata/FETCH_REVISIONS";
var fetchRevisions = exports.fetchRevisions = (0, _redux.createThunkAction)(FETCH_REVISIONS, function (type, id) {
  var reload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  return function () {
    var _ref36 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37(dispatch, getState) {
      var requestStatePath, existingStatePath, getData;
      return regeneratorRuntime.wrap(function _callee37$(_context37) {
        while (1) {
          switch (_context37.prev = _context37.next) {
            case 0:
              requestStatePath = ["metadata", "revisions", type, id];
              existingStatePath = ["metadata", "revisions"];

              getData = function () {
                var _ref37 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {
                  var revisions, revisionMap, existingRevisions;
                  return regeneratorRuntime.wrap(function _callee36$(_context36) {
                    while (1) {
                      switch (_context36.prev = _context36.next) {
                        case 0:
                          _context36.next = 2;
                          return _services.RevisionsApi.get({ id: id, entity: type });

                        case 2:
                          revisions = _context36.sent;
                          revisionMap = (0, _redux.resourceListToMap)(revisions);
                          existingRevisions = (0, _icepick.getIn)(getState(), existingStatePath);
                          return _context36.abrupt("return", (0, _icepick.assocIn)(existingRevisions, [type, id], revisionMap));

                        case 6:
                        case "end":
                          return _context36.stop();
                      }
                    }
                  }, _callee36, undefined);
                }));

                return function getData() {
                  return _ref37.apply(this, arguments);
                };
              }();

              _context37.next = 5;
              return (0, _redux.fetchData)({
                dispatch: dispatch,
                getState: getState,
                requestStatePath: requestStatePath,
                existingStatePath: existingStatePath,
                getData: getData,
                reload: reload
              });

            case 5:
              return _context37.abrupt("return", _context37.sent);

            case 6:
            case "end":
              return _context37.stop();
          }
        }
      }, _callee37, undefined);
    }));

    return function (_x45, _x46) {
      return _ref36.apply(this, arguments);
    };
  }();
});

// for fetches with data dependencies in /reference
var FETCH_METRIC_TABLE = exports.FETCH_METRIC_TABLE = "metabase/metadata/FETCH_METRIC_TABLE";
var fetchMetricTable = exports.fetchMetricTable = (0, _redux.createThunkAction)(FETCH_METRIC_TABLE, function (metricId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref38 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38(dispatch, getState) {
      var metric, tableId;
      return regeneratorRuntime.wrap(function _callee38$(_context38) {
        while (1) {
          switch (_context38.prev = _context38.next) {
            case 0:
              _context38.next = 2;
              return dispatch(fetchMetrics());

            case 2:
              // FIXME: fetchMetric?
              metric = (0, _icepick.getIn)(getState(), ["metadata", "metrics", metricId]);
              tableId = metric.table_id;
              _context38.next = 6;
              return dispatch(fetchTableMetadata(tableId));

            case 6:
            case "end":
              return _context38.stop();
          }
        }
      }, _callee38, undefined);
    }));

    return function (_x48, _x49) {
      return _ref38.apply(this, arguments);
    };
  }();
});

var FETCH_METRIC_REVISIONS = exports.FETCH_METRIC_REVISIONS = "metabase/metadata/FETCH_METRIC_REVISIONS";
var fetchMetricRevisions = exports.fetchMetricRevisions = (0, _redux.createThunkAction)(FETCH_METRIC_REVISIONS, function (metricId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref39 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39(dispatch, getState) {
      var metric, tableId;
      return regeneratorRuntime.wrap(function _callee39$(_context39) {
        while (1) {
          switch (_context39.prev = _context39.next) {
            case 0:
              _context39.next = 2;
              return Promise.all([dispatch(fetchRevisions("metric", metricId)), dispatch(fetchMetrics())]);

            case 2:
              metric = (0, _icepick.getIn)(getState(), ["metadata", "metrics", metricId]);
              tableId = metric.table_id;
              _context39.next = 6;
              return dispatch(fetchTableMetadata(tableId));

            case 6:
            case "end":
              return _context39.stop();
          }
        }
      }, _callee39, undefined);
    }));

    return function (_x51, _x52) {
      return _ref39.apply(this, arguments);
    };
  }();
});

var FETCH_SEGMENT_FIELDS = exports.FETCH_SEGMENT_FIELDS = "metabase/metadata/FETCH_SEGMENT_FIELDS";
var fetchSegmentFields = exports.fetchSegmentFields = (0, _redux.createThunkAction)(FETCH_SEGMENT_FIELDS, function (segmentId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref40 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40(dispatch, getState) {
      var segment, tableId, table, databaseId;
      return regeneratorRuntime.wrap(function _callee40$(_context40) {
        while (1) {
          switch (_context40.prev = _context40.next) {
            case 0:
              _context40.next = 2;
              return dispatch(fetchSegments());

            case 2:
              // FIXME: fetchSegment?
              segment = (0, _icepick.getIn)(getState(), ["metadata", "segments", segmentId]);
              tableId = segment.table_id;
              _context40.next = 6;
              return dispatch(fetchTableMetadata(tableId));

            case 6:
              table = (0, _icepick.getIn)(getState(), ["metadata", "tables", tableId]);
              databaseId = table.db_id;
              _context40.next = 10;
              return dispatch(fetchDatabaseMetadata(databaseId));

            case 10:
            case "end":
              return _context40.stop();
          }
        }
      }, _callee40, undefined);
    }));

    return function (_x54, _x55) {
      return _ref40.apply(this, arguments);
    };
  }();
});

var FETCH_SEGMENT_TABLE = exports.FETCH_SEGMENT_TABLE = "metabase/metadata/FETCH_SEGMENT_TABLE";
var fetchSegmentTable = exports.fetchSegmentTable = (0, _redux.createThunkAction)(FETCH_SEGMENT_TABLE, function (segmentId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref41 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41(dispatch, getState) {
      var segment, tableId;
      return regeneratorRuntime.wrap(function _callee41$(_context41) {
        while (1) {
          switch (_context41.prev = _context41.next) {
            case 0:
              _context41.next = 2;
              return dispatch(fetchSegments());

            case 2:
              // FIXME: fetchSegment?
              segment = (0, _icepick.getIn)(getState(), ["metadata", "segments", segmentId]);
              tableId = segment.table_id;
              _context41.next = 6;
              return dispatch(fetchTableMetadata(tableId));

            case 6:
            case "end":
              return _context41.stop();
          }
        }
      }, _callee41, undefined);
    }));

    return function (_x57, _x58) {
      return _ref41.apply(this, arguments);
    };
  }();
});

var FETCH_SEGMENT_REVISIONS = exports.FETCH_SEGMENT_REVISIONS = "metabase/metadata/FETCH_SEGMENT_REVISIONS";
var fetchSegmentRevisions = exports.fetchSegmentRevisions = (0, _redux.createThunkAction)(FETCH_SEGMENT_REVISIONS, function (segmentId) {
  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  return function () {
    var _ref42 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42(dispatch, getState) {
      var segment, tableId;
      return regeneratorRuntime.wrap(function _callee42$(_context42) {
        while (1) {
          switch (_context42.prev = _context42.next) {
            case 0:
              _context42.next = 2;
              return Promise.all([dispatch(fetchRevisions("segment", segmentId)), dispatch(fetchSegments())]);

            case 2:
              segment = (0, _icepick.getIn)(getState(), ["metadata", "segments", segmentId]);
              tableId = segment.table_id;
              _context42.next = 6;
              return dispatch(fetchTableMetadata(tableId));

            case 6:
            case "end":
              return _context42.stop();
          }
        }
      }, _callee42, undefined);
    }));

    return function (_x60, _x61) {
      return _ref42.apply(this, arguments);
    };
  }();
});

var FETCH_DATABASES_WITH_METADATA = "metabase/metadata/FETCH_DATABASES_WITH_METADATA";
var fetchDatabasesWithMetadata = exports.fetchDatabasesWithMetadata = (0, _redux.createThunkAction)(FETCH_DATABASES_WITH_METADATA, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref43 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43(dispatch, getState) {
      var databases;
      return regeneratorRuntime.wrap(function _callee43$(_context43) {
        while (1) {
          switch (_context43.prev = _context43.next) {
            case 0:
              _context43.next = 2;
              return dispatch(fetchDatabases());

            case 2:
              databases = (0, _icepick.getIn)(getState(), ["metadata", "databases"]);
              _context43.next = 5;
              return Promise.all(Object.values(databases).map(function (database) {
                return dispatch(fetchDatabaseMetadata(database.id));
              }));

            case 5:
            case "end":
              return _context43.stop();
          }
        }
      }, _callee43, undefined);
    }));

    return function (_x63, _x64) {
      return _ref43.apply(this, arguments);
    };
  }();
});

var ADD_REMAPPINGS = "metabase/metadata/ADD_REMAPPINGS";
var addRemappings = exports.addRemappings = (0, _redux.createAction)(ADD_REMAPPINGS, function (fieldId, remappings) {
  return { fieldId: fieldId, remappings: remappings };
});

var FETCH_REMAPPING = "metabase/metadata/FETCH_REMAPPING";
var fetchRemapping = exports.fetchRemapping = (0, _redux.createThunkAction)(FETCH_REMAPPING, function (value, fieldId) {
  return function () {
    var _ref44 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45(dispatch, getState) {
      var metadata, field, remappedField, _fieldId, remappedFieldId;

      return regeneratorRuntime.wrap(function _callee45$(_context45) {
        while (1) {
          switch (_context45.prev = _context45.next) {
            case 0:
              metadata = (0, _metadata.getMetadata)(getState());
              field = metadata.fields[fieldId];
              remappedField = field && field.remappedField();

              if (field && remappedField && !field.hasRemappedValue(value)) {
                _fieldId = (field.target || field).id;
                remappedFieldId = remappedField.id;

                (0, _redux.fetchData)({
                  dispatch: dispatch,
                  getState: getState,
                  requestStatePath: ["metadata", "remapping", _fieldId, JSON.stringify(value)],
                  getData: function () {
                    var _ref45 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {
                      var remapping;
                      return regeneratorRuntime.wrap(function _callee44$(_context44) {
                        while (1) {
                          switch (_context44.prev = _context44.next) {
                            case 0:
                              _context44.next = 2;
                              return _services.MetabaseApi.field_remapping({
                                value: value,
                                fieldId: _fieldId,
                                remappedFieldId: remappedFieldId
                              });

                            case 2:
                              remapping = _context44.sent;

                              if (remapping) {
                                // FIXME: should this be field.id (potentially the FK) or fieldId (always the PK)?
                                dispatch(addRemappings(field.id, [remapping]));
                              }

                            case 4:
                            case "end":
                              return _context44.stop();
                          }
                        }
                      }, _callee44, undefined);
                    }));

                    return function getData() {
                      return _ref45.apply(this, arguments);
                    };
                  }()
                });
              }

            case 4:
            case "end":
              return _context45.stop();
          }
        }
      }, _callee45, undefined);
    }));

    return function (_x65, _x66) {
      return _ref44.apply(this, arguments);
    };
  }();
});

var FETCH_REAL_DATABASES_WITH_METADATA = "metabase/metadata/FETCH_REAL_DATABASES_WITH_METADATA";
var fetchRealDatabasesWithMetadata = exports.fetchRealDatabasesWithMetadata = (0, _redux.createThunkAction)(FETCH_REAL_DATABASES_WITH_METADATA, function () {
  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  return function () {
    var _ref46 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46(dispatch, getState) {
      var databases;
      return regeneratorRuntime.wrap(function _callee46$(_context46) {
        while (1) {
          switch (_context46.prev = _context46.next) {
            case 0:
              _context46.next = 2;
              return dispatch(fetchRealDatabases());

            case 2:
              databases = (0, _icepick.getIn)(getState(), ["metadata", "databases"]);
              _context46.next = 5;
              return Promise.all(Object.values(databases).map(function (database) {
                return dispatch(fetchDatabaseMetadata(database.id));
              }));

            case 5:
            case "end":
              return _context46.stop();
          }
        }
      }, _callee46, undefined);
    }));

    return function (_x68, _x69) {
      return _ref46.apply(this, arguments);
    };
  }();
});

var databases = (0, _redux.handleActions)({}, {});

var databasesList = (0, _redux.handleActions)(_defineProperty({}, FETCH_DATABASES, {
  next: function next(state, _ref47) {
    var payload = _ref47.payload;
    return payload && payload.result || state;
  }
}), []);

var tables = (0, _redux.handleActions)({}, {});

var fields = (0, _redux.handleActions)((_handleActions2 = {}, _defineProperty(_handleActions2, FETCH_FIELD_VALUES, {
  next: function next(state, _ref48) {
    var fieldValues = _ref48.payload;
    return fieldValues ? (0, _icepick.assocIn)(state, [fieldValues.field_id, "values"], fieldValues.values) : state;
  }
}), _defineProperty(_handleActions2, ADD_PARAM_VALUES, {
  next: function next(state, _ref49) {
    var paramValues = _ref49.payload;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = Object.values(paramValues)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var fieldValues = _step.value;

        state = (0, _icepick.assocIn)(state, [fieldValues.field_id, "values"], fieldValues);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return state;
  }
}), _defineProperty(_handleActions2, ADD_REMAPPINGS, function (state, _ref50) {
  var _ref50$payload = _ref50.payload,
      fieldId = _ref50$payload.fieldId,
      remappings = _ref50$payload.remappings;
  return (0, _icepick.updateIn)(state, [fieldId, "remappings"], function () {
    var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    return Array.from(new Map(existing.concat(remappings)));
  });
}), _handleActions2), {});

var metrics = (0, _redux.handleActions)({}, {});

var segments = (0, _redux.handleActions)({}, {});

var revisions = (0, _redux.handleActions)(_defineProperty({}, FETCH_REVISIONS, { next: function next(state, _ref51) {
    var payload = _ref51.payload;
    return payload;
  } }), {});

exports.default = (0, _redux.combineReducers)({
  metrics: (0, _redux.handleEntities)(/^metabase\/metadata\//, "metrics", metrics),
  segments: (0, _redux.handleEntities)(/^metabase\/metadata\//, "segments", segments),
  databases: (0, _redux.handleEntities)(/^metabase\/metadata\//, "databases", databases),
  tables: (0, _redux.handleEntities)(/^metabase\/metadata\//, "tables", tables),
  fields: (0, _redux.handleEntities)(/^metabase\/metadata\//, "fields", fields),
  revisions: revisions,
  databasesList: databasesList
});

/***/ }),

/***/ 160:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.archiveDashboard = exports.setArchived = exports.setFavorited = exports.saveDashboard = exports.updateDashboard = exports.createDashboard = exports.fetchArchivedDashboards = exports.fetchDashboards = exports.SET_ARCHIVED = exports.SET_FAVORITED = exports.UPDATE_DASHBOARD = exports.SAVE_DASHBOARD = exports.DELETE_DASHBOARD = exports.CREATE_DASHBOARD = exports.FETCH_ARCHIVE = exports.FETCH_DASHBOARDS = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _handleActions, _handleActions2;

var _redux = __webpack_require__(24);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _urls = __webpack_require__(34);

var Urls = _interopRequireWildcard(_urls);

var _services = __webpack_require__(15);

var _undo = __webpack_require__(103);

var _reactRouterRedux = __webpack_require__(19);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /*  weak */

var FETCH_DASHBOARDS = exports.FETCH_DASHBOARDS = "metabase/dashboards/FETCH_DASHBOARDS";
var FETCH_ARCHIVE = exports.FETCH_ARCHIVE = "metabase/dashboards/FETCH_ARCHIVE";
var CREATE_DASHBOARD = exports.CREATE_DASHBOARD = "metabase/dashboards/CREATE_DASHBOARD";
var DELETE_DASHBOARD = exports.DELETE_DASHBOARD = "metabase/dashboards/DELETE_DASHBOARD";
var SAVE_DASHBOARD = exports.SAVE_DASHBOARD = "metabase/dashboards/SAVE_DASHBOARD";
var UPDATE_DASHBOARD = exports.UPDATE_DASHBOARD = "metabase/dashboards/UPDATE_DASHBOARD";
var SET_FAVORITED = exports.SET_FAVORITED = "metabase/dashboards/SET_FAVORITED";
var SET_ARCHIVED = exports.SET_ARCHIVED = "metabase/dashboards/SET_ARCHIVED";

/**
 * Actions that retrieve/update the basic information of dashboards
 * `dashboards.dashboardListing` holds an array of all dashboards without cards
 */

var fetchDashboards = exports.fetchDashboards = (0, _redux.createThunkAction)(FETCH_DASHBOARDS, function () {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      var dashboards, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, dashboard;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _services.DashboardApi.list({ f: "all" });

            case 2:
              dashboards = _context.sent;
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 6;


              for (_iterator = dashboards[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                dashboard = _step.value;

                dashboard.updated_at = (0, _moment2.default)(dashboard.updated_at);
              }

              _context.next = 14;
              break;

            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](6);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 14:
              _context.prev = 14;
              _context.prev = 15;

              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }

            case 17:
              _context.prev = 17;

              if (!_didIteratorError) {
                _context.next = 20;
                break;
              }

              throw _iteratorError;

            case 20:
              return _context.finish(17);

            case 21:
              return _context.finish(14);

            case 22:
              return _context.abrupt("return", dashboards);

            case 23:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this, [[6, 10, 14, 22], [15,, 17, 21]]);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
});

var fetchArchivedDashboards = exports.fetchArchivedDashboards = (0, _redux.createThunkAction)(FETCH_ARCHIVE, function () {
  return function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      var dashboards, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, dashboard;

      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _services.DashboardApi.list({ f: "archived" });

            case 2:
              dashboards = _context2.sent;
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context2.prev = 6;


              for (_iterator2 = dashboards[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                dashboard = _step2.value;

                dashboard.updated_at = (0, _moment2.default)(dashboard.updated_at);
              }

              _context2.next = 14;
              break;

            case 10:
              _context2.prev = 10;
              _context2.t0 = _context2["catch"](6);
              _didIteratorError2 = true;
              _iteratorError2 = _context2.t0;

            case 14:
              _context2.prev = 14;
              _context2.prev = 15;

              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }

            case 17:
              _context2.prev = 17;

              if (!_didIteratorError2) {
                _context2.next = 20;
                break;
              }

              throw _iteratorError2;

            case 20:
              return _context2.finish(17);

            case 21:
              return _context2.finish(14);

            case 22:
              return _context2.abrupt("return", dashboards);

            case 23:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this, [[6, 10, 14, 22], [15,, 17, 21]]);
    }));

    return function (_x3, _x4) {
      return _ref2.apply(this, arguments);
    };
  }();
});

var createDashboard = exports.createDashboard = (0, _redux.createThunkAction)(CREATE_DASHBOARD, function (dashboard, _ref3) {
  var redirect = _ref3.redirect;
  return function () {
    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dispatch, getState) {
      var createdDashboard;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _analytics2.default.trackEvent("Dashboard", "Create");
              _context3.next = 3;
              return _services.DashboardApi.create(dashboard);

            case 3:
              createdDashboard = _context3.sent;


              if (redirect) {
                dispatch((0, _reactRouterRedux.push)(Urls.dashboard(createdDashboard.id)));
              }

              return _context3.abrupt("return", createdDashboard);

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, undefined);
    }));

    return function (_x5, _x6) {
      return _ref4.apply(this, arguments);
    };
  }();
});

var updateDashboard = exports.updateDashboard = (0, _redux.createThunkAction)(UPDATE_DASHBOARD, function (dashboard) {
  return function () {
    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dispatch, getState) {
      var id, name, description, parameters, caveats, points_of_interest, show_in_getting_started, cleanDashboard, updatedDashboard;
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              id = dashboard.id, name = dashboard.name, description = dashboard.description, parameters = dashboard.parameters, caveats = dashboard.caveats, points_of_interest = dashboard.points_of_interest, show_in_getting_started = dashboard.show_in_getting_started;
              cleanDashboard = {
                id: id,
                name: name,
                description: description,
                parameters: parameters,
                caveats: caveats,
                points_of_interest: points_of_interest,
                show_in_getting_started: show_in_getting_started
              };
              _context4.next = 4;
              return _services.DashboardApi.update(cleanDashboard);

            case 4:
              updatedDashboard = _context4.sent;


              _analytics2.default.trackEvent("Dashboard", "Update");

              return _context4.abrupt("return", updatedDashboard);

            case 7:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, undefined);
    }));

    return function (_x7, _x8) {
      return _ref5.apply(this, arguments);
    };
  }();
});

var saveDashboard = exports.saveDashboard = (0, _redux.createThunkAction)(SAVE_DASHBOARD, function (dashboard) {
  return function () {
    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(dispatch, getState) {
      var id, name, description, parameters;
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              id = dashboard.id, name = dashboard.name, description = dashboard.description, parameters = dashboard.parameters;

              _analytics2.default.trackEvent("Dashboard", "Update");
              _context5.next = 4;
              return _services.DashboardApi.update({ id: id, name: name, description: description, parameters: parameters });

            case 4:
              return _context5.abrupt("return", _context5.sent);

            case 5:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    return function (_x9, _x10) {
      return _ref6.apply(this, arguments);
    };
  }();
});

var setFavorited = exports.setFavorited = (0, _redux.createThunkAction)(SET_FAVORITED, function (dashId, favorited) {
  return function () {
    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              if (!favorited) {
                _context6.next = 5;
                break;
              }

              _context6.next = 3;
              return _services.DashboardApi.favorite({ dashId: dashId });

            case 3:
              _context6.next = 7;
              break;

            case 5:
              _context6.next = 7;
              return _services.DashboardApi.unfavorite({ dashId: dashId });

            case 7:
              _analytics2.default.trackEvent("Dashboard", favorited ? "Favorite" : "Unfavorite");
              return _context6.abrupt("return", { id: dashId, favorite: favorited });

            case 9:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, undefined);
    }));

    return function (_x11, _x12) {
      return _ref7.apply(this, arguments);
    };
  }();
});

var setArchived = exports.setArchived = (0, _redux.createThunkAction)(SET_ARCHIVED, function (dashId, archived) {
  var undoable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  return function () {
    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(dispatch, getState) {
      var response, type;
      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return _services.DashboardApi.update({
                id: dashId,
                archived: archived
              });

            case 2:
              response = _context7.sent;


              if (undoable) {
                type = archived ? "archived" : "unarchived";

                dispatch((0, _undo.addUndo)((0, _undo.createUndo)({
                  type: type,
                  message: _react2.default.createElement(
                    "div",
                    null,
                    "Dashboard was " + type + "."
                  ),
                  action: setArchived(dashId, !archived)
                })));
              }

              _analytics2.default.trackEvent("Dashboard", archived ? "Archive" : "Unarchive");
              return _context7.abrupt("return", response);

            case 6:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7, undefined);
    }));

    return function (_x14, _x15) {
      return _ref8.apply(this, arguments);
    };
  }();
});
// Convenience shorthand
var archiveDashboard = exports.archiveDashboard = function () {
  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(dashId) {
    return regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return setArchived(dashId, true);

          case 2:
            return _context8.abrupt("return", _context8.sent);

          case 3:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, undefined);
  }));

  return function archiveDashboard(_x16) {
    return _ref9.apply(this, arguments);
  };
}();

var archive = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, FETCH_ARCHIVE, function (state, _ref10) {
  var payload = _ref10.payload;
  return payload;
}), _defineProperty(_handleActions, SET_ARCHIVED, function (state, _ref11) {
  var payload = _ref11.payload;
  return payload.archived ? (state || []).concat(payload) : (state || []).filter(function (d) {
    return d.id !== payload.id;
  });
}), _handleActions), null);

var dashboardListing = (0, _redux.handleActions)((_handleActions2 = {}, _defineProperty(_handleActions2, FETCH_DASHBOARDS, function (state, _ref12) {
  var payload = _ref12.payload;
  return payload;
}), _defineProperty(_handleActions2, CREATE_DASHBOARD, function (state, _ref13) {
  var payload = _ref13.payload;
  return (state || []).concat(payload);
}), _defineProperty(_handleActions2, DELETE_DASHBOARD, function (state, _ref14) {
  var payload = _ref14.payload;
  return (state || []).filter(function (d) {
    return d.id !== payload;
  });
}), _defineProperty(_handleActions2, SAVE_DASHBOARD, function (state, _ref15) {
  var payload = _ref15.payload;
  return (state || []).map(function (d) {
    return d.id === payload.id ? payload : d;
  });
}), _defineProperty(_handleActions2, UPDATE_DASHBOARD, function (state, _ref16) {
  var payload = _ref16.payload;
  return (state || []).map(function (d) {
    return d.id === payload.id ? payload : d;
  });
}), _defineProperty(_handleActions2, SET_FAVORITED, function (state, _ref17) {
  var payload = _ref17.payload;
  return (state || []).map(function (d) {
    return d.id === payload.id ? _extends({}, d, { favorite: payload.favorite }) : d;
  });
}), _defineProperty(_handleActions2, SET_ARCHIVED, function (state, _ref18) {
  var payload = _ref18.payload;
  return payload.archived ? (state || []).filter(function (d) {
    return d.id !== payload.id;
  }) : (state || []).concat(payload);
}), _handleActions2), null);

exports.default = (0, _redux.combineReducers)({
  dashboardListing: dashboardListing,
  archive: archive
});

/***/ }),

/***/ 161:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _ListSearchField = __webpack_require__(237);

var _ListSearchField2 = _interopRequireDefault(_ListSearchField);

var _reactVirtualized = __webpack_require__(166);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AccordianList = (_temp = _class = function (_Component) {
  _inherits(AccordianList, _Component);

  function AccordianList(props, context) {
    _classCallCheck(this, AccordianList);

    var _this = _possibleConstructorReturn(this, (AccordianList.__proto__ || Object.getPrototypeOf(AccordianList)).call(this, props, context));

    var openSection = void 0;
    // use initiallyOpenSection prop if present
    if (props.initiallyOpenSection !== undefined) {
      openSection = props.initiallyOpenSection;
    }
    // otherwise try to find the selected section, if any
    if (openSection === undefined) {
      openSection = _underscore2.default.findIndex(props.sections, function (section, index) {
        return _this.sectionIsSelected(section, index);
      });
      if (openSection === -1) {
        openSection = undefined;
      }
    }
    // default to the first section
    if (openSection === undefined) {
      openSection = 0;
    }

    _this.state = {
      openSection: openSection,
      searchText: ""
    };

    _this._cache = new _reactVirtualized.CellMeasurerCache({
      fixedWidth: true,
      minHeight: 10
    });
    return _this;
  }

  _createClass(AccordianList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      // NOTE: for some reason the row heights aren't computed correctly when
      // first rendering, so force the list to update
      this._forceUpdateList();
      // `scrollToRow` upon mounting, after _forceUpdateList
      // Use list.scrollToRow instead of the scrollToIndex prop since the
      // causes the list's scrolling to be pinned to the selected row
      setTimeout(function () {
        if (_this2._initialSelectedRowIndex != null) {
          _this2._list.scrollToRow(_this2._initialSelectedRowIndex);
        }
      }, 0);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      // if anything changes that affects the selected rows we need to clear the row height cache
      if (this.state.openSection !== prevState.openSection || this.state.searchText !== prevState.searchText) {
        this._clearRowHeightCache();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // ensure _forceUpdateList is not called after unmounting
      if (this._forceUpdateTimeout != null) {
        clearTimeout(this._forceUpdateTimeout);
        this._forceUpdateTimeout = null;
      }
    }

    // resets the row height cache when the displayed rows change

  }, {
    key: "_clearRowHeightCache",
    value: function _clearRowHeightCache() {
      var _this3 = this;

      this._cache.clearAll();
      // NOTE: unclear why this needs to be async
      this._forceUpdateTimeout = setTimeout(function () {
        _this3._forceUpdateTimeout = null;
        _this3._forceUpdateList();
      });
    }
  }, {
    key: "_forceUpdateList",
    value: function _forceUpdateList() {
      // NOTE: unclear why this particular set of functions works, but it does
      this._list.invalidateCellSizeAfterRender({
        columnIndex: 0,
        rowIndex: 0
      });
      this._list.forceUpdateGrid();
      this.forceUpdate();
    }
  }, {
    key: "toggleSection",
    value: function toggleSection(sectionIndex) {
      if (this.props.onChangeSection) {
        if (this.props.onChangeSection(sectionIndex) === false) {
          return;
        }
      }

      var openSection = this.getOpenSection();
      if (openSection === sectionIndex) {
        sectionIndex = null;
      }
      this.setState({ openSection: sectionIndex });
    }
  }, {
    key: "getOpenSection",
    value: function getOpenSection() {
      if (this.props.sections.length === 1) {
        return 0;
      }

      var openSection = this.state.openSection;

      if (openSection === undefined) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = this.props.sections.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step$value = _slicedToArray(_step.value, 2),
                index = _step$value[0],
                section = _step$value[1];

            if (this.sectionIsSelected(section, index)) {
              openSection = index;
              break;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      return openSection;
    }
  }, {
    key: "sectionIsSelected",
    value: function sectionIsSelected(section, sectionIndex) {
      var _this4 = this;

      var sections = this.props.sections;

      var selectedSection = null;
      for (var i = 0; i < sections.length; i++) {
        if (_underscore2.default.some(sections[i].items, function (item) {
          return _this4.itemIsSelected(item);
        })) {
          selectedSection = i;
          break;
        }
      }
      return selectedSection === sectionIndex;
    }
  }, {
    key: "itemIsClickable",
    value: function itemIsClickable(item) {
      if (this.props.itemIsClickable) {
        return this.props.itemIsClickable(item);
      } else {
        return true;
      }
    }
  }, {
    key: "itemIsSelected",
    value: function itemIsSelected(item) {
      if (this.props.itemIsSelected) {
        return this.props.itemIsSelected(item);
      } else {
        return false;
      }
    }
  }, {
    key: "onChange",
    value: function onChange(item) {
      if (this.props.onChange) {
        this.props.onChange(item);
      }
    }
  }, {
    key: "renderItemExtra",
    value: function renderItemExtra(item, itemIndex) {
      if (this.props.renderItemExtra) {
        return this.props.renderItemExtra(item, itemIndex);
      } else {
        return null;
      }
    }
  }, {
    key: "renderItemIcon",
    value: function renderItemIcon(item, itemIndex) {
      if (this.props.renderItemIcon) {
        return this.props.renderItemIcon(item, itemIndex);
      } else {
        return null;
      }
    }
  }, {
    key: "renderSectionIcon",
    value: function renderSectionIcon(section, sectionIndex) {
      if (this.props.renderSectionIcon) {
        return _react2.default.createElement(
          "span",
          { className: "List-section-icon mr1 flex align-center" },
          this.props.renderSectionIcon(section, sectionIndex)
        );
      } else {
        return null;
      }
    }
  }, {
    key: "getItemClasses",
    value: function getItemClasses(item, itemIndex) {
      return this.props.getItemClasses && this.props.getItemClasses(item, itemIndex);
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      var _props = this.props,
          id = _props.id,
          style = _props.style,
          searchable = _props.searchable,
          searchPlaceholder = _props.searchPlaceholder,
          sections = _props.sections,
          showItemArrows = _props.showItemArrows,
          alwaysTogglable = _props.alwaysTogglable,
          alwaysExpanded = _props.alwaysExpanded,
          hideSingleSectionTitle = _props.hideSingleSectionTitle;
      var searchText = this.state.searchText;


      var openSection = this.getOpenSection();
      var sectionIsExpanded = function sectionIsExpanded(sectionIndex) {
        return alwaysExpanded || openSection === sectionIndex;
      };
      var sectionIsSearchable = function sectionIsSearchable(sectionIndex) {
        return searchable && (typeof searchable !== "function" || searchable(sections[sectionIndex]));
      };
      var sectionIsTogglable = function sectionIsTogglable(sectionIndex) {
        return alwaysTogglable || sections.length > 1;
      };

      var rows = [];
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = sections.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              sectionIndex = _step2$value[0],
              section = _step2$value[1];

          var isLastSection = sectionIndex === sections.length - 1;
          if (section.name && (!hideSingleSectionTitle || sections.length > 1 || alwaysTogglable)) {
            rows.push({ type: "header", section: section, sectionIndex: sectionIndex, isLastSection: isLastSection });
          } else {
            rows.push({
              type: "header-hidden",
              section: section,
              sectionIndex: sectionIndex,
              isLastSection: isLastSection
            });
          }
          if (sectionIsSearchable(sectionIndex) && sectionIsExpanded(sectionIndex) && section.items && section.items.length > 0) {
            rows.push({ type: "search", section: section, sectionIndex: sectionIndex, isLastSection: isLastSection });
          }
          if (sectionIsExpanded(sectionIndex) && section.items && section.items.length > 0) {
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;

            try {
              for (var _iterator3 = section.items.entries()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var _step3$value = _slicedToArray(_step3.value, 2),
                    itemIndex = _step3$value[0],
                    item = _step3$value[1];

                if (!searchText || item.name.toLowerCase().includes(searchText.toLowerCase())) {
                  var isLastItem = itemIndex === section.items.length - 1;
                  if (this.itemIsSelected(item)) {
                    this._initialSelectedRowIndex = rows.length;
                  }
                  rows.push({
                    type: "item",
                    section: section,
                    sectionIndex: sectionIndex,
                    isLastSection: isLastSection,
                    item: item,
                    itemIndex: itemIndex,
                    isLastItem: isLastItem
                  });
                }
              }
            } catch (err) {
              _didIteratorError3 = true;
              _iteratorError3 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                  _iterator3.return();
                }
              } finally {
                if (_didIteratorError3) {
                  throw _iteratorError3;
                }
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      var maxHeight = this.props.maxHeight > 0 && this.props.maxHeight < Infinity ? this.props.maxHeight : window.innerHeight;

      var width = this.props.width;
      var height = Math.min(maxHeight, rows.reduce(function (height, row, index) {
        return height + _this5._cache.rowHeight({ index: index });
      }, 0));

      return _react2.default.createElement(_reactVirtualized.List, {
        id: id,
        ref: function ref(list) {
          return _this5._list = list;
        },
        className: this.props.className,
        style: style,
        width: width,
        height: height,
        rowCount: rows.length,
        deferredMeasurementCache: this._cache,
        rowHeight: this._cache.rowHeight
        // HACK: needs to be large enough to render enough rows to fill the screen since we used
        // the CellMeasurerCache to calculate the height
        , overscanRowCount: 100
        // ensure `scrollToRow` scrolls the row to the top of the list
        , scrollToAlignment: "start",
        rowRenderer: function rowRenderer(_ref) {
          var key = _ref.key,
              index = _ref.index,
              parent = _ref.parent,
              style = _ref.style;
          var _rows$index = rows[index],
              type = _rows$index.type,
              section = _rows$index.section,
              sectionIndex = _rows$index.sectionIndex,
              item = _rows$index.item,
              itemIndex = _rows$index.itemIndex,
              isLastItem = _rows$index.isLastItem;

          return _react2.default.createElement(
            _reactVirtualized.CellMeasurer,
            {
              cache: _this5._cache,
              columnIndex: 0,
              key: key,
              rowIndex: index,
              parent: parent
            },
            function (_ref2) {
              var measure = _ref2.measure;
              return _react2.default.createElement(
                "div",
                {
                  style: style,
                  className: (0, _classnames2.default)("List-section", section.className, {
                    "List-section--expanded": sectionIsExpanded(sectionIndex),
                    "List-section--togglable": sectionIsTogglable(sectionIndex)
                  })
                },
                type === "header" ? alwaysExpanded ? _react2.default.createElement(
                  "div",
                  { className: "px2 pt2 pb1 h6 text-grey-2 text-uppercase text-bold" },
                  section.name
                ) : _react2.default.createElement(
                  "div",
                  {
                    className: (0, _classnames2.default)("List-section-header p2 flex align-center", {
                      "cursor-pointer": sectionIsTogglable(sectionIndex),
                      "border-top": sectionIndex !== 0,
                      "border-bottom": sectionIsExpanded(sectionIndex)
                    }),
                    onClick: sectionIsTogglable(sectionIndex) && function () {
                      return _this5.toggleSection(sectionIndex);
                    }
                  },
                  _this5.renderSectionIcon(section, sectionIndex),
                  _react2.default.createElement(
                    "h3",
                    { className: "List-section-title" },
                    section.name
                  ),
                  sections.length > 1 && section.items && section.items.length > 0 && _react2.default.createElement(
                    "span",
                    { className: "flex-align-right" },
                    _react2.default.createElement(_Icon2.default, {
                      name: sectionIsExpanded(sectionIndex) ? "chevronup" : "chevrondown",
                      size: 12
                    })
                  )
                ) : type === "header-hidden" ? _react2.default.createElement("div", { className: "my1" }) : type === "search" ? _react2.default.createElement(
                  "div",
                  {
                    className: "m1",
                    style: { border: "2px solid transparent" }
                  },
                  _react2.default.createElement(_ListSearchField2.default, {
                    onChange: function onChange(val) {
                      return _this5.setState({ searchText: val });
                    },
                    searchText: _this5.state.searchText,
                    placeholder: searchPlaceholder,
                    autoFocus: true
                  })
                ) : type === "item" ? _react2.default.createElement(
                  "div",
                  {
                    className: (0, _classnames2.default)("List-item flex mx1", {
                      "List-item--selected": _this5.itemIsSelected(item),
                      "List-item--disabled": !_this5.itemIsClickable(item),
                      mb1: isLastItem
                    }, _this5.getItemClasses(item, itemIndex))
                  },
                  _react2.default.createElement(
                    "a",
                    {
                      className: (0, _classnames2.default)("p1 flex-full flex align-center", _this5.itemIsClickable(item) ? "cursor-pointer" : "cursor-default"),
                      onClick: _this5.itemIsClickable(item) && _this5.onChange.bind(_this5, item)
                    },
                    _react2.default.createElement(
                      "span",
                      { className: "flex align-center" },
                      _this5.renderItemIcon(item, itemIndex)
                    ),
                    _react2.default.createElement(
                      "h4",
                      { className: "List-item-title ml1" },
                      item.name
                    )
                  ),
                  _this5.renderItemExtra(item, itemIndex),
                  showItemArrows && _react2.default.createElement(
                    "div",
                    { className: "List-item-arrow flex align-center px1" },
                    _react2.default.createElement(_Icon2.default, { name: "chevronright", size: 8 })
                  )
                ) : null
              );
            }
          );
        }
      });
    }
  }]);

  return AccordianList;
}(_react.Component), _class.propTypes = {
  id: _propTypes2.default.string,
  sections: _propTypes2.default.array.isRequired,
  searchable: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),
  initiallyOpenSection: _propTypes2.default.number,
  openSection: _propTypes2.default.number,
  onChange: _propTypes2.default.func,
  onChangeSection: _propTypes2.default.func,
  itemIsSelected: _propTypes2.default.func,
  itemIsClickable: _propTypes2.default.func,
  renderItem: _propTypes2.default.func,
  renderSectionIcon: _propTypes2.default.func,
  getItemClasses: _propTypes2.default.func,
  alwaysTogglable: _propTypes2.default.bool,
  alwaysExpanded: _propTypes2.default.bool,
  hideSingleSectionTitle: _propTypes2.default.bool
}, _class.defaultProps = {
  style: {},
  width: 300,
  searchable: function searchable(section) {
    return section.items && section.items.length > 10;
  },
  alwaysTogglable: false,
  alwaysExpanded: false,
  hideSingleSectionTitle: false
}, _temp);
AccordianList.displayName = "AccordianList";
exports.default = AccordianList;

/***/ }),

/***/ 169:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LogoIcon = (_temp = _class = function (_Component) {
  _inherits(LogoIcon, _Component);

  function LogoIcon() {
    _classCallCheck(this, LogoIcon);

    return _possibleConstructorReturn(this, (LogoIcon.__proto__ || Object.getPrototypeOf(LogoIcon)).apply(this, arguments));
  }

  _createClass(LogoIcon, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          dark = _props.dark,
          height = _props.height,
          width = _props.width,
          size = _props.size;

      return _react2.default.createElement(
        "svg",
        {
          className: (0, _classnames2.default)("Icon", { "text-brand": !dark }, { "text-white": dark }),
          viewBox: "0 0 66 85",
          width: width || size,
          height: height || size,
          fill: "currentcolor"
        },
        _react2.default.createElement("path", {
          d: "M46.8253288,70.4935014 C49.5764899,70.4935014 51.8067467,68.1774705 51.8067467,65.3205017 C51.8067467,62.4635329 49.5764899,60.147502 46.8253288,60.147502 C44.0741676,60.147502 41.8439108,62.4635329 41.8439108,65.3205017 C41.8439108,68.1774705 44.0741676,70.4935014 46.8253288,70.4935014 Z M32.8773585,84.9779005 C35.6285197,84.9779005 37.8587764,82.6618697 37.8587764,79.8049008 C37.8587764,76.947932 35.6285197,74.6319011 32.8773585,74.6319011 C30.1261973,74.6319011 27.8959405,76.947932 27.8959405,79.8049008 C27.8959405,82.6618697 30.1261973,84.9779005 32.8773585,84.9779005 Z M32.8773585,70.4935014 C35.6285197,70.4935014 37.8587764,68.1774705 37.8587764,65.3205017 C37.8587764,62.4635329 35.6285197,60.147502 32.8773585,60.147502 C30.1261973,60.147502 27.8959405,62.4635329 27.8959405,65.3205017 C27.8959405,68.1774705 30.1261973,70.4935014 32.8773585,70.4935014 Z M18.9293882,70.4935014 C21.6805494,70.4935014 23.9108062,68.1774705 23.9108062,65.3205017 C23.9108062,62.4635329 21.6805494,60.147502 18.9293882,60.147502 C16.1782271,60.147502 13.9479703,62.4635329 13.9479703,65.3205017 C13.9479703,68.1774705 16.1782271,70.4935014 18.9293882,70.4935014 Z M46.8253288,56.0091023 C49.5764899,56.0091023 51.8067467,53.6930714 51.8067467,50.8361026 C51.8067467,47.9791337 49.5764899,45.6631029 46.8253288,45.6631029 C44.0741676,45.6631029 41.8439108,47.9791337 41.8439108,50.8361026 C41.8439108,53.6930714 44.0741676,56.0091023 46.8253288,56.0091023 Z M18.9293882,56.0091023 C21.6805494,56.0091023 23.9108062,53.6930714 23.9108062,50.8361026 C23.9108062,47.9791337 21.6805494,45.6631029 18.9293882,45.6631029 C16.1782271,45.6631029 13.9479703,47.9791337 13.9479703,50.8361026 C13.9479703,53.6930714 16.1782271,56.0091023 18.9293882,56.0091023 Z M46.8253288,26.8995984 C49.5764899,26.8995984 51.8067467,24.5835675 51.8067467,21.7265987 C51.8067467,18.8696299 49.5764899,16.553599 46.8253288,16.553599 C44.0741676,16.553599 41.8439108,18.8696299 41.8439108,21.7265987 C41.8439108,24.5835675 44.0741676,26.8995984 46.8253288,26.8995984 Z M32.8773585,41.5247031 C35.6285197,41.5247031 37.8587764,39.2086723 37.8587764,36.3517034 C37.8587764,33.4947346 35.6285197,31.1787037 32.8773585,31.1787037 C30.1261973,31.1787037 27.8959405,33.4947346 27.8959405,36.3517034 C27.8959405,39.2086723 30.1261973,41.5247031 32.8773585,41.5247031 Z M32.8773585,10.3459994 C35.6285197,10.3459994 37.8587764,8.02996853 37.8587764,5.17299969 C37.8587764,2.31603085 35.6285197,0 32.8773585,0 C30.1261973,0 27.8959405,2.31603085 27.8959405,5.17299969 C27.8959405,8.02996853 30.1261973,10.3459994 32.8773585,10.3459994 Z M32.8773585,26.8995984 C35.6285197,26.8995984 37.8587764,24.5835675 37.8587764,21.7265987 C37.8587764,18.8696299 35.6285197,16.553599 32.8773585,16.553599 C30.1261973,16.553599 27.8959405,18.8696299 27.8959405,21.7265987 C27.8959405,24.5835675 30.1261973,26.8995984 32.8773585,26.8995984 Z M18.9293882,26.8995984 C21.6805494,26.8995984 23.9108062,24.5835675 23.9108062,21.7265987 C23.9108062,18.8696299 21.6805494,16.553599 18.9293882,16.553599 C16.1782271,16.553599 13.9479703,18.8696299 13.9479703,21.7265987 C13.9479703,24.5835675 16.1782271,26.8995984 18.9293882,26.8995984 Z",
          opacity: "0.2"
        }),
        _react2.default.createElement("path", { d: "M60.773299,70.4935014 C63.5244602,70.4935014 65.754717,68.1774705 65.754717,65.3205017 C65.754717,62.4635329 63.5244602,60.147502 60.773299,60.147502 C58.0221379,60.147502 55.7918811,62.4635329 55.7918811,65.3205017 C55.7918811,68.1774705 58.0221379,70.4935014 60.773299,70.4935014 Z M4.98141795,70.3527958 C7.73257912,70.3527958 9.96283591,68.0367649 9.96283591,65.1797961 C9.96283591,62.3228273 7.73257912,60.0067964 4.98141795,60.0067964 C2.23025679,60.0067964 0,62.3228273 0,65.1797961 C0,68.0367649 2.23025679,70.3527958 4.98141795,70.3527958 Z M60.773299,56.0091023 C63.5244602,56.0091023 65.754717,53.6930714 65.754717,50.8361026 C65.754717,47.9791337 63.5244602,45.6631029 60.773299,45.6631029 C58.0221379,45.6631029 55.7918811,47.9791337 55.7918811,50.8361026 C55.7918811,53.6930714 58.0221379,56.0091023 60.773299,56.0091023 Z M32.8773585,56.0091023 C35.6285197,56.0091023 37.8587764,53.6930714 37.8587764,50.8361026 C37.8587764,47.9791337 35.6285197,45.6631029 32.8773585,45.6631029 C30.1261973,45.6631029 27.8959405,47.9791337 27.8959405,50.8361026 C27.8959405,53.6930714 30.1261973,56.0091023 32.8773585,56.0091023 Z M4.98141795,55.8683967 C7.73257912,55.8683967 9.96283591,53.5523658 9.96283591,50.695397 C9.96283591,47.8384281 7.73257912,45.5223973 4.98141795,45.5223973 C2.23025679,45.5223973 0,47.8384281 0,50.695397 C0,53.5523658 2.23025679,55.8683967 4.98141795,55.8683967 Z M60.773299,41.5247031 C63.5244602,41.5247031 65.754717,39.2086723 65.754717,36.3517034 C65.754717,33.4947346 63.5244602,31.1787037 60.773299,31.1787037 C58.0221379,31.1787037 55.7918811,33.4947346 55.7918811,36.3517034 C55.7918811,39.2086723 58.0221379,41.5247031 60.773299,41.5247031 Z M46.8253288,41.5247031 C49.5764899,41.5247031 51.8067467,39.2086723 51.8067467,36.3517034 C51.8067467,33.4947346 49.5764899,31.1787037 46.8253288,31.1787037 C44.0741676,31.1787037 41.8439108,33.4947346 41.8439108,36.3517034 C41.8439108,39.2086723 44.0741676,41.5247031 46.8253288,41.5247031 Z M60.773299,26.8995984 C63.5244602,26.8995984 65.754717,24.5835675 65.754717,21.7265987 C65.754717,18.8696299 63.5244602,16.553599 60.773299,16.553599 C58.0221379,16.553599 55.7918811,18.8696299 55.7918811,21.7265987 C55.7918811,24.5835675 58.0221379,26.8995984 60.773299,26.8995984 Z M18.9293882,41.5247031 C21.6805494,41.5247031 23.9108062,39.2086723 23.9108062,36.3517034 C23.9108062,33.4947346 21.6805494,31.1787037 18.9293882,31.1787037 C16.1782271,31.1787037 13.9479703,33.4947346 13.9479703,36.3517034 C13.9479703,39.2086723 16.1782271,41.5247031 18.9293882,41.5247031 Z M4.98141795,41.3839975 C7.73257912,41.3839975 9.96283591,39.0679667 9.96283591,36.2109978 C9.96283591,33.354029 7.73257912,31.0379981 4.98141795,31.0379981 C2.23025679,31.0379981 0,33.354029 0,36.2109978 C0,39.0679667 2.23025679,41.3839975 4.98141795,41.3839975 Z M4.98141795,26.8995984 C7.73257912,26.8995984 9.96283591,24.5835675 9.96283591,21.7265987 C9.96283591,18.8696299 7.73257912,16.553599 4.98141795,16.553599 C2.23025679,16.553599 0,18.8696299 0,21.7265987 C0,24.5835675 2.23025679,26.8995984 4.98141795,26.8995984 Z" })
      );
    }
  }]);

  return LogoIcon;
}(_react.Component), _class.defaultProps = {
  size: 32
}, _class.propTypes = {
  size: _propTypes2.default.number,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  dark: _propTypes2.default.bool
}, _temp);
LogoIcon.displayName = "LogoIcon";
exports.default = LogoIcon;

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BreakoutClause = exports.AggregationClause = exports.NamedClause = exports.NEW_QUERY_TEMPLATES = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Raw data"], ["Raw data"]),
    _templateObject2 = _taggedTemplateLiteral(["Count"], ["Count"]),
    _templateObject3 = _taggedTemplateLiteral(["Cumulative count"], ["Cumulative count"]),
    _templateObject4 = _taggedTemplateLiteral(["Average of "], ["Average of "]),
    _templateObject5 = _taggedTemplateLiteral(["Distinct values of "], ["Distinct values of "]),
    _templateObject6 = _taggedTemplateLiteral(["Standard deviation of "], ["Standard deviation of "]),
    _templateObject7 = _taggedTemplateLiteral(["Sum of "], ["Sum of "]),
    _templateObject8 = _taggedTemplateLiteral(["Cumulative sum of "], ["Cumulative sum of "]),
    _templateObject9 = _taggedTemplateLiteral(["Maximum of "], ["Maximum of "]),
    _templateObject10 = _taggedTemplateLiteral(["Minimum of "], ["Minimum of "]),
    _templateObject11 = _taggedTemplateLiteral(["Grouped by "], ["Grouped by "]),
    _templateObject12 = _taggedTemplateLiteral(["Filtered by "], ["Filtered by "]),
    _templateObject13 = _taggedTemplateLiteral(["Sorted by "], ["Sorted by "]);

exports.createQuery = createQuery;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _inflection = __webpack_require__(83);

var _inflection2 = _interopRequireDefault(_inflection);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _c3po = __webpack_require__(2);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _schema_metadata = __webpack_require__(10);

var _table = __webpack_require__(98);

var _types = __webpack_require__(42);

var _formatting = __webpack_require__(8);

var _formatter = __webpack_require__(117);

var _table2 = __webpack_require__(450);

var Table = _interopRequireWildcard(_table2);

var _query = __webpack_require__(70);

var Q = _interopRequireWildcard(_query);

var _field = __webpack_require__(93);

var F = _interopRequireWildcard(_field);

var _util = __webpack_require__(27);

var _expressions = __webpack_require__(118);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var NEW_QUERY_TEMPLATES = exports.NEW_QUERY_TEMPLATES = {
  query: {
    database: null,
    type: "query",
    query: {
      source_table: null
    }
  },
  native: {
    database: null,
    type: "native",
    native: {
      query: ""
    }
  }
};

function createQuery() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "query";
  var databaseId = arguments[1];
  var tableId = arguments[2];

  var dataset_query = _utils2.default.copy(NEW_QUERY_TEMPLATES[type]);

  if (databaseId) {
    dataset_query.database = databaseId;
  }

  if (type === "query" && databaseId && tableId) {
    dataset_query.query.source_table = tableId;
  }

  return dataset_query;
}

var METRIC_NAME_BY_AGGREGATION = {
  count: "count",
  cum_count: "count",
  sum: "sum",
  cum_sum: "sum",
  distinct: "count",
  avg: "avg",
  min: "min",
  max: "max"
};

var METRIC_TYPE_BY_AGGREGATION = {
  count: _types.TYPE.Integer,
  cum_count: _types.TYPE.Integer,
  sum: _types.TYPE.Float,
  cum_sum: _types.TYPE.Float,
  distinct: _types.TYPE.Integer,
  avg: _types.TYPE.Float,
  min: _types.TYPE.Float,
  max: _types.TYPE.Float
};

var SORTABLE_AGGREGATION_TYPES = new Set(["avg", "count", "distinct", "stddev", "sum", "min", "max"]);

var Query = {
  isStructured: function isStructured(dataset_query) {
    return dataset_query && dataset_query.type === "query";
  },
  isNative: function isNative(dataset_query) {
    return dataset_query && dataset_query.type === "native";
  },
  canRun: function canRun(query, tableMetadata) {
    if (!query || query.source_table == null || !Query.hasValidAggregation(query)) {
      return false;
    }
    // check that the table supports this aggregation, if we have tableMetadata
    if (tableMetadata) {
      var aggs = Query.getAggregations(query);
      if (aggs.length === 0) {
        if (!_underscore2.default.findWhere(tableMetadata.aggregation_options, { short: "rows" })) {
          return false;
        }
      } else {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = aggs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step$value = _slicedToArray(_step.value, 1),
                agg = _step$value[0];

            if (!(0, _util.mbqlEq)(agg, "metric") && !_underscore2.default.findWhere(tableMetadata.aggregation_options, { short: agg })) {
              // return false;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }
    return true;
  },
  cleanQuery: function cleanQuery(query) {
    if (!query) {
      return query;
    }

    // it's possible the user left some half-done parts of the query on screen when they hit the run button, so find those
    // things now and clear them out so that we have a nice clean set of valid clauses in our query

    // aggregations
    query.aggregation = Query.getAggregations(query);
    if (query.aggregation.length === 0) {
      delete query.aggregation;
    }

    // breakouts
    query.breakout = Query.getBreakouts(query);
    if (query.breakout.length === 0) {
      delete query.breakout;
    }

    // filters
    var filters = Query.getFilters(query).filter(function (filter) {
      return _underscore2.default.all(filter, function (a) {
        return a != null;
      });
    });
    if (filters.length > 0) {
      query.filter = ["AND"].concat(_toConsumableArray(filters));
    } else {
      delete query.filter;
    }

    if (query.order_by) {
      query.order_by = query.order_by.map(function (s) {
        var field = s[0];

        // remove incomplete sorts
        if (!Query.isValidField(field) || s[1] == null) {
          return null;
        }

        if (Query.isAggregateField(field)) {
          // remove aggregation sort if we can't sort by this aggregation
          if (Query.canSortByAggregateField(query, field[1])) {
            return s;
          }
        } else if (Query.hasValidBreakout(query)) {
          var exactMatches = query.breakout.filter(function (b) {
            return Query.isSameField(b, field, true);
          });
          if (exactMatches.length > 0) {
            return s;
          }
          var targetMatches = query.breakout.filter(function (b) {
            return Query.isSameField(b, field, false);
          });
          if (targetMatches.length > 0) {
            // query processor expect the order_by clause to match the breakout's datetime-field unit or fk-> target,
            // so just replace it with the one that matches the target field
            // NOTE: if we have more than one breakout for the same target field this could match the wrong one
            if (targetMatches.length > 1) {
              console.warn("Sort clause matches more than one breakout field", s[0], targetMatches);
            }
            return [targetMatches[0], s[1]];
          }
        } else if (Query.isBareRows(query)) {
          return s;
        }

        // otherwise remove sort if it doesn't have a breakout but isn't a bare rows aggregation
        return null;
      }).filter(function (s) {
        return s != null;
      });

      if (query.order_by.length === 0) {
        delete query.order_by;
      }
    }

    if (typeof query.limit !== "number") {
      delete query.limit;
    }

    if (query.expressions) delete query.expressions[""]; // delete any empty expressions

    return query;
  },
  canAddDimensions: function canAddDimensions(query) {
    var MAX_DIMENSIONS = 2;
    return query && query.breakout && query.breakout.length < MAX_DIMENSIONS;
  },
  numDimensions: function numDimensions(query) {
    if (query && query.breakout) {
      return query.breakout.filter(function (b) {
        return b !== null;
      }).length;
    }

    return 0;
  },
  hasValidBreakout: function hasValidBreakout(query) {
    return query && query.breakout && query.breakout.length > 0 && query.breakout[0] !== null;
  },
  canSortByAggregateField: function canSortByAggregateField(query, index) {
    if (!Query.hasValidBreakout(query)) {
      return false;
    }
    var aggregations = Query.getAggregations(query);
    return aggregations[index] && aggregations[index][0] && SORTABLE_AGGREGATION_TYPES.has((0, _util.mbql)(aggregations[index][0]));
  },
  isSegmentFilter: function isSegmentFilter(filter) {
    return Array.isArray(filter) && filter[0] === "SEGMENT";
  },
  canAddLimitAndSort: function canAddLimitAndSort(query) {
    if (Query.isBareRows(query)) {
      return true;
    } else if (Query.hasValidBreakout(query)) {
      return true;
    } else {
      return false;
    }
  },
  getSortableFields: function getSortableFields(query, fields) {
    // in bare rows all fields are sortable, otherwise we only sort by our breakout columns
    if (Query.isBareRows(query)) {
      return fields;
    } else if (Query.hasValidBreakout(query)) {
      // further filter field list down to only fields in our breakout clause
      var breakoutFieldList = [];

      var breakouts = Query.getBreakouts(query);
      breakouts.map(function (breakoutField) {
        var fieldId = Query.getFieldTargetId(breakoutField);
        var field = _underscore2.default.findWhere(fields, { id: fieldId });
        if (field) {
          breakoutFieldList.push(field);
        }
      });

      var aggregations = Query.getAggregations(query);
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = aggregations.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              index = _step2$value[0],
              aggregation = _step2$value[1];

          if (Query.canSortByAggregateField(query, index)) {
            breakoutFieldList.push({
              id: ["aggregation", index],
              name: aggregation[0], // e.g. "sum"
              display_name: aggregation[0]
            });
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return breakoutFieldList;
    } else {
      return [];
    }
  },
  canAddSort: function canAddSort(query) {
    // TODO: allow for multiple sorting choices
    return false;
  },
  getExpressions: function getExpressions(query) {
    return query.expressions || {};
  },
  setExpression: function setExpression(query, name, expression) {
    if (name && expression) {
      var expressions = query.expressions || {};
      expressions[name] = expression;
      query.expressions = expressions;
    }

    return query;
  },


  // remove an expression with NAME. Returns scrubbed QUERY with all references to expression removed.
  removeExpression: function removeExpression(query, name) {
    if (!query.expressions) return query;

    delete query.expressions[name];

    if (_underscore2.default.isEmpty(query.expressions)) delete query.expressions;

    // ok, now "scrub" the query to remove any references to the expression
    function isExpressionReference(obj) {
      return obj && obj.constructor === Array && obj.length === 2 && obj[0] === "expression" && obj[1] === name;
    }

    function removeExpressionReferences(obj) {
      return isExpressionReference(obj) ? null : obj.constructor === Array ? _underscore2.default.map(obj, removeExpressionReferences) : (typeof obj === "undefined" ? "undefined" : _typeof(obj)) === "object" ? _underscore2.default.mapObject(obj, removeExpressionReferences) : obj;
    }

    return this.cleanQuery(removeExpressionReferences(query));
  },
  isRegularField: function isRegularField(field) {
    return typeof field === "number";
  },
  isLocalField: function isLocalField(field) {
    return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "field-id");
  },
  isForeignKeyField: function isForeignKeyField(field) {
    return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "fk->");
  },
  isDatetimeField: function isDatetimeField(field) {
    return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "datetime-field");
  },


  isBinningStrategy: F.isBinningStrategy,

  isExpressionField: function isExpressionField(field) {
    return Array.isArray(field) && field.length === 2 && (0, _util.mbqlEq)(field[0], "expression");
  },
  isAggregateField: function isAggregateField(field) {
    return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "aggregation");
  },


  // field literal has the formal ["field-literal", <field-name>, <field-base-type>]
  isFieldLiteral: function isFieldLiteral(field) {
    return Array.isArray(field) && field.length === 3 && (0, _util.mbqlEq)(field[0], "field-literal") && _underscore2.default.isString(field[1]) && _underscore2.default.isString(field[2]);
  },
  isValidField: function isValidField(field) {
    return Query.isRegularField(field) || Query.isLocalField(field) || Query.isForeignKeyField(field) && Query.isRegularField(field[1]) && Query.isRegularField(field[2]) ||
    // datetime field can  be either 4-item (deprecated): ["datetime-field", <field>, "as", <unit>]
    // or 3 item (preferred style): ["datetime-field", <field>, <unit>]
    Query.isDatetimeField(field) && Query.isValidField(field[1]) && (field.length === 4 ? field[2] === "as" && typeof field[3] === "string" // deprecated
    : typeof field[2] === "string") || Query.isExpressionField(field) && _underscore2.default.isString(field[1]) || Query.isAggregateField(field) && typeof field[1] === "number" || Query.isFieldLiteral(field);
  },


  isSameField: function isSameField(fieldA, fieldB) {
    var exact = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (exact) {
      return _underscore2.default.isEqual(fieldA, fieldB);
    } else {
      return Query.getFieldTargetId(fieldA) === Query.getFieldTargetId(fieldB);
    }
  },

  // gets the target field ID (recursively) from any type of field, including raw field ID, fk->, and datetime-field cast.
  getFieldTargetId: function getFieldTargetId(field) {
    if (Query.isRegularField(field)) {
      return field;
    } else if (Query.isLocalField(field)) {
      return field[1];
    } else if (Query.isForeignKeyField(field)) {
      return Query.getFieldTargetId(field[2]);
    } else if (Query.isDatetimeField(field)) {
      return Query.getFieldTargetId(field[1]);
    } else if (Query.isBinningStrategy(field)) {
      return Query.getFieldTargetId(field[1]);
    } else if (Query.isFieldLiteral(field)) {
      return field;
    }
    console.warn("Unknown field type: ", field);
  },

  // gets the table and field definitions from from a raw, fk->, or datetime-field field
  getFieldTarget: function getFieldTarget(field, tableDef) {
    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    if (Query.isRegularField(field)) {
      return { table: tableDef, field: Table.getField(tableDef, field), path: path };
    } else if (Query.isLocalField(field)) {
      return Query.getFieldTarget(field[1], tableDef, path);
    } else if (Query.isForeignKeyField(field)) {
      var fkFieldDef = Table.getField(tableDef, field[1]);
      var targetTableDef = fkFieldDef && fkFieldDef.target.table;
      return Query.getFieldTarget(field[2], targetTableDef, path.concat(fkFieldDef));
    } else if (Query.isDatetimeField(field)) {
      return _extends({}, Query.getFieldTarget(field[1], tableDef, path), {
        unit: Query.getDatetimeUnit(field)
      });
    } else if (Query.isBinningStrategy(field)) {
      return Query.getFieldTarget(field[1], tableDef, path);
    } else if (Query.isExpressionField(field)) {
      // hmmm, since this is a dynamic field we'll need to build this here
      var fieldDef = {
        display_name: field[1],
        name: field[1],
        // TODO: we need to do something better here because filtering depends on knowing a sensible type for the field
        base_type: _types.TYPE.Integer,
        operators_lookup: {},
        operators: [],
        active: true,
        fk_target_field_id: null,
        parent_id: null,
        preview_display: true,
        special_type: null,
        target: null,
        visibility_type: "normal"
      };
      fieldDef.operators = (0, _schema_metadata.getOperators)(fieldDef, tableDef);
      fieldDef.operators_lookup = (0, _table.createLookupByProperty)(fieldDef.operators, "name");

      return {
        table: tableDef,
        field: fieldDef,
        path: path
      };
    } else if (Query.isFieldLiteral(field)) {
      return { table: tableDef, field: Table.getField(tableDef, field), path: path }; // just pretend it's a normal field
    }

    console.warn("Unknown field type: ", field);
  },

  getFieldPath: function getFieldPath(fieldId, tableDef) {
    var path = [];
    while (fieldId != null) {
      var field = Table.getField(tableDef, fieldId);
      path.unshift(field);
      fieldId = field && field.parent_id;
    }
    return path;
  },
  getFieldPathName: function getFieldPathName(fieldId, tableDef) {
    return Query.getFieldPath(fieldId, tableDef).map(_formatting.formatField).join(": ");
  },
  getDatetimeUnit: function getDatetimeUnit(field) {
    if (field.length === 4) {
      return field[3]; // deprecated
    } else {
      return field[2];
    }
  },
  getFieldOptions: function getFieldOptions(fields) {
    var includeJoins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var filterFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _underscore2.default.identity;
    var usedFields = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    var results = {
      count: 0,
      fields: null,
      fks: []
    };
    // filter based on filterFn, then remove fks if they'll be duplicated in the joins fields
    results.fields = filterFn(fields).filter(function (f) {
      return !usedFields[f.id] && (!(0, _types.isFK)(f.special_type) || !includeJoins);
    });
    results.count += results.fields.length;
    if (includeJoins) {
      results.fks = fields.filter(function (f) {
        return (0, _types.isFK)(f.special_type) && f.target;
      }).map(function (joinField) {
        var targetFields = filterFn(joinField.target.table.fields).filter(function (f) {
          return (!Array.isArray(f.id) || f.id[0] !== "aggregation") && !usedFields[f.id];
        });
        results.count += targetFields.length;
        return {
          field: joinField,
          fields: targetFields
        };
      }).filter(function (r) {
        return r.fields.length > 0;
      });
    }

    return results;
  },
  formatField: function formatField(fieldDef) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var name = (0, _formatting.stripId)(fieldDef && (fieldDef.display_name || fieldDef.name));
    return name;
  },
  getFieldName: function getFieldName(tableMetadata, field, options) {
    try {
      var target = Query.getFieldTarget(field, tableMetadata);
      var components = [];
      if (target.path) {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = target.path[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var fieldDef = _step3.value;

            components.push(Query.formatField(fieldDef, options), " → ");
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      }
      components.push(Query.formatField(target.field, options));
      if (target.unit) {
        components.push(" (" + target.unit + ")");
      }
      return components;
    } catch (e) {
      console.warn("Couldn't format field name for field", field, "in table", tableMetadata);
    }
    return "[Unknown Field]";
  },
  getTableDescription: function getTableDescription(tableMetadata) {
    return [_inflection2.default.pluralize(tableMetadata.display_name)];
  },
  getAggregationDescription: function getAggregationDescription(tableMetadata, query, options) {
    return conjunctList(Query.getAggregations(query).map(function (aggregation) {
      if (NamedClause.isNamed(aggregation)) {
        return [NamedClause.getName(aggregation)];
      }
      if (AggregationClause.isMetric(aggregation)) {
        var metric = _underscore2.default.findWhere(tableMetadata.metrics, {
          id: AggregationClause.getMetric(aggregation)
        });
        var name = metric ? metric.name : "[Unknown Metric]";
        return [options.jsx ? _react2.default.createElement(
          "span",
          { className: "text-green text-bold" },
          name
        ) : name];
      }
      switch (aggregation[0]) {
        case "rows":
          return [(0, _c3po.t)(_templateObject)];
        case "count":
          return [(0, _c3po.t)(_templateObject2)];
        case "cum_count":
          return [(0, _c3po.t)(_templateObject3)];
        case "avg":
          return [(0, _c3po.t)(_templateObject4), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "distinct":
          return [(0, _c3po.t)(_templateObject5), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "stddev":
          return [(0, _c3po.t)(_templateObject6), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "sum":
          return [(0, _c3po.t)(_templateObject7), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "cum_sum":
          return [(0, _c3po.t)(_templateObject8), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "max":
          return [(0, _c3po.t)(_templateObject9), Query.getFieldName(tableMetadata, aggregation[1], options)];
        case "min":
          return [(0, _c3po.t)(_templateObject10), Query.getFieldName(tableMetadata, aggregation[1], options)];
        default:
          return [(0, _formatter.format)(aggregation, { tableMetadata: tableMetadata })];
      }
    }), "and");
  },
  getBreakoutDescription: function getBreakoutDescription(tableMetadata, _ref, options) {
    var breakout = _ref.breakout;

    if (breakout && breakout.length > 0) {
      return [(0, _c3po.t)(_templateObject11), joinList(breakout.map(function (b) {
        return Query.getFieldName(tableMetadata, b, options);
      }), " and ")];
    }
  },
  getFilterDescription: function getFilterDescription(tableMetadata, query, options) {
    // getFilters returns list of filters without the implied "AND"
    var filters = ["AND"].concat(Query.getFilters(query));
    if (filters && filters.length > 1) {
      return [(0, _c3po.t)(_templateObject12), Query.getFilterClauseDescription(tableMetadata, filters, options)];
    }
  },
  getFilterClauseDescription: function getFilterClauseDescription(tableMetadata, filter, options) {
    if ((0, _util.mbqlEq)(filter[0], "AND") || (0, _util.mbqlEq)(filter[0], "OR")) {
      var clauses = filter.slice(1).map(function (f) {
        return Query.getFilterClauseDescription(tableMetadata, f, options);
      });
      return conjunctList(clauses, filter[0].toLowerCase());
    } else if (filter[0] === "SEGMENT") {
      var segment = _underscore2.default.findWhere(tableMetadata.segments, { id: filter[1] });
      var name = segment ? segment.name : "[Unknown Segment]";
      return options.jsx ? _react2.default.createElement(
        "span",
        { className: "text-purple text-bold" },
        name
      ) : name;
    } else {
      return Query.getFieldName(tableMetadata, filter[1], options);
    }
  },
  getOrderByDescription: function getOrderByDescription(tableMetadata, _ref2, options) {
    var order_by = _ref2.order_by;

    if (order_by && order_by.length > 0) {
      return [(0, _c3po.t)(_templateObject13), joinList(order_by.map(function (o) {
        return Query.getFieldName(tableMetadata, o[0], options) + " " + o[1];
      }), " and ")];
    }
  },
  getLimitDescription: function getLimitDescription(tableMetadata, _ref3) {
    var limit = _ref3.limit;

    if (limit != null) {
      return [limit, " ", _inflection2.default.inflect("row", limit)];
    }
  },
  generateQueryDescription: function generateQueryDescription(tableMetadata, query) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!tableMetadata) {
      return "";
    }

    options = _extends({
      jsx: false,
      sections: ["table", "aggregation", "breakout", "filter", "order_by", "limit"]
    }, options);

    var sectionFns = {
      table: Query.getTableDescription,
      aggregation: Query.getAggregationDescription,
      breakout: Query.getBreakoutDescription,
      filter: Query.getFilterDescription,
      order_by: Query.getOrderByDescription,
      limit: Query.getLimitDescription
    };

    // these array gymnastics are needed to support JSX formatting
    var sections = options.sections.map(function (section) {
      return _underscore2.default.flatten(sectionFns[section](tableMetadata, query, options)).filter(function (s) {
        return !!s;
      });
    }).filter(function (s) {
      return s && s.length > 0;
    });

    var description = _underscore2.default.flatten(joinList(sections, ", "));
    if (options.jsx) {
      return _react2.default.createElement(
        "span",
        null,
        description
      );
    } else {
      return description.join("");
    }
  },
  getDatetimeFieldUnit: function getDatetimeFieldUnit(field) {
    return field && field[3];
  },
  getAggregationType: function getAggregationType(aggregation) {
    return aggregation && aggregation[0];
  },
  getAggregationField: function getAggregationField(aggregation) {
    return aggregation && aggregation[1];
  },
  getQueryColumn: function getQueryColumn(tableMetadata, field) {
    var target = Query.getFieldTarget(field, tableMetadata);
    var column = _extends({}, target.field);
    if (Query.isDatetimeField(field)) {
      column.unit = Query.getDatetimeFieldUnit(field);
    }
    return column;
  },
  getQueryColumns: function getQueryColumns(tableMetadata, query) {
    var columns = Query.getBreakouts(query).map(function (b) {
      return Query.getQueryColumn(tableMetadata, b);
    });
    if (Query.isBareRows(query)) {
      if (columns.length === 0) {
        return null;
      }
    } else {
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = Query.getAggregations(query)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var aggregation = _step4.value;

          var type = Query.getAggregationType(aggregation);
          columns.push({
            name: METRIC_NAME_BY_AGGREGATION[type],
            base_type: METRIC_TYPE_BY_AGGREGATION[type],
            special_type: _types.TYPE.Number
          });
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    }
    return columns;
  }
};

for (var prop in Q) {
  // eslint-disable-next-line import/namespace
  Query[prop] = Q[prop];
}

var NamedClause = exports.NamedClause = {
  isNamed: function isNamed(clause) {
    return Array.isArray(clause) && (0, _util.mbqlEq)(clause[0], "named");
  },
  getName: function getName(clause) {
    return NamedClause.isNamed(clause) ? clause[2] : null;
  },
  getContent: function getContent(clause) {
    return NamedClause.isNamed(clause) ? clause[1] : clause;
  },
  setName: function setName(clause, name) {
    return ["named", NamedClause.getContent(clause), name];
  },
  setContent: function setContent(clause, content) {
    return NamedClause.isNamed(clause) ? ["named", content, NamedClause.getName(clause)] : content;
  }
};

var AggregationClause = exports.AggregationClause = {
  // predicate function to test if a given aggregation clause is fully formed
  isValid: function isValid(aggregation) {
    if (aggregation && _underscore2.default.isArray(aggregation) && (aggregation.length === 1 && aggregation[0] !== null || aggregation.length === 2 && aggregation[0] !== null && aggregation[1] !== null)) {
      return true;
    }
    return false;
  },


  // predicate function to test if the given aggregation clause represents a Bare Rows aggregation
  isBareRows: function isBareRows(aggregation) {
    return AggregationClause.isValid(aggregation) && (0, _util.mbqlEq)(aggregation[0], "rows");
  },


  // predicate function to test if a given aggregation clause represents a standard aggregation
  isStandard: function isStandard(aggregation) {
    return AggregationClause.isValid(aggregation) && !(0, _util.mbqlEq)(aggregation[0], "metric");
  },
  getAggregation: function getAggregation(aggregation) {
    return aggregation && (0, _util.mbql)(aggregation[0]);
  },


  // predicate function to test if a given aggregation clause represents a metric
  isMetric: function isMetric(aggregation) {
    return AggregationClause.isValid(aggregation) && (0, _util.mbqlEq)(aggregation[0], "metric");
  },


  // get the metricId from a metric aggregation clause
  getMetric: function getMetric(aggregation) {
    if (aggregation && AggregationClause.isMetric(aggregation)) {
      return aggregation[1];
    } else {
      return null;
    }
  },
  isCustom: function isCustom(aggregation) {
    // for now treal all named clauses as custom
    return aggregation && NamedClause.isNamed(aggregation) || (0, _expressions.isMath)(aggregation) || AggregationClause.isStandard(aggregation) && _underscore2.default.any(aggregation.slice(1), function (arg) {
      return (0, _expressions.isMath)(arg);
    });
  },


  // get the operator from a standard aggregation clause
  getOperator: function getOperator(aggregation) {
    if (aggregation && aggregation.length > 0 && !(0, _util.mbqlEq)(aggregation[0], "metric")) {
      return aggregation[0];
    } else {
      return null;
    }
  },


  // get the fieldId from a standard aggregation clause
  getField: function getField(aggregation) {
    if (aggregation && aggregation.length > 1 && !(0, _util.mbqlEq)(aggregation[0], "metric")) {
      return aggregation[1];
    } else {
      return null;
    }
  },


  // set the fieldId on a standard aggregation clause
  setField: function setField(aggregation, fieldId) {
    if (aggregation && aggregation.length > 0 && aggregation[0] && aggregation[0] !== "METRIC") {
      return [aggregation[0], fieldId];
    } else {
      // TODO: is there a better failure response than just returning the aggregation unmodified??
      return aggregation;
    }
  }
};

var BreakoutClause = exports.BreakoutClause = {
  setBreakout: function setBreakout(breakout, index, value) {
    if (!breakout) {
      breakout = [];
    }
    return [].concat(_toConsumableArray(breakout.slice(0, index)), [value], _toConsumableArray(breakout.slice(index + 1)));
  },
  removeBreakout: function removeBreakout(breakout, index) {
    if (!breakout) {
      breakout = [];
    }
    return [].concat(_toConsumableArray(breakout.slice(0, index)), _toConsumableArray(breakout.slice(index + 1)));
  }
};

function joinList(list, joiner) {
  return _underscore2.default.flatten(list.map(function (l, i) {
    return i === list.length - 1 ? [l] : [l, joiner];
  }), true);
}

function conjunctList(list, conjunction) {
  switch (list.length) {
    case 0:
      return null;
    case 1:
      return list[0];
    case 2:
      return [list[0], " ", conjunction, " ", list[1]];
    default:
      return [list.slice(0, -1).join(", "), ", ", conjunction, " ", list[list.length - 1]];
  }
}

exports.default = Query;

/***/ }),

/***/ 170:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(13);

var _dom = __webpack_require__(28);

var _browser = __webpack_require__(200);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _Parameters = __webpack_require__(219);

var _Parameters2 = _interopRequireDefault(_Parameters);

var _LogoBadge = __webpack_require__(544);

var _LogoBadge2 = _interopRequireDefault(_LogoBadge);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

__webpack_require__(545);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DEFAULT_OPTIONS = {
  bordered: _dom.IFRAMED,
  titled: true
};

var EmbedFrame = (0, _reactRouter.withRouter)(_class = function (_Component) {
  _inherits(EmbedFrame, _Component);

  function EmbedFrame() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, EmbedFrame);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EmbedFrame.__proto__ || Object.getPrototypeOf(EmbedFrame)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      innerScroll: true
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(EmbedFrame, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      // Make iFrameResizer avaliable so that embed users can
      // have their embeds autosize to their content
      if (window.iFrameResizer) {
        console.error("iFrameResizer resizer already defined.");
      } else {
        window.iFrameResizer = {
          autoResize: true,
          heightCalculationMethod: "bodyScroll",
          readyCallback: function readyCallback() {
            _this2.setState({ innerScroll: false });
          }
        };

        // FIXME: Crimes
        // This is needed so the FE test framework which runs in node
        // without the avaliability of require.ensure skips over this part
        // which is for external purposes only.
        //
        // Ideally that should happen in the test config, but it doesn't
        // seem to want to play nice when messing with require
        if (false) {
          // $FlowFixMe: flow doesn't seem to like returning false here
          return false;
        }

        // Make iframe-resizer avaliable to the embed
        // We only care about contentWindow so require that minified file

        __webpack_require__.e/* require.ensure */(0).then((function (require) {
          __webpack_require__(788);
        }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          actionButtons = _props.actionButtons,
          location = _props.location,
          parameters = _props.parameters,
          parameterValues = _props.parameterValues,
          setParameterValue = _props.setParameterValue;
      var innerScroll = this.state.innerScroll;


      var footer = true;

      var _DEFAULT_OPTIONS$pars = _extends({}, DEFAULT_OPTIONS, (0, _browser.parseHashOptions)(location.hash)),
          bordered = _DEFAULT_OPTIONS$pars.bordered,
          titled = _DEFAULT_OPTIONS$pars.titled,
          theme = _DEFAULT_OPTIONS$pars.theme;

      var name = titled ? this.props.name : null;

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("EmbedFrame flex flex-column", className, _defineProperty({
            spread: innerScroll,
            "bordered rounded shadowed": bordered
          }, "Theme--" + theme, !!theme))
        },
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)("flex flex-column flex-full relative", {
              "scroll-y": innerScroll
            })
          },
          name || parameters && parameters.length > 0 ? _react2.default.createElement(
            "div",
            { className: "EmbedFrame-header flex align-center p1 sm-p2 lg-p3" },
            name && _react2.default.createElement(
              "div",
              { className: "h4 text-bold sm-h3 md-h2" },
              name
            ),
            parameters && parameters.length > 0 ? _react2.default.createElement(
              "div",
              { className: "flex ml-auto" },
              _react2.default.createElement(_Parameters2.default, {
                parameters: parameters.map(function (p) {
                  return _extends({}, p, {
                    value: parameterValues && parameterValues[p.id]
                  });
                }),
                query: location.query,
                setParameterValue: setParameterValue,
                syncQueryString: true,
                isQB: true
              })
            ) : null
          ) : null,
          _react2.default.createElement(
            "div",
            { className: "flex flex-column relative full flex-full" },
            children
          )
        ),
        footer && _react2.default.createElement(
          "div",
          { className: "EmbedFrame-footer p1 md-p2 lg-p3 border-top flex-no-shrink flex align-center" },
          !_settings2.default.hideEmbedBranding() && _react2.default.createElement(_LogoBadge2.default, { dark: theme }),
          actionButtons && _react2.default.createElement(
            "div",
            { className: "flex-align-right text-grey-3" },
            actionButtons
          )
        )
      );
    }
  }]);

  return EmbedFrame;
}(_react.Component)) || _class;

EmbedFrame.displayName = "EmbedFrame";
exports.default = EmbedFrame;

/***/ }),

/***/ 175:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class; /*  weak */

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _utils = __webpack_require__(229);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * An abstract class for all query types (StructuredQuery & NativeQuery)
 */
var Query = (_class = function () {

  /**
   * Note that Question is not always in sync with _datasetQuery,
   * calling question() will always merge the latest _datasetQuery to the question object
   */
  function Query(question, datasetQuery) {
    _classCallCheck(this, Query);

    this._metadata = question._metadata;
    this._datasetQuery = datasetQuery;
    this._originalQuestion = question;
  }

  /**
   * Returns a question updated with the current dataset query.
   * Can only be applied to query that is a direct child of the question.
   */


  _createClass(Query, [{
    key: "question",
    value: function question() {
      var isDirectChildOfQuestion = _typeof(this._originalQuestion.query()) === _typeof(this);

      if (isDirectChildOfQuestion) {
        return this._originalQuestion.setQuery(this);
      } else {
        throw new Error("Can't derive a question from a query that is a child of other query");
      }
    }
  }, {
    key: "clean",
    value: function clean() {
      return this;
    }

    /**
     * Convenience method for accessing the global metadata
     */

  }, {
    key: "metadata",
    value: function metadata() {
      return this._metadata;
    }

    /**
     * Does this query have the sufficient metadata for editing it?
     */

  }, {
    key: "isEditable",
    value: function isEditable() {
      return true;
    }

    /**
     * Returns the dataset_query object underlying this Query
     */

  }, {
    key: "datasetQuery",
    value: function datasetQuery() {
      return this._datasetQuery;
    }
  }, {
    key: "setDatasetQuery",
    value: function setDatasetQuery(datasetQuery) {
      return this;
    }

    /**
     *
     * Query is considered empty, i.e. it is in a plain state with no properties / query clauses set
     */

  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return false;
    }

    /**
     * Query is valid (as far as we know) and can be executed
     */

  }, {
    key: "canRun",
    value: function canRun() {
      return false;
    }

    /**
     * Databases this query could use
     */

  }, {
    key: "databases",
    value: function databases() {
      return this._metadata.databasesList();
    }

    /**
     * Helper for updating with functions that expect a DatasetQuery object
     */

  }, {
    key: "update",
    value: function update(fn) {
      return fn(this.datasetQuery());
    }
  }]);

  return Query;
}(), (_applyDecoratedDescriptor(_class.prototype, "question", [_utils.memoize], Object.getOwnPropertyDescriptor(_class.prototype, "question"), _class.prototype)), _class);
exports.default = Query;

/***/ }),

/***/ 177:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestRemappedValue = exports.FieldRemappedValue = exports.AutoLoadRemappedValue = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _formatting = __webpack_require__(8);

var _Remapped = __webpack_require__(423);

var _Remapped2 = _interopRequireDefault(_Remapped);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var defaultRenderNormal = function defaultRenderNormal(_ref) {
  var value = _ref.value,
      column = _ref.column;
  return _react2.default.createElement(
    "span",
    { className: "text-bold" },
    value
  );
};

defaultRenderNormal.displayName = "defaultRenderNormal";
var defaultRenderRemapped = function defaultRenderRemapped(_ref2) {
  var value = _ref2.value,
      displayValue = _ref2.displayValue,
      column = _ref2.column,
      displayColumn = _ref2.displayColumn;
  return _react2.default.createElement(
    "span",
    null,
    _react2.default.createElement(
      "span",
      { className: "text-bold" },
      displayValue
    ),
    column.isID() && _react2.default.createElement(
      "span",
      { style: { opacity: 0.5 } },
      " - " + value
    )
  );
};

defaultRenderRemapped.displayName = "defaultRenderRemapped";
var RemappedValueContent = function RemappedValueContent(_ref3) {
  var value = _ref3.value,
      column = _ref3.column,
      displayValue = _ref3.displayValue,
      displayColumn = _ref3.displayColumn,
      _ref3$renderNormal = _ref3.renderNormal,
      renderNormal = _ref3$renderNormal === undefined ? defaultRenderNormal : _ref3$renderNormal,
      _ref3$renderRemapped = _ref3.renderRemapped,
      renderRemapped = _ref3$renderRemapped === undefined ? defaultRenderRemapped : _ref3$renderRemapped,
      props = _objectWithoutProperties(_ref3, ["value", "column", "displayValue", "displayColumn", "renderNormal", "renderRemapped"]);

  if (column != null) {
    value = (0, _formatting.formatValue)(value, _extends({}, props, {
      column: column,
      jsx: true,
      remap: false
    }));
  }
  if (displayColumn != null) {
    displayValue = (0, _formatting.formatValue)(displayValue, _extends({}, props, {
      column: displayColumn,
      jsx: true,
      remap: false
    }));
  }
  if (displayValue != null) {
    return renderRemapped({ value: value, displayValue: displayValue, column: column, displayColumn: displayColumn });
  } else {
    return renderNormal({ value: value, column: column });
  }
};

var AutoLoadRemappedValue = exports.AutoLoadRemappedValue = (0, _Remapped2.default)(RemappedValueContent);

var FieldRemappedValue = exports.FieldRemappedValue = function FieldRemappedValue(props) {
  return _react2.default.createElement(RemappedValueContent, _extends({}, props, {
    displayValue: props.column.remappedValue(props.value),
    displayColumn: props.column.remappedField()
  }));
};

FieldRemappedValue.displayName = "FieldRemappedValue";
var RemappedValue = function RemappedValue(_ref4) {
  var _ref4$autoLoad = _ref4.autoLoad,
      autoLoad = _ref4$autoLoad === undefined ? true : _ref4$autoLoad,
      props = _objectWithoutProperties(_ref4, ["autoLoad"]);

  return autoLoad ? _react2.default.createElement(AutoLoadRemappedValue, props) : _react2.default.createElement(FieldRemappedValue, props);
};

exports.default = RemappedValue;

// test version doesn't use metabase/hoc/Remapped which requires a redux store

var TestRemappedValue = exports.TestRemappedValue = RemappedValueContent;

/***/ }),

/***/ 179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Break out by ", ""], ["Break out by ", ""]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _BreakoutPopover = __webpack_require__(440);

var _BreakoutPopover2 = _interopRequireDefault(_BreakoutPopover);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

// PivotByAction displays a breakout picker, and optionally filters by the
// clicked dimesion values (and removes corresponding breakouts)
exports.default = function (name, icon, fieldFilter) {
  return function (_ref) {
    var question = _ref.question,
        clicked = _ref.clicked;

    var query = question.query();
    if (!(query instanceof _StructuredQuery2.default)) {
      return [];
    }

    // $FlowFixMe
    var tableMetadata = query.table();

    // Click target types: metric value
    if (clicked && (clicked.value === undefined ||
    // $FlowFixMe
    clicked.column.source !== "aggregation")) {
      return [];
    }

    var dimensions = clicked && clicked.dimensions || [];

    var breakoutOptions = query.breakoutOptions(null, fieldFilter);
    if (breakoutOptions.count === 0) {
      return [];
    }
    return [{
      name: "pivot-by-" + name.toLowerCase(),
      section: "breakout",
      title: clicked ? name : _react2.default.createElement(
        "span",
        null,
        (0, _c3po.jt)(_templateObject, _react2.default.createElement(
          "span",
          { className: "text-dark" },
          name.toLowerCase()
        ))
      ),
      icon: icon,
      // eslint-disable-next-line react/display-name
      popover: function popover(_ref2) {
        var onChangeCardAndRun = _ref2.onChangeCardAndRun,
            onClose = _ref2.onClose;
        return _react2.default.createElement(_BreakoutPopover2.default, {
          tableMetadata: tableMetadata,
          fieldOptions: breakoutOptions,
          onCommitBreakout: function onCommitBreakout(breakout) {
            var nextCard = question.pivot([breakout], dimensions).card();

            if (nextCard) {
              onChangeCardAndRun({ nextCard: nextCard });
            }
          },
          onClose: onClose
        });
      }
    }];
  };
};

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestTooltipContent = exports.TestTooltipTarget = exports.TestTooltip = exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _TooltipPopover = __webpack_require__(228);

var _TooltipPopover2 = _interopRequireDefault(_TooltipPopover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tooltip = (_temp = _class = function (_Component) {
  _inherits(Tooltip, _Component);

  function Tooltip(props, context) {
    _classCallCheck(this, Tooltip);

    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props, context));

    _this._onMouseEnter = function (e) {
      _this.setState({ isOpen: true, isHovered: true });
    };

    _this._onMouseLeave = function (e) {
      _this.setState({ isOpen: false, isHovered: false });
    };

    _this._onMouseDown = function (e) {
      _this.setState({ isOpen: false });
    };

    _this._onMouseUp = function (e) {
      // This is in a timeout to ensure the component has a chance to fully unmount
      _this.timer = setTimeout(function () {
        return _this.setState({ isOpen: _this.state.isHovered });
      }, 0);
    };

    _this.state = {
      isOpen: false,
      isHovered: false
    };
    return _this;
  }

  _createClass(Tooltip, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var elem = _reactDom2.default.findDOMNode(this);

      elem.addEventListener("mouseenter", this._onMouseEnter, false);
      elem.addEventListener("mouseleave", this._onMouseLeave, false);

      // HACK: These two event listeners ensure that if a click on the child causes the tooltip to
      // unmount (e.x. navigating away) then the popover is removed by the time this component
      // unmounts. Previously we were seeing difficult to debug error messages like
      // "Cannot read property 'componentDidUpdate' of null"
      elem.addEventListener("mousedown", this._onMouseDown, true);
      elem.addEventListener("mouseup", this._onMouseUp, true);

      this._element = document.createElement("div");
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _props = this.props,
          isEnabled = _props.isEnabled,
          tooltip = _props.tooltip;

      var isOpen = this.props.isOpen != null ? this.props.isOpen : this.state.isOpen;
      if (tooltip && isEnabled && isOpen) {
        _reactDom2.default.render(_react2.default.createElement(_TooltipPopover2.default, _extends({
          isOpen: true,
          target: this
        }, this.props, {
          children: this.props.tooltip
        })), this._element);
      } else {
        _reactDom2.default.unmountComponentAtNode(this._element);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var elem = _reactDom2.default.findDOMNode(this);
      elem.removeEventListener("mouseenter", this._onMouseEnter, false);
      elem.removeEventListener("mouseleave", this._onMouseLeave, false);
      elem.removeEventListener("mousedown", this._onMouseDown, true);
      elem.removeEventListener("mouseup", this._onMouseUp, true);
      _reactDom2.default.unmountComponentAtNode(this._element);
      clearTimeout(this.timer);
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return Tooltip;
}(_react.Component), _class.propTypes = {
  tooltip: _propTypes2.default.node,
  children: _propTypes2.default.element.isRequired,
  isEnabled: _propTypes2.default.bool,
  verticalAttachments: _propTypes2.default.array,
  isOpen: _propTypes2.default.bool
}, _class.defaultProps = {
  isEnabled: true,
  verticalAttachments: ["top", "bottom"]
}, _temp);
Tooltip.displayName = "Tooltip";
exports.default = Tooltip;


/**
 * Modified version of Tooltip for Jest/Enzyme tests. Instead of manipulating the document root it
 * renders the tooltip content (in TestTooltipContent) next to "children" / hover area (TestTooltipHoverArea).
 *
 * The test tooltip can only be toggled with `jestWrapper.simulate("mouseenter")` and `jestWrapper.simulate("mouseleave")`.
 */
var TestTooltip = exports.TestTooltip = (_temp2 = _class2 = function (_Component2) {
  _inherits(TestTooltip, _Component2);

  function TestTooltip(props, context) {
    _classCallCheck(this, TestTooltip);

    var _this2 = _possibleConstructorReturn(this, (TestTooltip.__proto__ || Object.getPrototypeOf(TestTooltip)).call(this, props, context));

    _this2._onMouseEnter = function (e) {
      _this2.setState({ isOpen: true, isHovered: true });
    };

    _this2._onMouseLeave = function (e) {
      _this2.setState({ isOpen: false, isHovered: false });
    };

    _this2.state = {
      isOpen: false,
      isHovered: false
    };
    return _this2;
  }

  _createClass(TestTooltip, [{
    key: "render",
    value: function render() {
      var _props2 = this.props,
          isEnabled = _props2.isEnabled,
          tooltip = _props2.tooltip;

      var isOpen = this.props.isOpen != null ? this.props.isOpen : this.state.isOpen;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          TestTooltipTarget,
          {
            onMouseEnter: this._onMouseEnter,
            onMouseLeave: this._onMouseLeave
          },
          this.props.children
        ),
        tooltip && isEnabled && isOpen && _react2.default.createElement(
          TestTooltipContent,
          null,
          _react2.default.createElement(_TooltipPopover2.default, _extends({
            isOpen: true,
            target: this
          }, this.props, {
            children: this.props.tooltip
          })),
          this.props.tooltip
        )
      );
    }
  }]);

  return TestTooltip;
}(_react.Component), _class2.propTypes = {
  tooltip: _propTypes2.default.node,
  children: _propTypes2.default.element.isRequired,
  isEnabled: _propTypes2.default.bool,
  verticalAttachments: _propTypes2.default.array,
  isOpen: _propTypes2.default.bool
}, _class2.defaultProps = {
  isEnabled: true,
  verticalAttachments: ["top", "bottom"]
}, _temp2);
TestTooltip.displayName = "TestTooltip";
var TestTooltipTarget = exports.TestTooltipTarget = function TestTooltipTarget(_ref) {
  var children = _ref.children,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave;
  return _react2.default.createElement(
    "div",
    {
      className: "test-tooltip-hover-area",
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave
    },
    children
  );
};

TestTooltipTarget.displayName = "TestTooltipTarget";
var TestTooltipContent = exports.TestTooltipContent = function TestTooltipContent(_ref2) {
  var children = _ref2.children;
  return _react2.default.createElement(
    "div",
    { className: "test-tooltip-content" },
    children
  );
};
TestTooltipContent.displayName = "TestTooltipContent";

/***/ }),

/***/ 180:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PivotByLocationAction = __webpack_require__(139);

var _PivotByLocationAction2 = _interopRequireDefault(_PivotByLocationAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (props) {
  return (0, _PivotByLocationAction2.default)(props);
};

/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PivotByTimeAction = __webpack_require__(140);

var _PivotByTimeAction2 = _interopRequireDefault(_PivotByTimeAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (props) {
  return (0, _PivotByTimeAction2.default)(props);
};

/***/ }),

/***/ 182:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"LegendHeader":"_14YpV","LegendItem":"_1zU60","Legend":"_2tUFa","none":"_3YdyC","vertical":"_1BBNM","horizontal":"_1TLy7"};

/***/ }),

/***/ 183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Ellipsified = __webpack_require__(97);

var _Ellipsified2 = _interopRequireDefault(_Ellipsified);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Don't use a <a> tag if there's no href
var LegendLink = function LegendLink(props) {
  return props.href ? _react2.default.createElement("a", props) : _react2.default.createElement("span", props);
};

var LegendItem = (_temp = _class = function (_Component) {
  _inherits(LegendItem, _Component);

  function LegendItem(props, context) {
    _classCallCheck(this, LegendItem);

    var _this = _possibleConstructorReturn(this, (LegendItem.__proto__ || Object.getPrototypeOf(LegendItem)).call(this, props, context));

    _this.state = {};
    return _this;
  }

  _createClass(LegendItem, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          title = _props.title,
          color = _props.color,
          showDot = _props.showDot,
          showTitle = _props.showTitle,
          isMuted = _props.isMuted,
          showTooltip = _props.showTooltip,
          showDotTooltip = _props.showDotTooltip,
          onMouseEnter = _props.onMouseEnter,
          onMouseLeave = _props.onMouseLeave,
          className = _props.className,
          description = _props.description,
          onClick = _props.onClick;

      return _react2.default.createElement(
        LegendLink,
        {
          className: (0, _classnames2.default)(className, "LegendItem", "no-decoration flex align-center fullscreen-normal-text fullscreen-night-text", {
            mr1: showTitle,
            muted: isMuted,
            "cursor-pointer": onClick
          }),
          style: { overflowX: "hidden", flex: "0 1 auto" },
          onMouseEnter: onMouseEnter,
          onMouseLeave: onMouseLeave,
          onClick: onClick
        },
        showDot && _react2.default.createElement(
          _Tooltip2.default,
          { tooltip: title, isEnabled: showTooltip && showDotTooltip },
          _react2.default.createElement("div", {
            className: (0, _classnames2.default)("flex-no-shrink", "inline-block circular"),
            style: {
              width: 13,
              height: 13,
              margin: 4,
              marginRight: 8,
              backgroundColor: color
            }
          })
        ),
        showTitle && _react2.default.createElement(
          "div",
          { className: "flex align-center" },
          _react2.default.createElement(
            "span",
            { className: "mr1" },
            _react2.default.createElement(
              _Ellipsified2.default,
              { showTooltip: showTooltip },
              title
            )
          ),
          description && _react2.default.createElement(
            "div",
            { className: "hover-child" },
            _react2.default.createElement(
              _Tooltip2.default,
              { tooltip: description, maxWidth: "22em" },
              _react2.default.createElement(_Icon2.default, { name: "info" })
            )
          )
        )
      );
    }
  }]);

  return LegendItem;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {
  showDot: true,
  showTitle: true,
  isMuted: false,
  showTooltip: true,
  showDotTooltip: true
}, _temp);
LegendItem.displayName = "LegendItem";
exports.default = LegendItem;

/***/ }),

/***/ 184:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.passwordReset = exports.PASSWORD_RESET = exports.logout = exports.LOGOUT = exports.loginGoogle = exports.LOGIN_GOOGLE = exports.login = exports.LOGIN = undefined;

var _handleActions;

var _templateObject = _taggedTemplateLiteral(["Please enter a valid formatted email address."], ["Please enter a valid formatted email address."]),
    _templateObject2 = _taggedTemplateLiteral(["Passwords do not match"], ["Passwords do not match"]);

var _redux = __webpack_require__(24);

var _reactRouterRedux = __webpack_require__(19);

var _cookies = __webpack_require__(301);

var _cookies2 = _interopRequireDefault(_cookies);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _c3po = __webpack_require__(2);

var _auth = __webpack_require__(267);

var _user = __webpack_require__(129);

var _services = __webpack_require__(15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// login
var LOGIN = exports.LOGIN = "metabase/auth/LOGIN";
var login = exports.login = (0, _redux.createThunkAction)(LOGIN, function (credentials, redirectUrl) {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      var newSession;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(!_settings2.default.ldapEnabled() && !_utils2.default.validEmail(credentials.username))) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", {
                data: {
                  errors: { email: (0, _c3po.t)(_templateObject) }
                }
              });

            case 2:
              _context.prev = 2;
              _context.next = 5;
              return _services.SessionApi.create(credentials);

            case 5:
              newSession = _context.sent;


              // since we succeeded, lets set the session cookie
              _cookies2.default.setSessionCookie(newSession.id);

              _analytics2.default.trackEvent("Auth", "Login");
              // TODO: redirect after login (carry user to intended destination)
              _context.next = 10;
              return dispatch((0, _user.refreshCurrentUser)());

            case 10:
              dispatch((0, _reactRouterRedux.push)(redirectUrl || "/"));
              _context.next = 16;
              break;

            case 13:
              _context.prev = 13;
              _context.t0 = _context["catch"](2);
              return _context.abrupt("return", _context.t0);

            case 16:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this, [[2, 13]]);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
});

// login Google
var LOGIN_GOOGLE = exports.LOGIN_GOOGLE = "metabase/auth/LOGIN_GOOGLE";
var loginGoogle = exports.loginGoogle = (0, _redux.createThunkAction)(LOGIN_GOOGLE, function (googleUser, redirectUrl) {
  return function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      var newSession;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              _context2.next = 3;
              return _services.SessionApi.createWithGoogleAuth({
                token: googleUser.getAuthResponse().id_token
              });

            case 3:
              newSession = _context2.sent;


              // since we succeeded, lets set the session cookie
              _cookies2.default.setSessionCookie(newSession.id);

              _analytics2.default.trackEvent("Auth", "Google Auth Login");

              // TODO: redirect after login (carry user to intended destination)
              _context2.next = 8;
              return dispatch((0, _user.refreshCurrentUser)());

            case 8:
              dispatch((0, _reactRouterRedux.push)(redirectUrl || "/"));
              _context2.next = 19;
              break;

            case 11:
              _context2.prev = 11;
              _context2.t0 = _context2["catch"](0);

              (0, _auth.clearGoogleAuthCredentials)();
              // If we see a 428 ("Precondition Required") that means we need to show the "No Metabase account exists for this Google Account" page

              if (!(_context2.t0.status === 428)) {
                _context2.next = 18;
                break;
              }

              dispatch((0, _reactRouterRedux.push)("/auth/google_no_mb_account"));
              _context2.next = 19;
              break;

            case 18:
              return _context2.abrupt("return", _context2.t0);

            case 19:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this, [[0, 11]]);
    }));

    return function (_x3, _x4) {
      return _ref2.apply(this, arguments);
    };
  }();
});

// logout
var LOGOUT = exports.LOGOUT = "metabase/auth/LOGOUT";
var logout = exports.logout = (0, _redux.createThunkAction)(LOGOUT, function () {
  return function (dispatch, getState) {
    // TODO: as part of a logout we want to clear out any saved state that we have about anything

    var sessionId = _cookies2.default.setSessionCookie();
    if (sessionId) {
      // actively delete the session
      _services.SessionApi.delete({ session_id: sessionId });
    }
    _analytics2.default.trackEvent("Auth", "Logout");

    dispatch((0, _reactRouterRedux.push)("/auth/login"));
  };
});

// passwordReset
var PASSWORD_RESET = exports.PASSWORD_RESET = "metabase/auth/PASSWORD_RESET";
var passwordReset = exports.passwordReset = (0, _redux.createThunkAction)(PASSWORD_RESET, function (token, credentials) {
  return function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dispatch, getState) {
      var result;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (!(credentials.password !== credentials.password2)) {
                _context3.next = 2;
                break;
              }

              return _context3.abrupt("return", {
                success: false,
                error: { data: { errors: { password2: (0, _c3po.t)(_templateObject2) } } }
              });

            case 2:
              _context3.prev = 2;
              _context3.next = 5;
              return _services.SessionApi.reset_password({
                token: token,
                password: credentials.password
              });

            case 5:
              result = _context3.sent;


              if (result.session_id) {
                // we should have a valid session that we can use immediately!
                _cookies2.default.setSessionCookie(result.session_id);
              }

              _analytics2.default.trackEvent("Auth", "Password Reset");

              return _context3.abrupt("return", {
                success: true,
                error: null
              });

            case 11:
              _context3.prev = 11;
              _context3.t0 = _context3["catch"](2);
              return _context3.abrupt("return", {
                success: false,
                error: _context3.t0
              });

            case 14:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this, [[2, 11]]);
    }));

    return function (_x5, _x6) {
      return _ref3.apply(this, arguments);
    };
  }();
});

// reducers

var loginError = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, LOGIN, { next: function next(state, _ref4) {
    var payload = _ref4.payload;
    return payload ? payload : null;
  } }), _defineProperty(_handleActions, LOGIN_GOOGLE, {
  next: function next(state, _ref5) {
    var payload = _ref5.payload;
    return payload ? payload : null;
  }
}), _handleActions), null);

var resetSuccess = (0, _redux.handleActions)(_defineProperty({}, PASSWORD_RESET, { next: function next(state, _ref6) {
    var payload = _ref6.payload;
    return payload.success;
  } }), false);

var resetError = (0, _redux.handleActions)(_defineProperty({}, PASSWORD_RESET, { next: function next(state, _ref7) {
    var payload = _ref7.payload;
    return payload.error;
  } }), null);

exports.default = (0, _redux.combineReducers)({
  loginError: loginError,
  resetError: resetError,
  resetSuccess: resetSuccess
});

/***/ }),

/***/ 196:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Unknown Field"], ["Unknown Field"]),
    _templateObject2 = _taggedTemplateLiteral(["field"], ["field"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _Clearable = __webpack_require__(242);

var _Clearable2 = _interopRequireDefault(_Clearable);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FieldName = (_temp = _class = function (_Component) {
  _inherits(FieldName, _Component);

  function FieldName() {
    _classCallCheck(this, FieldName);

    return _possibleConstructorReturn(this, (FieldName.__proto__ || Object.getPrototypeOf(FieldName)).apply(this, arguments));
  }

  _createClass(FieldName, [{
    key: "displayNameForFieldLiteral",
    value: function displayNameForFieldLiteral(tableMetadata, fieldLiteral) {
      // see if we can find an entry in the table metadata that matches the field literal
      var matchingField = _underscore2.default.find(tableMetadata.fields, function (field) {
        return _query2.default.isFieldLiteral(field.id) && field.id[1] === fieldLiteral[1];
      }); // check whether names of field literals match

      return matchingField && matchingField.display_name || fieldLiteral[1];
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          field = _props.field,
          tableMetadata = _props.tableMetadata,
          query = _props.query,
          className = _props.className;


      var parts = [];

      if (field) {
        var dimension = _Dimension2.default.parseMBQL(field, tableMetadata && tableMetadata.metadata);
        if (dimension) {
          if (dimension instanceof _Dimension.AggregationDimension) {
            // Aggregation dimension doesn't know about its relation to the current query
            // so we have to infer the display name of aggregation here
            parts = _react2.default.createElement(
              "span",
              { key: "field" },
              query.aggregations()[dimension.aggregationIndex()][0]
            );
          } else {
            parts = _react2.default.createElement(
              "span",
              { key: "field" },
              dimension.render()
            );
          }
        } else if (_query2.default.isFieldLiteral(field)) {
          // TODO Atte Keinänen 6/23/17: Move nested queries logic to Dimension subclasses
          // if the Field in question is a field literal, e.g. ["field-literal", <name>, <type>] just use name as-is
          parts.push(_react2.default.createElement(
            "span",
            { key: "field" },
            this.displayNameForFieldLiteral(tableMetadata, field)
          ));
        } else if (_query2.default.isLocalField(field) && _query2.default.isFieldLiteral(field[1])) {
          // otherwise if for some weird reason we wound up with a Field Literal inside a field ID,
          // e.g. ["field-id", ["field-literal", <name>, <type>], still just use the name as-is
          parts.push(_react2.default.createElement(
            "span",
            { key: "field" },
            this.displayNameForFieldLiteral(tableMetadata, field[1])
          ));
        } else {
          parts.push(_react2.default.createElement(
            "span",
            { key: "field" },
            (0, _c3po.t)(_templateObject)
          ));
        }
      } else {
        parts.push(_react2.default.createElement(
          "span",
          { key: "field", className: "text-grey-2" },
          (0, _c3po.t)(_templateObject2)
        ));
      }

      return _react2.default.createElement(
        _Clearable2.default,
        { onClear: this.props.removeField },
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(className, { selected: _query2.default.isValidField(field) }),
            onClick: this.props.onClick
          },
          _react2.default.createElement(
            "span",
            { className: "QueryOption" },
            parts
          )
        )
      );
    }
  }]);

  return FieldName;
}(_react.Component), _class.propTypes = {
  field: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array]),
  onClick: _propTypes2.default.func,
  removeField: _propTypes2.default.func,
  tableMetadata: _propTypes2.default.object.isRequired,
  query: _propTypes2.default.object
}, _class.defaultProps = {
  className: ""
}, _temp);
FieldName.displayName = "FieldName";
exports.default = FieldName;

/***/ }),

/***/ 199:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PARAMETER_SECTIONS = exports.PARAMETER_OPTIONS = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["Month and Year"], ["Month and Year"]),
    _templateObject2 = _taggedTemplateLiteral(["Like January, 2016"], ["Like January, 2016"]),
    _templateObject3 = _taggedTemplateLiteral(["Quarter and Year"], ["Quarter and Year"]),
    _templateObject4 = _taggedTemplateLiteral(["Like Q1, 2016"], ["Like Q1, 2016"]),
    _templateObject5 = _taggedTemplateLiteral(["Single Date"], ["Single Date"]),
    _templateObject6 = _taggedTemplateLiteral(["Like January 31, 2016"], ["Like January 31, 2016"]),
    _templateObject7 = _taggedTemplateLiteral(["Date Range"], ["Date Range"]),
    _templateObject8 = _taggedTemplateLiteral(["Like December 25, 2015 - February 14, 2016"], ["Like December 25, 2015 - February 14, 2016"]),
    _templateObject9 = _taggedTemplateLiteral(["Relative Date"], ["Relative Date"]),
    _templateObject10 = _taggedTemplateLiteral(["Like \"the last 7 days\" or \"this month\""], ["Like \"the last 7 days\" or \"this month\""]),
    _templateObject11 = _taggedTemplateLiteral(["Date Filter"], ["Date Filter"]),
    _templateObject12 = _taggedTemplateLiteral(["All Options"], ["All Options"]),
    _templateObject13 = _taggedTemplateLiteral(["Contains all of the above"], ["Contains all of the above"]),
    _templateObject14 = _taggedTemplateLiteral(["City"], ["City"]),
    _templateObject15 = _taggedTemplateLiteral(["State"], ["State"]),
    _templateObject16 = _taggedTemplateLiteral(["ZIP or Postal Code"], ["ZIP or Postal Code"]),
    _templateObject17 = _taggedTemplateLiteral(["Country"], ["Country"]),
    _templateObject18 = _taggedTemplateLiteral(["ID"], ["ID"]),
    _templateObject19 = _taggedTemplateLiteral(["Category"], ["Category"]),
    _templateObject20 = _taggedTemplateLiteral(["Time"], ["Time"]),
    _templateObject21 = _taggedTemplateLiteral(["Date range, relative date, time of day, etc."], ["Date range, relative date, time of day, etc."]),
    _templateObject22 = _taggedTemplateLiteral(["Location"], ["Location"]),
    _templateObject23 = _taggedTemplateLiteral(["City, State, Country, ZIP code."], ["City, State, Country, ZIP code."]),
    _templateObject24 = _taggedTemplateLiteral(["User ID, product ID, event ID, etc."], ["User ID, product ID, event ID, etc."]),
    _templateObject25 = _taggedTemplateLiteral(["Other Categories"], ["Other Categories"]),
    _templateObject26 = _taggedTemplateLiteral(["Category, Type, Model, Rating, etc."], ["Category, Type, Model, Rating, etc."]);

exports.getFieldDimension = getFieldDimension;
exports.getTagDimension = getTagDimension;
exports.getCardDimensions = getCardDimensions;
exports.getTableDimensions = getTableDimensions;
exports.getCardVariables = getCardVariables;
exports.fieldFilterForParameterType = fieldFilterForParameterType;
exports.parameterOptionsForField = parameterOptionsForField;
exports.getParameterMappingOptions = getParameterMappingOptions;
exports.createParameter = createParameter;
exports.setParameterName = setParameterName;
exports.setParameterDefaultValue = setParameterDefaultValue;

var _Metadata = __webpack_require__(65);

var _Metadata2 = _interopRequireDefault(_Metadata);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _c3po = __webpack_require__(2);

var _Card = __webpack_require__(37);

var _formatting = __webpack_require__(8);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _types = __webpack_require__(42);

var _util = __webpack_require__(27);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var PARAMETER_OPTIONS = exports.PARAMETER_OPTIONS = [{
  type: "date/month-year",
  name: (0, _c3po.t)(_templateObject),
  description: (0, _c3po.t)(_templateObject2)
}, {
  type: "date/quarter-year",
  name: (0, _c3po.t)(_templateObject3),
  description: (0, _c3po.t)(_templateObject4)
}, {
  type: "date/single",
  name: (0, _c3po.t)(_templateObject5),
  description: (0, _c3po.t)(_templateObject6)
}, {
  type: "date/range",
  name: (0, _c3po.t)(_templateObject7),
  description: (0, _c3po.t)(_templateObject8)
}, {
  type: "date/relative",
  name: (0, _c3po.t)(_templateObject9),
  description: (0, _c3po.t)(_templateObject10)
}, {
  type: "date/all-options",
  name: (0, _c3po.t)(_templateObject11),
  menuName: (0, _c3po.t)(_templateObject12),
  description: (0, _c3po.t)(_templateObject13)
}, {
  type: "location/city",
  name: (0, _c3po.t)(_templateObject14)
}, {
  type: "location/state",
  name: (0, _c3po.t)(_templateObject15)
}, {
  type: "location/zip_code",
  name: (0, _c3po.t)(_templateObject16)
}, {
  type: "location/country",
  name: (0, _c3po.t)(_templateObject17)
}, {
  type: "id",
  name: (0, _c3po.t)(_templateObject18)
}, {
  type: "category",
  name: (0, _c3po.t)(_templateObject19)
}];

var PARAMETER_SECTIONS = exports.PARAMETER_SECTIONS = [{
  id: "date",
  name: (0, _c3po.t)(_templateObject20),
  description: (0, _c3po.t)(_templateObject21),
  options: []
}, {
  id: "location",
  name: (0, _c3po.t)(_templateObject22),
  description: (0, _c3po.t)(_templateObject23),
  options: []
}, {
  id: "id",
  name: (0, _c3po.t)(_templateObject18),
  description: (0, _c3po.t)(_templateObject24),
  options: []
}, {
  id: "category",
  name: (0, _c3po.t)(_templateObject25),
  description: (0, _c3po.t)(_templateObject26),
  options: []
}];

var _iteratorNormalCompletion = true;
var _didIteratorError = false;
var _iteratorError = undefined;

try {
  for (var _iterator = PARAMETER_OPTIONS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
    var option = _step.value;

    var sectionId = option.type.split("/")[0];
    var section = _underscore2.default.findWhere(PARAMETER_SECTIONS, { id: sectionId });
    if (!section) {
      section = _underscore2.default.findWhere(PARAMETER_SECTIONS, { id: "category" });
    }
    if (section) {
      section.options = section.options || [];
      section.options.push(option);
    }
  }
} catch (err) {
  _didIteratorError = true;
  _iteratorError = err;
} finally {
  try {
    if (!_iteratorNormalCompletion && _iterator.return) {
      _iterator.return();
    }
  } finally {
    if (_didIteratorError) {
      throw _iteratorError;
    }
  }
}

function getFieldDimension(field) {
  return {
    name: field.display_name,
    field_id: field.id,
    parentName: field.table.display_name,
    target: ["field-id", field.id],
    depth: 0
  };
}

function getTagDimension(tag, dimension) {
  return {
    name: dimension.name,
    parentName: dimension.parentName,
    target: ["template-tag", tag.name],
    field_id: dimension.field_id,
    depth: 0
  };
}

function getCardDimensions(metadata, card) {
  var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
    return true;
  };

  if (card.dataset_query.type === "query") {
    var table = card.dataset_query.query.source_table != null ? metadata.tables[card.dataset_query.query.source_table] : null;
    if (table) {
      return getTableDimensions(table, 1, filter);
    }
  } else if (card.dataset_query.type === "native") {
    var dimensions = [];
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = (0, _Card.getTemplateTags)(card)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _tag = _step2.value;

        if (_tag.type === "dimension" && Array.isArray(_tag.dimension) && (0, _util.mbqlEq)(_tag.dimension[0], "field-id")) {
          var _field = metadata.fields[_tag.dimension[1]];
          if (_field && filter(_field)) {
            var fieldDimension = getFieldDimension(_field);
            dimensions.push(getTagDimension(_tag, fieldDimension));
          }
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    return dimensions;
  }
  return [];
}

function getDimensionTargetFieldId(target) {
  if (Array.isArray(target) && (0, _util.mbqlEq)(target[0], "template-tag")) {
    return null;
  } else {
    return _query2.default.getFieldTargetId(target);
  }
}

function getTableDimensions(table, depth) {
  var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
    return true;
  };

  return _underscore2.default.chain(table.fields).map(function (field) {
    var targetField = field.target;
    if (targetField && depth > 0) {
      var targetTable = targetField.table;
      return getTableDimensions(targetTable, depth - 1, filter).map(function (dimension) {
        return _extends({}, dimension, {
          parentName: (0, _formatting.stripId)(field.display_name),
          target: ["fk->", field.id, getDimensionTargetFieldId(dimension.target)],
          depth: dimension.depth + 1
        });
      });
    } else if (filter(field)) {
      return [getFieldDimension(field)];
    }
  }).flatten().filter(function (dimension) {
    return dimension != null;
  }).value();
}

function getCardVariables(metadata, card) {
  var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
    return true;
  };

  if (card.dataset_query.type === "native") {
    var variables = [];
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = (0, _Card.getTemplateTags)(card)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var _tag2 = _step3.value;

        if (!filter || filter(_tag2)) {
          variables.push({
            name: _tag2.display_name || _tag2.name,
            type: _tag2.type,
            target: ["template-tag", _tag2.name]
          });
        }
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }

    return variables;
  }
  return [];
}

function fieldFilterForParameter(parameter) {
  return fieldFilterForParameterType(parameter.type);
}

function fieldFilterForParameterType(parameterType) {
  var _parameterType$split = parameterType.split("/"),
      _parameterType$split2 = _slicedToArray(_parameterType$split, 1),
      type = _parameterType$split2[0];

  switch (type) {
    case "date":
      return function (field) {
        return field.isDate();
      };
    case "id":
      return function (field) {
        return field.isID();
      };
    case "category":
      return function (field) {
        return field.isCategory();
      };
  }

  switch (parameterType) {
    case "location/city":
      return function (field) {
        return (0, _types.isa)(field.special_type, _types.TYPE.City);
      };
    case "location/state":
      return function (field) {
        return (0, _types.isa)(field.special_type, _types.TYPE.State);
      };
    case "location/zip_code":
      return function (field) {
        return (0, _types.isa)(field.special_type, _types.TYPE.ZipCode);
      };
    case "location/country":
      return function (field) {
        return (0, _types.isa)(field.special_type, _types.TYPE.Country);
      };
  }
  return function (field) {
    return false;
  };
}

function parameterOptionsForField(field) {
  return PARAMETER_OPTIONS.filter(function (option) {
    return fieldFilterForParameterType(option.type)(field);
  });
}

function tagFilterForParameter(parameter) {
  var _parameter$type$split = parameter.type.split("/"),
      _parameter$type$split2 = _slicedToArray(_parameter$type$split, 2),
      type = _parameter$type$split2[0],
      subtype = _parameter$type$split2[1];

  switch (type) {
    case "date":
      return function (tag) {
        return subtype === "single" && tag.type === "date";
      };
    case "location":
      return function (tag) {
        return tag.type === "number" || tag.type === "text";
      };
    case "id":
      return function (tag) {
        return tag.type === "number" || tag.type === "text";
      };
    case "category":
      return function (tag) {
        return tag.type === "number" || tag.type === "text";
      };
  }
  return function (tag) {
    return false;
  };
}

var VARIABLE_ICONS = {
  text: "string",
  number: "int",
  date: "calendar"
};

function getParameterMappingOptions(metadata, parameter, card) {
  var options = [];

  // dimensions
  options.push.apply(options, _toConsumableArray(getCardDimensions(metadata, card, fieldFilterForParameter(parameter)).map(function (dimension) {
    var field = metadata.fields[dimension.field_id];
    return {
      name: dimension.name,
      target: ["dimension", dimension.target],
      icon: field && field.icon(),
      sectionName: dimension.parentName,
      isFk: dimension.depth > 0
    };
  })));

  // variables
  options.push.apply(options, _toConsumableArray(getCardVariables(metadata, card, tagFilterForParameter(parameter)).map(function (variable) {
    return {
      name: variable.name,
      target: ["variable", variable.target],
      icon: VARIABLE_ICONS[variable.type],
      sectionName: "Variables",
      isVariable: true
    };
  })));

  return options;
}

function createParameter(option) {
  var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var name = option.name;
  var nameIndex = 0;
  // get a unique name
  while (_underscore2.default.any(parameters, function (p) {
    return p.name === name;
  })) {
    name = option.name + " " + ++nameIndex;
  }
  var parameter = {
    name: "",
    slug: "",
    id: Math.floor(Math.random() * Math.pow(2, 32)).toString(16),
    type: option.type
  };
  return setParameterName(parameter, name);
}

function setParameterName(parameter, name) {
  var slug = (0, _formatting.slugify)(name);
  return _extends({}, parameter, {
    name: name,
    slug: slug
  });
}

function setParameterDefaultValue(parameter, value) {
  return _extends({}, parameter, {
    default: value
  });
}

/***/ }),

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2; /* eslint "react/prop-types": "warn" */


var _templateObject = _taggedTemplateLiteral(["An error occured"], ["An error occured"]),
    _templateObject2 = _taggedTemplateLiteral(["Loading..."], ["Loading..."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _LoadingSpinner = __webpack_require__(74);

var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingAndErrorWrapper = (_temp2 = _class = function (_Component) {
  _inherits(LoadingAndErrorWrapper, _Component);

  function LoadingAndErrorWrapper() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LoadingAndErrorWrapper);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LoadingAndErrorWrapper.__proto__ || Object.getPrototypeOf(LoadingAndErrorWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      messageIndex: 0,
      sceneIndex: 0
    }, _this.loadingInterval = function () {
      if (_this.props.loading) {
        _this.cycleLoadingMessage();
      }
    }, _this.cycleLoadingMessage = function () {
      _this.setState({
        messageIndex: _this.state.messageIndex + 1 < _this.props.loadingMessages.length ? _this.state.messageIndex + 1 : 0
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(LoadingAndErrorWrapper, [{
    key: "getErrorMessage",
    value: function getErrorMessage() {
      var error = this.props.error;

      return (
        // NOTE Atte Keinänen 5/10/17 Dashboard API endpoint returns the error as JSON with `message` field
        error.data && (error.data.message ? error.data.message : error.data) || error.statusText || error.message || (0, _c3po.t)(_templateObject)
      );
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props,
          loadingMessages = _props.loadingMessages,
          messageInterval = _props.messageInterval;
      // only start cycling if multiple messages are provided

      if (loadingMessages.length > 1) {
        this.cycle = setInterval(this.loadingInterval, messageInterval);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.cycle);
    }
  }, {
    key: "getChildren",
    value: function getChildren() {
      function resolveChild(child) {
        if (Array.isArray(child)) {
          return child.map(resolveChild);
        } else if (typeof child === "function") {
          return child();
        } else {
          return child;
        }
      }
      return resolveChild(this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          loading = _props2.loading,
          error = _props2.error,
          noBackground = _props2.noBackground,
          noWrapper = _props2.noWrapper,
          showSpinner = _props2.showSpinner,
          loadingMessages = _props2.loadingMessages,
          loadingScenes = _props2.loadingScenes;
      var _state = this.state,
          messageIndex = _state.messageIndex,
          sceneIndex = _state.sceneIndex;


      var contentClassName = (0, _classnames2.default)("wrapper py4 text-brand text-centered flex-full flex flex-column layout-centered", { "bg-white": !noBackground });

      if (noWrapper && !error && !loading) {
        return _react2.default.Children.only(this.getChildren());
      }
      return _react2.default.createElement(
        "div",
        { className: this.props.className, style: this.props.style },
        error ? _react2.default.createElement(
          "div",
          { className: contentClassName },
          _react2.default.createElement(
            "h2",
            { className: "text-normal text-grey-2 ie-wrap-content-fix" },
            this.getErrorMessage()
          )
        ) : loading ? _react2.default.createElement(
          "div",
          { className: contentClassName },
          loadingScenes && loadingScenes[sceneIndex],
          !loadingScenes && showSpinner && _react2.default.createElement(_LoadingSpinner2.default, null),
          _react2.default.createElement(
            "h2",
            { className: "text-normal text-grey-2 mt1" },
            loadingMessages[messageIndex]
          )
        ) : this.getChildren()
      );
    }
  }]);

  return LoadingAndErrorWrapper;
}(_react.Component), _class.propTypes = {
  className: _propTypes2.default.string,
  error: _propTypes2.default.any,
  loading: _propTypes2.default.any,
  noBackground: _propTypes2.default.bool,
  noWrapper: _propTypes2.default.bool,
  children: _propTypes2.default.any,
  style: _propTypes2.default.object,
  showSpinner: _propTypes2.default.bool,
  loadingMessages: _propTypes2.default.array,
  messageInterval: _propTypes2.default.number,
  loadingScenes: _propTypes2.default.array
}, _class.defaultProps = {
  className: "flex flex-full",
  error: false,
  loading: false,
  noBackground: false,
  noWrapper: false,
  showSpinner: true,
  loadingMessages: [(0, _c3po.t)(_templateObject2)],
  messageInterval: 6000
}, _temp2);
LoadingAndErrorWrapper.displayName = "LoadingAndErrorWrapper";
exports.default = LoadingAndErrorWrapper;

/***/ }),

/***/ 200:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseHashOptions = parseHashOptions;
exports.stringifyHashOptions = stringifyHashOptions;
exports.updateQueryString = updateQueryString;

var _querystring = __webpack_require__(104);

var _querystring2 = _interopRequireDefault(_querystring);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parseHashOptions(hash) {
  var options = _querystring2.default.parse(hash.replace(/^#/, ""));
  for (var name in options) {
    if (options[name] === "") {
      options[name] = true;
    } else if (/^(true|false|-?\d+(\.\d+)?)$/.test(options[name])) {
      options[name] = JSON.parse(options[name]);
    }
  }
  return options;
}

function stringifyHashOptions(options) {
  return _querystring2.default.stringify(options).replace(/=true\b/g, "");
}

function updateQueryString(location, optionsUpdater) {
  var currentOptions = parseHashOptions(location.search.substring(1));
  var queryString = stringifyHashOptions(optionsUpdater(currentOptions));

  return {
    pathname: location.pathname,
    hash: location.hash,
    search: queryString ? "?" + queryString : null
  };
}

/***/ }),

/***/ 201:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cancelable = cancelable;
exports.timeout = timeout;
exports.delay = delay;
exports.defer = defer;
// return a promise wrapping the provided one but with a "cancel" method
function cancelable(promise) {
  var canceled = false;

  var wrappedPromise = new Promise(function (resolve, reject) {
    promise.then(function (value) {
      return canceled ? reject({ isCanceled: true }) : resolve(value);
    }, function (error) {
      return canceled ? reject({ isCanceled: true }) : reject(error);
    });
  });

  wrappedPromise.cancel = function () {
    canceled = true;
  };

  return wrappedPromise;
}

// if a promise doesn't resolve/reject within a given duration it will reject
function timeout(promise, duration, error) {
  return new Promise(function (resolve, reject) {
    promise.then(resolve, reject);
    setTimeout(function () {
      return reject(error || new Error("Operation timed out"));
    }, duration);
  });
}

// returns a promise that resolves after a given duration
function delay(duration) {
  return new Promise(function (resolve, reject) {
    return setTimeout(resolve, duration);
  });
}

function defer() {
  var deferrred = {};
  deferrred.promise = new Promise(function (resolve, reject) {
    deferrred.resolve = resolve;
    deferrred.reject = reject;
  });
  return deferrred;
}

/***/ }),

/***/ 205:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _querystring = __webpack_require__(104);

var _querystring2 = _interopRequireDefault(_querystring);

var _events = __webpack_require__(317);

var _events2 = _interopRequireDefault(_events);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

var DEFAULT_OPTIONS = {
  noEvent: false,
  transformResponse: function transformResponse(o) {
    return o;
  },
  raw: {}
};

var Api = function (_EventEmitter) {
  _inherits(Api, _EventEmitter);

  function Api() {
    _classCallCheck(this, Api);

    var _this = _possibleConstructorReturn(this, (Api.__proto__ || Object.getPrototypeOf(Api)).call(this));

    _this.GET = _this._makeMethod("GET").bind(_this);
    _this.DELETE = _this._makeMethod("DELETE").bind(_this);
    _this.POST = _this._makeMethod("POST", true).bind(_this);
    _this.PUT = _this._makeMethod("PUT", true).bind(_this);
    return _this;
  }

  _createClass(Api, [{
    key: "_makeMethod",
    value: function _makeMethod(method) {
      var _this2 = this;

      var hasBody = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      return function (urlTemplate) {
        var methodOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (typeof methodOptions === "function") {
          methodOptions = { transformResponse: methodOptions };
        }
        var defaultOptions = _extends({}, DEFAULT_OPTIONS, methodOptions);
        return function (data) {
          var invocationOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          var options = _extends({}, defaultOptions, invocationOptions);
          var url = urlTemplate;
          data = _extends({}, data);
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = (url.match(/:\w+/g) || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var tag = _step.value;

              var paramName = tag.slice(1);
              var value = data[paramName];
              delete data[paramName];
              if (value === undefined) {
                console.warn("Warning: calling", method, "without", tag);
                value = "";
              }
              if (!options.raw || !options.raw[paramName]) {
                value = encodeURIComponent(value);
              }
              url = url.replace(tag, value);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          var headers = {
            Accept: "application/json"
          };

          var body = void 0;
          if (hasBody) {
            headers["Content-Type"] = "application/json";
            body = JSON.stringify(data);
          } else {
            var qs = _querystring2.default.stringify(data);
            if (qs) {
              url += (url.indexOf("?") >= 0 ? "&" : "?") + qs;
            }
          }

          return _this2._makeRequest(method, url, headers, body, data, options);
        };
      };
    }

    // TODO Atte Keinänen 6/26/17: Replacing this with isomorphic-fetch could simplify the implementation

  }, {
    key: "_makeRequest",
    value: function _makeRequest(method, url, headers, body, data, options) {
      var _this3 = this;

      return new Promise(function (resolve, reject) {
        var isCancelled = false;
        var xhr = new XMLHttpRequest();
        xhr.open(method, _this3.basename + url);
        for (var headerName in headers) {
          xhr.setRequestHeader(headerName, headers[headerName]);
        }
        xhr.onreadystatechange = function () {
          // $FlowFixMe
          if (xhr.readyState === XMLHttpRequest.DONE) {
            var _body = xhr.responseText;
            try {
              _body = JSON.parse(_body);
            } catch (e) {}
            if (xhr.status >= 200 && xhr.status <= 299) {
              if (options.transformResponse) {
                _body = options.transformResponse(_body, { data: data });
              }
              resolve(_body);
            } else {
              reject({
                status: xhr.status,
                data: _body,
                isCancelled: isCancelled
              });
            }
            if (!options.noEvent) {
              _this3.emit(xhr.status, url);
            }
          }
        };
        xhr.send(body);

        if (options.cancelled) {
          options.cancelled.then(function () {
            isCancelled = true;
            xhr.abort();
          });
        }
      });
    }
  }]);

  return Api;
}(_events2.default);

exports.default = new Api();

/***/ }),

/***/ 207:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refreshSettingsList = exports.refreshSiteSettings = exports.REFRESH_SITE_SETTINGS = undefined;

var _handleActions;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _redux = __webpack_require__(24);

var _services = __webpack_require__(15);

var _user = __webpack_require__(129);

var _user2 = __webpack_require__(99);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /*  weak */

var REFRESH_SITE_SETTINGS = exports.REFRESH_SITE_SETTINGS = "metabase/settings/REFRESH_SITE_SETTINGS";
var REFRESH_SETTINGS_LIST = "metabase/settings/REFRESH_SETTINGS_LIST";

var refreshSiteSettings = exports.refreshSiteSettings = (0, _redux.createThunkAction)(REFRESH_SITE_SETTINGS, function () {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      var settings;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _services.SessionApi.properties();

            case 2:
              settings = _context.sent;

              _settings2.default.setAll(settings);

              // also load admin-only settings, if user is an admin
              _context.next = 6;
              return dispatch((0, _user.loadCurrentUser)());

            case 6:
              if (!(0, _user2.getUserIsAdmin)(getState())) {
                _context.next = 9;
                break;
              }

              _context.next = 9;
              return dispatch(refreshSettingsList());

            case 9:
              return _context.abrupt("return", settings);

            case 10:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
});

var refreshSettingsList = exports.refreshSettingsList = (0, _redux.createAction)(REFRESH_SETTINGS_LIST, _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
  var settingsList;
  return regeneratorRuntime.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return _services.SettingsApi.list();

        case 2:
          settingsList = _context2.sent;

          _settings2.default.setAll(collectSettingsValues(settingsList));
          return _context2.abrupt("return", settingsList.map(function (setting) {
            setting.originalValue = setting.value;
            return setting;
          }));

        case 5:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2, undefined);
})));

var collectSettingsValues = function collectSettingsValues(settingsList) {
  var settings = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = settingsList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var setting = _step.value;

      settings[setting.key] = setting.value;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return settings;
};

var values = (0, _redux.handleActions)((_handleActions = {}, _defineProperty(_handleActions, REFRESH_SITE_SETTINGS, {
  next: function next(state, _ref3) {
    var payload = _ref3.payload;
    return _extends({}, state, payload);
  }
}), _defineProperty(_handleActions, REFRESH_SETTINGS_LIST, {
  next: function next(state, _ref4) {
    var payload = _ref4.payload;
    return _extends({}, state, collectSettingsValues(payload));
  }
}), _handleActions), {});

var settings = (0, _redux.handleActions)(_defineProperty({}, REFRESH_SETTINGS_LIST, { next: function next(state, _ref5) {
    var payload = _ref5.payload;
    return payload;
  } }), []);

exports.default = (0, _redux.combineReducers)({
  values: values,
  settings: settings
});

/***/ }),

/***/ 208:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteAlert = exports.DELETE_ALERT = exports.unsubscribeFromAlert = exports.UNSUBSCRIBE_FROM_ALERT_CLEANUP = exports.UNSUBSCRIBE_FROM_ALERT = exports.updateAlert = exports.UPDATE_ALERT = exports.createAlert = exports.CREATE_ALERT = exports.fetchAlertsForQuestion = exports.FETCH_ALERTS_FOR_QUESTION = exports.FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS = exports.fetchAllAlerts = exports.FETCH_ALL_ALERTS = undefined;

var _extends3;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["Your alert is all set up."], ["Your alert is all set up."]),
    _templateObject2 = _taggedTemplateLiteral(["Your alert was updated."], ["Your alert was updated."]),
    _templateObject3 = _taggedTemplateLiteral(["The alert was successfully deleted."], ["The alert was successfully deleted."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _reduxActions = __webpack_require__(101);

var _redux = __webpack_require__(116);

var _undo = __webpack_require__(103);

var _c3po = __webpack_require__(2);

var _services = __webpack_require__(15);

var _request = __webpack_require__(326);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var FETCH_ALL_ALERTS = exports.FETCH_ALL_ALERTS = "metabase/alerts/FETCH_ALL_ALERTS";
var fetchAllAlertsRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.list,
  actionPrefix: FETCH_ALL_ALERTS,
  storeAsDictionary: true
});
var fetchAllAlerts = exports.fetchAllAlerts = function fetchAllAlerts() {
  return function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return dispatch(fetchAllAlertsRequest.trigger());

            case 2:
              dispatch.action(FETCH_ALL_ALERTS);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
};

var FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS = exports.FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS = "metabase/alerts/FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS";
var FETCH_ALERTS_FOR_QUESTION = exports.FETCH_ALERTS_FOR_QUESTION = "metabase/alerts/FETCH_ALERTS_FOR_QUESTION";
var fetchAlertsForQuestionRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.list_for_question,
  actionPrefix: FETCH_ALERTS_FOR_QUESTION,
  storeAsDictionary: true
});
var fetchAlertsForQuestion = exports.fetchAlertsForQuestion = function fetchAlertsForQuestion(questionId) {
  return function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              dispatch.action(FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS, questionId);
              _context2.next = 3;
              return dispatch(fetchAlertsForQuestionRequest.trigger({ questionId: questionId }));

            case 3:
              dispatch.action(FETCH_ALERTS_FOR_QUESTION);

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, undefined);
    }));

    return function (_x3, _x4) {
      return _ref2.apply(this, arguments);
    };
  }();
};

var CREATE_ALERT = exports.CREATE_ALERT = "metabase/alerts/CREATE_ALERT";
var createAlertRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.create,
  actionPrefix: CREATE_ALERT,
  storeAsDictionary: true
});
var createAlert = exports.createAlert = function createAlert(alert) {
  return function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return dispatch(createAlertRequest.trigger(alert));

            case 2:

              dispatch((0, _undo.addUndo)((0, _undo.createUndo)({
                type: "create-alert",
                // eslint-disable-next-line react/display-name
                message: function message() {
                  return _react2.default.createElement(
                    "div",
                    { className: "flex align-center text-bold" },
                    _react2.default.createElement(_Icon2.default, {
                      name: "alertConfirm",
                      size: "19",
                      className: "mr2 text-success"
                    }),
                    (0, _c3po.t)(_templateObject)
                  );
                },
                action: null // alert creation is not undoable
              })));

              dispatch.action(CREATE_ALERT);

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, undefined);
    }));

    return function (_x5, _x6) {
      return _ref3.apply(this, arguments);
    };
  }();
};

var UPDATE_ALERT = exports.UPDATE_ALERT = "metabase/alerts/UPDATE_ALERT";
var updateAlertRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.update,
  actionPrefix: UPDATE_ALERT,
  storeAsDictionary: true
});
var updateAlert = exports.updateAlert = function updateAlert(alert) {
  return function () {
    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return dispatch(updateAlertRequest.trigger(alert));

            case 2:

              dispatch((0, _undo.addUndo)((0, _undo.createUndo)({
                type: "update-alert",
                // eslint-disable-next-line react/display-name
                message: function message() {
                  return _react2.default.createElement(
                    "div",
                    { className: "flex align-center text-bold" },
                    _react2.default.createElement(_Icon2.default, {
                      name: "alertConfirm",
                      size: "19",
                      className: "mr2 text-success"
                    }),
                    (0, _c3po.t)(_templateObject2)
                  );
                },
                action: null // alert updating is not undoable
              })));

              dispatch.action(UPDATE_ALERT);

            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, undefined);
    }));

    return function (_x7, _x8) {
      return _ref4.apply(this, arguments);
    };
  }();
};

var UNSUBSCRIBE_FROM_ALERT = exports.UNSUBSCRIBE_FROM_ALERT = "metabase/alerts/UNSUBSCRIBE_FROM_ALERT";
var UNSUBSCRIBE_FROM_ALERT_CLEANUP = exports.UNSUBSCRIBE_FROM_ALERT_CLEANUP = "metabase/alerts/UNSUBSCRIBE_FROM_ALERT_CLEANUP";
var unsubscribeFromAlertRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.unsubscribe,
  actionPrefix: UNSUBSCRIBE_FROM_ALERT,
  storeAsDictionary: true
});
var unsubscribeFromAlert = exports.unsubscribeFromAlert = function unsubscribeFromAlert(alert) {
  return function () {
    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return dispatch(unsubscribeFromAlertRequest.trigger(alert));

            case 2:
              dispatch.action(UNSUBSCRIBE_FROM_ALERT);

              // This delay lets us to show "You're unsubscribed" text in place of an
              // alert list item for a while before removing the list item completely
              setTimeout(function () {
                return dispatch.action(UNSUBSCRIBE_FROM_ALERT_CLEANUP, alert.id);
              }, 5000);

            case 4:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, undefined);
    }));

    return function (_x9, _x10) {
      return _ref5.apply(this, arguments);
    };
  }();
};

var DELETE_ALERT = exports.DELETE_ALERT = "metabase/alerts/DELETE_ALERT";
var deleteAlertRequest = new _request.RestfulRequest({
  endpoint: _services.AlertApi.delete,
  actionPrefix: DELETE_ALERT,
  storeAsDictionary: true
});
var deleteAlert = exports.deleteAlert = function deleteAlert(alertId) {
  return function () {
    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(dispatch, getState) {
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return dispatch(deleteAlertRequest.trigger({ id: alertId }));

            case 2:

              dispatch((0, _undo.addUndo)((0, _undo.createUndo)({
                type: "delete-alert",
                // eslint-disable-next-line react/display-name
                message: function message() {
                  return _react2.default.createElement(
                    "div",
                    { className: "flex align-center text-bold" },
                    _react2.default.createElement(_Icon2.default, {
                      name: "alertConfirm",
                      size: "19",
                      className: "mr2 text-success"
                    }),
                    (0, _c3po.t)(_templateObject3)
                  );
                },
                action: null // alert deletion is not undoable
              })));
              dispatch.action(DELETE_ALERT, alertId);

            case 4:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, undefined);
    }));

    return function (_x11, _x12) {
      return _ref6.apply(this, arguments);
    };
  }();
};

// removal from the result dictionary (not supported by RestfulRequest yet)
var removeAlertReducer = function removeAlertReducer(state, _ref7) {
  var alertId = _ref7.payload;
  return _extends({}, state, {
    result: _underscore2.default.omit(state.result || {}, alertId)
  });
};

var removeAlertsForQuestionReducer = function removeAlertsForQuestionReducer(state, _ref8) {
  var questionId = _ref8.payload;

  return _extends({}, state, {
    result: _underscore2.default.omit(state.result || {}, function (alert) {
      return alert.card.id === questionId;
    })
  });
};

var alerts = (0, _reduxActions.handleActions)(_extends({}, fetchAllAlertsRequest.getReducers(), _defineProperty({}, FETCH_ALERTS_FOR_QUESTION_CLEAR_OLD_ALERTS, removeAlertsForQuestionReducer), fetchAlertsForQuestionRequest.getReducers(), createAlertRequest.getReducers(), updateAlertRequest.getReducers(), (_extends3 = {}, _defineProperty(_extends3, DELETE_ALERT, removeAlertReducer), _defineProperty(_extends3, UNSUBSCRIBE_FROM_ALERT_CLEANUP, removeAlertReducer), _extends3)), []);

exports.default = (0, _redux.combineReducers)({
  alerts: alerts
});

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cardHasBecomeDirty = exports.isDimensionMetricMetric = exports.isDimensionDimensionMetric = exports.isDimensionMetric = exports.DIMENSION_DIMENSION_METRIC = exports.DIMENSION_METRIC_METRIC = exports.DIMENSION_METRIC = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Average"], ["Average"]),
    _templateObject2 = _taggedTemplateLiteral(["Count"], ["Count"]),
    _templateObject3 = _taggedTemplateLiteral(["Sum"], ["Sum"]),
    _templateObject4 = _taggedTemplateLiteral(["Distinct"], ["Distinct"]),
    _templateObject5 = _taggedTemplateLiteral(["Standard Deviation"], ["Standard Deviation"]);

exports.columnsAreValid = columnsAreValid;
exports.getAvailableCanvasHeight = getAvailableCanvasHeight;
exports.getAvailableCanvasWidth = getAvailableCanvasWidth;
exports.computeSplit = computeSplit;
exports.getXValues = getXValues;
exports.getFriendlyName = getFriendlyName;
exports.getCardColors = getCardColors;
exports.isSameSeries = isSameSeries;
exports.colorShades = colorShades;
exports.colorShade = colorShade;
exports.getColumnCardinality = getColumnCardinality;
exports.getChartTypeFromData = getChartTypeFromData;
exports.enableVisualizationEasterEgg = enableVisualizationEasterEgg;
exports.getCardAfterVisualizationClick = getCardAfterVisualizationClick;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _c3po = __webpack_require__(2);

var _crossfilter = __webpack_require__(210);

var _crossfilter2 = _interopRequireDefault(_crossfilter);

var _colors = __webpack_require__(38);

var colors = _interopRequireWildcard(_colors);

var _schema_metadata = __webpack_require__(10);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*  weak */

var SPLIT_AXIS_UNSPLIT_COST = -100;
var SPLIT_AXIS_COST_FACTOR = 2;

// NOTE Atte Keinänen 8/3/17: Moved from settings.js because this way we
// are able to avoid circular dependency errors in integrated tests
function columnsAreValid(colNames, data) {
  var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
    return true;
  };

  if (typeof colNames === "string") {
    colNames = [colNames];
  }
  if (!data || !Array.isArray(colNames)) {
    return false;
  }
  var colsByName = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = data.cols[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var col = _step.value;

      colsByName[col.name] = col;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return colNames.reduce(function (acc, name) {
    return acc && (name == undefined || colsByName[name] && filter(colsByName[name]));
  }, true);
}

// computed size properties (drop 'px' and convert string -> Number)
function getComputedSizeProperty(prop, element) {
  var val = document.defaultView.getComputedStyle(element, null).getPropertyValue(prop);
  return val ? parseFloat(val.replace("px", "")) : 0;
}

/// height available for rendering the card
function getAvailableCanvasHeight(element) {
  var parent = element.parentElement;
  var parentHeight = getComputedSizeProperty("height", parent);
  var parentPaddingTop = getComputedSizeProperty("padding-top", parent);
  var parentPaddingBottom = getComputedSizeProperty("padding-bottom", parent);

  // NOTE: if this magic number is not 3 we can get into infinite re-render loops
  return parentHeight - parentPaddingTop - parentPaddingBottom - 3; // why the magic number :/
}

/// width available for rendering the card
function getAvailableCanvasWidth(element) {
  var parent = element.parentElement;
  var parentWidth = getComputedSizeProperty("width", parent);
  var parentPaddingLeft = getComputedSizeProperty("padding-left", parent);
  var parentPaddingRight = getComputedSizeProperty("padding-right", parent);

  return parentWidth - parentPaddingLeft - parentPaddingRight;
}

function generateSplits(list) {
  var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  // NOTE: currently generates all permutations, some of which are equivalent
  if (list.length === 0) {
    return [[left, right]];
  } else {
    return [].concat(_toConsumableArray(generateSplits(list.slice(1), left.concat([list[0]]), right)), _toConsumableArray(generateSplits(list.slice(1), left, right.concat([list[0]]))));
  }
}

function cost(seriesExtents) {
  var _ref;

  var axisExtent = _d3.default.extent((_ref = []).concat.apply(_ref, _toConsumableArray(seriesExtents))); // concat to flatten the array
  var axisRange = axisExtent[1] - axisExtent[0];
  if (seriesExtents.length === 0) {
    return SPLIT_AXIS_UNSPLIT_COST;
  } else if (axisRange === 0) {
    return 0;
  } else {
    return seriesExtents.reduce(function (sum, seriesExtent) {
      return sum + Math.pow(axisRange / (seriesExtent[1] - seriesExtent[0]), SPLIT_AXIS_COST_FACTOR);
    }, 0);
  }
}

function computeSplit(extents) {
  var best = void 0,
      bestCost = void 0;
  var splits = generateSplits(extents.map(function (e, i) {
    return i;
  })).map(function (split) {
    return [split, cost(split[0].map(function (i) {
      return extents[i];
    })) + cost(split[1].map(function (i) {
      return extents[i];
    }))];
  });
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = splits[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var _step2$value = _slicedToArray(_step2.value, 2),
          split = _step2$value[0],
          splitCost = _step2$value[1];

      if (!best || splitCost < bestCost) {
        best = split;
        bestCost = splitCost;
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return best && best.sort(function (a, b) {
    return a[0] - b[0];
  });
}

var FRIENDLY_NAME_MAP = {
  avg: (0, _c3po.t)(_templateObject),
  count: (0, _c3po.t)(_templateObject2),
  sum: (0, _c3po.t)(_templateObject3),
  distinct: (0, _c3po.t)(_templateObject4),
  stddev: (0, _c3po.t)(_templateObject5)
};

function getXValues(datas, chartType) {
  var xValues = _underscore2.default.chain(datas).map(function (data) {
    return _underscore2.default.pluck(data, "0");
  }).flatten(true).uniq().value();

  // detect if every series' dimension is strictly ascending or descending and use that to sort xValues
  var isAscending = true;
  var isDescending = true;
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    outer: for (var _iterator3 = datas[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var rows = _step3.value;

      for (var i = 1; i < rows.length; i++) {
        isAscending = isAscending && rows[i - 1][0] <= rows[i][0];
        isDescending = isDescending && rows[i - 1][0] >= rows[i][0];
        if (!isAscending && !isDescending) {
          break outer;
        }
      }
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  if (isDescending) {
    // JavaScript's .sort() sorts lexicographically by default (e.x. 1, 10, 2)
    // We could implement a comparator but _.sortBy handles strings, numbers, and dates correctly
    xValues = _underscore2.default.sortBy(xValues, function (x) {
      return x;
    }).reverse();
  } else if (isAscending) {
    // default line/area charts to ascending since otherwise lines could be wonky
    xValues = _underscore2.default.sortBy(xValues, function (x) {
      return x;
    });
  }
  return xValues;
}

function getFriendlyName(column) {
  if (column.display_name && column.display_name !== column.name) {
    return column.display_name;
  } else {
    // NOTE Atte Keinänen 8/7/17:
    // Values `display_name` and `name` are same for breakout columns so check FRIENDLY_NAME_MAP
    // before returning either `display_name` or `name`
    return FRIENDLY_NAME_MAP[column.name.toLowerCase().trim()] || column.display_name || column.name;
  }
}

function getCardColors(card) {
  var settings = card.visualization_settings;
  var chartColor = void 0,
      chartColorList = void 0;
  if (card.display === "bar" && settings.bar) {
    chartColor = settings.bar.color;
    chartColorList = settings.bar.colors;
  } else if (card.display !== "bar" && settings.line) {
    chartColor = settings.line.lineColor;
    chartColorList = settings.line.colors;
  }
  return _underscore2.default.uniq([chartColor || Object.values(colors.harmony)[0]].concat(chartColorList || Object.values(colors.harmony)));
}

function isSameSeries(seriesA, seriesB) {
  return (seriesA && seriesA.length) === (seriesB && seriesB.length) && _underscore2.default.zip(seriesA, seriesB).reduce(function (acc, _ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        a = _ref3[0],
        b = _ref3[1];

    var sameData = a.data === b.data;
    var sameDisplay = (a.card && a.card.display) === (b.card && b.card.display);
    var sameVizSettings = (a.card && JSON.stringify(a.card.visualization_settings)) === (b.card && JSON.stringify(b.card.visualization_settings));
    return acc && sameData && sameDisplay && sameVizSettings;
  }, true);
}

function colorShades(color, count) {
  return _underscore2.default.range(count).map(function (i) {
    return colorShade(color, 1 - Math.min(0.25, 1 / count) * i);
  });
}

function colorShade(hex) {
  var shade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  var match = hex.match(/#(?:(..)(..)(..)|(.)(.)(.))/);
  if (!match) {
    return hex;
  }
  var components = (match[1] != null ? match.slice(1, 4) : match.slice(4, 7)).map(function (d) {
    return parseInt(d, 16);
  });
  var min = Math.min.apply(Math, _toConsumableArray(components));
  var max = Math.max.apply(Math, _toConsumableArray(components));
  return "#" + components.map(function (c) {
    return Math.round(min + (max - min) * shade * (c / 255)).toString(16);
  }).join("");
}

var DIMENSION_METRIC = exports.DIMENSION_METRIC = "DIMENSION_METRIC";
var DIMENSION_METRIC_METRIC = exports.DIMENSION_METRIC_METRIC = "DIMENSION_METRIC_METRIC";
var DIMENSION_DIMENSION_METRIC = exports.DIMENSION_DIMENSION_METRIC = "DIMENSION_DIMENSION_METRIC";

// NOTE Atte Keinänen 7/31/17 Commented MAX_SERIES out as it wasn't being used
// const MAX_SERIES = 10;

var isDimensionMetric = exports.isDimensionMetric = function isDimensionMetric(cols) {
  var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return (!strict || cols.length === 2) && (0, _schema_metadata.isDimension)(cols[0]) && (0, _schema_metadata.isMetric)(cols[1]);
};

var isDimensionDimensionMetric = exports.isDimensionDimensionMetric = function isDimensionDimensionMetric(cols) {
  var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return (!strict || cols.length === 3) && (0, _schema_metadata.isDimension)(cols[0]) && (0, _schema_metadata.isDimension)(cols[1]) && (0, _schema_metadata.isMetric)(cols[2]);
};

var isDimensionMetricMetric = exports.isDimensionMetricMetric = function isDimensionMetricMetric(cols) {
  var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return cols.length >= 3 && (0, _schema_metadata.isDimension)(cols[0]) && cols.slice(1).reduce(function (acc, col) {
    return acc && (0, _schema_metadata.isMetric)(col);
  }, true);
};

// cache computed cardinalities in a weak map since they are computationally expensive
var cardinalityCache = new WeakMap();

function getColumnCardinality(cols, rows, index) {
  var col = cols[index];
  if (!cardinalityCache.has(col)) {
    var dataset = (0, _crossfilter2.default)(rows);
    cardinalityCache.set(col, dataset.dimension(function (d) {
      return d[index];
    }).group().size());
  }
  return cardinalityCache.get(col);
}

function getChartTypeFromData(cols, rows) {
  var strict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  // this should take precendence for backwards compatibilty
  if (isDimensionMetricMetric(cols, strict)) {
    return DIMENSION_METRIC_METRIC;
  } else if (isDimensionDimensionMetric(cols, strict)) {
    // if (getColumnCardinality(cols, rows, 0) < MAX_SERIES || getColumnCardinality(cols, rows, 1) < MAX_SERIES) {
    return DIMENSION_DIMENSION_METRIC;
    // }
  } else if (isDimensionMetric(cols, strict)) {
    return DIMENSION_METRIC;
  }
  return null;
}

function enableVisualizationEasterEgg(code, OriginalVisualization, EasterEggVisualization) {
  if (!code) {
    code = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];
  } else if (typeof code === "string") {
    code = code.split("").map(function (c) {
      return c.charCodeAt(0);
    });
  }
  wrapMethod(OriginalVisualization.prototype, "componentWillMount", function easterEgg() {
    var _this = this;

    var keypresses = [];
    var enabled = false;
    var render_original = this.render;
    var render_egg = function render_egg() {
      return _react2.default.createElement(EasterEggVisualization, this.props);
    };
    this._keyListener = function (e) {
      keypresses = keypresses.concat(e.keyCode).slice(-code.length);
      if (code.reduce(function (ok, value, index) {
        return ok && value === keypresses[index];
      }, true)) {
        enabled = !enabled;
        _this.render = enabled ? render_egg : render_original;
        _this.forceUpdate();
      }
    };
    window.addEventListener("keyup", this._keyListener, false);
  });
  wrapMethod(OriginalVisualization.prototype, "componentWillUnmount", function cleanupEasterEgg() {
    window.removeEventListener("keyup", this._keyListener, false);
  });
}

function wrapMethod(object, name, method) {
  var method_original = object[name];
  object[name] = function () {
    method.apply(this, arguments);
    if (typeof method_original === "function") {
      return method_original.apply(this, arguments);
    }
  };
}
// TODO Atte Keinänen 5/30/17 Extract to metabase-lib card/question logic
var cardHasBecomeDirty = exports.cardHasBecomeDirty = function cardHasBecomeDirty(nextCard, previousCard) {
  return !_underscore2.default.isEqual(previousCard.dataset_query, nextCard.dataset_query) || previousCard.display !== nextCard.display;
};

function getCardAfterVisualizationClick(nextCard, previousCard) {
  if (cardHasBecomeDirty(nextCard, previousCard)) {
    var isMultiseriesQuestion = !nextCard.id;
    var alreadyHadLineage = !!previousCard.original_card_id;

    return _extends({}, nextCard, {
      // Original card id is needed for showing the "started from" lineage in dirty cards.
      original_card_id: alreadyHadLineage ? // Just recycle the original card id of previous card if there was one
      previousCard.original_card_id : // A multi-aggregation or multi-breakout series legend / drill-through action
      // should always use the id of underlying/previous card
      isMultiseriesQuestion ? previousCard.id : nextCard.id
    });
  } else {
    // Even though the card is currently clean, we might still apply dashboard parameters to it,
    // so add the original_card_id to ensure a correct behavior in that context
    return _extends({}, nextCard, {
      original_card_id: nextCard.id
    });
  }
}

/***/ }),

/***/ 211:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEngineNativeType = getEngineNativeType;
exports.getEngineNativeAceMode = getEngineNativeAceMode;
exports.getEngineNativeRequiresTable = getEngineNativeRequiresTable;
exports.formatJsonQuery = formatJsonQuery;
function getEngineNativeType(engine) {
  switch (engine) {
    case "mongo":
    case "druid":
    case "googleanalytics":
      return "json";
    default:
      return "sql";
  }
}

function getEngineNativeAceMode(engine) {
  switch (engine) {
    case "mongo":
    case "druid":
    case "googleanalytics":
      return "ace/mode/json";
    case "mysql":
      return "ace/mode/mysql";
    case "postgres":
      return "ace/mode/pgsql";
    case "sqlserver":
      return "ace/mode/sqlserver";
    default:
      return "ace/mode/sql";
  }
}

function getEngineNativeRequiresTable(engine) {
  return engine === "mongo";
}

function formatJsonQuery(query, engine) {
  if (engine === "googleanalytics") {
    return formatGAQuery(query);
  } else {
    return JSON.stringify(query);
  }
}

var GA_ORDERED_PARAMS = ["ids", "start-date", "end-date", "metrics", "dimensions", "sort", "filters", "segment", "samplingLevel", "include-empty-rows", "start-index", "max-results"];

// does 3 things: removes null values, sorts the keys by the order in the documentation, and formats with 2 space indents
function formatGAQuery(query) {
  var object = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = GA_ORDERED_PARAMS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var param = _step.value;

      if (query[param] != null) {
        object[param] = query[param];
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return JSON.stringify(object, null, 2);
}

/***/ }),

/***/ 215:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getVisualizationSettings = exports.getTransformedSeries = exports.getRawSeries = exports.getResultsMetadata = exports.getQuestionAlerts = exports.getIsRunnable = exports.getQuery = exports.getOriginalQuestion = exports.getLastRunQuestion = exports.getQuestion = exports.getIsResultDirty = exports.getParameters = exports.getIsObjectDetail = exports.getMode = exports.getDatabaseFields = exports.getSampleDatasetId = exports.getTableMetadata = exports.getNativeDatabases = exports.getTables = exports.getTableForeignKeyReferences = exports.getTableForeignKeys = exports.getTableId = exports.getDatabaseId = exports.getIsNew = exports.getIsDirty = exports.getSettings = exports.getQueryResults = exports.getQueryResult = exports.getParameterValues = exports.getLastRunCard = exports.getOriginalCard = exports.getCard = exports.getIsRunning = exports.getIsEditing = exports.getIsShowingTutorial = exports.getIsShowingDataReference = exports.getIsShowingTemplateTagsEditor = exports.getUiControls = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// Needed due to wrong dependency resolution order
// eslint-disable-next-line no-unused-vars


var _reselect = __webpack_require__(87);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Visualization = __webpack_require__(78);

var _Visualization2 = _interopRequireDefault(_Visualization);

var _settings = __webpack_require__(45);

var _Card = __webpack_require__(37);

var _card = __webpack_require__(62);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _icepick = __webpack_require__(14);

var _metadata = __webpack_require__(30);

var _modes = __webpack_require__(234);

var _selectors = __webpack_require__(507);

var _visualizations = __webpack_require__(53);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getUiControls = exports.getUiControls = function getUiControls(state) {
  return state.qb.uiControls;
};

var getIsShowingTemplateTagsEditor = exports.getIsShowingTemplateTagsEditor = function getIsShowingTemplateTagsEditor(state) {
  return getUiControls(state).isShowingTemplateTagsEditor;
};
var getIsShowingDataReference = exports.getIsShowingDataReference = function getIsShowingDataReference(state) {
  return getUiControls(state).isShowingDataReference;
};
var getIsShowingTutorial = exports.getIsShowingTutorial = function getIsShowingTutorial(state) {
  return getUiControls(state).isShowingTutorial;
};
var getIsEditing = exports.getIsEditing = function getIsEditing(state) {
  return getUiControls(state).isEditing;
};
var getIsRunning = exports.getIsRunning = function getIsRunning(state) {
  return getUiControls(state).isRunning;
};

var getCard = exports.getCard = function getCard(state) {
  return state.qb.card;
};
var getOriginalCard = exports.getOriginalCard = function getOriginalCard(state) {
  return state.qb.originalCard;
};
var getLastRunCard = exports.getLastRunCard = function getLastRunCard(state) {
  return state.qb.lastRunCard;
};

var getParameterValues = exports.getParameterValues = function getParameterValues(state) {
  return state.qb.parameterValues;
};
var getQueryResult = exports.getQueryResult = function getQueryResult(state) {
  return state.qb.queryResult;
};
var getQueryResults = exports.getQueryResults = function getQueryResults(state) {
  return state.qb.queryResults;
};

// get instance settings, used for determining whether to display certain actions,
// currently used only for xrays
var getSettings = exports.getSettings = function getSettings(state) {
  return state.settings.values;
};

var getIsDirty = exports.getIsDirty = (0, _reselect.createSelector)([getCard, getOriginalCard], function (card, originalCard) {
  return (0, _card.isCardDirty)(card, originalCard);
});

var getIsNew = exports.getIsNew = function getIsNew(state) {
  return state.qb.card && !state.qb.card.id;
};

var getDatabaseId = exports.getDatabaseId = (0, _reselect.createSelector)([getCard], function (card) {
  return card && card.dataset_query && card.dataset_query.database;
});

var getTableId = exports.getTableId = (0, _reselect.createSelector)([getCard], function (card) {
  return (0, _icepick.getIn)(card, ["dataset_query", "query", "source_table"]);
});

var getTableForeignKeys = exports.getTableForeignKeys = function getTableForeignKeys(state) {
  return state.qb.tableForeignKeys;
};
var getTableForeignKeyReferences = exports.getTableForeignKeyReferences = function getTableForeignKeyReferences(state) {
  return state.qb.tableForeignKeyReferences;
};

var getTables = exports.getTables = (0, _reselect.createSelector)([getDatabaseId, _metadata.getDatabasesList], function (databaseId, databases) {
  if (databaseId != null && databases && databases.length > 0) {
    var db = _underscore2.default.findWhere(databases, { id: databaseId });
    if (db && db.tables) {
      return db.tables;
    }
  }

  return [];
});

var getNativeDatabases = exports.getNativeDatabases = (0, _reselect.createSelector)([_metadata.getDatabasesList], function (databases) {
  return databases && databases.filter(function (db) {
    return db.native_permissions === "write";
  });
});

var getTableMetadata = exports.getTableMetadata = (0, _reselect.createSelector)([getTableId, _metadata.getMetadata], function (tableId, metadata) {
  return metadata.tables[tableId];
});

var getSampleDatasetId = exports.getSampleDatasetId = (0, _reselect.createSelector)([_metadata.getDatabasesList], function (databases) {
  var sampleDataset = _underscore2.default.findWhere(databases, { is_sample: true });
  return sampleDataset && sampleDataset.id;
});

var getDatabaseFields = exports.getDatabaseFields = (0, _reselect.createSelector)([getDatabaseId, function (state) {
  return state.qb.databaseFields;
}], function (databaseId, databaseFields) {
  return databaseFields[databaseId];
});

var getMode = exports.getMode = (0, _reselect.createSelector)([getLastRunCard, getTableMetadata], function (card, tableMetadata) {
  return (0, _modes.getMode)(card, tableMetadata);
});

var getIsObjectDetail = exports.getIsObjectDetail = (0, _reselect.createSelector)([getMode], function (mode) {
  return mode && mode.name === "object";
});

var getParameters = exports.getParameters = (0, _reselect.createSelector)([getCard, getParameterValues], function (card, parameterValues) {
  return (0, _Card.getParametersWithExtras)(card, parameterValues);
});

var getLastRunDatasetQuery = (0, _reselect.createSelector)([getLastRunCard], function (card) {
  return card && card.dataset_query;
});
var getNextRunDatasetQuery = (0, _reselect.createSelector)([getCard], function (card) {
  return card && card.dataset_query;
});

var getLastRunParameters = (0, _reselect.createSelector)([getQueryResult], function (queryResult) {
  return queryResult && queryResult.json_query && queryResult.json_query.parameters || [];
});
var getLastRunParameterValues = (0, _reselect.createSelector)([getLastRunParameters], function (parameters) {
  return parameters.map(function (parameter) {
    return parameter.value;
  });
});
var getNextRunParameterValues = (0, _reselect.createSelector)([getParameters], function (parameters) {
  return parameters.map(function (parameter) {
    return parameter.value;
  }).filter(function (p) {
    return p !== undefined;
  });
});

var getIsResultDirty = exports.getIsResultDirty = (0, _reselect.createSelector)([getLastRunDatasetQuery, getNextRunDatasetQuery, getLastRunParameterValues, getNextRunParameterValues], function (lastDatasetQuery, nextDatasetQuery, lastParameters, nextParameters) {
  return !_utils2.default.equals(lastDatasetQuery, nextDatasetQuery) || !_utils2.default.equals(lastParameters, nextParameters);
});

var getQuestion = exports.getQuestion = (0, _reselect.createSelector)([_metadata.getMetadata, getCard, getParameterValues], function (metadata, card, parameterValues) {
  return metadata && card && new _Question2.default(metadata, card, parameterValues);
});

var getLastRunQuestion = exports.getLastRunQuestion = (0, _reselect.createSelector)([_metadata.getMetadata, getLastRunCard, getParameterValues], function (metadata, getLastRunCard, parameterValues) {
  return metadata && getLastRunCard && new _Question2.default(metadata, getLastRunCard, parameterValues);
});

var getOriginalQuestion = exports.getOriginalQuestion = (0, _reselect.createSelector)([_metadata.getMetadata, getOriginalCard], function (metadata, card) {
  // NOTE Atte Keinänen 5/31/17 Should the originalQuestion object take parameterValues or not? (currently not)
  return metadata && card && new _Question2.default(metadata, card);
});

var getQuery = exports.getQuery = (0, _reselect.createSelector)([getQuestion], function (question) {
  return question && question.query();
});

var getIsRunnable = exports.getIsRunnable = (0, _reselect.createSelector)([getQuestion], function (question) {
  return question && question.canRun();
});

var getQuestionAlerts = exports.getQuestionAlerts = (0, _reselect.createSelector)([_selectors.getAlerts, getCard], function (alerts, card) {
  return card && card.id && _underscore2.default.pick(alerts, function (alert) {
    return alert.card.id === card.id;
  }) || {};
});

var getResultsMetadata = exports.getResultsMetadata = (0, _reselect.createSelector)([getQueryResult], function (result) {
  return result && result.data && result.data.results_metadata;
});

/**
 * Returns the card and query results data in a format that `Visualization.jsx` expects
 */
var getRawSeries = exports.getRawSeries = (0, _reselect.createSelector)([getQuestion, getQueryResults, getIsObjectDetail, getLastRunDatasetQuery], function (question, results, isObjectDetail, lastRunDatasetQuery) {
  // we want to provide the visualization with a card containing the latest
  // "display", "visualization_settings", etc, (to ensure the correct visualization is shown)
  // BUT the last executed "dataset_query" (to ensure data matches the query)
  return results && question.atomicQueries().map(function (metricQuery, index) {
    return {
      card: _extends({}, question.card(), {
        display: isObjectDetail ? "object" : question.card().display,
        dataset_query: lastRunDatasetQuery
      }),
      data: results[index] && results[index].data
    };
  });
});

/**
 * Returns the final series data that all visualization (starting from the root-level
 * `Visualization.jsx` component) code uses for rendering visualizations.
 */
var getTransformedSeries = exports.getTransformedSeries = (0, _reselect.createSelector)([getRawSeries], function (rawSeries) {
  return rawSeries && (0, _visualizations.getVisualizationTransformed)((0, _visualizations.extractRemappings)(rawSeries)).series;
});

/**
 * Returns complete visualization settings (including default values for those settings which aren't explicitly set)
 */
var getVisualizationSettings = exports.getVisualizationSettings = (0, _reselect.createSelector)([getTransformedSeries], function (series) {
  return series && (0, _settings.getSettings)(series);
});

/***/ }),

/***/ 216:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Radio = (_temp = _class = function (_Component) {
  _inherits(Radio, _Component);

  function Radio(props, context) {
    _classCallCheck(this, Radio);

    var _this = _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).call(this, props, context));

    _this._id = _underscore2.default.uniqueId("radio-");
    return _this;
  }

  _createClass(Radio, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          value = _props.value,
          options = _props.options,
          onChange = _props.onChange,
          optionNameFn = _props.optionNameFn,
          optionValueFn = _props.optionValueFn,
          optionKeyFn = _props.optionKeyFn,
          isVertical = _props.isVertical,
          className = _props.className;
      // show buttons for vertical only by default

      var showButtons = this.props.showButtons != undefined ? this.props.showButtons : isVertical;
      return _react2.default.createElement(
        "ul",
        {
          className: (0, _classnames2.default)(className, "flex", {
            "flex-column": isVertical,
            "text-bold h3": !showButtons
          })
        },
        options.map(function (option) {
          return _react2.default.createElement(
            "li",
            {
              key: optionKeyFn(option),
              className: (0, _classnames2.default)("flex align-center cursor-pointer mt1 mr2", {
                "text-brand-hover": !showButtons
              }),
              onClick: function onClick(e) {
                return onChange(optionValueFn(option));
              }
            },
            _react2.default.createElement("input", {
              className: "Form-radio",
              type: "radio",
              name: _this2._id,
              value: optionValueFn(option),
              checked: value === optionValueFn(option),
              id: _this2._id + "-" + optionKeyFn(option)
            }),
            showButtons && _react2.default.createElement("label", { htmlFor: _this2._id + "-" + optionKeyFn(option) }),
            _react2.default.createElement(
              "span",
              {
                className: (0, _classnames2.default)({ "text-brand": value === optionValueFn(option) })
              },
              optionNameFn(option)
            )
          );
        })
      );
    }
  }]);

  return Radio;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.any,
  options: _propTypes2.default.array.isRequired,
  onChange: _propTypes2.default.func,
  optionNameFn: _propTypes2.default.func,
  optionValueFn: _propTypes2.default.func,
  optionKeyFn: _propTypes2.default.func,
  isVertical: _propTypes2.default.bool,
  showButtons: _propTypes2.default.bool
}, _class.defaultProps = {
  optionNameFn: function optionNameFn(option) {
    return option.name;
  },
  optionValueFn: function optionValueFn(option) {
    return option.value;
  },
  optionKeyFn: function optionKeyFn(option) {
    return option.value;
  },
  isVertical: false
}, _temp);
Radio.displayName = "Radio";
exports.default = Radio;

/***/ }),

/***/ 219:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ParameterWidget = __webpack_require__(513);

var _ParameterWidget2 = _interopRequireDefault(_ParameterWidget);

var _querystring = __webpack_require__(104);

var _querystring2 = _interopRequireDefault(_querystring);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Parameters = function (_Component) {
  _inherits(Parameters, _Component);

  function Parameters() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Parameters);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Parameters.__proto__ || Object.getPrototypeOf(Parameters)).call.apply(_ref, [this].concat(args))), _this), _this.defaultProps = {
      syncQueryString: false,
      vertical: false,
      commitImmediately: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Parameters, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      // sync parameters from URL query string
      var _props = this.props,
          parameters = _props.parameters,
          setParameterValue = _props.setParameterValue,
          query = _props.query;

      if (setParameterValue) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = parameters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var parameter = _step.value;

            if (query && query[parameter.slug] != null) {
              setParameterValue(parameter.id, query[parameter.slug]);
            } else if (parameter.default != null) {
              setParameterValue(parameter.id, parameter.default);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.props.syncQueryString) {
        // sync parameters to URL query string
        var queryParams = {};
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = this._parametersWithValues()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var parameter = _step2.value;

            if (parameter.value) {
              queryParams[parameter.slug] = parameter.value;
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        var search = _querystring2.default.stringify(queryParams);
        search = search ? "?" + search : "";

        if (search !== window.location.search) {
          history.replaceState(null, document.title, window.location.pathname + search + window.location.hash);
        }
      }
    }
  }, {
    key: "_parametersWithValues",
    value: function _parametersWithValues() {
      var _props2 = this.props,
          parameters = _props2.parameters,
          parameterValues = _props2.parameterValues;

      if (parameterValues) {
        return parameters.map(function (p) {
          return _extends({}, p, {
            value: parameterValues[p.id]
          });
        });
      } else {
        return parameters;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props3 = this.props,
          className = _props3.className,
          editingParameter = _props3.editingParameter,
          setEditingParameter = _props3.setEditingParameter,
          isEditing = _props3.isEditing,
          isFullscreen = _props3.isFullscreen,
          isNightMode = _props3.isNightMode,
          isQB = _props3.isQB,
          setParameterName = _props3.setParameterName,
          setParameterValue = _props3.setParameterValue,
          setParameterDefaultValue = _props3.setParameterDefaultValue,
          removeParameter = _props3.removeParameter,
          vertical = _props3.vertical,
          commitImmediately = _props3.commitImmediately;


      var parameters = this._parametersWithValues();

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(className, "flex align-end flex-wrap", vertical ? "flex-column" : "flex-row", { mt1: isQB })
        },
        parameters.map(function (parameter) {
          return _react2.default.createElement(_ParameterWidget2.default, {
            className: vertical ? "mb2" : null,
            key: parameter.id,
            isEditing: isEditing,
            isFullscreen: isFullscreen,
            isNightMode: isNightMode,
            parameter: parameter,
            parameters: parameters,
            editingParameter: editingParameter,
            setEditingParameter: setEditingParameter,
            setName: setParameterName && function (name) {
              return setParameterName(parameter.id, name);
            },
            setValue: setParameterValue && function (value) {
              return setParameterValue(parameter.id, value);
            },
            setDefaultValue: setParameterDefaultValue && function (value) {
              return setParameterDefaultValue(parameter.id, value);
            },
            remove: removeParameter && function () {
              return removeParameter(parameter.id);
            },
            commitImmediately: commitImmediately
          });
        })
      );
    }
  }]);

  return Parameters;
}(_react.Component);

Parameters.displayName = "Parameters";
exports.default = Parameters;

/***/ }),

/***/ 22:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.STRUCTURED_QUERY_TEMPLATE = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _query2 = __webpack_require__(70);

var Q = _interopRequireWildcard(_query2);

var _query3 = __webpack_require__(17);

var _query4 = _interopRequireDefault(_query3);

var _formatter = __webpack_require__(117);

var _schema_metadata = __webpack_require__(10);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

var _AtomicQuery2 = __webpack_require__(132);

var _AtomicQuery3 = _interopRequireDefault(_AtomicQuery2);

var _Aggregation = __webpack_require__(233);

var _Aggregation2 = _interopRequireDefault(_Aggregation);

var _AggregationOption = __webpack_require__(394);

var _AggregationOption2 = _interopRequireDefault(_AggregationOption);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _filter = __webpack_require__(91);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Represents a structured MBQL query.
 */

var STRUCTURED_QUERY_TEMPLATE = exports.STRUCTURED_QUERY_TEMPLATE = {
  database: null,
  type: "query",
  query: {
    source_table: null
  }
};

/**
 * A wrapper around an MBQL (`query` type @type {DatasetQuery}) object
 */

var StructuredQuery = function (_AtomicQuery) {
  _inherits(StructuredQuery, _AtomicQuery);

  _createClass(StructuredQuery, null, [{
    key: "isDatasetQueryType",
    value: function isDatasetQueryType(datasetQuery) {
      return datasetQuery.type === STRUCTURED_QUERY_TEMPLATE.type;
    }

    // For Flow type completion

  }]);

  /**
   * Creates a new StructuredQuery based on the provided DatasetQuery object
   */
  function StructuredQuery(question) {
    var datasetQuery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : STRUCTURED_QUERY_TEMPLATE;

    _classCallCheck(this, StructuredQuery);

    var _this = _possibleConstructorReturn(this, (StructuredQuery.__proto__ || Object.getPrototypeOf(StructuredQuery)).call(this, question, datasetQuery));

    _this._structuredDatasetQuery = datasetQuery;
    return _this;
  }

  _createClass(StructuredQuery, [{
    key: "isEmpty",


    /* Query superclass methods */

    /**
     * @returns true if this is new query that hasn't been modified yet.
     */
    value: function isEmpty() {
      return !this.databaseId();
    }

    /**
     * @returns true if this query is in a state where it can be run.
     */

  }, {
    key: "canRun",
    value: function canRun() {
      return _query4.default.canRun(this.query());
    }

    /**
     * @returns true if this query is in a state where it can be edited. Must have database and table set, and metadata for the table loaded.
     */

  }, {
    key: "isEditable",
    value: function isEditable() {
      return !!this.tableMetadata();
    }

    /* AtomicQuery superclass methods */

    /**
     * @returns all tables in the currently selected database that can be used.
     */

  }, {
    key: "tables",
    value: function tables() {
      var database = this.database();
      return database && database.tables || null;
    }

    /**
     * @returns the currently selected database ID, if any is selected.
     */

  }, {
    key: "databaseId",
    value: function databaseId() {
      // same for both structured and native
      return this._structuredDatasetQuery.database;
    }

    /**
     * @returns the currently selected database metadata, if a database is selected and loaded.
     */

  }, {
    key: "database",
    value: function database() {
      var databaseId = this.databaseId();
      return databaseId != null ? this._metadata.databases[databaseId] : null;
    }

    /**
     * @returns the database engine object, if a database is selected and loaded.
     */

  }, {
    key: "engine",
    value: function engine() {
      var database = this.database();
      return database && database.engine;
    }

    /* Methods unique to this query type */

    /**
     * @returns a new reset @type {StructuredQuery} with the same parent @type {Question}
     */

  }, {
    key: "reset",
    value: function reset() {
      return new StructuredQuery(this._originalQuestion);
    }

    /**
     * @returns the underlying MBQL query object
     */

  }, {
    key: "query",
    value: function query() {
      return this._structuredDatasetQuery.query;
    }
  }, {
    key: "setQuery",
    value: function setQuery(query) {
      return this._updateQuery(function () {
        return query;
      }, []);
    }
  }, {
    key: "updateQuery",
    value: function updateQuery(fn) {
      return this._updateQuery(fn, []);
    }

    /**
     * @returns a new query with the provided Database set.
     */

  }, {
    key: "setDatabase",
    value: function setDatabase(database) {
      if (database.id !== this.databaseId()) {
        // TODO: this should reset the rest of the query?
        return new StructuredQuery(this._originalQuestion, (0, _icepick.assoc)(this.datasetQuery(), "database", database.id));
      } else {
        return this;
      }
    }

    /**
     * @returns a new query with the provided Table set.
     */

  }, {
    key: "setTable",
    value: function setTable(table) {
      if (table.id !== this.tableId()) {
        return new StructuredQuery(this._originalQuestion, (0, _icepick.chain)(this.datasetQuery()).assoc("database", table.database.id).assocIn(["query", "source_table"], table.id).value());
      } else {
        return this;
      }
    }

    /**
     * @returns the table ID, if a table is selected.
     */

  }, {
    key: "tableId",
    value: function tableId() {
      return this.query().source_table;
    }

    /**
     * @returns the table object, if a table is selected and loaded.
     * FIXME: actual return type should be `?Table`
     */

  }, {
    key: "table",
    value: function table() {
      return this._metadata.tables[this.tableId()];
    }

    /**
     * @deprecated Alias of `table()`. Use only when partially porting old code that uses @type {TableMetadata} object.
     */

  }, {
    key: "tableMetadata",
    value: function tableMetadata() {
      return this.table();
    }
  }, {
    key: "clean",
    value: function clean() {
      var datasetQuery = this.datasetQuery();
      if (datasetQuery.query) {
        var _query = _utils2.default.copy(datasetQuery.query);

        return this.setDatasetQuery(_extends({}, datasetQuery, {
          query: _query4.default.cleanQuery(_query)
        }));
      } else {
        return this;
      }
    }

    // AGGREGATIONS

    /**
     * @returns an array of MBQL @type {Aggregation}s.
     */

  }, {
    key: "aggregations",
    value: function aggregations() {
      return Q.getAggregations(this.query());
    }

    /**
     * @returns an array of aggregation wrapper objects
     * TODO Atte Keinänen 6/11/17: Make the wrapper objects the standard format for aggregations
     */

  }, {
    key: "aggregationsWrapped",
    value: function aggregationsWrapped() {
      var _this2 = this;

      return this.aggregations().map(function (agg) {
        return new _Aggregation2.default(_this2, agg);
      });
    }

    /**
     * @returns an array of aggregation options for the currently selected table
     */

  }, {
    key: "aggregationOptions",
    value: function aggregationOptions() {
      // TODO Should `aggregation_options` be wrapped already in selectors/metadata.js?
      var optionObjects = this.table() && this.table().aggregations();
      return optionObjects ? optionObjects.map(function (agg) {
        return new _AggregationOption2.default(agg);
      }) : [];
    }

    /**
     * @returns an array of aggregation options for the currently selected table, excluding the "rows" pseudo-aggregation
     */

  }, {
    key: "aggregationOptionsWithoutRows",
    value: function aggregationOptionsWithoutRows() {
      return this.aggregationOptions().filter(function (option) {
        return option.short !== "rows";
      });
    }

    /**
     * @returns the field options for the provided aggregation
     */

  }, {
    key: "aggregationFieldOptions",
    value: function aggregationFieldOptions(agg) {
      var aggregation = this.table().aggregation(agg);
      if (aggregation) {
        var fieldOptions = this.fieldOptions(function (field) {
          return aggregation.validFieldsFilters[0]([field]).length === 1;
        });

        // HACK Atte Keinänen 6/18/17: Using `fieldOptions` with a field filter function
        // ends up often omitting all expressions because the field object of ExpressionDimension is empty.
        // Expressions can be applied to all aggregations so we can simply add all expressions to the
        // dimensions list in this hack.
        //
        // A real solution would have a `dimensionOptions` method instead of `fieldOptions` which would
        // enable filtering based on dimension properties.
        return _extends({}, fieldOptions, {
          dimensions: _underscore2.default.uniq([].concat(_toConsumableArray(this.expressionDimensions()), _toConsumableArray(fieldOptions.dimensions.filter(function (d) {
            return !(d instanceof _Dimension.ExpressionDimension);
          }))))
        });
      } else {
        return { count: 0, fks: [], dimensions: [] };
      }
    }

    /**
     * @returns true if the aggregation can be removed
     */

  }, {
    key: "canRemoveAggregation",
    value: function canRemoveAggregation() {
      return this.aggregations().length > 1;
    }

    /**
     * @returns true if the query has no aggregation
     */

  }, {
    key: "isBareRows",
    value: function isBareRows() {
      return Q.isBareRows(this.query());
    }

    /**
     * @returns the formatted named of the aggregation at the provided index.
     */

  }, {
    key: "aggregationName",
    value: function aggregationName() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      var aggregation = this.aggregations()[index];
      if (_query3.NamedClause.isNamed(aggregation)) {
        return _query3.NamedClause.getName(aggregation);
      } else if (_query3.AggregationClause.isCustom(aggregation)) {
        return (0, _formatter.format)(aggregation, {
          tableMetadata: this.tableMetadata(),
          customFields: this.expressions()
        });
      } else if (_query3.AggregationClause.isMetric(aggregation)) {
        var metricId = _query3.AggregationClause.getMetric(aggregation);
        var metric = this._metadata.metrics[metricId];
        if (metric) {
          return metric.name;
        }
      } else {
        var selectedAggregation = (0, _schema_metadata.getAggregator)(_query3.AggregationClause.getOperator(aggregation));
        if (selectedAggregation) {
          var aggregationName = selectedAggregation.name.replace(" of ...", "");
          var fieldId = _query4.default.getFieldTargetId(_query3.AggregationClause.getField(aggregation));
          var field = fieldId && this._metadata.fields[fieldId];
          if (field) {
            aggregationName += " of " + field.display_name;
          }
          return aggregationName;
        }
      }
      return null;
    }

    /**
     * @returns {StructuredQuery} new query with the provided MBQL @type {Aggregation} added.
     */

  }, {
    key: "addAggregation",
    value: function addAggregation(aggregation) {
      return this._updateQuery(Q.addAggregation, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the MBQL @type {Aggregation} updated at the provided index.
     */

  }, {
    key: "updateAggregation",
    value: function updateAggregation(index, aggregation) {
      return this._updateQuery(Q.updateAggregation, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the aggregation at the provided index removed.
     */

  }, {
    key: "removeAggregation",
    value: function removeAggregation(index) {
      return this._updateQuery(Q.removeAggregation, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with all aggregations removed.
     */

  }, {
    key: "clearAggregations",
    value: function clearAggregations() {
      return this._updateQuery(Q.clearAggregations, arguments);
    }

    // BREAKOUTS

    /**
     * @returns An array of MBQL @type {Breakout}s.
     */

  }, {
    key: "breakouts",
    value: function breakouts() {
      return Q.getBreakouts(this.query());
    }

    /**
     * @param includedBreakout The breakout to include even if it's already used
     * @param fieldFilter An option @type {Field} predicate to filter out options
     * @returns @type {DimensionOptions} that can be used as breakouts, excluding used breakouts, unless @param {breakout} is provided.
     */

  }, {
    key: "breakoutOptions",
    value: function breakoutOptions(includedBreakout) {
      var fieldFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
        return true;
      };

      // the set of field ids being used by other breakouts
      var usedFields = new Set(this.breakouts().filter(function (b) {
        return !_underscore2.default.isEqual(b, includedBreakout);
      }).map(function (b) {
        return _query4.default.getFieldTargetId(b);
      }));

      return this.fieldOptions(function (field) {
        return fieldFilter(field) && !usedFields.has(field.id);
      });
    }

    /**
     * @returns whether a new breakout can be added or not
     */

  }, {
    key: "canAddBreakout",
    value: function canAddBreakout() {
      return this.breakoutOptions().count > 0;
    }

    /**
     * @returns whether the current query has a valid breakout
     */

  }, {
    key: "hasValidBreakout",
    value: function hasValidBreakout() {
      return _query4.default.hasValidBreakout(this.query());
    }

    /**
     * @returns {StructuredQuery} new query with the provided MBQL @type {Breakout} added.
     */

  }, {
    key: "addBreakout",
    value: function addBreakout(breakout) {
      return this._updateQuery(Q.addBreakout, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the MBQL @type {Breakout} updated at the provided index.
     */

  }, {
    key: "updateBreakout",
    value: function updateBreakout(index, breakout) {
      return this._updateQuery(Q.updateBreakout, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the breakout at the provided index removed.
     */

  }, {
    key: "removeBreakout",
    value: function removeBreakout(index) {
      return this._updateQuery(Q.removeBreakout, arguments);
    }
    /**
     * @returns {StructuredQuery} new query with all breakouts removed.
     */

  }, {
    key: "clearBreakouts",
    value: function clearBreakouts() {
      return this._updateQuery(Q.clearBreakouts, arguments);
    }

    // FILTERS

    /**
     * @returns An array of MBQL @type {Filter}s.
     */

  }, {
    key: "filters",
    value: function filters() {
      return Q.getFilters(this.query());
    }

    /**
     * @returns @type {DimensionOptions} that can be used in filters.
     */

  }, {
    key: "filterFieldOptions",
    value: function filterFieldOptions() {
      return this.fieldOptions();
    }

    /**
     * @returns @type {Segment}s that can be used as filters.
     * TODO: exclude used segments
     */

  }, {
    key: "filterSegmentOptions",
    value: function filterSegmentOptions() {
      return this.table().segments.filter(function (sgmt) {
        return sgmt.is_active === true;
      });
    }

    /**
     *  @returns @type {Segment}s that are currently applied to the question
     */

  }, {
    key: "segments",
    value: function segments() {
      var _this3 = this;

      return this.filters().filter(function (f) {
        return (0, _filter.isSegmentFilter)(f);
      }).map(function (segmentFilter) {
        // segment id is stored as the second part of the filter clause
        // e.x. ["SEGMENT", 1]
        var segmentId = segmentFilter[1];
        return _this3.metadata().segment(segmentId);
      });
    }

    /**
     * @returns whether a new filter can be added or not
     */

  }, {
    key: "canAddFilter",
    value: function canAddFilter() {
      return Q.canAddFilter(this.query()) && (this.filterFieldOptions().count > 0 || this.filterSegmentOptions().length > 0);
    }

    /**
     * @returns {StructuredQuery} new query with the provided MBQL @type {Filter} added.
     */

  }, {
    key: "addFilter",
    value: function addFilter(filter) {
      return this._updateQuery(Q.addFilter, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the MBQL @type {Filter} updated at the provided index.
     */

  }, {
    key: "updateFilter",
    value: function updateFilter(index, filter) {
      return this._updateQuery(Q.updateFilter, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with the filter at the provided index removed.
     */

  }, {
    key: "removeFilter",
    value: function removeFilter(index) {
      return this._updateQuery(Q.removeFilter, arguments);
    }

    /**
     * @returns {StructuredQuery} new query with all filters removed.
     */

  }, {
    key: "clearFilters",
    value: function clearFilters() {
      return this._updateQuery(Q.clearFilters, arguments);
    }

    // SORTS

    // TODO: standardize SORT vs ORDER_BY terminology

  }, {
    key: "sorts",
    value: function sorts() {
      return Q.getOrderBys(this.query());
    }
  }, {
    key: "sortOptions",
    value: function sortOptions(sort) {
      var sortOptions = { count: 0, dimensions: [], fks: [] };
      // in bare rows all fields are sortable, otherwise we only sort by our breakout columns
      if (this.isBareRows()) {
        var usedFields = new Set(this.sorts().filter(function (b) {
          return !_underscore2.default.isEqual(b, sort);
        }).map(function (b) {
          return _query4.default.getFieldTargetId(b[0]);
        }));

        return this.fieldOptions(function (field) {
          return !usedFields.has(field.id);
        });
      } else if (this.hasValidBreakout()) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = this.breakouts()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var breakout = _step.value;

            sortOptions.dimensions.push(_Dimension2.default.parseMBQL(breakout, this._metadata));
            sortOptions.count++;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = this.aggregations().entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _step2$value = _slicedToArray(_step2.value, 2),
                index = _step2$value[0],
                aggregation = _step2$value[1];

            if (_query4.default.canSortByAggregateField(this.query(), index)) {
              sortOptions.dimensions.push(new _Dimension.AggregationDimension(null, [index], this._metadata, aggregation[0]));
              sortOptions.count++;
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
      return sortOptions;
    }
  }, {
    key: "canAddSort",
    value: function canAddSort() {
      var sorts = this.sorts();
      return this.sortOptions().count > 0 && (sorts.length === 0 || sorts[sorts.length - 1][0] != null);
    }
  }, {
    key: "addSort",
    value: function addSort(order_by) {
      return this._updateQuery(Q.addOrderBy, arguments);
    }
  }, {
    key: "updateSort",
    value: function updateSort(index, order_by) {
      return this._updateQuery(Q.updateOrderBy, arguments);
    }
  }, {
    key: "removeSort",
    value: function removeSort(index) {
      return this._updateQuery(Q.removeOrderBy, arguments);
    }
  }, {
    key: "clearSort",
    value: function clearSort() {
      return this._updateQuery(Q.clearOrderBy, arguments);
    }
  }, {
    key: "replaceSort",
    value: function replaceSort(order_by) {
      return this.clearSort().addSort(order_by);
    }

    // LIMIT

  }, {
    key: "limit",
    value: function limit() {
      return Q.getLimit(this.query());
    }
  }, {
    key: "updateLimit",
    value: function updateLimit(limit) {
      return this._updateQuery(Q.updateLimit, arguments);
    }
  }, {
    key: "clearLimit",
    value: function clearLimit() {
      return this._updateQuery(Q.clearLimit, arguments);
    }

    // EXPRESSIONS

  }, {
    key: "expressions",
    value: function expressions() {
      return Q.getExpressions(this.query());
    }
  }, {
    key: "updateExpression",
    value: function updateExpression(name, expression, oldName) {
      return this._updateQuery(Q.updateExpression, arguments);
    }
  }, {
    key: "removeExpression",
    value: function removeExpression(name) {
      return this._updateQuery(Q.removeExpression, arguments);
    }

    // FIELD OPTIONS

    // TODO Atte Keinänen 6/18/17: Refactor to dimensionOptions which takes a dimensionFilter
    // See aggregationFieldOptions for an explanation why that covers more use cases

  }, {
    key: "fieldOptions",
    value: function fieldOptions() {
      var fieldFilter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
        return true;
      };

      var fieldOptions = {
        count: 0,
        fks: [],
        dimensions: []
      };

      var table = this.tableMetadata();
      if (table) {
        var dimensionFilter = function dimensionFilter(dimension) {
          var field = dimension.field && dimension.field();
          return !field || field.isDimension() && fieldFilter(field);
        };

        var dimensionIsFKReference = function dimensionIsFKReference(dimension) {
          return dimension.field && dimension.field() && dimension.field().isFK();
        };

        var filteredNonFKDimensions = this.dimensions().filter(dimensionFilter);
        // .filter(d => !dimensionIsFKReference(d));

        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = filteredNonFKDimensions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var dimension = _step3.value;

            fieldOptions.count++;
            fieldOptions.dimensions.push(dimension);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }

        var fkDimensions = this.dimensions().filter(dimensionIsFKReference);
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = fkDimensions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _dimension = _step4.value;

            var _fkDimensions = _dimension.dimensions([_Dimension.FKDimension]).filter(dimensionFilter);

            if (_fkDimensions.length > 0) {
              fieldOptions.count += _fkDimensions.length;
              fieldOptions.fks.push({
                field: _dimension.field(),
                dimension: _dimension,
                dimensions: _fkDimensions
              });
            }
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4.return) {
              _iterator4.return();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      }

      return fieldOptions;
    }

    // DIMENSIONS

  }, {
    key: "dimensions",
    value: function dimensions() {
      return [].concat(_toConsumableArray(this.expressionDimensions()), _toConsumableArray(this.tableDimensions()));
    }
  }, {
    key: "tableDimensions",
    value: function tableDimensions() {
      var table = this.table();
      return table ? table.dimensions() : [];
    }
  }, {
    key: "expressionDimensions",
    value: function expressionDimensions() {
      return Object.entries(this.expressions()).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            expressionName = _ref2[0],
            expression = _ref2[1];

        return new _Dimension.ExpressionDimension(null, [expressionName]);
      });
    }
  }, {
    key: "aggregationDimensions",
    value: function aggregationDimensions() {
      var _this4 = this;

      return this.breakouts().map(function (breakout) {
        return _Dimension2.default.parseMBQL(breakout, _this4._metadata);
      });
    }
  }, {
    key: "metricDimensions",
    value: function metricDimensions() {
      var _this5 = this;

      return this.aggregations().map(function (aggregation, index) {
        return new _Dimension.AggregationDimension(null, [index], _this5._metadata, aggregation[0]);
      });
    }
  }, {
    key: "fieldReferenceForColumn",
    value: function fieldReferenceForColumn(column) {
      if (column.fk_field_id != null) {
        return ["fk->", column.fk_field_id, column.id];
      } else if (column.id != null) {
        return ["field-id", column.id];
      } else if (column["expression-name"] != null) {
        return ["expression", column["expression-name"]];
      } else if (column.source === "aggregation") {
        // FIXME: aggregations > 0?
        return ["aggregation", 0];
      }
    }
  }, {
    key: "parseFieldReference",
    value: function parseFieldReference(fieldRef) {
      var dimension = _Dimension2.default.parseMBQL(fieldRef, this._metadata);
      if (dimension) {
        // HACK
        if (dimension instanceof _Dimension.AggregationDimension) {
          dimension._displayName = this.aggregations()[dimension._args[0]][0];
        }
        return dimension;
      }
    }
  }, {
    key: "setDatasetQuery",
    value: function setDatasetQuery(datasetQuery) {
      return new StructuredQuery(this._originalQuestion, datasetQuery);
    }

    // INTERNAL

  }, {
    key: "_updateQuery",
    value: function _updateQuery(updateFunction, args) {
      return this.setDatasetQuery((0, _icepick.updateIn)(this._datasetQuery, ["query"], function (query) {
        return updateFunction.apply(undefined, [query].concat(_toConsumableArray(args)));
      }));
    }
  }], [{
    key: "newStucturedQuery",
    value: function newStucturedQuery(_ref3) {
      var question = _ref3.question,
          databaseId = _ref3.databaseId,
          tableId = _ref3.tableId;

      var datasetQuery = _extends({}, STRUCTURED_QUERY_TEMPLATE, {
        database: databaseId || null,
        query: {
          source_table: tableId || null
        }
      });

      return new StructuredQuery(question, datasetQuery);
    }
  }]);

  return StructuredQuery;
}(_AtomicQuery3.default);

exports.default = StructuredQuery;

/***/ }),

/***/ 224:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IS_EMBED_PREVIEW = undefined;

var _dom = __webpack_require__(28);

// detect if this page is embedded in itself, i.e. it's a embed preview
// will need to do something different if we ever embed metabase in itself for another reason
var IS_EMBED_PREVIEW = exports.IS_EMBED_PREVIEW = _dom.IFRAMED_IN_SELF;

/***/ }),

/***/ 227:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var debug = void 0;
if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (window.location && window.location.hash === "#debug" || window.localStorage && window.localStorage.getItem("debug"))) {
  debug = true;
} else {
  debug = false;
}

var DEBUG = exports.DEBUG = debug;

/***/ }),

/***/ 228:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _pure = __webpack_require__(49);

var _pure2 = _interopRequireDefault(_pure);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// if the tooltip is passed a long description we'll want to conditionally
// format it to make it easier to read.
// we use the number of words as an approximation
var CONDITIONAL_WORD_COUNT = 10;

var wordCount = function wordCount(string) {
  return string.split(" ").length;
};

var TooltipPopover = function TooltipPopover(_ref) {
  var children = _ref.children,
      maxWidth = _ref.maxWidth,
      props = _objectWithoutProperties(_ref, ["children", "maxWidth"]);

  var popoverContent = void 0;

  if (typeof children === "string") {
    var needsSpace = wordCount(children) > CONDITIONAL_WORD_COUNT;
    popoverContent = _react2.default.createElement(
      "div",
      {
        className: (0, _classnames2.default)({ "py1 px2": !needsSpace }, { "py2 px3": needsSpace }),
        style: {
          maxWidth: maxWidth || "12em",
          lineHeight: needsSpace ? 1.54 : 1
        }
      },
      children
    );
  } else {
    popoverContent = children;
  }

  return _react2.default.createElement(
    _Popover2.default,
    _extends({ className: "PopoverBody--tooltip", targetOffsetY: 10 }, props),
    popoverContent
  );
};

TooltipPopover.displayName = "TooltipPopover";
exports.default = (0, _pure2.default)(TooltipPopover);

/***/ }),

/***/ 229:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nyi = nyi;
exports.memoize = memoize;
function nyi(target, key, descriptor) {
  var method = descriptor.value;
  descriptor.value = function () {
    console.warn("Method not yet implemented: " + target.constructor.name + "::" + key);
    return method.apply(this, arguments);
  };
  return descriptor;
}

var memoized = new WeakMap();

function getWithFallback(map, key, fallback) {
  if (!map.has(key)) {
    map.set(key, fallback());
  }
  return map.get(key);
}

function memoize(target, name, descriptor) {
  var method = target[name];
  descriptor.value = function () {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var path = [this, method].concat(args);
    var last = path.pop();
    var map = path.reduce(function (map, key) {
      return getWithFallback(map, key, function () {
        return new Map();
      });
    }, memoized);
    return getWithFallback(map, last, function () {
      return method.apply(_this, args);
    });
  };
}

/***/ }),

/***/ 23:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["lower case letter"], ["lower case letter"]),
    _templateObject2 = _taggedTemplateLiteral(["upper case letter"], ["upper case letter"]),
    _templateObject3 = _taggedTemplateLiteral(["number"], ["number"]),
    _templateObject4 = _taggedTemplateLiteral(["special character"], ["special character"]),
    _templateObject5 = _taggedTemplateLiteral(["must be"], ["must be"]),
    _templateObject6 = _taggedTemplateLiteral(["characters long"], ["characters long"]),
    _templateObject7 = _taggedTemplateLiteral(["Must be"], ["Must be"]),
    _templateObject8 = _taggedTemplateLiteral(["and include"], ["and include"]);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _inflection = __webpack_require__(83);

var _inflection2 = _interopRequireDefault(_inflection);

var _c3po = __webpack_require__(2);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var mb_settings = _underscore2.default.clone(window.MetabaseBootstrap);

var settingListeners = {};

// provides access to Metabase application settings
var MetabaseSettings = {
  get: function get(propName) {
    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    return mb_settings[propName] !== undefined ? mb_settings[propName] : defaultValue;
  },

  set: function set(key, value) {
    if (mb_settings[key] !== value) {
      mb_settings[key] = value;
      if (settingListeners[key]) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          var _loop = function _loop() {
            var listener = _step.value;

            setTimeout(function () {
              return listener(value);
            });
          };

          for (var _iterator = settingListeners[key][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            _loop();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }
  },

  setAll: function setAll(settings) {
    for (var key in settings) {
      MetabaseSettings.set(key, settings[key]);
    }
  },

  // these are all special accessors which provide a lookup of a property plus some additional help
  adminEmail: function adminEmail() {
    return mb_settings.admin_email;
  },

  isEmailConfigured: function isEmailConfigured() {
    return mb_settings.email_configured;
  },

  isTrackingEnabled: function isTrackingEnabled() {
    return mb_settings.anon_tracking_enabled || false;
  },

  hasSetupToken: function hasSetupToken() {
    return mb_settings.setup_token !== undefined && mb_settings.setup_token !== null;
  },

  ssoEnabled: function ssoEnabled() {
    return mb_settings.google_auth_client_id != null;
  },

  ldapEnabled: function ldapEnabled() {
    return mb_settings.ldap_configured;
  },

  hideEmbedBranding: function hideEmbedBranding() {
    return mb_settings.hide_embed_branding;
  },

  metastoreUrl: function metastoreUrl() {
    return mb_settings.metastore_url;
  },

  newVersionAvailable: function newVersionAvailable(settings) {
    var versionInfo = _underscore2.default.findWhere(settings, { key: "version-info" }),
        currentVersion = MetabaseSettings.get("version").tag;

    if (versionInfo) versionInfo = versionInfo.value;

    return versionInfo && _utils2.default.compareVersions(currentVersion, versionInfo.latest.version) < 0;
  },

  passwordComplexity: function passwordComplexity(capitalize) {
    var complexity = this.get("password_complexity");

    var clauseDescription = function clauseDescription(clause) {
      switch (clause) {
        case "lower":
          return (0, _c3po.t)(_templateObject);
        case "upper":
          return (0, _c3po.t)(_templateObject2);
        case "digit":
          return (0, _c3po.t)(_templateObject3);
        case "special":
          return (0, _c3po.t)(_templateObject4);
      }
    };

    var description = capitalize === false ? (0, _c3po.t)(_templateObject5) + " " + complexity.total + " " + (0, _c3po.t)(_templateObject6) : (0, _c3po.t)(_templateObject7) + " " + complexity.total + " " + (0, _c3po.t)(_templateObject6),
        clauses = [];

    ["lower", "upper", "digit", "special"].forEach(function (clause) {
      if (clause in complexity) {
        var desc = complexity[clause] > 1 ? _inflection2.default.pluralize(clauseDescription(clause)) : clauseDescription(clause);
        clauses.push(_utils2.default.numberToWord(complexity[clause]) + " " + desc);
      }
    });

    if (clauses.length > 0) {
      return description + " " + (0, _c3po.t)(_templateObject8) + " " + clauses.join(", ");
    } else {
      return description;
    }
  },

  on: function on(setting, callback) {
    settingListeners[setting] = settingListeners[setting] || [];
    settingListeners[setting].push(callback);
  }
};

exports.default = MetabaseSettings;

/***/ }),

/***/ 230:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for a segment. Belongs to a {@link Database} and possibly a {@link Table}
 */
var Segment = function (_Base) {
  _inherits(Segment, _Base);

  function Segment() {
    _classCallCheck(this, Segment);

    return _possibleConstructorReturn(this, (Segment.__proto__ || Object.getPrototypeOf(Segment)).apply(this, arguments));
  }

  _createClass(Segment, [{
    key: "filterClause",
    value: function filterClause() {
      return ["SEGMENT", this.id];
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return !!this.is_active;
    }
  }]);

  return Segment;
}(_Base3.default);

exports.default = Segment;

/***/ }),

/***/ 2304:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _app = __webpack_require__(360);

var _routesPublic = __webpack_require__(2305);

var _reducersPublic = __webpack_require__(786);

var _reducersPublic2 = _interopRequireDefault(_reducersPublic);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _app.init)(_reducersPublic2.default, _routesPublic.getRoutes, function () {});

/***/ }),

/***/ 2305:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRoutes = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouter = __webpack_require__(13);

var _PublicNotFound = __webpack_require__(548);

var _PublicNotFound2 = _interopRequireDefault(_PublicNotFound);

var _PublicApp = __webpack_require__(783);

var _PublicApp2 = _interopRequireDefault(_PublicApp);

var _PublicQuestion = __webpack_require__(543);

var _PublicQuestion2 = _interopRequireDefault(_PublicQuestion);

var _PublicDashboard = __webpack_require__(546);

var _PublicDashboard2 = _interopRequireDefault(_PublicDashboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*  weak */

var getRoutes = exports.getRoutes = function getRoutes(store) {
  return _react2.default.createElement(
    _reactRouter.Route,
    null,
    _react2.default.createElement(
      _reactRouter.Route,
      { path: "public", component: _PublicApp2.default },
      _react2.default.createElement(_reactRouter.Route, { path: "question/:uuid", component: _PublicQuestion2.default }),
      _react2.default.createElement(_reactRouter.Route, { path: "dashboard/:uuid", component: _PublicDashboard2.default }),
      _react2.default.createElement(_reactRouter.Route, { path: "*", component: _PublicNotFound2.default })
    ),
    _react2.default.createElement(_reactRouter.Route, { path: "*", component: _PublicNotFound2.default })
  );
};
getRoutes.displayName = "getRoutes";

/***/ }),

/***/ 231:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for a metric. Belongs to a {@link Database} and possibly a {@link Table}
 */
var Metric = function (_Base) {
  _inherits(Metric, _Base);

  function Metric() {
    _classCallCheck(this, Metric);

    return _possibleConstructorReturn(this, (Metric.__proto__ || Object.getPrototypeOf(Metric)).apply(this, arguments));
  }

  _createClass(Metric, [{
    key: "aggregationClause",
    value: function aggregationClause() {
      return ["METRIC", this.id];
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return !!this.is_active;
    }
  }]);

  return Metric;
}(_Base3.default);

exports.default = Metric;

/***/ }),

/***/ 232:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNARY_AGGREGATIONS = exports.NULLARY_AGGREGATIONS = exports.VALID_AGGREGATIONS = exports.VALID_OPERATORS = undefined;

var _templateObject = _taggedTemplateLiteral(["Count"], ["Count"]),
    _templateObject2 = _taggedTemplateLiteral(["CumulativeCount"], ["CumulativeCount"]),
    _templateObject3 = _taggedTemplateLiteral(["Sum"], ["Sum"]),
    _templateObject4 = _taggedTemplateLiteral(["CumulativeSum"], ["CumulativeSum"]),
    _templateObject5 = _taggedTemplateLiteral(["Distinct"], ["Distinct"]),
    _templateObject6 = _taggedTemplateLiteral(["StandardDeviation"], ["StandardDeviation"]),
    _templateObject7 = _taggedTemplateLiteral(["Average"], ["Average"]),
    _templateObject8 = _taggedTemplateLiteral(["Min"], ["Min"]),
    _templateObject9 = _taggedTemplateLiteral(["Max"], ["Max"]);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var VALID_OPERATORS = exports.VALID_OPERATORS = new Set(["+", "-", "*", "/"]);

var VALID_AGGREGATIONS = exports.VALID_AGGREGATIONS = new Map(Object.entries({
  count: (0, _c3po.t)(_templateObject),
  cum_count: (0, _c3po.t)(_templateObject2),
  sum: (0, _c3po.t)(_templateObject3),
  cum_sum: (0, _c3po.t)(_templateObject4),
  distinct: (0, _c3po.t)(_templateObject5),
  stddev: (0, _c3po.t)(_templateObject6),
  avg: (0, _c3po.t)(_templateObject7),
  min: (0, _c3po.t)(_templateObject8),
  max: (0, _c3po.t)(_templateObject9)
}));

var NULLARY_AGGREGATIONS = exports.NULLARY_AGGREGATIONS = ["count", "cum_count"];
var UNARY_AGGREGATIONS = exports.UNARY_AGGREGATIONS = ["sum", "cum_sum", "distinct", "stddev", "avg", "min", "max"];

/***/ }),

/***/ 233:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _query = __webpack_require__(17);

var _Metric = __webpack_require__(391);

var _Metadata = __webpack_require__(392);

var _Field = __webpack_require__(393);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Wrapper for an aggregation contained by a {@link StructuredQuery}
 */
var Aggregation = function () {
  function Aggregation(query, clause) {
    _classCallCheck(this, Aggregation);

    this._query = query;
    this.clause = clause;
  }

  /**
   * Gets the aggregation option matching this aggregation
   * Returns `null` if the clause isn't in a standard format
   */


  _createClass(Aggregation, [{
    key: "getOption",
    value: function getOption() {
      if (this._query == null) return null;

      var operator = this.getOperator();
      return operator ? this._query.aggregationOptions().find(function (option) {
        return option.short === operator;
      }) : null;
    }

    /**
     * Predicate function to test if a given aggregation clause is fully formed
     */

  }, {
    key: "isValid",
    value: function isValid() {
      return _query.AggregationClause.isValid(this.clause);
    }

    /**
     * Predicate function to test if the given aggregation clause represents a Bare Rows aggregation
     */

  }, {
    key: "isBareRows",
    value: function isBareRows() {
      return _query.AggregationClause.isBareRows(this.clause);
    }

    /**
     * Predicate function to test if a given aggregation clause represents a standard aggregation
     */

  }, {
    key: "isStandard",
    value: function isStandard() {
      return _query.AggregationClause.isStandard(this.clause);
    }
  }, {
    key: "getAggregation",
    value: function getAggregation() {
      return _query.AggregationClause.getAggregation(this.clause);
    }

    /**
     * Predicate function to test if a given aggregation clause represents a metric
     */

  }, {
    key: "isMetric",
    value: function isMetric() {
      return _query.AggregationClause.isMetric(this.clause);
    }

    /**
     * Get metricId from a metric aggregation clause
     * Returns `null` if the clause doesn't represent a metric
     */

  }, {
    key: "getMetric",
    value: function getMetric() {
      return _query.AggregationClause.getMetric(this.clause);
    }

    /**
     * Is a custom expression created with the expression editor
     */

  }, {
    key: "isCustom",
    value: function isCustom() {
      return _query.AggregationClause.isCustom(this.clause);
    }

    /**
     * Get the operator from a standard aggregation clause
     * Returns `null` if the clause isn't in a standard format
     */

  }, {
    key: "getOperator",
    value: function getOperator() {
      return _query.AggregationClause.getOperator(this.clause);
    }

    /**
     * Get the fieldId from a standard aggregation clause
     * Returns `null` if the clause isn't in a standard format
     */

  }, {
    key: "getField",
    value: function getField() {
      return _query.AggregationClause.getField(this.clause);
    }

    /**
     * Set the fieldId on a standard aggregation clause.
     * If the clause isn't in a standard format, no modifications are done.
     */

  }, {
    key: "setField",
    value: function setField(fieldId) {
      return new Aggregation(this._query, _query.AggregationClause.setField(this.clause, fieldId));
    }
  }]);

  return Aggregation;
}();

exports.default = Aggregation;

/***/ }),

/***/ 234:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMode = getMode;

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _schema_metadata = __webpack_require__(10);

var _query3 = __webpack_require__(70);

var Query = _interopRequireWildcard(_query3);

var _Card = __webpack_require__(37);

var Card = _interopRequireWildcard(_Card);

var _ObjectMode = __webpack_require__(397);

var _ObjectMode2 = _interopRequireDefault(_ObjectMode);

var _SegmentMode = __webpack_require__(398);

var _SegmentMode2 = _interopRequireDefault(_SegmentMode);

var _MetricMode = __webpack_require__(439);

var _MetricMode2 = _interopRequireDefault(_MetricMode);

var _TimeseriesMode = __webpack_require__(441);

var _TimeseriesMode2 = _interopRequireDefault(_TimeseriesMode);

var _GeoMode = __webpack_require__(445);

var _GeoMode2 = _interopRequireDefault(_GeoMode);

var _PivotMode = __webpack_require__(446);

var _PivotMode2 = _interopRequireDefault(_PivotMode);

var _NativeMode = __webpack_require__(447);

var _NativeMode2 = _interopRequireDefault(_NativeMode);

var _DefaultMode = __webpack_require__(449);

var _DefaultMode2 = _interopRequireDefault(_DefaultMode);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// legacy query lib
function getMode(card, tableMetadata) {
  if (!card) {
    return null;
  }

  if (Card.isNative(card)) {
    return _NativeMode2.default;
  }

  var query = Card.getQuery(card);
  if (Card.isStructured(card) && query) {
    if (!tableMetadata) {
      return null;
    }

    var aggregations = Query.getAggregations(query);
    var breakouts = Query.getBreakouts(query);
    var filters = Query.getFilters(query);

    if (aggregations.length === 0 && breakouts.length === 0) {
      var isPKFilter = function isPKFilter(filter) {
        if (tableMetadata && Array.isArray(filter) && filter[0] === "=") {
          var fieldId = _query2.default.getFieldTargetId(filter[1]);
          var field = tableMetadata.fields_lookup[fieldId];
          if (field && field.table.id === query.source_table && (0, _schema_metadata.isPK)(field)) {
            return true;
          }
        }
        return false;
      };
      if (_underscore2.default.any(filters, isPKFilter)) {
        return _ObjectMode2.default;
      } else {
        return _SegmentMode2.default;
      }
    }
    if (aggregations.length > 0 && breakouts.length === 0) {
      return _MetricMode2.default;
    }
    if (aggregations.length > 0 && breakouts.length > 0) {
      var breakoutFields = breakouts.map(function (breakout) {
        return (_query2.default.getFieldTarget(breakout, tableMetadata) || {}).field;
      });
      if (breakoutFields.length === 1 && (0, _schema_metadata.isDate)(breakoutFields[0]) || breakoutFields.length === 2 && (0, _schema_metadata.isDate)(breakoutFields[0]) && (0, _schema_metadata.isCategory)(breakoutFields[1])) {
        return _TimeseriesMode2.default;
      }
      if (breakoutFields.length === 1 && (0, _schema_metadata.isAddress)(breakoutFields[0])) {
        return _GeoMode2.default;
      }
      if (breakoutFields.length === 1 && (0, _schema_metadata.isCategory)(breakoutFields[0]) || breakoutFields.length === 2 && (0, _schema_metadata.isCategory)(breakoutFields[0]) && (0, _schema_metadata.isCategory)(breakoutFields[1])) {
        return _PivotMode2.default;
      }
    }
  }

  return _DefaultMode2.default;
} /*  weak */

/***/ }),

/***/ 235:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View details"], ["View details"]);

var _schema_metadata = __webpack_require__(10);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  if (!clicked || !clicked.column || clicked.value === undefined || !((0, _schema_metadata.isFK)(clicked.column) || (0, _schema_metadata.isPK)(clicked.column))) {
    return [];
  }

  // $FlowFixMe
  var field = _question.metadata().fields[clicked.column.id];
  if (!field) {
    return [];
  }

  if (field.target) {
    field = field.target;
  }

  if (!clicked) {
    return [];
  }

  return [{
    name: "object-detail",
    section: "details",
    title: (0, _c3po.t)(_templateObject),
    default: true,
    question: function question() {
      return _question.drillPK(field, clicked && clicked.value);
    }
  }];
};

/***/ }),

/***/ 236:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Custom Expression"], ["Custom Expression"]),
    _templateObject2 = _taggedTemplateLiteral(["Common Metrics"], ["Common Metrics"]),
    _templateObject3 = _taggedTemplateLiteral(["Metabasics"], ["Metabasics"]),
    _templateObject4 = _taggedTemplateLiteral(["Name (optional)"], ["Name (optional)"]),
    _templateObject5 = _taggedTemplateLiteral(["Done"], ["Done"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _AccordianList = __webpack_require__(161);

var _AccordianList2 = _interopRequireDefault(_AccordianList);

var _FieldList = __webpack_require__(136);

var _FieldList2 = _interopRequireDefault(_FieldList);

var _QueryDefinitionTooltip = __webpack_require__(240);

var _QueryDefinitionTooltip2 = _interopRequireDefault(_QueryDefinitionTooltip);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Button = __webpack_require__(44);

var _Button2 = _interopRequireDefault(_Button);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _ExpressionEditorTextfield = __webpack_require__(334);

var _ExpressionEditorTextfield2 = _interopRequireDefault(_ExpressionEditorTextfield);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var CUSTOM_SECTION_NAME = (0, _c3po.t)(_templateObject);
var METRICS_SECTION_NAME = (0, _c3po.t)(_templateObject2);

var AggregationPopover = (_temp = _class = function (_Component) {
  _inherits(AggregationPopover, _Component);

  function AggregationPopover(props, context) {
    _classCallCheck(this, AggregationPopover);

    var _this = _possibleConstructorReturn(this, (AggregationPopover.__proto__ || Object.getPrototypeOf(AggregationPopover)).call(this, props, context));

    _this.state = {
      aggregation: props.isNew ? [] : props.aggregation,
      choosingField: props.aggregation && props.aggregation.length > 1 && _query.AggregationClause.isStandard(props.aggregation),
      editingAggregation: props.aggregation && props.aggregation.length > 1 && _query.AggregationClause.isCustom(props.aggregation)
    };

    _underscore2.default.bindAll(_this, "commitAggregation", "onPickAggregation", "onPickField", "onClearAggregation");
    return _this;
  }

  _createClass(AggregationPopover, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this._header) {
        var _ReactDOM$findDOMNode = _reactDom2.default.findDOMNode(this._header).getBoundingClientRect(),
            height = _ReactDOM$findDOMNode.height;

        if (height !== this.state.headerHeight) {
          this.setState({ headerHeight: height });
        }
      }
    }
  }, {
    key: "commitAggregation",
    value: function commitAggregation(aggregation) {
      this.props.onCommitAggregation(aggregation);
      this.props.onClose();
    }
  }, {
    key: "onPickAggregation",
    value: function onPickAggregation(agg) {
      // check if this aggregation requires a field, if so then force user to pick that now, otherwise we are done
      if (agg.custom) {
        this.setState({
          aggregation: agg.value,
          editingAggregation: true
        });
      } else if (agg.aggregation && agg.aggregation.requiresField) {
        this.setState({
          aggregation: agg.value,
          choosingField: true
        });
      } else {
        // this includse picking a METRIC or picking an aggregation which doesn't require a field
        this.commitAggregation(agg.value);
      }
    }
  }, {
    key: "onPickField",
    value: function onPickField(fieldId) {
      this.commitAggregation(_query.AggregationClause.setField(this.state.aggregation, fieldId));
    }
  }, {
    key: "onClearAggregation",
    value: function onClearAggregation() {
      this.setState({
        choosingField: false,
        editingAggregation: false
      });
    }
  }, {
    key: "getAvailableAggregations",
    value: function getAvailableAggregations() {
      var _props = this.props,
          availableAggregations = _props.availableAggregations,
          query = _props.query;

      return availableAggregations || query.table().aggregations();
    }
  }, {
    key: "getCustomFields",
    value: function getCustomFields() {
      var _props2 = this.props,
          customFields = _props2.customFields,
          datasetQuery = _props2.datasetQuery;

      return customFields || datasetQuery && _query2.default.getExpressions(datasetQuery.query);
    }
  }, {
    key: "itemIsSelected",
    value: function itemIsSelected(item) {
      var aggregation = this.props.aggregation;

      return item.isSelected(_query.NamedClause.getContent(aggregation));
    }
  }, {
    key: "renderItemExtra",
    value: function renderItemExtra(item, itemIndex) {
      if (item.aggregation && item.aggregation.description) {
        return _react2.default.createElement(
          "div",
          { className: "p1" },
          _react2.default.createElement(
            _Tooltip2.default,
            { tooltip: item.aggregation.description },
            _react2.default.createElement("span", { className: "QuestionTooltipTarget" })
          )
        );
      } else if (item.metric) {
        return this.renderMetricTooltip(item.metric);
      }
    }
  }, {
    key: "renderMetricTooltip",
    value: function renderMetricTooltip(metric) {
      var tableMetadata = this.props.tableMetadata;

      return _react2.default.createElement(
        "div",
        { className: "p1" },
        _react2.default.createElement(
          _Tooltip2.default,
          {
            tooltip: _react2.default.createElement(_QueryDefinitionTooltip2.default, {
              type: "metric",
              object: metric,
              tableMetadata: tableMetadata
            })
          },
          _react2.default.createElement("span", { className: "QuestionTooltipTarget" })
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          query = _props3.query,
          tableMetadata = _props3.tableMetadata,
          showOnlyProvidedAggregations = _props3.showOnlyProvidedAggregations;


      var customFields = this.getCustomFields();
      var availableAggregations = this.getAvailableAggregations();

      var _state = this.state,
          choosingField = _state.choosingField,
          editingAggregation = _state.editingAggregation;

      var aggregation = _query.NamedClause.getContent(this.state.aggregation);

      var selectedAggregation = void 0;
      if (_query.AggregationClause.isMetric(aggregation)) {
        selectedAggregation = _underscore2.default.findWhere(tableMetadata.metrics, {
          id: _query.AggregationClause.getMetric(aggregation)
        });
      } else if (_query.AggregationClause.getOperator(aggregation)) {
        selectedAggregation = _underscore2.default.findWhere(availableAggregations, {
          short: _query.AggregationClause.getOperator(aggregation)
        });
      }

      var sections = [];
      var customExpressionIndex = null;

      if (availableAggregations.length > 0) {
        sections.push({
          name: showOnlyProvidedAggregations ? null : (0, _c3po.t)(_templateObject3),
          items: availableAggregations.map(function (aggregation) {
            return {
              name: aggregation.name,
              value: [aggregation.short].concat(aggregation.fields.map(function (field) {
                return null;
              })),
              isSelected: function isSelected(agg) {
                return !_query.AggregationClause.isCustom(agg) && _query.AggregationClause.getAggregation(agg) === aggregation.short;
              },
              aggregation: aggregation
            };
          }),
          icon: showOnlyProvidedAggregations ? null : "table2"
        });
      }

      if (!showOnlyProvidedAggregations) {
        // we only want to consider active metrics, with the ONE exception that if the currently selected aggregation is a
        // retired metric then we include it in the list to maintain continuity
        var metrics = tableMetadata.metrics && tableMetadata.metrics.filter(function (mtrc) {
          return mtrc.is_active === true || selectedAggregation && selectedAggregation.id === mtrc.id;
        });
        if (metrics && metrics.length > 0) {
          sections.push({
            name: METRICS_SECTION_NAME,
            items: metrics.map(function (metric) {
              return {
                name: metric.name,
                value: ["METRIC", metric.id],
                isSelected: function isSelected(aggregation) {
                  return _query.AggregationClause.getMetric(aggregation) === metric.id;
                },
                metric: metric
              };
            }),
            icon: "staroutline"
          });
        }

        customExpressionIndex = sections.length;
        if (tableMetadata.db.features.indexOf("expression-aggregations") >= 0) {
          sections.push({
            name: CUSTOM_SECTION_NAME,
            icon: "sum"
          });
        }
      }

      if (sections.length === 1) {
        sections[0].name = null;
      }

      if (editingAggregation) {
        return _react2.default.createElement(
          "div",
          { style: { width: editingAggregation ? 500 : 300 } },
          _react2.default.createElement(
            "div",
            { className: "text-grey-3 p1 py2 border-bottom flex align-center" },
            _react2.default.createElement(
              "a",
              {
                className: "cursor-pointer flex align-center",
                onClick: this.onClearAggregation
              },
              _react2.default.createElement(_Icon2.default, { name: "chevronleft", size: 18 }),
              _react2.default.createElement(
                "h3",
                { className: "inline-block pl1" },
                CUSTOM_SECTION_NAME
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "p1" },
            _react2.default.createElement(_ExpressionEditorTextfield2.default, {
              startRule: "aggregation",
              expression: aggregation,
              tableMetadata: tableMetadata,
              customFields: customFields,
              onChange: function onChange(parsedExpression) {
                return _this2.setState({
                  aggregation: _query.NamedClause.setContent(_this2.state.aggregation, parsedExpression),
                  error: null
                });
              },
              onError: function onError(errorMessage) {
                return _this2.setState({
                  error: errorMessage
                });
              }
            }),
            this.state.error != null && (Array.isArray(this.state.error) ? this.state.error.map(function (error) {
              return _react2.default.createElement(
                "div",
                {
                  className: "text-error mb1",
                  style: { whiteSpace: "pre-wrap" }
                },
                error.message
              );
            }) : _react2.default.createElement(
              "div",
              { className: "text-error mb1" },
              this.state.error.message
            )),
            _react2.default.createElement("input", {
              className: "input block full my1",
              value: _query.NamedClause.getName(this.state.aggregation),
              onChange: function onChange(e) {
                return _this2.setState({
                  aggregation: e.target.value ? _query.NamedClause.setName(aggregation, e.target.value) : aggregation
                });
              },
              placeholder: (0, _c3po.t)(_templateObject4)
            }),
            _react2.default.createElement(
              _Button2.default,
              {
                className: "full",
                primary: true,
                disabled: this.state.error,
                onClick: function onClick() {
                  return _this2.commitAggregation(_this2.state.aggregation);
                }
              },
              (0, _c3po.t)(_templateObject5)
            )
          )
        );
      } else if (choosingField) {
        var _aggregation = _slicedToArray(aggregation, 2),
            agg = _aggregation[0],
            fieldId = _aggregation[1];

        return _react2.default.createElement(
          "div",
          { style: { minWidth: 300 } },
          _react2.default.createElement(
            "div",
            {
              ref: function ref(_) {
                return _this2._header = _;
              },
              className: "text-grey-3 p1 py2 border-bottom flex align-center"
            },
            _react2.default.createElement(
              "a",
              {
                className: "cursor-pointer flex align-center",
                onClick: this.onClearAggregation
              },
              _react2.default.createElement(_Icon2.default, { name: "chevronleft", size: 18 }),
              _react2.default.createElement(
                "h3",
                { className: "inline-block pl1" },
                selectedAggregation.name
              )
            )
          ),
          _react2.default.createElement(_FieldList2.default, {
            className: "text-green",
            maxHeight: this.props.maxHeight - (this.state.headerHeight || 0),
            tableMetadata: tableMetadata,
            field: fieldId,
            fieldOptions: query.aggregationFieldOptions(agg),
            customFieldOptions: customFields,
            onFieldChange: this.onPickField,
            enableSubDimensions: false
          })
        );
      } else {
        return _react2.default.createElement(_AccordianList2.default, {
          className: "text-green",
          maxHeight: this.props.maxHeight,
          sections: sections,
          onChange: this.onPickAggregation,
          itemIsSelected: this.itemIsSelected.bind(this),
          renderSectionIcon: function renderSectionIcon(s) {
            return _react2.default.createElement(_Icon2.default, { name: s.icon, size: 18 });
          },
          renderItemExtra: this.renderItemExtra.bind(this),
          getItemClasses: function getItemClasses(item) {
            return item.metric && !item.metric.is_active ? "text-grey-3" : null;
          },
          onChangeSection: function onChangeSection(index) {
            if (index === customExpressionIndex) {
              _this2.onPickAggregation({
                custom: true,
                value: aggregation !== "rows" && !_underscore2.default.isEqual(aggregation, ["rows"]) ? aggregation : null
              });
            }
          }
        });
      }
    }
  }]);

  return AggregationPopover;
}(_react.Component), _class.propTypes = {
  isNew: _propTypes2.default.bool,
  aggregation: _propTypes2.default.array,
  onCommitAggregation: _propTypes2.default.func.isRequired,
  onClose: _propTypes2.default.func.isRequired,
  tableMetadata: _propTypes2.default.object.isRequired,
  datasetQuery: _propTypes2.default.object,
  customFields: _propTypes2.default.object,
  availableAggregations: _propTypes2.default.array,
  // Restricts the shown options to contents of `availableActions` only
  showOnlyProvidedAggregations: _propTypes2.default.bool
}, _temp);
AggregationPopover.displayName = "AggregationPopover";
exports.default = AggregationPopover;

/***/ }),

/***/ 237:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Find..."], ["Find..."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Input = __webpack_require__(67);

var _Input2 = _interopRequireDefault(_Input);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListSearchField = (_temp = _class = function (_Component) {
  _inherits(ListSearchField, _Component);

  function ListSearchField() {
    _classCallCheck(this, ListSearchField);

    return _possibleConstructorReturn(this, (ListSearchField.__proto__ || Object.getPrototypeOf(ListSearchField)).apply(this, arguments));
  }

  _createClass(ListSearchField, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.autoFocus) {
        // Call focus() with a small delay because instant input focus causes an abrupt scroll to top of page
        // when ListSearchField is used inside a popover. It seems that it takes a while for Tether library
        // to correctly position the popover.
        setTimeout(function () {
          return _this2._input && _this2._input.focus();
        }, 50);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          className = _props.className,
          inputClassName = _props.inputClassName,
          _onChange = _props.onChange,
          placeholder = _props.placeholder,
          searchText = _props.searchText;


      return _react2.default.createElement(
        "div",
        { className: className },
        _react2.default.createElement(
          "span",
          { className: "px1" },
          _react2.default.createElement(_Icon2.default, { name: "search", size: 16 })
        ),
        _react2.default.createElement(_Input2.default, {
          className: inputClassName,
          type: "text",
          placeholder: placeholder,
          value: searchText,
          onChange: function onChange(e) {
            return _onChange(e.target.value);
          },
          ref: function ref(input) {
            return _this3._input = input;
          }
        })
      );
    }
  }]);

  return ListSearchField;
}(_react.Component), _class.propTypes = {
  onChange: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  searchText: _propTypes2.default.string,
  autoFocus: _propTypes2.default.bool
}, _class.defaultProps = {
  className: "bordered rounded text-grey-2 flex flex-full align-center",
  inputClassName: "p1 h4 input--borderless text-default flex-full",
  placeholder: (0, _c3po.t)(_templateObject),
  searchText: "",
  autoFocus: false
}, _temp);
ListSearchField.displayName = "ListSearchField";
exports.default = ListSearchField;

/***/ }),

/***/ 239:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _dom = __webpack_require__(28);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// higher order component that takes a component which takes props "isOpen" and optionally "onClose"
// and returns a component that renders a <a> element "trigger", and tracks whether that component is open or not
exports.default = function (ComposedComponent) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(_class, _Component);

    function _class(props, context) {
      _classCallCheck(this, _class);

      var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props, context));

      _this.state = {
        isOpen: props.isInitiallyOpen || false
      };

      _this._startCheckObscured = _this._startCheckObscured.bind(_this);
      _this._stopCheckObscured = _this._stopCheckObscured.bind(_this);
      _this.onClose = _this.onClose.bind(_this);
      return _this;
    }

    _createClass(_class, [{
      key: "open",
      value: function open() {
        this.toggle(true);
      }
    }, {
      key: "close",
      value: function close() {
        this.toggle(false);
      }
    }, {
      key: "toggle",
      value: function toggle() {
        var isOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.state.isOpen;

        this.setState({ isOpen: isOpen });
      }
    }, {
      key: "onClose",
      value: function onClose(e) {
        // don't close if clicked the actual trigger, it will toggle
        if (e && e.target && _reactDom2.default.findDOMNode(this.refs.trigger).contains(e.target)) {
          return;
        }

        if (this.props.onClose) {
          this.props.onClose(e);
        }

        this.close();
      }
    }, {
      key: "target",
      value: function target() {
        if (this.props.target) {
          return this.props.target();
        } else {
          return this.refs.trigger;
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.componentDidUpdate();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (this.state.isOpen && this.props.closeOnObscuredTrigger) {
          this._startCheckObscured();
        } else {
          this._stopCheckObscured();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._stopCheckObscured();
      }
    }, {
      key: "_startCheckObscured",
      value: function _startCheckObscured() {
        var _this2 = this;

        if (this._offscreenTimer == null) {
          this._offscreenTimer = setInterval(function () {
            var trigger = _reactDom2.default.findDOMNode(_this2.refs.trigger);
            if ((0, _dom.isObscured)(trigger)) {
              _this2.close();
            }
          }, 250);
        }
      }
    }, {
      key: "_stopCheckObscured",
      value: function _stopCheckObscured() {
        if (this._offscreenTimer != null) {
          clearInterval(this._offscreenTimer);
          this._offscreenTimer = null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            triggerId = _props.triggerId,
            triggerClasses = _props.triggerClasses,
            triggerStyle = _props.triggerStyle,
            triggerClassesOpen = _props.triggerClassesOpen;
        var isOpen = this.state.isOpen;
        var triggerElement = this.props.triggerElement;

        if (triggerElement && triggerElement.type === _Tooltip2.default) {
          // Disables tooltip when open:
          triggerElement = _react2.default.cloneElement(triggerElement, {
            isEnabled: triggerElement.props.isEnabled && !isOpen
          });
        }

        // if we have a single child which isn't an HTML element and doesn't have an onClose prop go ahead and inject it directly
        var children = this.props.children;

        if (_react2.default.Children.count(children) === 1 && _react2.default.Children.only(children).props.onClose === undefined && typeof _react2.default.Children.only(children).type !== "string") {
          children = _react2.default.cloneElement(children, { onClose: this.onClose });
        }

        return _react2.default.createElement(
          "a",
          {
            id: triggerId,
            ref: "trigger",
            onClick: function onClick(event) {
              event.preventDefault();
              !_this3.props.disabled && _this3.toggle();
            },
            className: (0, _classnames2.default)(triggerClasses, isOpen && triggerClassesOpen, "no-decoration", {
              "cursor-default": this.props.disabled
            }),
            style: triggerStyle
          },
          triggerElement,
          _react2.default.createElement(ComposedComponent, _extends({}, this.props, {
            children: children,
            isOpen: isOpen,
            onClose: this.onClose,
            target: function target() {
              return _this3.target();
            }
          }))
        );
      }
    }]);

    return _class;
  }(_react.Component), _class.displayName = "Triggerable[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _class.defaultProps = {
    closeOnObscuredTrigger: false
  }, _temp;
};

/***/ }),

/***/ 24:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formDomOnlyProps = exports.updateData = exports.fetchData = exports.resourceListToMap = exports.createAction = exports.handleActions = exports.combineReducers = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _redux = __webpack_require__(116);

Object.defineProperty(exports, "combineReducers", {
  enumerable: true,
  get: function get() {
    return _redux.combineReducers;
  }
});

var _reduxActions = __webpack_require__(101);

Object.defineProperty(exports, "handleActions", {
  enumerable: true,
  get: function get() {
    return _reduxActions.handleActions;
  }
});
Object.defineProperty(exports, "createAction", {
  enumerable: true,
  get: function get() {
    return _reduxActions.createAction;
  }
});
exports.createThunkAction = createThunkAction;
exports.momentifyTimestamps = momentifyTimestamps;
exports.momentifyObjectsTimestamps = momentifyObjectsTimestamps;
exports.momentifyArraysTimestamps = momentifyArraysTimestamps;
exports.mergeEntities = mergeEntities;
exports.handleEntities = handleEntities;

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _requests = __webpack_require__(106);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// similar to createAction but accepts a (redux-thunk style) thunk and dispatches based on whether
// the promise returned from the thunk resolves or rejects, similar to redux-promise
function createThunkAction(actionType, actionThunkCreator) {
  function fn() {
    var thunk = actionThunkCreator.apply(undefined, arguments);
    return function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {
        var payload, dispatchValue;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return thunk(dispatch, getState);

              case 3:
                payload = _context.sent;
                dispatchValue = { type: actionType, payload: payload };

                dispatch(dispatchValue);

                return _context.abrupt("return", dispatchValue);

              case 9:
                _context.prev = 9;
                _context.t0 = _context["catch"](0);

                dispatch({ type: actionType, payload: _context.t0, error: true });
                throw _context.t0;

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 9]]);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }();
  }
  fn.toString = function () {
    return actionType;
  };
  return fn;
}

// turns string timestamps into moment objects
function momentifyTimestamps(object) {
  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ["created_at", "updated_at"];

  object = _extends({}, object);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var timestamp = _step.value;

      if (timestamp in object) {
        object[timestamp] = (0, _moment2.default)(object[timestamp]);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return object;
}

function momentifyObjectsTimestamps(objects, keys) {
  return _underscore2.default.mapObject(objects, function (o) {
    return momentifyTimestamps(o, keys);
  });
}

function momentifyArraysTimestamps(array, keys) {
  return _underscore2.default.map(array, function (o) {
    return momentifyTimestamps(o, keys);
  });
}

// turns into id indexed map
var resourceListToMap = exports.resourceListToMap = function resourceListToMap(resources) {
  return resources.reduce(function (map, resource) {
    return _extends({}, map, _defineProperty({}, resource.id, resource));
  }, {});
};

var fetchData = exports.fetchData = function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {
    var dispatch = _ref3.dispatch,
        getState = _ref3.getState,
        requestStatePath = _ref3.requestStatePath,
        existingStatePath = _ref3.existingStatePath,
        getData = _ref3.getData,
        reload = _ref3.reload;
    var existingData, statePath, requestState, data;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            existingData = (0, _icepick.getIn)(getState(), existingStatePath);
            statePath = requestStatePath.concat(["fetch"]);
            _context2.prev = 2;
            requestState = (0, _icepick.getIn)(getState(), ["requests", "states"].concat(_toConsumableArray(statePath)));

            if (!(!requestState || requestState.error || reload)) {
              _context2.next = 11;
              break;
            }

            dispatch((0, _requests.setRequestState)({ statePath: statePath, state: "LOADING" }));
            _context2.next = 8;
            return getData();

          case 8:
            data = _context2.sent;


            // NOTE Atte Keinänen 8/23/17:
            // Dispatch `setRequestState` after clearing the call stack because we want to the actual data to be updated
            // before we notify components via `state.requests.fetches` that fetching the data is completed
            setTimeout(function () {
              return dispatch((0, _requests.setRequestState)({ statePath: statePath, state: "LOADED" }));
            }, 0);

            return _context2.abrupt("return", data);

          case 11:
            return _context2.abrupt("return", existingData);

          case 14:
            _context2.prev = 14;
            _context2.t0 = _context2["catch"](2);

            dispatch((0, _requests.setRequestState)({ statePath: statePath, error: _context2.t0 }));
            console.error(_context2.t0);
            return _context2.abrupt("return", existingData);

          case 19:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, undefined, [[2, 14]]);
  }));

  return function fetchData(_x4) {
    return _ref2.apply(this, arguments);
  };
}();

var updateData = exports.updateData = function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5) {
    var dispatch = _ref5.dispatch,
        getState = _ref5.getState,
        requestStatePath = _ref5.requestStatePath,
        existingStatePath = _ref5.existingStatePath,
        dependentRequestStatePaths = _ref5.dependentRequestStatePaths,
        putData = _ref5.putData;
    var existingData, statePath, data;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            existingData = (0, _icepick.getIn)(getState(), existingStatePath);
            statePath = requestStatePath.concat(["update"]);
            _context3.prev = 2;

            dispatch((0, _requests.setRequestState)({ statePath: statePath, state: "LOADING" }));
            _context3.next = 6;
            return putData();

          case 6:
            data = _context3.sent;

            dispatch((0, _requests.setRequestState)({ statePath: statePath, state: "LOADED" }));

            (dependentRequestStatePaths || []).forEach(function (statePath) {
              return dispatch((0, _requests.clearRequestState)({ statePath: statePath }));
            });

            return _context3.abrupt("return", data);

          case 12:
            _context3.prev = 12;
            _context3.t0 = _context3["catch"](2);

            dispatch((0, _requests.setRequestState)({ statePath: statePath, error: _context3.t0 }));
            console.error(_context3.t0);
            return _context3.abrupt("return", existingData);

          case 17:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, undefined, [[2, 12]]);
  }));

  return function updateData(_x5) {
    return _ref4.apply(this, arguments);
  };
}();

// helper for working with normalizr
// merge each entity from newEntities with existing entity, if any
// this ensures partial entities don't overwrite existing entities with more properties
function mergeEntities(entities, newEntities) {
  entities = _extends({}, entities);
  for (var id in newEntities) {
    if (id in entities) {
      entities[id] = _extends({}, entities[id], newEntities[id]);
    } else {
      entities[id] = newEntities[id];
    }
  }
  return entities;
}

// helper for working with normalizr
// reducer that merges payload.entities
function handleEntities(actionPattern, entityType, reducer) {
  return function (state, action) {
    if (state === undefined) {
      state = {};
    }
    var entities = (0, _icepick.getIn)(action, ["payload", "entities", entityType]);
    if (actionPattern.test(action.type) && entities) {
      state = mergeEntities(state, entities);
    }
    return reducer(state, action);
  };
}

// for filtering non-DOM props from redux-form field objects
// https://github.com/erikras/redux-form/issues/1441
var formDomOnlyProps = function formDomOnlyProps(_ref6) {
  var initialValue = _ref6.initialValue,
      autofill = _ref6.autofill,
      onUpdate = _ref6.onUpdate,
      valid = _ref6.valid,
      invalid = _ref6.invalid,
      dirty = _ref6.dirty,
      pristine = _ref6.pristine,
      active = _ref6.active,
      touched = _ref6.touched,
      visited = _ref6.visited,
      autofilled = _ref6.autofilled,
      error = _ref6.error,
      defaultValue = _ref6.defaultValue,
      domProps = _objectWithoutProperties(_ref6, ["initialValue", "autofill", "onUpdate", "valid", "invalid", "dirty", "pristine", "active", "touched", "visited", "autofilled", "error", "defaultValue"]);

  return domProps;
};
exports.formDomOnlyProps = formDomOnlyProps;

/***/ }),

/***/ 240:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["This metric has been retired.  It's no longer available for use."], ["This metric has been retired.  It's no longer available for use."]),
    _templateObject2 = _taggedTemplateLiteral(["Definition"], ["Definition"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _FilterList = __webpack_require__(241);

var _FilterList2 = _interopRequireDefault(_FilterList);

var _AggregationWidget = __webpack_require__(251);

var _AggregationWidget2 = _interopRequireDefault(_AggregationWidget);

var _FieldSet = __webpack_require__(157);

var _FieldSet2 = _interopRequireDefault(_FieldSet);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var QueryDefinitionTooltip = (_temp = _class = function (_Component) {
  _inherits(QueryDefinitionTooltip, _Component);

  function QueryDefinitionTooltip() {
    _classCallCheck(this, QueryDefinitionTooltip);

    return _possibleConstructorReturn(this, (QueryDefinitionTooltip.__proto__ || Object.getPrototypeOf(QueryDefinitionTooltip)).apply(this, arguments));
  }

  _createClass(QueryDefinitionTooltip, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          type = _props.type,
          object = _props.object,
          tableMetadata = _props.tableMetadata;


      return _react2.default.createElement(
        "div",
        { className: "p2", style: { width: 250 } },
        _react2.default.createElement(
          "div",
          null,
          type && type === "metric" && !object.is_active ? (0, _c3po.t)(_templateObject) : object.description
        ),
        object.definition && _react2.default.createElement(
          "div",
          { className: "mt2" },
          _react2.default.createElement(
            _FieldSet2.default,
            { legend: (0, _c3po.t)(_templateObject2), className: "border-light" },
            _react2.default.createElement(
              "div",
              { className: "TooltipFilterList" },
              _query2.default.getAggregations(object.definition).map(function (aggregation) {
                return _react2.default.createElement(_AggregationWidget2.default, {
                  aggregation: aggregation,
                  tableMetadata: tableMetadata
                });
              }),
              _react2.default.createElement(_FilterList2.default, {
                filters: _query2.default.getFilters(object.definition),
                tableMetadata: tableMetadata,
                maxDisplayValues: Infinity
              })
            )
          )
        )
      );
    }
  }]);

  return QueryDefinitionTooltip;
}(_react.Component), _class.propTypes = {
  type: _propTypes2.default.string,
  object: _propTypes2.default.object.isRequired,
  tableMetadata: _propTypes2.default.object.isRequired
}, _temp);
QueryDefinitionTooltip.displayName = "QueryDefinitionTooltip";
exports.default = QueryDefinitionTooltip;

/***/ }),

/***/ 241:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(["Item"], ["Item"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _c3po = __webpack_require__(2);

var _FilterWidget = __webpack_require__(412);

var _FilterWidget2 = _interopRequireDefault(_FilterWidget);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterList = function (_Component) {
  _inherits(FilterList, _Component);

  function FilterList(props) {
    _classCallCheck(this, FilterList);

    var _this = _possibleConstructorReturn(this, (FilterList.__proto__ || Object.getPrototypeOf(FilterList)).call(this, props));

    _this.state = {
      shouldScroll: false
    };
    return _this;
  }

  _createClass(FilterList, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.state.shouldScroll ? (0, _reactDom.findDOMNode)(this).scrollLeft = (0, _reactDom.findDOMNode)(this).scrollWidth : null;
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      // only scroll when a filter is added
      if (nextProps.filters.length > this.props.filters.length) {
        this.setState({ shouldScroll: true });
      } else {
        this.setState({ shouldScroll: false });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          query = _props.query,
          filters = _props.filters,
          tableMetadata = _props.tableMetadata;

      return _react2.default.createElement(
        "div",
        { className: "Query-filterList scroll-x scroll-show" },
        filters.map(function (filter, index) {
          return _react2.default.createElement(_FilterWidget2.default, {
            key: index,
            placeholder: (0, _c3po.t)(_templateObject)
            // TODO: update widgets that are still passing tableMetadata instead of query
            , query: query || {
              table: function table() {
                return tableMetadata;
              },
              parseFieldReference: function parseFieldReference(fieldRef) {
                return _Dimension2.default.parseMBQL(fieldRef, tableMetadata);
              }
            },
            filter: filter,
            index: index,
            removeFilter: _this2.props.removeFilter,
            updateFilter: _this2.props.updateFilter,
            maxDisplayValues: _this2.props.maxDisplayValues
          });
        })
      );
    }
  }]);

  return FilterList;
}(_react.Component);

FilterList.displayName = "FilterList";
exports.default = FilterList;

/***/ }),

/***/ 242:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Clearable = function Clearable(_ref) {
  var onClear = _ref.onClear,
      children = _ref.children,
      className = _ref.className;
  return _react2.default.createElement(
    "div",
    { className: (0, _classnames2.default)("flex align-center", className) },
    children,
    onClear && _react2.default.createElement(
      "a",
      {
        className: "text-grey-2 no-decoration pr1 flex align-center",
        onClick: onClear
      },
      _react2.default.createElement(_Icon2.default, { name: "close", size: 14 })
    )
  );
};

Clearable.displayName = "Clearable";
exports.default = Clearable;

/***/ }),

/***/ 243:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Include ", ""], ["Include ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["Case sensitive"], ["Case sensitive"]),
    _templateObject3 = _taggedTemplateLiteral(["today"], ["today"]),
    _templateObject4 = _taggedTemplateLiteral(["this week"], ["this week"]),
    _templateObject5 = _taggedTemplateLiteral(["this month"], ["this month"]),
    _templateObject6 = _taggedTemplateLiteral(["this year"], ["this year"]),
    _templateObject7 = _taggedTemplateLiteral(["this minute"], ["this minute"]),
    _templateObject8 = _taggedTemplateLiteral(["this hour"], ["this hour"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _filter = __webpack_require__(91);

var _CheckBox = __webpack_require__(89);

var _CheckBox2 = _interopRequireDefault(_CheckBox);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var OPTION_NAMES = {
  "include-current": function includeCurrent(filter) {
    var period = _react2.default.createElement(
      "strong",
      { key: "notsurewhythisneedsakey" },
      getCurrentIntervalName(filter)
    );
    return (0, _c3po.jt)(_templateObject, period);
  },
  "case-sensitive": function caseSensitive() {
    return (0, _c3po.t)(_templateObject2);
  }
};

var CURRENT_INTERVAL_NAME = {
  day: (0, _c3po.t)(_templateObject3),
  week: (0, _c3po.t)(_templateObject4),
  month: (0, _c3po.t)(_templateObject5),
  year: (0, _c3po.t)(_templateObject6),
  minute: (0, _c3po.t)(_templateObject7),
  hour: (0, _c3po.t)(_templateObject8)
};

function getCurrentIntervalName(filter) {
  if (filter[0] === "time-interval") {
    // $FlowFixMe:
    return CURRENT_INTERVAL_NAME[filter[3]];
  }
  return null;
}

var FilterOptions = (_temp = _class = function (_Component) {
  _inherits(FilterOptions, _Component);

  function FilterOptions() {
    _classCallCheck(this, FilterOptions);

    return _possibleConstructorReturn(this, (FilterOptions.__proto__ || Object.getPrototypeOf(FilterOptions)).apply(this, arguments));
  }

  _createClass(FilterOptions, [{
    key: "getOptions",
    value: function getOptions() {
      return this.props.operator && this.props.operator.options || {};
    }
  }, {
    key: "getOptionName",
    value: function getOptionName(name) {
      if (OPTION_NAMES[name]) {
        return OPTION_NAMES[name](this.props.filter);
      }
      return name;
    }
  }, {
    key: "getOptionValue",
    value: function getOptionValue(name) {
      var filter = this.props.filter;

      var value = (0, _filter.getFilterOptions)(filter)[name];
      if (value !== undefined) {
        return value;
      }
      var option = this.getOptions()[name];
      if (option && option.defaultValue !== undefined) {
        return option.defaultValue;
      }
      // for now values are always boolean, default to false
      return false;
    }
  }, {
    key: "setOptionValue",
    value: function setOptionValue(name, value) {
      var filter = this.props.filter;

      var options = (0, _filter.getFilterOptions)(filter);
      this.props.onFilterChange((0, _filter.setFilterOptions)(filter, _extends({}, options, _defineProperty({}, name, !options[name]))));
      _analytics2.default.trackEvent("QueryBuilder", "Filter", "SetOption", name);
    }
  }, {
    key: "toggleOptionValue",
    value: function toggleOptionValue(name) {
      this.setOptionValue(name, !this.getOptionValue(name));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var options = Object.entries(this.getOptions());
      if (options.length === 0) {
        return null;
      }
      return _react2.default.createElement(
        "div",
        { className: "flex align-center" },
        options.map(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              name = _ref2[0],
              option = _ref2[1];

          return _react2.default.createElement(
            "div",
            {
              key: name,
              className: "flex align-center",
              onClick: function onClick() {
                return _this2.toggleOptionValue(name);
              }
            },
            _react2.default.createElement(_CheckBox2.default, { checked: _this2.getOptionValue(name) }),
            _react2.default.createElement(
              "label",
              { className: "ml1" },
              _this2.getOptionName(name)
            )
          );
        })
      );
    }
  }]);

  return FilterOptions;
}(_react.Component), _class.propTypes = {
  filter: _propTypes2.default.array.isRequired,
  onFilterChange: _propTypes2.default.func.isRequired,
  // either an operator from schema_metadata or DatePicker
  operator: _propTypes2.default.object.isRequired
}, _temp);
FilterOptions.displayName = "FilterOptions";
exports.default = FilterOptions;

/***/ }),

/***/ 244:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _NumericInput = __webpack_require__(245);

var _NumericInput2 = _interopRequireDefault(_NumericInput);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HoursMinutesInput = function HoursMinutesInput(_ref) {
  var hours = _ref.hours,
      minutes = _ref.minutes,
      onChangeHours = _ref.onChangeHours,
      onChangeMinutes = _ref.onChangeMinutes,
      onClear = _ref.onClear;
  return _react2.default.createElement(
    "div",
    { className: "flex align-center" },
    _react2.default.createElement(_NumericInput2.default, {
      className: "input",
      style: { height: 36 },
      size: 2,
      maxLength: 2,
      value: hours % 12 === 0 ? "12" : String(hours % 12),
      onChange: function onChange(value) {
        return onChangeHours((hours >= 12 ? 12 : 0) + value);
      }
    }),
    _react2.default.createElement(
      "span",
      { className: "px1" },
      ":"
    ),
    _react2.default.createElement(_NumericInput2.default, {
      className: "input",
      style: { height: 36 },
      size: 2,
      maxLength: 2,
      value: (minutes < 10 ? "0" : "") + minutes,
      onChange: function onChange(value) {
        return onChangeMinutes(value);
      }
    }),
    _react2.default.createElement(
      "div",
      { className: "flex align-center pl1" },
      _react2.default.createElement(
        "span",
        {
          className: (0, _classnames2.default)("text-purple-hover mr1", {
            "text-purple": hours < 12,
            "cursor-pointer": hours >= 12
          }),
          onClick: hours >= 12 ? function () {
            return onChangeHours(hours - 12);
          } : null
        },
        "AM"
      ),
      _react2.default.createElement(
        "span",
        {
          className: (0, _classnames2.default)("text-purple-hover mr1", {
            "text-purple": hours >= 12,
            "cursor-pointer": hours < 12
          }),
          onClick: hours < 12 ? function () {
            return onChangeHours(hours + 12);
          } : null
        },
        "PM"
      )
    ),
    onClear && _react2.default.createElement(_Icon2.default, {
      className: "text-grey-2 cursor-pointer text-grey-4-hover ml-auto",
      name: "close",
      onClick: onClear
    })
  );
};

HoursMinutesInput.displayName = "HoursMinutesInput";
exports.default = HoursMinutesInput;

/***/ }),

/***/ 245:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Input = __webpack_require__(67);

var _Input2 = _interopRequireDefault(_Input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var NumericInput = function NumericInput(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange,
      props = _objectWithoutProperties(_ref, ["value", "onChange"]);

  return _react2.default.createElement(_Input2.default, _extends({
    value: value == null ? "" : String(value),
    onBlurChange: function onBlurChange(_ref2) {
      var value = _ref2.target.value;

      value = value ? parseInt(value, 10) : null;
      if (!isNaN(value)) {
        onChange(value);
      }
    }
  }, props));
};

NumericInput.displayName = "NumericInput";
exports.default = NumericInput;

/***/ }),

/***/ 246:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Select = __webpack_require__(33);

var _Select2 = _interopRequireDefault(_Select);

var _humanizePlus = __webpack_require__(195);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateUnitSelector = function DateUnitSelector(_ref) {
  var open = _ref.open,
      value = _ref.value,
      onChange = _ref.onChange,
      togglePicker = _ref.togglePicker,
      intervals = _ref.intervals,
      formatter = _ref.formatter,
      periods = _ref.periods;
  return _react2.default.createElement(
    _Select2.default,
    {
      value: value,
      onChange: function (_onChange) {
        function onChange(_x) {
          return _onChange.apply(this, arguments);
        }

        onChange.toString = function () {
          return _onChange.toString();
        };

        return onChange;
      }(function (e) {
        return onChange(e.target.value);
      }),
      width: 150,
      compact: true
    },
    periods.map(function (period) {
      return _react2.default.createElement(
        _Select.Option,
        { value: period, key: period },
        (0, _humanizePlus.capitalize)((0, _humanizePlus.pluralize)(formatter(intervals) || 1, period))
      );
    })
  );
};

DateUnitSelector.displayName = "DateUnitSelector";
exports.default = DateUnitSelector;

/***/ }),

/***/ 247:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["You can enter multiple values separated by commas"], ["You can enter multiple values separated by commas"]),
    _templateObject2 = _taggedTemplateLiteral(["Enter desired text"], ["Enter desired text"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTextareaAutosize = __webpack_require__(713);

var _reactTextareaAutosize2 = _interopRequireDefault(_reactTextareaAutosize);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextPicker = (_temp = _class = function (_Component) {
  _inherits(TextPicker, _Component);

  function TextPicker(props) {
    _classCallCheck(this, TextPicker);

    var _this = _possibleConstructorReturn(this, (TextPicker.__proto__ || Object.getPrototypeOf(TextPicker)).call(this, props));

    _this.state = {
      fieldString: props.values.join(", ")
    };
    return _this;
  }

  _createClass(TextPicker, [{
    key: "setValue",
    value: function setValue(fieldString) {
      if (fieldString != null) {
        // Only strip newlines from field string to not interfere with copy-pasting
        var newLineRegex = /\r?\n|\r/g;
        var newFieldString = fieldString.replace(newLineRegex, "");
        this.setState({ fieldString: newFieldString });

        // Construct the values array for real-time validation
        // Trim values to prevent confusing problems with leading/trailing whitespaces
        var newValues = newFieldString.split(",").map(function (v) {
          return v.trim();
        }).filter(function (v) {
          return v !== "";
        });
        this.props.onValuesChange(newValues);
      } else {
        this.props.onValuesChange([]);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          validations = _props.validations,
          multi = _props.multi,
          onCommit = _props.onCommit;

      var hasInvalidValues = _underscore2.default.some(validations, function (v) {
        return v === false;
      });

      var commitOnEnter = function commitOnEnter(e) {
        if (e.key === "Enter" && onCommit) {
          onCommit();
        }
      };

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "div",
          { className: "FilterInput px1 pt1 relative" },
          _react2.default.createElement(_reactTextareaAutosize2.default, {
            className: (0, _classnames2.default)("input block full border-purple", {
              "border-error": hasInvalidValues
            }),
            type: "text",
            value: this.state.fieldString,
            onChange: function onChange(e) {
              return _this2.setValue(e.target.value);
            },
            onKeyPress: commitOnEnter,
            placeholder: this.props.placeholder,
            autoFocus: true,
            style: { resize: "none" },
            maxRows: 8
          })
        ),
        multi ? _react2.default.createElement(
          "div",
          { className: "p1 text-small" },
          (0, _c3po.t)(_templateObject)
        ) : null
      );
    }
  }]);

  return TextPicker;
}(_react.Component), _class.propTypes = {
  values: _propTypes2.default.array.isRequired,
  onValuesChange: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  validations: _propTypes2.default.array,
  multi: _propTypes2.default.bool,
  onCommit: _propTypes2.default.func
}, _class.defaultProps = {
  validations: [],
  placeholder: (0, _c3po.t)(_templateObject2)
}, _temp);
TextPicker.displayName = "TextPicker";
exports.default = TextPicker;

/***/ }),

/***/ 248:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Empty"], ["Empty"]),
    _templateObject2 = _taggedTemplateLiteral(["Find a value"], ["Find a value"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _CheckBox = __webpack_require__(89);

var _CheckBox2 = _interopRequireDefault(_CheckBox);

var _ListSearchField = __webpack_require__(237);

var _ListSearchField2 = _interopRequireDefault(_ListSearchField);

var _formatting = __webpack_require__(8);

var _string = __webpack_require__(119);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectPicker = (_temp = _class = function (_Component) {
  _inherits(SelectPicker, _Component);

  function SelectPicker(props) {
    _classCallCheck(this, SelectPicker);

    var _this = _possibleConstructorReturn(this, (SelectPicker.__proto__ || Object.getPrototypeOf(SelectPicker)).call(this, props));

    _this.updateSearchText = function (value) {
      var regex = null;

      if (value) {
        regex = (0, _string.createMultiwordSearchRegex)(value);
      }

      _this.setState({
        searchText: value,
        searchRegex: regex
      });
    };

    _this.state = {
      searchText: "",
      searchRegex: null
    };
    return _this;
  }

  _createClass(SelectPicker, [{
    key: "selectValue",
    value: function selectValue(key, selected) {
      var values = void 0;
      if (this.props.multi) {
        values = this.props.values.slice().filter(function (v) {
          return v != null;
        });
      } else {
        values = [];
      }
      if (selected) {
        values.push(key);
      } else {
        values = values.filter(function (v) {
          return v !== key;
        });
      }
      this.props.onValuesChange(values);
    }
  }, {
    key: "nameForOption",
    value: function nameForOption(option) {
      if (option.name === "") {
        return (0, _c3po.t)(_templateObject);
      } else if (typeof option.name === "string") {
        return option.name;
      } else {
        return (0, _formatting.capitalize)(String(option.name));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          values = _props.values,
          options = _props.options,
          placeholder = _props.placeholder,
          multi = _props.multi;


      var checked = new Set(values);

      var validOptions = [];
      var regex = this.state.searchRegex;

      if (regex) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var option = _step.value;

            if (regex.test(option.key) || regex.test(option.name)) {
              validOptions.push(option);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      } else {
        validOptions = options.slice();
      }

      return _react2.default.createElement(
        "div",
        null,
        validOptions.length <= 10 && !regex ? null : _react2.default.createElement(
          "div",
          { className: "px1 pt1" },
          _react2.default.createElement(_ListSearchField2.default, {
            onChange: this.updateSearchText,
            searchText: this.state.searchText,
            placeholder: (0, _c3po.t)(_templateObject2),
            autoFocus: true
          })
        ),
        _react2.default.createElement(
          "div",
          {
            className: "px1 pt1",
            style: { maxHeight: "400px", overflowY: "scroll" }
          },
          placeholder ? _react2.default.createElement(
            "h5",
            null,
            placeholder
          ) : null,
          multi ? _react2.default.createElement(
            "ul",
            null,
            validOptions.map(function (option, index) {
              return _react2.default.createElement(
                "li",
                { key: index },
                _react2.default.createElement(
                  "label",
                  {
                    className: "flex align-center cursor-pointer p1",
                    onClick: function onClick() {
                      return _this2.selectValue(option.key, !checked.has(option.key));
                    }
                  },
                  _react2.default.createElement(_CheckBox2.default, {
                    checked: checked.has(option.key),
                    color: "purple"
                  }),
                  _react2.default.createElement(
                    "h4",
                    { className: "ml1" },
                    _this2.nameForOption(option)
                  )
                )
              );
            })
          ) : _react2.default.createElement(
            "div",
            { className: "flex flex-wrap py1" },
            validOptions.map(function (option, index) {
              return _react2.default.createElement(
                "div",
                { className: "half", style: { padding: "0.15em" } },
                _react2.default.createElement(
                  "button",
                  {
                    style: { height: "95px" },
                    className: (0, _classnames2.default)("full rounded bordered border-purple text-centered text-bold", {
                      "text-purple bg-white": values[0] !== option.key,
                      "text-white bg-purple": values[0] === option.key
                    }),
                    onClick: function onClick() {
                      return _this2.selectValue(option.key, true);
                    }
                  },
                  _this2.nameForOption(option)
                )
              );
            })
          )
        )
      );
    }
  }]);

  return SelectPicker;
}(_react.Component), _class.propTypes = {
  options: _propTypes2.default.array.isRequired,
  values: _propTypes2.default.array.isRequired,
  onValuesChange: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  multi: _propTypes2.default.bool
}, _temp);
SelectPicker.displayName = "SelectPicker";
exports.default = SelectPicker;

/***/ }),

/***/ 249:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldValuesWidget = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp;

var _templateObject = _taggedTemplateLiteral(["Search the list"], ["Search the list"]),
    _templateObject2 = _taggedTemplateLiteral(["Search by ", ""], ["Search by ", ""]),
    _templateObject3 = _taggedTemplateLiteral([" or enter an ID"], [" or enter an ID"]),
    _templateObject4 = _taggedTemplateLiteral(["Enter an ID"], ["Enter an ID"]),
    _templateObject5 = _taggedTemplateLiteral(["Enter a number"], ["Enter a number"]),
    _templateObject6 = _taggedTemplateLiteral(["Enter some text"], ["Enter some text"]),
    _templateObject7 = _taggedTemplateLiteral(["No matching ", " found."], ["No matching ", " found."]),
    _templateObject8 = _taggedTemplateLiteral(["Including every option in your filter probably won\u2019t do much\u2026"], ["Including every option in your filter probably won\u2019t do much\u2026"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _c3po = __webpack_require__(2);

var _TokenField = __webpack_require__(310);

var _TokenField2 = _interopRequireDefault(_TokenField);

var _RemappedValue = __webpack_require__(177);

var _RemappedValue2 = _interopRequireDefault(_RemappedValue);

var _LoadingSpinner = __webpack_require__(74);

var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);

var _AutoExpanding = __webpack_require__(426);

var _AutoExpanding2 = _interopRequireDefault(_AutoExpanding);

var _services = __webpack_require__(15);

var _metadata = __webpack_require__(16);

var _promise = __webpack_require__(201);

var _underscore = __webpack_require__(3);

var _formatting = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_SEARCH_RESULTS = 100;

var mapDispatchToProps = {
  addRemappings: _metadata.addRemappings,
  fetchFieldValues: _metadata.fetchFieldValues
};

var FieldValuesWidget = exports.FieldValuesWidget = (0, _AutoExpanding2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(FieldValuesWidget, _Component);

  function FieldValuesWidget(props) {
    var _this2 = this;

    _classCallCheck(this, FieldValuesWidget);

    var _this = _possibleConstructorReturn(this, (FieldValuesWidget.__proto__ || Object.getPrototypeOf(FieldValuesWidget)).call(this, props));

    _this.onInputChange = function (value) {
      if (value && _this.isSearchable()) {
        _this._search(value);
      }

      return value;
    };

    _this.search = function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(value, cancelled) {
        var _this$props, field, searchField, maxResults, fieldId, searchFieldId, results;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$props = _this.props, field = _this$props.field, searchField = _this$props.searchField, maxResults = _this$props.maxResults;

                if (!(!field || !searchField || !value)) {
                  _context.next = 3;
                  break;
                }

                return _context.abrupt("return");

              case 3:
                fieldId = (field.target || field).id;
                searchFieldId = searchField.id;
                _context.next = 7;
                return _services.MetabaseApi.field_search({
                  value: value,
                  fieldId: fieldId,
                  searchFieldId: searchFieldId,
                  limit: maxResults
                }, { cancelled: cancelled });

              case 7:
                results = _context.sent;


                if (results && field.remappedField() === searchField) {
                  // $FlowFixMe: addRemappings provided by @connect
                  _this.props.addRemappings(field.id, results);
                }
                return _context.abrupt("return", results);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }();

    _this._search = function (value) {
      var _this$state = _this.state,
          lastValue = _this$state.lastValue,
          options = _this$state.options;

      // if this search is just an extension of the previous search, and the previous search
      // wasn't truncated, then we don't need to do another search because TypeaheadListing
      // will filter the previous result client-side

      if (lastValue && value.slice(0, lastValue.length) === lastValue && options.length < _this.props.maxResults) {
        return;
      }

      _this.setState({
        loadingState: "LOADING"
      });

      if (_this._cancel) {
        _this._cancel();
      }

      _this._searchDebounced(value);
    };

    _this._searchDebounced = (0, _underscore.debounce)(function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(value) {
        var cancelDeferred, results;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this.setState({
                  loadingState: "LOADING"
                });

                cancelDeferred = (0, _promise.defer)();

                _this._cancel = function () {
                  _this._cancel = null;
                  cancelDeferred.resolve();
                };

                _context2.next = 5;
                return _this.search(value, cancelDeferred.promise);

              case 5:
                results = _context2.sent;


                _this._cancel = null;

                if (results) {
                  _this.setState({
                    loadingState: "LOADED",
                    options: results,
                    lastValue: value
                  });
                } else {
                  _this.setState({
                    loadingState: "INIT",
                    options: [],
                    lastValue: value
                  });
                }

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, _this2);
      }));

      return function (_x3) {
        return _ref2.apply(this, arguments);
      };
    }(), 500);

    _this.state = {
      options: [],
      loadingState: "INIT",
      lastValue: ""
    };
    return _this;
  }

  _createClass(FieldValuesWidget, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _props = this.props,
          field = _props.field,
          fetchFieldValues = _props.fetchFieldValues;

      if (field.has_field_values === "list") {
        fetchFieldValues(field.id);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._cancel) {
        this._cancel();
      }
    }
  }, {
    key: "hasList",
    value: function hasList() {
      var field = this.props.field;

      return field.has_field_values === "list" && field.values;
    }
  }, {
    key: "isSearchable",
    value: function isSearchable() {
      var _props2 = this.props,
          field = _props2.field,
          searchField = _props2.searchField;

      return searchField && field.has_field_values === "search";
    }

    // $FlowFixMe

  }, {
    key: "renderOptions",
    value: function renderOptions(_ref3) {
      var optionsList = _ref3.optionsList,
          isFocused = _ref3.isFocused,
          isAllSelected = _ref3.isAllSelected;
      var _props3 = this.props,
          alwaysShowOptions = _props3.alwaysShowOptions,
          field = _props3.field,
          searchField = _props3.searchField;
      var loadingState = this.state.loadingState;

      if (alwaysShowOptions || isFocused) {
        if (optionsList) {
          return optionsList;
        } else if (this.hasList()) {
          if (isAllSelected) {
            return _react2.default.createElement(EveryOptionState, null);
          }
        } else if (this.isSearchable()) {
          if (loadingState === "LOADING") {
            return _react2.default.createElement(LoadingState, null);
          } else if (loadingState === "LOADED") {
            return _react2.default.createElement(NoMatchState, { field: searchField || field });
          }
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props4 = this.props,
          value = _props4.value,
          onChange = _props4.onChange,
          field = _props4.field,
          searchField = _props4.searchField,
          multi = _props4.multi,
          autoFocus = _props4.autoFocus,
          color = _props4.color,
          formatOptions = _props4.formatOptions;
      var loadingState = this.state.loadingState;
      var placeholder = this.props.placeholder;

      if (!placeholder) {
        if (this.hasList()) {
          placeholder = (0, _c3po.t)(_templateObject);
        } else if (this.isSearchable() && searchField) {
          var searchFieldName = (0, _formatting.stripId)(searchField.display_name) || searchField.display_name;
          placeholder = (0, _c3po.t)(_templateObject2, searchFieldName);
          if (field.isID() && field !== searchField) {
            placeholder += (0, _c3po.t)(_templateObject3);
          }
        } else {
          if (field.isID()) {
            placeholder = (0, _c3po.t)(_templateObject4);
          } else if (field.isNumeric()) {
            placeholder = (0, _c3po.t)(_templateObject5);
          } else {
            placeholder = (0, _c3po.t)(_templateObject6);
          }
        }
      }

      var options = [];
      if (this.hasList()) {
        options = field.values;
      } else if (this.isSearchable() && loadingState === "LOADED") {
        options = this.state.options;
      } else {
        options = [];
      }

      return _react2.default.createElement(
        "div",
        {
          style: {
            width: this.props.expand ? this.props.maxWidth : null,
            minWidth: this.props.minWidth,
            maxWidth: this.props.maxWidth
          }
        },
        _react2.default.createElement(_TokenField2.default, {
          value: value.filter(function (v) {
            return v != null;
          }),
          onChange: onChange,
          placeholder: placeholder,
          multi: multi,
          autoFocus: autoFocus,
          color: color,
          style: _extends({
            borderWidth: 2
          }, this.props.style),
          updateOnInputChange: true,
          options: options,
          valueKey: 0,
          valueRenderer: function valueRenderer(value) {
            return _react2.default.createElement(_RemappedValue2.default, _extends({
              value: value,
              column: field
            }, formatOptions, {
              round: false,
              compact: false,
              autoLoad: true
            }));
          },
          optionRenderer: function optionRenderer(option) {
            return _react2.default.createElement(_RemappedValue2.default, _extends({
              value: option[0],
              column: field,
              round: false,
              autoLoad: false
            }, formatOptions));
          },
          layoutRenderer: function layoutRenderer(props) {
            return _react2.default.createElement(
              "div",
              null,
              props.valuesList,
              _this3.renderOptions(props)
            );
          },
          filterOption: function filterOption(option, filterString) {
            return option[0] != null && String(option[0]).toLowerCase().indexOf(filterString.toLowerCase()) === 0 || option[1] != null && String(option[1]).toLowerCase().indexOf(filterString.toLowerCase()) === 0;
          },
          onInputChange: this.onInputChange,
          parseFreeformValue: function parseFreeformValue(v) {
            // trim whitespace
            v = String(v || "").trim();
            // empty string is not valid
            if (!v) {
              return null;
            }
            // if the field is numeric we need to parse the string into an integer
            if (field.isNumeric()) {
              if (/^-?\d+(\.\d+)?$/.test(v)) {
                return parseFloat(v);
              } else {
                return null;
              }
            }
            return v;
          }
        })
      );
    }
  }]);

  return FieldValuesWidget;
}(_react.Component), _class2.defaultProps = {
  color: "purple",
  maxResults: MAX_SEARCH_RESULTS,
  alwaysShowOptions: true,
  style: {},
  formatOptions: {},
  maxWidth: 500
}, _temp)) || _class;

FieldValuesWidget.displayName = "FieldValuesWidget";


var LoadingState = function LoadingState() {
  return _react2.default.createElement(
    "div",
    {
      className: "flex layout-centered align-center border-bottom",
      style: { minHeight: 82 }
    },
    _react2.default.createElement(_LoadingSpinner2.default, { size: 32 })
  );
};

LoadingState.displayName = "LoadingState";
var NoMatchState = function NoMatchState(_ref4) {
  var field = _ref4.field;
  return _react2.default.createElement(OptionsMessage, {
    message: (0, _c3po.jt)(_templateObject7, _react2.default.createElement(
      "strong",
      null,
      "\xA0",
      field.display_name,
      "\xA0"
    ))
  });
};

NoMatchState.displayName = "NoMatchState";
var EveryOptionState = function EveryOptionState() {
  return _react2.default.createElement(OptionsMessage, {
    message: (0, _c3po.t)(_templateObject8)
  });
};

EveryOptionState.displayName = "EveryOptionState";
var OptionsMessage = function OptionsMessage(_ref5) {
  var message = _ref5.message;
  return _react2.default.createElement(
    "div",
    { className: "flex layout-centered p4 border-bottom" },
    message
  );
};

OptionsMessage.displayName = "OptionsMessage";
exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(FieldValuesWidget);

/***/ }),

/***/ 25:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["zero"], ["zero"]),
    _templateObject2 = _taggedTemplateLiteral(["one"], ["one"]),
    _templateObject3 = _taggedTemplateLiteral(["two"], ["two"]),
    _templateObject4 = _taggedTemplateLiteral(["three"], ["three"]),
    _templateObject5 = _taggedTemplateLiteral(["four"], ["four"]),
    _templateObject6 = _taggedTemplateLiteral(["five"], ["five"]),
    _templateObject7 = _taggedTemplateLiteral(["six"], ["six"]),
    _templateObject8 = _taggedTemplateLiteral(["seven"], ["seven"]),
    _templateObject9 = _taggedTemplateLiteral(["eight"], ["eight"]),
    _templateObject10 = _taggedTemplateLiteral(["nine"], ["nine"]);

var _passwordGenerator = __webpack_require__(660);

var _passwordGenerator2 = _interopRequireDefault(_passwordGenerator);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function s4() {
  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
}

// provides functions for building urls to things we care about
var MetabaseUtils = {
  generatePassword: function generatePassword(length, complexity) {
    var len = length || 14;

    if (!complexity) {
      return (0, _passwordGenerator2.default)(len, false);
    } else {
      var password = "";
      var tries = 0;
      while (!isStrongEnough(password) && tries < 100) {
        password = (0, _passwordGenerator2.default)(len, false, /[\w\d\?\-]/);
        tries++;
      }
      return password;
    }

    function isStrongEnough(password) {
      var uc = password.match(/([A-Z])/g);
      var lc = password.match(/([a-z])/g);
      var di = password.match(/([\d])/g);
      var sc = password.match(/([!@#\$%\^\&*\)\(+=._-{}])/g);

      return uc && uc.length >= (complexity.upper || 0) && lc && lc.length >= (complexity.lower || 0) && di && di.length >= (complexity.digit || 0) && sc && sc.length >= (complexity.special || 0);
    }
  },

  isEmpty: function isEmpty(str) {
    if (str != null) str = String(str); // make sure 'str' is actually a string
    return str == null || 0 === str.length || str.match(/^\s+$/) != null;
  },

  // pretty limited.  just does 0-9 for right now.
  numberToWord: function numberToWord(num) {
    var names = [(0, _c3po.t)(_templateObject), (0, _c3po.t)(_templateObject2), (0, _c3po.t)(_templateObject3), (0, _c3po.t)(_templateObject4), (0, _c3po.t)(_templateObject5), (0, _c3po.t)(_templateObject6), (0, _c3po.t)(_templateObject7), (0, _c3po.t)(_templateObject8), (0, _c3po.t)(_templateObject9), (0, _c3po.t)(_templateObject10)];

    if (num >= 0 && num <= 9) {
      return names[num];
    } else {
      return "" + num;
    }
  },

  uuid: function uuid() {
    return s4() + s4() + "-" + s4() + "-" + s4() + "-" + s4() + "-" + s4() + s4() + s4();
  },

  isUUID: function isUUID(uuid) {
    return typeof uuid === "string" && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/.test(uuid);
  },
  isBase64: function isBase64(string) {
    return typeof string === "string" && /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
  },
  isJWT: function isJWT(string) {
    return typeof string === "string" && /^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$/.test(string);
  },


  validEmail: function validEmail(email) {
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  },

  equals: function equals(a, b) {
    // FIXME: ugghhhhhhhhh
    return JSON.stringify(a) === JSON.stringify(b);
  },

  copy: function copy(a) {
    // FIXME: ugghhhhhhhhh
    return JSON.parse(JSON.stringify(a));
  },

  // this should correctly compare all version formats Metabase uses, e.x.
  // 0.0.9, 0.0.10-snapshot, 0.0.10-alpha1, 0.0.10-rc1, 0.0.10-rc2, 0.0.10-rc10
  // 0.0.10, 0.1.0, 0.2.0, 0.10.0, 1.1.0
  compareVersions: function compareVersions(aVersion, bVersion) {
    var SPECIAL_COMPONENTS = {
      snapshot: -4,
      alpha: -3,
      beta: -2,
      rc: -1
    };

    var getComponents = function getComponents(x) {
      return (
        // v1.2.3-BETA1
        x.toLowerCase()
        // v1.2.3-beta1
        .replace(/^v/, "")
        // 1.2.3-beta1
        .split(/[.-]*([0-9]+)[.-]*/).filter(function (c) {
          return c;
        })
        // ["1", "2", "3", "beta", "1"]
        .map(function (c) {
          return SPECIAL_COMPONENTS[c] || parseInt(c, 10);
        })
      );
    };
    // [1, 2, 3, -2, 1]

    var aComponents = getComponents(aVersion);
    var bComponents = getComponents(bVersion);
    for (var i = 0; i < Math.max(aComponents.length, bComponents.length); i++) {
      var a = aComponents[i];
      var b = bComponents[i];
      if (b == undefined || a < b) {
        return -1;
      } else if (a == undefined || b < a) {
        return 1;
      }
    }
    return 0;
  }
};

exports.default = MetabaseUtils;

/***/ }),

/***/ 250:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _RemappedValue = __webpack_require__(177);

var _RemappedValue2 = _interopRequireDefault(_RemappedValue);

var _formatting = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Value = function Value(_ref) {
  var value = _ref.value,
      options = _objectWithoutProperties(_ref, ["value"]);

  if (options.hide) {
    return null;
  }
  if (options.remap) {
    return _react2.default.createElement(_RemappedValue2.default, _extends({ value: value }, options));
  }
  var formatted = (0, _formatting.formatValue)(value, _extends({}, options, { jsx: true }));
  if (_react2.default.isValidElement(formatted)) {
    return formatted;
  } else {
    return _react2.default.createElement(
      "span",
      null,
      formatted
    );
  }
};

exports.default = Value;

/***/ }),

/***/ 251:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["of"], ["of"]),
    _templateObject2 = _taggedTemplateLiteral(["Choose an aggregation"], ["Choose an aggregation"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _AggregationPopover = __webpack_require__(236);

var _AggregationPopover2 = _interopRequireDefault(_AggregationPopover);

var _FieldName = __webpack_require__(196);

var _FieldName2 = _interopRequireDefault(_FieldName);

var _Clearable = __webpack_require__(242);

var _Clearable2 = _interopRequireDefault(_Clearable);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _schema_metadata = __webpack_require__(10);

var _formatter = __webpack_require__(117);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AggregationWidget = (_temp = _class = function (_Component) {
  _inherits(AggregationWidget, _Component);

  function AggregationWidget(props, context) {
    _classCallCheck(this, AggregationWidget);

    var _this = _possibleConstructorReturn(this, (AggregationWidget.__proto__ || Object.getPrototypeOf(AggregationWidget)).call(this, props, context));

    _this.state = {
      isOpen: false
    };

    _underscore2.default.bindAll(_this, "open", "close", "setAggregation");
    return _this;
  }

  _createClass(AggregationWidget, [{
    key: "setAggregation",
    value: function setAggregation(aggregation) {
      this.props.updateAggregation(aggregation);
    }
  }, {
    key: "open",
    value: function open() {
      this.setState({ isOpen: true });
    }
  }, {
    key: "close",
    value: function close() {
      this.setState({ isOpen: false });
    }
  }, {
    key: "renderStandardAggregation",
    value: function renderStandardAggregation() {
      var _props = this.props,
          aggregation = _props.aggregation,
          tableMetadata = _props.tableMetadata;

      var fieldId = _query.AggregationClause.getField(aggregation);

      var selectedAggregation = (0, _schema_metadata.getAggregator)(_query.AggregationClause.getOperator(aggregation));
      // if this table doesn't support the selected aggregation, prompt the user to select a different one
      if (selectedAggregation && _underscore2.default.findWhere(tableMetadata.aggregation_options, {
        short: selectedAggregation.short
      })) {
        return _react2.default.createElement(
          "span",
          { className: "flex align-center" },
          selectedAggregation.name.replace(" of ...", ""),
          fieldId && _react2.default.createElement(
            "span",
            {
              style: { paddingRight: "4px", paddingLeft: "4px" },
              className: "text-bold"
            },
            (0, _c3po.t)(_templateObject)
          ),
          fieldId && _react2.default.createElement(_FieldName2.default, {
            className: "View-section-aggregation-target SelectionModule py1",
            tableMetadata: tableMetadata,
            field: fieldId,
            fieldOptions: _query2.default.getFieldOptions(tableMetadata.fields, true),
            customFieldOptions: this.props.customFields
          })
        );
      }
    }
  }, {
    key: "renderMetricAggregation",
    value: function renderMetricAggregation() {
      var _props2 = this.props,
          aggregation = _props2.aggregation,
          tableMetadata = _props2.tableMetadata;

      var metricId = _query.AggregationClause.getMetric(aggregation);

      var selectedMetric = _underscore2.default.findWhere(tableMetadata.metrics, { id: metricId });
      if (selectedMetric) {
        return selectedMetric.name.replace(" of ...", "");
      }
    }
  }, {
    key: "renderCustomAggregation",
    value: function renderCustomAggregation() {
      var _props3 = this.props,
          aggregation = _props3.aggregation,
          tableMetadata = _props3.tableMetadata,
          customFields = _props3.customFields;

      return (0, _formatter.format)(aggregation, { tableMetadata: tableMetadata, customFields: customFields });
    }
  }, {
    key: "renderPopover",
    value: function renderPopover() {
      var _props4 = this.props,
          query = _props4.query,
          aggregation = _props4.aggregation,
          tableMetadata = _props4.tableMetadata;


      if (this.state.isOpen) {
        return _react2.default.createElement(
          _Popover2.default,
          {
            id: "AggregationPopover",
            ref: "aggregationPopover",
            className: "FilterPopover",
            isInitiallyOpen: true,
            onClose: this.close,
            dismissOnEscape: false // disable for expression editor
          },
          _react2.default.createElement(_AggregationPopover2.default, {
            query: query,
            aggregation: aggregation,
            availableAggregations: tableMetadata.aggregation_options,
            tableMetadata: tableMetadata,
            customFields: this.props.customFields,
            onCommitAggregation: this.setAggregation,
            onClose: this.close
          })
        );
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props5 = this.props,
          aggregation = _props5.aggregation,
          addButton = _props5.addButton,
          name = _props5.name;

      if (aggregation && aggregation.length > 0) {
        var aggregationName = _query.NamedClause.isNamed(aggregation) ? _query.NamedClause.getName(aggregation) : _query.AggregationClause.isCustom(aggregation) ? this.renderCustomAggregation() : _query.AggregationClause.isMetric(aggregation) ? this.renderMetricAggregation() : this.renderStandardAggregation();

        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)("Query-section Query-section-aggregation", {
              selected: this.state.isOpen
            })
          },
          _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              _Clearable2.default,
              { onClear: this.props.removeAggregation },
              _react2.default.createElement(
                "div",
                {
                  id: "Query-section-aggregation",
                  onClick: this.open,
                  className: "Query-section Query-section-aggregation cursor-pointer"
                },
                _react2.default.createElement(
                  "span",
                  { className: "View-section-aggregation QueryOption py1 mx1" },
                  aggregationName == null ? (0, _c3po.t)(_templateObject2) : name ? name : aggregationName
                )
              )
            ),
            this.renderPopover()
          )
        );
      } else if (addButton) {
        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)("Query-section Query-section-aggregation"),
            onClick: this.open
          },
          addButton,
          this.renderPopover()
        );
      } else {
        return null;
      }
    }
  }]);

  return AggregationWidget;
}(_react.Component), _class.propTypes = {
  aggregation: _propTypes2.default.array,
  tableMetadata: _propTypes2.default.object.isRequired,
  customFields: _propTypes2.default.object,
  updateAggregation: _propTypes2.default.func.isRequired,
  removeAggregation: _propTypes2.default.func
}, _temp);
AggregationWidget.displayName = "AggregationWidget";
exports.default = AggregationWidget;

/***/ }),

/***/ 252:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TooltipPopover = __webpack_require__(228);

var _TooltipPopover2 = _interopRequireDefault(_TooltipPopover);

var _Value = __webpack_require__(250);

var _Value2 = _interopRequireDefault(_Value);

var _utils = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChartTooltip = (_temp = _class = function (_Component) {
  _inherits(ChartTooltip, _Component);

  function ChartTooltip() {
    _classCallCheck(this, ChartTooltip);

    return _possibleConstructorReturn(this, (ChartTooltip.__proto__ || Object.getPrototypeOf(ChartTooltip)).apply(this, arguments));
  }

  _createClass(ChartTooltip, [{
    key: "_getRows",
    value: function _getRows() {
      var _props = this.props,
          series = _props.series,
          hovered = _props.hovered;

      if (!hovered) {
        return [];
      }
      // Array of key, value, col: { data: [{ key, value, col }], element, event }
      if (Array.isArray(hovered.data)) {
        return hovered.data;
      } else if (hovered.value !== undefined || hovered.dimensions) {
        // ClickObject: { value, column, dimensions: [{ value, column }], element, event }
        var dimensions = [];
        if (hovered.value !== undefined) {
          dimensions.push({ value: hovered.value, column: hovered.column });
        }
        if (hovered.dimensions) {
          dimensions.push.apply(dimensions, _toConsumableArray(hovered.dimensions));
        }
        return dimensions.map(function (_ref) {
          var value = _ref.value,
              column = _ref.column;
          return {
            key: (0, _utils.getFriendlyName)(column),
            value: value,
            col: column
          };
        });
      } else if (hovered.data) {
        // DEPRECATED: { key, value }
        console.warn("hovered should be a ClickObject or hovered.data should be an array of { key, value, col }", hovered.data);
        var s = series[hovered.index] || series[0];
        return [{
          key: (0, _utils.getFriendlyName)(s.data.cols[0]),
          value: hovered.data.key,
          col: s.data.cols[0]
        }, {
          key: (0, _utils.getFriendlyName)(s.data.cols[1]),
          value: hovered.data.value,
          col: s.data.cols[1]
        }];
      }
      return [];
    }
  }, {
    key: "render",
    value: function render() {
      var hovered = this.props.hovered;

      var rows = this._getRows();
      var hasEventOrElement = hovered && (hovered.element && document.contains(hovered.element) || hovered.event);
      var isOpen = rows.length > 0 && !!hasEventOrElement;
      return _react2.default.createElement(
        _TooltipPopover2.default,
        {
          target: hovered && hovered.element,
          targetEvent: hovered && hovered.event,
          verticalAttachments: ["bottom", "top"],
          isOpen: isOpen
        },
        _react2.default.createElement(
          "table",
          { className: "py1 px2" },
          _react2.default.createElement(
            "tbody",
            null,
            rows.map(function (_ref2, index) {
              var key = _ref2.key,
                  value = _ref2.value,
                  col = _ref2.col;
              return _react2.default.createElement(TooltipRow, { key: index, name: key, value: value, column: col });
            })
          )
        )
      );
    }
  }]);

  return ChartTooltip;
}(_react.Component), _class.propTypes = {
  series: _propTypes2.default.array.isRequired,
  hovered: _propTypes2.default.object
}, _temp);
ChartTooltip.displayName = "ChartTooltip";
exports.default = ChartTooltip;


var TooltipRow = function TooltipRow(_ref3) {
  var name = _ref3.name,
      value = _ref3.value,
      column = _ref3.column;
  return _react2.default.createElement(
    "tr",
    null,
    _react2.default.createElement(
      "td",
      { className: "text-light text-right" },
      name,
      ":"
    ),
    _react2.default.createElement(
      "td",
      { className: "pl1 text-bold text-left" },
      _react2.default.isValidElement(value) ? value : _react2.default.createElement(_Value2.default, { type: "tooltip", value: value, column: column, majorWidth: 0 })
    )
  );
};
TooltipRow.displayName = "TooltipRow";

/***/ }),

/***/ 255:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTableCellClickedObject = getTableCellClickedObject;
exports.isColumnRightAligned = isColumnRightAligned;

var _schema_metadata = __webpack_require__(10);

function getTableCellClickedObject(data, rowIndex, columnIndex, isPivoted) {
  var rows = data.rows,
      cols = data.cols;


  var column = cols[columnIndex];
  var row = rows[rowIndex];
  var value = row[columnIndex];

  if (isPivoted) {
    // if it's a pivot table, the first column is
    if (columnIndex === 0) {
      // $FlowFixMe: _dimension
      return row._dimension;
    } else {
      return {
        value: value,
        column: column,
        // $FlowFixMe: _dimension
        dimensions: [row._dimension, column._dimension]
      };
    }
  } else if (column.source === "aggregation") {
    return {
      value: value,
      column: column,
      dimensions: cols.map(function (column, index) {
        return { value: row[index], column: column };
      }).filter(function (dimension) {
        return dimension.column.source === "breakout";
      })
    };
  } else {
    return { value: value, column: column };
  }
}

/*
 * Returns whether the column should be right-aligned in a table.
 * Includes numbers and lat/lon coordinates, but not zip codes, IDs, etc.
 */


function isColumnRightAligned(column) {
  return (0, _schema_metadata.isNumber)(column) || (0, _schema_metadata.isCoordinate)(column);
}

/***/ }),

/***/ 257:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp; /* eslint "react/prop-types": "warn" */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _utils = __webpack_require__(21);

var _dc = __webpack_require__(123);

var _dc2 = _interopRequireDefault(_dc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CardRenderer = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(CardRenderer, _Component);

  function CardRenderer() {
    _classCallCheck(this, CardRenderer);

    return _possibleConstructorReturn(this, (CardRenderer.__proto__ || Object.getPrototypeOf(CardRenderer)).apply(this, arguments));
  }

  _createClass(CardRenderer, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      // a chart only needs re-rendering when the result itself changes OR the chart type is different
      var sameSize = this.props.width === nextProps.width && this.props.height === nextProps.height;
      var sameSeries = (0, _utils.isSameSeries)(this.props.series, nextProps.series);
      return !(sameSize && sameSeries);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.renderChart();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.renderChart();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._deregisterChart();
    }
  }, {
    key: "_deregisterChart",
    value: function _deregisterChart() {
      if (this._chart) {
        // Prevents memory leak
        _dc2.default.chartRegistry.deregister(this._chart);
        delete this._chart;
      }
    }
  }, {
    key: "renderChart",
    value: function renderChart() {
      if (this.props.width == null || this.props.height == null) {
        return;
      }

      var parent = _reactDom2.default.findDOMNode(this);

      // deregister previous chart:
      this._deregisterChart();

      // reset the DOM:
      var element = parent.firstChild;
      if (element) {
        parent.removeChild(element);
      }

      // create a new container element
      element = document.createElement("div");
      parent.appendChild(element);

      try {
        this._chart = this.props.renderer(element, this.props);
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement("div", { className: this.props.className });
    }
  }]);

  return CardRenderer;
}(_react.Component), _class2.propTypes = {
  series: _propTypes2.default.array.isRequired,
  width: _propTypes2.default.number,
  height: _propTypes2.default.number,
  renderer: _propTypes2.default.func.isRequired,
  onRenderError: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string
}, _temp)) || _class;

CardRenderer.displayName = "CardRenderer";
exports.default = CardRenderer;

/***/ }),

/***/ 258:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TitleLegendHeader = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _LegendHeader = __webpack_require__(142);

var _LegendHeader2 = _interopRequireDefault(_LegendHeader);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TitleLegendHeader = exports.TitleLegendHeader = function TitleLegendHeader(_ref) {
  var series = _ref.series,
      settings = _ref.settings,
      onChangeCardAndRun = _ref.onChangeCardAndRun,
      actionButtons = _ref.actionButtons;

  // $FlowFixMe
  var originalSeries = series._raw || series;
  var cardIds = _underscore2.default.uniq(originalSeries.map(function (s) {
    return s.card.id;
  }));
  var isComposedOfMultipleQuestions = cardIds.length > 1;

  if (settings["card.title"]) {
    var titleHeaderSeries = [{
      card: _extends({
        name: settings["card.title"]
      }, isComposedOfMultipleQuestions ? {} : {
        id: cardIds[0],
        dataset_query: originalSeries[0].card.dataset_query
      })
    }];

    return _react2.default.createElement(_LegendHeader2.default, {
      className: "flex-no-shrink",
      series: titleHeaderSeries,
      description: settings["card.description"],
      actionButtons: actionButtons
      // If a dashboard card is composed of multiple questions, its custom card title
      // shouldn't act as a link as it's ambiguous that which question it should open
      , onChangeCardAndRun: isComposedOfMultipleQuestions ? null : onChangeCardAndRun
    });
  } else {
    // If the title isn't provided in settings, render nothing
    return null;
  }
};

/***/ }),

/***/ 259:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Select = __webpack_require__(33);

var _Select2 = _interopRequireDefault(_Select);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChartSettingSelect = function ChartSettingSelect(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange,
      _ref$options = _ref.options,
      options = _ref$options === undefined ? [] : _ref$options,
      isInitiallyOpen = _ref.isInitiallyOpen,
      className = _ref.className,
      placeholder = _ref.placeholder,
      placeholderNoOptions = _ref.placeholderNoOptions;
  return _react2.default.createElement(_Select2.default, {
    className: (0, _classnames2.default)(className, "block flex-full", {
      disabled: options.length === 0 || options.length === 1 && options[0].value === value
    }),
    value: _underscore2.default.findWhere(options, { value: value }),
    options: options,
    optionNameFn: function optionNameFn(o) {
      return o.name;
    },
    optionValueFn: function optionValueFn(o) {
      return o.value;
    },
    onChange: onChange,
    placeholder: options.length === 0 ? placeholderNoOptions : placeholder,
    isInitiallyOpen: isInitiallyOpen
  });
};

ChartSettingSelect.displayName = "ChartSettingSelect";
exports.default = ChartSettingSelect;

/***/ }),

/***/ 260:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Select a field"], ["Select a field"]),
    _templateObject2 = _taggedTemplateLiteral(["No valid fields"], ["No valid fields"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _ChartSettingSelect = __webpack_require__(259);

var _ChartSettingSelect2 = _interopRequireDefault(_ChartSettingSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var ChartSettingFieldPicker = function ChartSettingFieldPicker(_ref) {
  var value = _ref.value,
      options = _ref.options,
      onChange = _ref.onChange,
      onRemove = _ref.onRemove;
  return _react2.default.createElement(
    "div",
    { className: "flex align-center" },
    _react2.default.createElement(_ChartSettingSelect2.default, {
      value: value,
      options: options,
      onChange: onChange,
      placeholder: (0, _c3po.t)(_templateObject),
      placeholderNoOptions: (0, _c3po.t)(_templateObject2),
      isInitiallyOpen: value === undefined
    }),
    _react2.default.createElement(_Icon2.default, {
      name: "close",
      className: (0, _classnames2.default)("ml1 text-grey-4 text-brand-hover cursor-pointer", {
        "disabled hidden": !onRemove
      }),
      width: 12,
      height: 12,
      onClick: onRemove
    })
  );
};

ChartSettingFieldPicker.displayName = "ChartSettingFieldPicker";
exports.default = ChartSettingFieldPicker;

/***/ }),

/***/ 261:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ColorPicker = __webpack_require__(340);

var _ColorPicker2 = _interopRequireDefault(_ColorPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChartSettingColorPicker = function (_Component) {
  _inherits(ChartSettingColorPicker, _Component);

  function ChartSettingColorPicker() {
    _classCallCheck(this, ChartSettingColorPicker);

    return _possibleConstructorReturn(this, (ChartSettingColorPicker.__proto__ || Object.getPrototypeOf(ChartSettingColorPicker)).apply(this, arguments));
  }

  _createClass(ChartSettingColorPicker, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "flex align-center mb1" },
        _react2.default.createElement(_ColorPicker2.default, _extends({}, this.props, { triggerSize: 12 })),
        this.props.title && _react2.default.createElement(
          "h4",
          { className: "ml1" },
          this.props.title
        )
      );
    }
  }]);

  return ChartSettingColorPicker;
}(_react.Component);

ChartSettingColorPicker.displayName = "ChartSettingColorPicker";
exports.default = ChartSettingColorPicker;

/***/ }),

/***/ 262:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /// functions for "applying" axes to charts, whatever that means.

exports.adjustYAxisTicksIfNeeded = adjustYAxisTicksIfNeeded;
exports.applyChartTimeseriesXAxis = applyChartTimeseriesXAxis;
exports.applyChartQuantitativeXAxis = applyChartQuantitativeXAxis;
exports.applyChartOrdinalXAxis = applyChartOrdinalXAxis;
exports.applyChartYAxis = applyChartYAxis;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _d = __webpack_require__(26);

var _d2 = _interopRequireDefault(_d);

var _dc = __webpack_require__(123);

var _dc2 = _interopRequireDefault(_dc);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _dataset = __webpack_require__(84);

var _formatting = __webpack_require__(8);

var _time = __webpack_require__(73);

var _timeseries = __webpack_require__(145);

var _utils = __webpack_require__(21);

var _renderer_utils = __webpack_require__(110);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// label offset (doesn't increase padding)
var X_LABEL_PADDING = 10;
var Y_LABEL_PADDING = 22;

/// d3.js is dumb and sometimes numTicks is a number like 10 and other times it is an Array like [10]
/// if it's an array then convert to a num. Use this function so you're guaranteed to get a number;
function getNumTicks(axis) {
  var ticks = axis.ticks();
  return Array.isArray(ticks) ? ticks[0] : ticks;
}

/// adjust the number of ticks to display on the y Axis based on its height in pixels. Since y axis ticks
/// are all the same height there's no need to do fancy measurement like we do below for the x axis.
function adjustYAxisTicksIfNeeded(axis, axisHeightPixels) {
  var MIN_PIXELS_PER_TICK = 32;

  var numTicks = getNumTicks(axis);

  if (axisHeightPixels / numTicks < MIN_PIXELS_PER_TICK) {
    axis.ticks(Math.floor(axisHeightPixels / MIN_PIXELS_PER_TICK));
  }
}

/// Calculate the average length of values as strings.
///
///   averageStringLengthOfValues(["a", "toucan", "is", "wow"]); //-> 4
///
/// This is done so we can estimate how many ticks to show on the x axis, based on the average width of the tick
/// labels. To avoid wasting everyone's time measuring too many strings we only measure the first 100 which seems to
/// work well enough.
function averageStringLengthOfValues(values) {
  var MAX_VALUES_TO_MEASURE = 100;
  values = values.slice(0, MAX_VALUES_TO_MEASURE);

  var totalLength = 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var value = _step.value;
      totalLength += String(value).length;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return Math.round(totalLength / values.length);
}

/// adjust the number of ticks displayed on the x axis based on the average width of each xValue. We measure the
/// xValues to determine an average length and then figure out how many will be able to fit based on the width of the
/// chart.
function adjustXAxisTicksIfNeeded(axis, chartWidthPixels, xValues) {
  // The const below is the number of pixels we should devote to each character for x-axis ticks. It can be thought
  // of as an average pixel width of a single character; this number is an approximation; adjust it to taste.
  // Higher values will reduce the number of ticks show on the x axis, increasing space between them; decreasing it
  // will increase tick density.
  var APPROXIMATE_AVERAGE_CHAR_WIDTH_PIXELS = 8;

  // calculate the average length of each tick, then convert that to pixels
  var tickAverageStringLength = averageStringLengthOfValues(xValues);
  var tickAverageWidthPixels = tickAverageStringLength * APPROXIMATE_AVERAGE_CHAR_WIDTH_PIXELS;

  // now figure out the approximate number of ticks we'll be able to show based on the width of the chart. Round
  // down so we error on the side of more space rather than less.
  var maxTicks = Math.floor(chartWidthPixels / tickAverageWidthPixels);

  // finally, if the chart is currently showing more ticks than we think it can show, adjust it down
  if (getNumTicks(axis) > maxTicks) axis.ticks(maxTicks);
}

function applyChartTimeseriesXAxis(chart, series, _ref) {
  var xValues = _ref.xValues,
      xDomain = _ref.xDomain,
      xInterval = _ref.xInterval;

  // find the first nonempty single series
  var firstSeries = _underscore2.default.find(series, function (s) {
    return !(0, _dataset.datasetContainsNoResults)(s.data);
  });

  // setup an x-axis where the dimension is a timeseries
  var dimensionColumn = firstSeries.data.cols[0];

  // get the data's timezone offset from the first row
  var dataOffset = (0, _time.parseTimestamp)(firstSeries.data.rows[0][0]).utcOffset() / 60;

  // compute the data interval
  var dataInterval = xInterval;
  var tickInterval = dataInterval;

  if (chart.settings["graph.x_axis.labels_enabled"]) {
    chart.xAxisLabel(chart.settings["graph.x_axis.title_text"] || (0, _utils.getFriendlyName)(dimensionColumn), X_LABEL_PADDING);
  }
  if (chart.settings["graph.x_axis.axis_enabled"]) {
    chart.renderVerticalGridLines(chart.settings["graph.x_axis.gridLine_enabled"]);

    if (dimensionColumn.unit == null) {
      dimensionColumn = _extends({}, dimensionColumn, { unit: dataInterval.interval });
    }

    // special handling for weeks
    // TODO: are there any other cases where we should do this?
    if (dataInterval.interval === "week") {
      // if tick interval is compressed then show months instead of weeks because they're nicer formatted
      var newTickInterval = (0, _timeseries.computeTimeseriesTicksInterval)(xDomain, tickInterval, chart.width());
      if (newTickInterval.interval !== tickInterval.interval || newTickInterval.count !== tickInterval.count) {
        dimensionColumn = _extends({}, dimensionColumn, { unit: "month" }), tickInterval = { interval: "month", count: 1 };
      }
    }

    chart.xAxis().tickFormat(function (timestamp) {
      // timestamp is a plain Date object which discards the timezone,
      // so add it back in so it's formatted correctly
      var timestampFixed = (0, _moment2.default)(timestamp).utcOffset(dataOffset).format();
      return (0, _formatting.formatValue)(timestampFixed, {
        column: dimensionColumn,
        type: "axis",
        compact: chart.settings["graph.x_axis.axis_enabled"] === "compact"
      });
    });

    // Compute a sane interval to display based on the data granularity, domain, and chart width
    tickInterval = (0, _timeseries.computeTimeseriesTicksInterval)(xDomain, tickInterval, chart.width());
    chart.xAxis().ticks(tickInterval.rangeFn, tickInterval.count);
  } else {
    chart.xAxis().ticks(0);
  }

  // pad the domain slightly to prevent clipping
  xDomain[0] = (0, _moment2.default)(xDomain[0]).subtract(dataInterval.count * 0.75, dataInterval.interval);
  xDomain[1] = (0, _moment2.default)(xDomain[1]).add(dataInterval.count * 0.75, dataInterval.interval);

  // set the x scale
  chart.x(_d2.default.time.scale.utc().domain(xDomain)); //.nice(d3.time[dataInterval.interval]));

  // set the x units (used to compute bar size)
  chart.xUnits(function (start, stop) {
    return Math.ceil(1 + (0, _moment2.default)(stop).diff(start, dataInterval.interval) / dataInterval.count);
  });
}

function applyChartQuantitativeXAxis(chart, series, _ref2) {
  var xValues = _ref2.xValues,
      xDomain = _ref2.xDomain,
      xInterval = _ref2.xInterval;

  // find the first nonempty single series
  var firstSeries = _underscore2.default.find(series, function (s) {
    return !(0, _dataset.datasetContainsNoResults)(s.data);
  });
  var dimensionColumn = firstSeries.data.cols[0];

  if (chart.settings["graph.x_axis.labels_enabled"]) {
    chart.xAxisLabel(chart.settings["graph.x_axis.title_text"] || (0, _utils.getFriendlyName)(dimensionColumn), X_LABEL_PADDING);
  }
  if (chart.settings["graph.x_axis.axis_enabled"]) {
    chart.renderVerticalGridLines(chart.settings["graph.x_axis.gridLine_enabled"]);
    adjustXAxisTicksIfNeeded(chart.xAxis(), chart.width(), xValues);

    chart.xAxis().tickFormat(function (d) {
      return (0, _formatting.formatValue)(d, {
        column: dimensionColumn,
        type: "axis",
        compact: chart.settings["graph.x_axis.axis_enabled"] === "compact"
      });
    });
  } else {
    chart.xAxis().ticks(0);
    chart.xAxis().tickFormat("");
  }

  var scale = void 0;
  if (chart.settings["graph.x_axis.scale"] === "pow") {
    scale = _d2.default.scale.pow().exponent(0.5);
  } else if (chart.settings["graph.x_axis.scale"] === "log") {
    scale = _d2.default.scale.log().base(Math.E);
    if (!(xDomain[0] < 0 && xDomain[1] < 0 || xDomain[0] > 0 && xDomain[1] > 0)) {
      throw "X-axis must not cross 0 when using log scale.";
    }
  } else {
    scale = _d2.default.scale.linear();
  }

  // pad the domain slightly to prevent clipping
  xDomain = [xDomain[0] - xInterval * 0.75, xDomain[1] + xInterval * 0.75];

  chart.x(scale.domain(xDomain)).xUnits(_dc2.default.units.fp.precision(xInterval));
}

function applyChartOrdinalXAxis(chart, series, _ref3) {
  var xValues = _ref3.xValues;

  // find the first nonempty single series
  var firstSeries = _underscore2.default.find(series, function (s) {
    return !(0, _dataset.datasetContainsNoResults)(s.data);
  });

  var dimensionColumn = firstSeries.data.cols[0];

  if (chart.settings["graph.x_axis.labels_enabled"]) {
    chart.xAxisLabel(chart.settings["graph.x_axis.title_text"] || (0, _utils.getFriendlyName)(dimensionColumn), X_LABEL_PADDING);
  }
  if (chart.settings["graph.x_axis.axis_enabled"]) {
    chart.renderVerticalGridLines(chart.settings["graph.x_axis.gridLine_enabled"]);
    chart.xAxis().ticks(xValues.length);
    adjustXAxisTicksIfNeeded(chart.xAxis(), chart.width(), xValues);

    chart.xAxis().tickFormat(function (d) {
      return (0, _formatting.formatValue)(d, {
        column: dimensionColumn,
        type: "axis",
        compact: chart.settings["graph.x_axis.labels_enabled"] === "compact"
      });
    });
  } else {
    chart.xAxis().ticks(0);
    chart.xAxis().tickFormat("");
  }

  if ((0, _renderer_utils.isHistogram)(chart.settings)) {
    // reduces x axis padding. see https://stackoverflow.com/a/44320663/113
    chart._outerRangeBandPadding(0);
  }

  chart.x(_d2.default.scale.ordinal().domain(xValues)).xUnits(_dc2.default.units.ordinal);
}

function applyChartYAxis(chart, series, yExtent, axisName) {
  var axis = void 0;
  if (axisName !== "right") {
    axis = {
      scale: function scale() {
        return chart.y.apply(chart, arguments);
      },
      axis: function axis() {
        return chart.yAxis.apply(chart, arguments);
      },
      label: function label() {
        return chart.yAxisLabel.apply(chart, arguments);
      },
      setting: function setting(name) {
        return chart.settings["graph.y_axis." + name];
      }
    };
  } else {
    axis = {
      scale: function scale() {
        return chart.rightY.apply(chart, arguments);
      },
      axis: function axis() {
        return chart.rightYAxis.apply(chart, arguments);
      },
      label: function label() {
        return chart.rightYAxisLabel.apply(chart, arguments);
      },
      setting: function setting(name) {
        return chart.settings["graph.y_axis." + name];
      } // TODO: right axis settings
    };
  }

  if (axis.setting("labels_enabled")) {
    // left
    if (axis.setting("title_text")) {
      axis.label(axis.setting("title_text"), Y_LABEL_PADDING);
    } else {
      // only use the column name if all in the series are the same
      var labels = _underscore2.default.uniq(series.map(function (s) {
        return (0, _utils.getFriendlyName)(s.data.cols[1]);
      }));
      if (labels.length === 1) {
        axis.label(labels[0], Y_LABEL_PADDING);
      }
    }
  }

  if (axis.setting("axis_enabled")) {
    // special case for normalized stacked charts
    // for normalized stacked charts the y-axis is a percentage number. In Javascript, 0.07 * 100.0 = 7.000000000000001 (try it) so we
    // round that number to get something nice like "7". Then we append "%" to get a nice tick like "7%"
    if (chart.settings["stackable.stack_type"] === "normalized") {
      axis.axis().tickFormat(function (value) {
        return Math.round(value * 100) + "%";
      });
    }
    chart.renderHorizontalGridLines(true);
    adjustYAxisTicksIfNeeded(axis.axis(), chart.height());
  } else {
    axis.axis().ticks(0);
  }

  var scale = void 0;
  if (axis.setting("scale") === "pow") {
    scale = _d2.default.scale.pow().exponent(0.5);
  } else if (axis.setting("scale") === "log") {
    scale = _d2.default.scale.log().base(Math.E);
    // axis.axis().tickFormat((d) => scale.tickFormat(4,d3.format(",d"))(d));
  } else {
    scale = _d2.default.scale.linear();
  }

  if (axis.setting("auto_range")) {
    // elasticY not compatible with log scale
    if (axis.setting("scale") !== "log") {
      // TODO: right axis?
      chart.elasticY(true);
    } else {
      if (!(yExtent[0] < 0 && yExtent[1] < 0 || yExtent[0] > 0 && yExtent[1] > 0)) {
        throw "Y-axis must not cross 0 when using log scale.";
      }
      scale.domain(yExtent);
    }
    axis.scale(scale);
  } else {
    if (axis.setting("scale") === "log" && !(axis.setting("min") < 0 && axis.setting("max") < 0 || axis.setting("min") > 0 && axis.setting("max") > 0)) {
      throw "Y-axis must not cross 0 when using log scale.";
    }
    axis.scale(scale.domain([axis.setting("min"), axis.setting("max")]));
  }
}

/***/ }),

/***/ 263:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkXAxisLabelOverlap = checkXAxisLabelOverlap;
exports.default = lineAndBarOnRender;

var _d = __webpack_require__(26);

var _d2 = _interopRequireDefault(_d);

var _dom = __webpack_require__(28);

var _apply_axis = __webpack_require__(262);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var X_LABEL_MIN_SPACING = 2; // minimum space we want to leave between labels
/*  weak */

var X_LABEL_ROTATE_90_THRESHOLD = 24; // tick width breakpoint for switching from 45° to 90°
var X_LABEL_HIDE_THRESHOLD = 12; // tick width breakpoint for hiding labels entirely
var X_LABEL_MAX_LABEL_HEIGHT_RATIO = 0.7; // percent rotated labels are allowed to take

// +-------------------------------------------------------------------------------------------------------------------+
// |                                                ON RENDER FUNCTIONS                                                |
// +-------------------------------------------------------------------------------------------------------------------+

// The following functions are applied once the chart is rendered.

function onRenderRemoveClipPath(chart) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = chart.selectAll(".sub, .chart-body")[0][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var elem = _step.value;

      // prevents dots from being clipped:
      elem.removeAttribute("clip-path");
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}

function onRenderMoveContentToTop(chart) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = chart.selectAll(".sub, .chart-body")[0][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var elem = _step2.value;

      // move chart content on top of axis (z-index doesn't work on SVG):
      elem.parentNode.appendChild(elem);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}

function onRenderSetDotStyle(chart) {
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = chart.svg().selectAll(".dc-tooltip circle.dot")[0][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var elem = _step3.value;

      // set the color of the dots to the fill color so we can use currentColor in CSS rules:
      elem.style.color = elem.getAttribute("fill");
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }
}

var DOT_OVERLAP_COUNT_LIMIT = 8;
var DOT_OVERLAP_RATIO = 0.1;
var DOT_OVERLAP_DISTANCE = 8;

function onRenderEnableDots(chart) {
  var enableDots = void 0;
  var dots = chart.svg().selectAll(".dc-tooltip .dot")[0];
  if (chart.settings["line.marker_enabled"] != null) {
    enableDots = !!chart.settings["line.marker_enabled"];
  } else if (dots.length > 500) {
    // more than 500 dots is almost certainly too dense, don't waste time computing the voronoi map
    enableDots = false;
  } else {
    var vertices = dots.map(function (e, index) {
      var rect = e.getBoundingClientRect();
      return [rect.left, rect.top, index];
    });
    var overlappedIndex = {};
    // essentially pairs of vertices closest to each other
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = _d2.default.geom.voronoi().links(vertices)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var _ref2 = _step4.value;
        var source = _ref2.source,
            target = _ref2.target;

        if (Math.sqrt(Math.pow(source[0] - target[0], 2) + Math.pow(source[1] - target[1], 2)) < DOT_OVERLAP_DISTANCE) {
          // if they overlap, mark both as overlapped
          overlappedIndex[source[2]] = overlappedIndex[target[2]] = true;
        }
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4.return) {
          _iterator4.return();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }

    var total = vertices.length;
    var overlapping = Object.keys(overlappedIndex).length;
    enableDots = overlapping < DOT_OVERLAP_COUNT_LIMIT || overlapping / total < DOT_OVERLAP_RATIO;
  }
  chart.svg().classed("enable-dots", enableDots).classed("enable-dots-onhover", !enableDots);
}

var VORONOI_TARGET_RADIUS = 25;
var VORONOI_MAX_POINTS = 300;

/// dispatchUIEvent used below in the "Voroni Hover" stuff
function dispatchUIEvent(element, eventName) {
  var e = document.createEvent("UIEvents");
  // $FlowFixMe
  e.initUIEvent(eventName, true, true, window, 1);
  element.dispatchEvent(e);
}

// logic for determining the bounding shapes for showing tooltips for a given point.
// Wikipedia has a good explanation here: https://en.wikipedia.org/wiki/Voronoi_diagram
function onRenderVoronoiHover(chart) {
  var parent = chart.svg().select("svg > g");
  var dots = chart.svg().selectAll(".sub .dc-tooltip .dot")[0];

  if (dots.length === 0 || dots.length > VORONOI_MAX_POINTS) {
    return;
  }

  var originRect = chart.svg().node().getBoundingClientRect();
  var vertices = dots.map(function (e) {
    var _e$getBoundingClientR = e.getBoundingClientRect(),
        top = _e$getBoundingClientR.top,
        left = _e$getBoundingClientR.left,
        width = _e$getBoundingClientR.width,
        height = _e$getBoundingClientR.height;

    var px = left + width / 2 - originRect.left;
    var py = top + height / 2 - originRect.top;
    return [px, py, e];
  });

  // HACK Atte Keinänen 8/8/17: For some reason the parent node is not present in Jest/Enzyme tests
  // so simply return empty width and height for preventing the need to do bigger hacks in test code

  var _ref3 = parent.node() ? parent.node().getBBox() : { width: 0, height: 0 },
      width = _ref3.width,
      height = _ref3.height;

  var voronoi = _d2.default.geom.voronoi().clipExtent([[0, 0], [width, height]]);

  // circular clip paths to limit distance from actual point
  parent.append("svg:g").selectAll("clipPath").data(vertices).enter().append("svg:clipPath").attr("id", function (d, i) {
    return "clip-" + i;
  }).append("svg:circle").attr("cx", function (d) {
    return d[0];
  }).attr("cy", function (d) {
    return d[1];
  }).attr("r", VORONOI_TARGET_RADIUS);

  // voronoi layout with clip paths applied
  parent.append("svg:g").classed("voronoi", true).selectAll("path").data(voronoi(vertices), function (d) {
    return d && d.join(",");
  }).enter().append("svg:path").filter(function (d) {
    return d != undefined;
  }).attr("d", function (d) {
    return "M" + d.join("L") + "Z";
  }).attr("clip-path", function (d, i) {
    return (0, _dom.clipPathReference)("clip-" + i);
  })
  // in the functions below e is not an event but the circle element being hovered/clicked
  .on("mousemove", function (_ref4) {
    var point = _ref4.point;

    var e = point[2];
    dispatchUIEvent(e, "mousemove");
    _d2.default.select(e).classed("hover", true);
  }).on("mouseleave", function (_ref5) {
    var point = _ref5.point;

    var e = point[2];
    dispatchUIEvent(e, "mouseleave");
    _d2.default.select(e).classed("hover", false);
  }).on("click", function (_ref6) {
    var point = _ref6.point;

    var e = point[2];
    dispatchUIEvent(e, "click");
  }).order();
}

function onRenderCleanupGoal(chart, onGoalHover, isSplitAxis) {
  // remove dots
  chart.selectAll(".goal .dot").remove();

  // move to end of the parent node so it's on top
  chart.selectAll(".goal").each(function () {
    this.parentNode.appendChild(this);
  });
  chart.selectAll(".goal .line").attr({
    stroke: "rgba(157,160,164, 0.7)",
    "stroke-dasharray": "5,5"
  });

  // add the label
  var goalLine = chart.selectAll(".goal .line")[0][0];
  if (goalLine) {
    // stretch the goal line all the way across, use x axis as reference
    var xAxisLine = chart.selectAll(".axis.x .domain")[0][0];

    // HACK Atte Keinänen 8/8/17: For some reason getBBox method is not present in Jest/Enzyme tests
    if (xAxisLine && goalLine.getBBox) {
      goalLine.setAttribute("d", "M0," + goalLine.getBBox().y + "L" + xAxisLine.getBBox().width + "," + goalLine.getBBox().y);
    }

    var _ref7 = goalLine.getBBox ? goalLine.getBBox() : { x: 0, y: 0, width: 0 },
        x = _ref7.x,
        y = _ref7.y,
        width = _ref7.width;

    var labelOnRight = !isSplitAxis;
    chart.selectAll(".goal .stack._0").append("text").text("Goal").attr({
      x: labelOnRight ? x + width : x,
      y: y - 5,
      "text-anchor": labelOnRight ? "end" : "start",
      "font-weight": "bold",
      fill: "rgb(157,160,164)"
    }).on("mouseenter", function () {
      onGoalHover(this);
    }).on("mouseleave", function () {
      onGoalHover(null);
    });
  }
}

function onRenderHideDisabledLabels(chart) {
  if (!chart.settings["graph.x_axis.labels_enabled"]) {
    chart.selectAll(".x-axis-label").remove();
  }
  if (!chart.settings["graph.y_axis.labels_enabled"]) {
    chart.selectAll(".y-axis-label").remove();
  }
}

function onRenderHideDisabledAxis(chart) {
  if (!chart.settings["graph.x_axis.axis_enabled"]) {
    chart.selectAll(".axis.x").remove();
  }
  if (!chart.settings["graph.y_axis.axis_enabled"]) {
    chart.selectAll(".axis.y, .axis.yr").remove();
  }
}

function onRenderHideBadAxis(chart) {
  if (chart.selectAll(".axis.x .tick")[0].length === 1) {
    chart.selectAll(".axis.x").remove();
  }
}

function onRenderDisableClickFiltering(chart) {
  chart.selectAll("rect.bar").on("click", function (d) {
    chart.filter(null);
    chart.filter(d.key);
  });
}

function onRenderFixStackZIndex(chart) {
  // reverse the order of .stack-list and .dc-tooltip-list children so 0 points in stacked
  // charts don't appear on top of non-zero points
  var _iteratorNormalCompletion5 = true;
  var _didIteratorError5 = false;
  var _iteratorError5 = undefined;

  try {
    for (var _iterator5 = chart.selectAll(".stack-list, .dc-tooltip-list")[0][Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
      var list = _step5.value;
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = list.childNodes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var child = _step6.value;

          list.insertBefore(list.firstChild, child);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6.return) {
            _iterator6.return();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError5 = true;
    _iteratorError5 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion5 && _iterator5.return) {
        _iterator5.return();
      }
    } finally {
      if (_didIteratorError5) {
        throw _iteratorError5;
      }
    }
  }
}

function onRenderSetClassName(chart, isStacked) {
  chart.svg().classed("stacked", isStacked);
}

function getXAxisRotation(chart) {
  var match = String(chart.settings["graph.x_axis.axis_enabled"] || "").match(/^rotate-(\d+)$/);
  if (match) {
    return parseInt(match[1], 10);
  } else {
    return 0;
  }
}

function onRenderRotateAxis(chart) {
  var degrees = getXAxisRotation(chart);
  if (degrees !== 0) {
    chart.selectAll("g.x text").attr("transform", function () {
      var _getBBox = this.getBBox(),
          width = _getBBox.width,
          height = _getBBox.height;

      return (// translate left half the width so the right edge is at the tick
        "translate(-" + width / 2 + "," + -height / 2 + ") " + (
        // rotate counter-clockwise around the right edge
        "rotate(" + -degrees + ", " + width / 2 + ", " + height + ")")
      );
    });
  }
}

// the various steps that get called
function onRender(chart, onGoalHover, isSplitAxis, isStacked) {
  onRenderRemoveClipPath(chart);
  onRenderMoveContentToTop(chart);
  onRenderSetDotStyle(chart);
  onRenderEnableDots(chart);
  onRenderVoronoiHover(chart);
  onRenderCleanupGoal(chart, onGoalHover, isSplitAxis); // do this before hiding x-axis
  onRenderHideDisabledLabels(chart);
  onRenderHideDisabledAxis(chart);
  onRenderHideBadAxis(chart);
  onRenderDisableClickFiltering(chart);
  onRenderFixStackZIndex(chart);
  onRenderSetClassName(chart, isStacked);
  onRenderRotateAxis(chart);
}

// +-------------------------------------------------------------------------------------------------------------------+
// |                                                   BEFORE RENDER                                                   |
// +-------------------------------------------------------------------------------------------------------------------+

// run these first so the rest of the margin computations take it into account
function beforeRenderHideDisabledAxesAndLabels(chart) {
  onRenderHideDisabledLabels(chart);
  onRenderHideDisabledAxis(chart);
  onRenderHideBadAxis(chart);
}

// min margin
var MARGIN_TOP_MIN = 20; // needs to be large enough for goal line text
var MARGIN_BOTTOM_MIN = 10;
var MARGIN_HORIZONTAL_MIN = 20;

// extra padding for axis
var X_AXIS_PADDING = 0;
var Y_AXIS_PADDING = 8;

function adjustMargin(chart, margin, direction, padding, axisSelector, labelSelector) {
  var axis = chart.select(axisSelector).node();
  var label = chart.select(labelSelector).node();
  var axisSize = axis ? axis.getBoundingClientRect()[direction] + 10 : 0;
  var labelSize = label ? label.getBoundingClientRect()[direction] + 5 : 0;
  chart.margins()[margin] = axisSize + labelSize + padding;
}

function computeMinHorizontalMargins(chart) {
  var min = { left: 0, right: 0 };
  var ticks = chart.selectAll(".axis.x .tick text")[0];
  if (ticks.length > 0) {
    var chartRect = chart.select("svg").node().getBoundingClientRect();
    min.left = chart.margins().left - (ticks[0].getBoundingClientRect().left - chartRect.left);
    min.right = chart.margins().right - (chartRect.right - ticks[ticks.length - 1].getBoundingClientRect().right);
  }
  return min;
}

function computeXAxisLabelMaxSize(chart) {
  var maxWidth = 0;
  var maxHeight = 0;
  chart.selectAll("g.x text").each(function () {
    var _getBBox2 = this.getBBox(),
        width = _getBBox2.width,
        height = _getBBox2.height;

    maxWidth = Math.max(maxWidth, width);
    maxHeight = Math.max(maxHeight, height);
  });
  return { width: maxWidth, height: maxHeight };
}

function rotateSize(size, rotation) {
  return {
    width: Math.sin(rotation * (Math.PI / 180)) * size.width,
    height: Math.sin(rotation * (Math.PI / 180)) * size.height
  };
}

function computeXAxisMargin(chart) {
  var rotation = getXAxisRotation(chart);
  var maxSize = computeXAxisLabelMaxSize(chart);
  var rotatedMaxSize = rotateSize(maxSize, rotation);
  return Math.max(0, rotatedMaxSize.width - maxSize.height); // subtract the existing height
}

function checkXAxisLabelOverlap(chart) {
  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "g.x text";

  var rects = [];
  var _iteratorNormalCompletion7 = true;
  var _didIteratorError7 = false;
  var _iteratorError7 = undefined;

  try {
    for (var _iterator7 = chart.selectAll(selector)[0][Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
      var elem = _step7.value;

      rects.push(elem.getBoundingClientRect());
      if (rects.length > 1 && rects[rects.length - 2].right + X_LABEL_MIN_SPACING > rects[rects.length - 1].left) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError7 = true;
    _iteratorError7 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion7 && _iterator7.return) {
        _iterator7.return();
      }
    } finally {
      if (_didIteratorError7) {
        throw _iteratorError7;
      }
    }
  }

  return false;
}

function checkLabelHeight(chart, rotation) {
  var rotatedMaxSize = rotateSize(computeXAxisLabelMaxSize(chart), rotation + 180);
  var xAxisSize = chart.selectAll("g.y")[0][0].getBBox();
  var ratio = Math.abs(rotatedMaxSize.width) / xAxisSize.height;
  return ratio < X_LABEL_MAX_LABEL_HEIGHT_RATIO;
}

function computeXAxisSpacing(chart) {
  var rects = [];
  var minXAxisSpacing = Infinity;
  var _iteratorNormalCompletion8 = true;
  var _didIteratorError8 = false;
  var _iteratorError8 = undefined;

  try {
    for (var _iterator8 = chart.selectAll("g.x text")[0][Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
      var elem = _step8.value;

      rects.push(elem.getBoundingClientRect());
      if (rects.length > 1) {
        var left = rects[rects.length - 2],
            right = rects[rects.length - 1];
        var xAxisSpacing = right.left + right.width / 2 - (left.left + left.width / 2);
        minXAxisSpacing = Math.min(minXAxisSpacing, xAxisSpacing);
      }
    }
  } catch (err) {
    _didIteratorError8 = true;
    _iteratorError8 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion8 && _iterator8.return) {
        _iterator8.return();
      }
    } finally {
      if (_didIteratorError8) {
        throw _iteratorError8;
      }
    }
  }

  return minXAxisSpacing;
}

function beforeRenderComputeXAxisLabelType(chart) {
  // treat graph.x_axis.axis_enabled === true as "auto"
  if (chart.settings["graph.x_axis.axis_enabled"] === true) {
    var overlaps = checkXAxisLabelOverlap(chart);
    if (overlaps) {
      if (chart.isOrdinal()) {
        var spacing = computeXAxisSpacing(chart);
        if (spacing < X_LABEL_HIDE_THRESHOLD) {
          chart.settings["graph.x_axis.axis_enabled"] = false;
        } else if (spacing < X_LABEL_ROTATE_90_THRESHOLD) {
          if (checkLabelHeight(chart, 90)) {
            chart.settings["graph.x_axis.axis_enabled"] = "rotate-90";
          } else {
            chart.settings["graph.x_axis.axis_enabled"] = false;
          }
        } else {
          if (checkLabelHeight(chart, 45)) {
            chart.settings["graph.x_axis.axis_enabled"] = "rotate-45";
          } else {
            chart.settings["graph.x_axis.axis_enabled"] = false;
          }
        }
      } else {
        chart.settings["graph.x_axis.axis_enabled"] = false;
      }
    }
  }
}

function beforeRenderFixMargins(chart) {
  // run before adjusting margins
  var mins = computeMinHorizontalMargins(chart);
  var xAxisMargin = computeXAxisMargin(chart);

  // re-adjust Y axis ticks to account for xAxisMargin due to rotated labels
  (0, _apply_axis.adjustYAxisTicksIfNeeded)(chart.yAxis(), chart.height() - xAxisMargin);
  (0, _apply_axis.adjustYAxisTicksIfNeeded)(chart.rightYAxis(), chart.height() - xAxisMargin);

  // adjust the margins to fit the X and Y axis tick and label sizes, if enabled
  adjustMargin(chart, "bottom", "height", X_AXIS_PADDING + xAxisMargin, ".axis.x", ".x-axis-label");
  adjustMargin(chart, "left", "width", Y_AXIS_PADDING, ".axis.y", ".y-axis-label.y-label");
  adjustMargin(chart, "right", "width", Y_AXIS_PADDING, ".axis.yr", ".y-axis-label.yr-label");

  // set margins to the max of the various mins
  chart.margins().top = Math.max(MARGIN_TOP_MIN, chart.margins().top);
  chart.margins().left = Math.max(MARGIN_HORIZONTAL_MIN, chart.margins().left, mins.left);
  chart.margins().right = Math.max(MARGIN_HORIZONTAL_MIN, chart.margins().right, mins.right);
  chart.margins().bottom = Math.max(MARGIN_BOTTOM_MIN, chart.margins().bottom);
}

// collection of function calls that get made *before* we tell the Chart to render
function beforeRender(chart) {
  beforeRenderComputeXAxisLabelType(chart);
  beforeRenderHideDisabledAxesAndLabels(chart);
  beforeRenderFixMargins(chart);
}

// +-------------------------------------------------------------------------------------------------------------------+
// |                                              PUTTING IT ALL TOGETHER                                              |
// +-------------------------------------------------------------------------------------------------------------------+

/// once chart has rendered and we can access the SVG, do customizations to axis labels / etc that you can't do through dc.js
function lineAndBarOnRender(chart, onGoalHover, isSplitAxis, isStacked) {
  beforeRender(chart);
  chart.on("renderlet.on-render", function () {
    return onRender(chart, onGoalHover, isSplitAxis, isStacked);
  });
  chart.render();
}

/***/ }),

/***/ 264:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Bar"], ["Bar"]),
    _templateObject2 = _taggedTemplateLiteral(["bar chart"], ["bar chart"]);

var _c3po = __webpack_require__(2);

var _LineAreaBarChart2 = __webpack_require__(109);

var _LineAreaBarChart3 = _interopRequireDefault(_LineAreaBarChart2);

var _LineAreaBarRenderer = __webpack_require__(144);

var _graph = __webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BarChart = (_temp = _class = function (_LineAreaBarChart) {
  _inherits(BarChart, _LineAreaBarChart);

  function BarChart() {
    _classCallCheck(this, BarChart);

    return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).apply(this, arguments));
  }

  return BarChart;
}(_LineAreaBarChart3.default), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "bar", _class.iconName = "bar", _class.noun = (0, _c3po.t)(_templateObject2), _class.settings = _extends({}, _graph.GRAPH_DATA_SETTINGS, _graph.STACKABLE_SETTINGS, _graph.GRAPH_GOAL_SETTINGS, _graph.GRAPH_COLORS_SETTINGS, _graph.GRAPH_AXIS_SETTINGS), _class.renderer = _LineAreaBarRenderer.barRenderer, _temp);
exports.default = BarChart;

/***/ }),

/***/ 265:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ChartWithLegend = __webpack_require__(487);

var _ChartWithLegend2 = _interopRequireDefault(_ChartWithLegend);

var _LegendVertical = __webpack_require__(488);

var _LegendVertical2 = _interopRequireDefault(_LegendVertical);

var _LegendHorizontal = __webpack_require__(489);

var _LegendHorizontal2 = _interopRequireDefault(_LegendHorizontal);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GRID_ASPECT_RATIO = 4 / 3;
var PADDING = 14;

var ChartWithLegend = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(ChartWithLegend, _Component);

  function ChartWithLegend() {
    _classCallCheck(this, ChartWithLegend);

    return _possibleConstructorReturn(this, (ChartWithLegend.__proto__ || Object.getPrototypeOf(ChartWithLegend)).apply(this, arguments));
  }

  _createClass(ChartWithLegend, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          legendTitles = _props.legendTitles,
          legendColors = _props.legendColors,
          hovered = _props.hovered,
          onHoverChange = _props.onHoverChange,
          className = _props.className,
          gridSize = _props.gridSize,
          aspectRatio = _props.aspectRatio,
          height = _props.height,
          width = _props.width,
          showLegend = _props.showLegend;

      // padding

      width -= PADDING * 2;
      height -= PADDING;

      var chartWidth = void 0,
          chartHeight = void 0,
          flexChart = false;
      var type = void 0,
          LegendComponent = void 0;
      var isHorizontal = gridSize && gridSize.width > gridSize.height / GRID_ASPECT_RATIO;
      if (showLegend === false) {
        type = "small";
      } else if (!gridSize || isHorizontal && (showLegend || gridSize.width > 4 || gridSize.height > 4)) {
        type = "horizontal";
        LegendComponent = _LegendVertical2.default;
        if (gridSize && gridSize.width < 6) {
          legendTitles = legendTitles.map(function (title) {
            return Array.isArray(title) ? title.slice(0, 1) : title;
          });
        }
        var desiredWidth = height * aspectRatio;
        if (desiredWidth > width * (2 / 3)) {
          flexChart = true;
        } else {
          chartWidth = desiredWidth;
        }
        chartHeight = height;
      } else if (!isHorizontal && (showLegend || gridSize.height > 3 && gridSize.width > 2)) {
        type = "vertical";
        LegendComponent = _LegendHorizontal2.default;
        legendTitles = legendTitles.map(function (title) {
          return Array.isArray(title) ? title[0] : title;
        });
        var desiredHeight = width * (1 / aspectRatio);
        if (desiredHeight > height * (3 / 4)) {
          // chartHeight = height * (3 / 4);
          flexChart = true;
        } else {
          chartHeight = desiredHeight;
        }
        chartWidth = width;
      } else {
        type = "small";
      }

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(className, "fullscreen-text-small fullscreen-normal-text fullscreen-night-text", _ChartWithLegend2.default.ChartWithLegend, _ChartWithLegend2.default[type], flexChart && _ChartWithLegend2.default.flexChart),
          style: {
            paddingBottom: PADDING,
            paddingLeft: PADDING,
            paddingRight: PADDING
          }
        },
        LegendComponent ? _react2.default.createElement(LegendComponent, {
          className: _ChartWithLegend2.default.Legend,
          titles: legendTitles,
          colors: legendColors,
          hovered: hovered,
          onHoverChange: onHoverChange
        }) : null,
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(_ChartWithLegend2.default.Chart),
            style: { width: chartWidth, height: chartHeight }
          },
          children
        )
      );
    }
  }]);

  return ChartWithLegend;
}(_react.Component), _class2.defaultProps = {
  aspectRatio: 1
}, _temp)) || _class;

ChartWithLegend.displayName = "ChartWithLegend";
exports.default = ChartWithLegend;

/***/ }),

/***/ 266:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /*  weak */

exports.computeMinimalBounds = computeMinimalBounds;
exports.computeLargestGap = computeLargestGap;
exports.getAllFeaturesPoints = getAllFeaturesPoints;
exports.getCanonicalRowKey = getCanonicalRowKey;

var _leafletSrc = __webpack_require__(72);

var _leafletSrc2 = _interopRequireDefault(_leafletSrc);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function computeMinimalBounds(features) {
  var points = getAllFeaturesPoints(features);
  var gap = computeLargestGap(points, function (d) {
    return d[0];
  });

  var _d3$extent = _d3.default.extent(points, function (d) {
    return d[0];
  }),
      _d3$extent2 = _slicedToArray(_d3$extent, 2),
      west = _d3$extent2[0],
      east = _d3$extent2[1];

  var _d3$extent3 = _d3.default.extent(points, function (d) {
    return d[1];
  }),
      _d3$extent4 = _slicedToArray(_d3$extent3, 2),
      north = _d3$extent4[0],
      south = _d3$extent4[1];

  var normalGapSize = gap[1] - gap[0];
  var antemeridianGapSize = 180 + west + (180 - east);

  if (antemeridianGapSize > normalGapSize) {
    return _leafletSrc2.default.latLngBounds(_leafletSrc2.default.latLng(south, west), // SW
    _leafletSrc2.default.latLng(north, east) // NE
    );
  } else {
    return _leafletSrc2.default.latLngBounds(_leafletSrc2.default.latLng(south, -360 + gap[1]), // SW
    _leafletSrc2.default.latLng(north, gap[0]) // NE
    );
  }
}

function computeLargestGap(items) {
  var valueAccessor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (d) {
    return d;
  };

  var _d3$extent5 = _d3.default.extent(items, valueAccessor),
      _d3$extent6 = _slicedToArray(_d3$extent5, 2),
      xMin = _d3$extent6[0],
      xMax = _d3$extent6[1];

  if (xMin === xMax) {
    return [xMin, xMax];
  }

  var buckets = [];
  var bucketSize = (xMax - xMin) / items.length;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var item = _step.value;

      var x = valueAccessor(item);
      var k = Math.floor((x - xMin) / bucketSize);
      if (buckets[k] === undefined) {
        buckets[k] = [x, x];
      } else {
        buckets[k] = [Math.min(x, buckets[k][0]), Math.max(x, buckets[k][1])];
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var largestGap = [0, 0];
  for (var i = 0; i < items.length; i++) {
    if (buckets[i + 1] === undefined) {
      buckets[i + 1] = buckets[i];
    } else if (buckets[i + 1][0] - buckets[i][1] > largestGap[1] - largestGap[0]) {
      largestGap = [buckets[i][1], buckets[i + 1][0]];
    }
  }
  return largestGap;
}

function getAllFeaturesPoints(features) {
  var points = [];
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = features[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var feature = _step2.value;

      if (feature.geometry.type === "Polygon") {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = feature.geometry.coordinates[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var coordinates = _step3.value;

            points = points.concat(coordinates);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      } else if (feature.geometry.type === "MultiPolygon") {
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = feature.geometry.coordinates[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var coordinatesList = _step4.value;
            var _iteratorNormalCompletion5 = true;
            var _didIteratorError5 = false;
            var _iteratorError5 = undefined;

            try {
              for (var _iterator5 = coordinatesList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                var _coordinates = _step5.value;

                points = points.concat(_coordinates);
              }
            } catch (err) {
              _didIteratorError5 = true;
              _iteratorError5 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion5 && _iterator5.return) {
                  _iterator5.return();
                }
              } finally {
                if (_didIteratorError5) {
                  throw _iteratorError5;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4.return) {
              _iterator4.return();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      } else {
        console.warn("Unimplemented feature.geometry.type", feature.geometry.type);
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return points;
}

var STATE_CODES = [["AL", "Alabama"], ["AK", "Alaska"], ["AS", "American Samoa"], ["AZ", "Arizona"], ["AR", "Arkansas"], ["CA", "California"], ["CO", "Colorado"], ["CT", "Connecticut"], ["DE", "Delaware"], ["DC", "District Of Columbia"], ["FM", "Federated States Of Micronesia"], ["FL", "Florida"], ["GA", "Georgia"], ["GU", "Guam"], ["HI", "Hawaii"], ["ID", "Idaho"], ["IL", "Illinois"], ["IN", "Indiana"], ["IA", "Iowa"], ["KS", "Kansas"], ["KY", "Kentucky"], ["LA", "Louisiana"], ["ME", "Maine"], ["MH", "Marshall Islands"], ["MD", "Maryland"], ["MA", "Massachusetts"], ["MI", "Michigan"], ["MN", "Minnesota"], ["MS", "Mississippi"], ["MO", "Missouri"], ["MT", "Montana"], ["NE", "Nebraska"], ["NV", "Nevada"], ["NH", "New Hampshire"], ["NJ", "New Jersey"], ["NM", "New Mexico"], ["NY", "New York"], ["NC", "North Carolina"], ["ND", "North Dakota"], ["MP", "Northern Mariana Islands"], ["OH", "Ohio"], ["OK", "Oklahoma"], ["OR", "Oregon"], ["PW", "Palau"], ["PA", "Pennsylvania"], ["PR", "Puerto Rico"], ["RI", "Rhode Island"], ["SC", "South Carolina"], ["SD", "South Dakota"], ["TN", "Tennessee"], ["TX", "Texas"], ["UT", "Utah"], ["VT", "Vermont"], ["VI", "Virgin Islands"], ["VA", "Virginia"], ["WA", "Washington"], ["WV", "West Virginia"], ["WI", "Wisconsin"], ["WY", "Wyoming"]];

var stateNamesMap = new Map(STATE_CODES.map(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      key = _ref2[0],
      name = _ref2[1];

  return [name.toLowerCase(), key.toLowerCase()];
}));

/**
 * Canonicalizes row values to match those in the GeoJSONs.
 *
 * Currently transforms US state names to state codes for the "us_states" region map, and just lowercases all others.
 */
function getCanonicalRowKey(key, region) {
  key = String(key).toLowerCase();
  // Special case for supporting both US state names and state codes
  // This should be ok because we know there's no overlap between state names and codes, and we know the "us_states" region map expects codes
  if (region === "us_states" && stateNamesMap.has(key)) {
    return stateNamesMap.get(key);
  } else {
    return key;
  }
}

/***/ }),

/***/ 267:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearGoogleAuthCredentials = clearGoogleAuthCredentials;
/*global gapi*/

/// clear out Google Auth credentials in browser if present
function clearGoogleAuthCredentials() {
  var googleAuth = typeof gapi !== "undefined" && gapi && gapi.auth2 ? gapi.auth2.getAuthInstance() : undefined;
  if (!googleAuth) return;

  try {
    googleAuth.signOut().then(function () {
      console.log("Cleared Google Auth credentials.");
    });
  } catch (error) {
    console.error("Problem clearing Google Auth credentials", error);
  }
}

/***/ }),

/***/ 269:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Select = __webpack_require__(33);

var _Select2 = _interopRequireDefault(_Select);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var YEARS = _underscore2.default.range(new Date().getFullYear(), 1900, -1);

var YearPicker = function YearPicker(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange;
  return _react2.default.createElement(_Select2.default, {
    className: "borderless",
    value: value,
    options: YEARS,
    optionNameFn: function optionNameFn(option) {
      return option;
    },
    optionValueFn: function optionValueFn(option) {
      return option;
    },
    onChange: onChange
  });
};

YearPicker.displayName = "YearPicker";
exports.default = YearPicker;

/***/ }),

/***/ 27:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clear = exports.remove = exports.update = exports.add = exports.args = exports.op = exports.noNullValues = exports.fieldIdsEq = exports.mbqlEq = exports.mbql = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var mbql = exports.mbql = function mbql(a) {
  return typeof a === "string" ? a.toLowerCase().replace(/_/g, "-") : a;
};

var mbqlEq = exports.mbqlEq = function mbqlEq(a, b) {
  return mbql(a) === mbql(b);
};

// determines whether 2 field IDs are equal. This is needed rather than
// doing a simple comparison because field IDs are not guaranteed to be numeric:
// the might be FieldLiterals, e.g. [field-literal <name> <unit>], instead.
var fieldIdsEq = exports.fieldIdsEq = function fieldIdsEq(a, b) {
  if ((typeof a === "undefined" ? "undefined" : _typeof(a)) !== (typeof b === "undefined" ? "undefined" : _typeof(b))) return false;

  if (typeof a === "number") return a === b;

  if (a == null && b == null) return true;

  // field literals
  if (Array.isArray(a) && Array.isArray(b) && a.length === 3 && b.length === 3 && a[0] === "field-literal" && b[0] === "field-literal") {
    return a[1] === b[1];
  }

  console.warn("Don't know how to compare these IDs:", a, b);
  return false;
};

var noNullValues = exports.noNullValues = function noNullValues(clause) {
  return _underscore2.default.all(clause, function (c) {
    return c != null;
  });
};

// these are mostly to circumvent Flow type checking :-/
var op = exports.op = function op(clause) {
  return clause[0];
};
var args = exports.args = function args(clause) {
  return clause.slice(1);
};

var add = exports.add = function add(items, item) {
  return [].concat(_toConsumableArray(items), [item]);
};
var update = exports.update = function update(items, index, newItem) {
  return [].concat(_toConsumableArray(items.slice(0, index)), [newItem], _toConsumableArray(items.slice(index + 1)));
};
var remove = exports.remove = function remove(items, index) {
  return [].concat(_toConsumableArray(items.slice(0, index)), _toConsumableArray(items.slice(index + 1)));
};
var clear = exports.clear = function clear() {
  return [];
};

/***/ }),

/***/ 270:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"container":"tfpVo _38618 _3Dqep","deemphasized":"_2twtF","parameter":"_20z_B _38618 _3Dqep","nameInput":"_2i2x7 _38618 _3Dqep","fullscreen":"_2G87x","name":"_2m475 _3K4no","selected":"_2YcmO","noPopover":"pg3LL","isEditing":"_2AYUY","input":"_38Q_V","parameterButtons":"_2bHbr","editButton":"_3tq8o _38618 _3Dqep _1a-AI","removeButton":"_1kPst _38618 _3Dqep _1a-AI","editNameIconContainer":"_1oJCz"};

/***/ }),

/***/ 271:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPositionForNewDashCard = getPositionForNewDashCard;
var GRID_WIDTH = exports.GRID_WIDTH = 18;

var GRID_ASPECT_RATIO = exports.GRID_ASPECT_RATIO = 4 / 3;
var GRID_MARGIN = exports.GRID_MARGIN = 6;

var DEFAULT_CARD_SIZE = exports.DEFAULT_CARD_SIZE = { width: 4, height: 4 };

// returns the first available position from left to right, top to bottom,
// based on the existing cards,  item size, and grid width
function getPositionForNewDashCard(cards) {
  var sizeX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_CARD_SIZE.width;
  var sizeY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CARD_SIZE.height;
  var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : GRID_WIDTH;

  var row = 0;
  var col = 0;
  while (row < 1000) {
    while (col <= width - sizeX) {
      var good = true;
      var position = { col: col, row: row, sizeX: sizeX, sizeY: sizeY };
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = cards[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var card = _step.value;

          if (intersects(card, position)) {
            good = false;
            break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (good) {
        return position;
      }
      col++;
    }
    col = 0;
    row++;
  }
  // this should never happen but flow complains if we return undefined
  return { col: col, row: row, sizeX: sizeX, sizeY: sizeY };
}

function intersects(a, b) {
  return !(b.col >= a.col + a.sizeX || b.col + b.sizeX <= a.col || b.row >= a.row + a.sizeY || b.row + b.sizeY <= a.row);
}

// for debugging
/*eslint-disable */
function printGrid(cards, width) {
  var grid = [];
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = cards[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var card = _step2.value;

      for (var _col = card.col; _col < card.col + card.sizeX; _col++) {
        for (var _row = card.row; _row < card.row + card.sizeY; _row++) {
          grid[_row] = grid[_row] || Array(width).join(".").split(".").map(function () {
            return 0;
          });
          grid[_row][_col]++;
        }
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  console.log("\n" + grid.map(function (row) {
    return row.join(".");
  }).join("\n") + "\n");
}
/*eslint-enable */

/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.isObscured = isObscured;
exports.findPosition = findPosition;
exports.elementIsInView = elementIsInView;
exports.getSelectionPosition = getSelectionPosition;
exports.setSelectionPosition = setSelectionPosition;
exports.saveSelection = saveSelection;
exports.getCaretPosition = getCaretPosition;
exports.setCaretPosition = setCaretPosition;
exports.saveCaretPosition = saveCaretPosition;
exports.addCSSRule = addCSSRule;
exports.constrainToScreen = constrainToScreen;
exports.forceRedraw = forceRedraw;
exports.moveToBack = moveToBack;
exports.moveToFront = moveToFront;
exports.clipPathReference = clipPathReference;
// IE doesn't support scrollX/scrollY:
var getScrollX = exports.getScrollX = function getScrollX() {
  return typeof window.scrollX === "undefined" ? window.pageXOffset : window.scrollX;
};
var getScrollY = exports.getScrollY = function getScrollY() {
  return typeof window.scrollY === "undefined" ? window.pageYOffset : window.scrollY;
};

// denotes whether the current page is loaded in an iframe or not
var IFRAMED = exports.IFRAMED = function () {
  try {
    return window.self !== window.top;
  } catch (e) {
    return true;
  }
}();

// add a global so we can check if the parent iframe is Metabase
window.METABASE = true;

// check that we're both iframed, and the parent is a Metabase instance
// used for detecting if we're previewing an embed
var IFRAMED_IN_SELF = exports.IFRAMED_IN_SELF = function () {
  try {
    return window.self !== window.top && window.top.METABASE;
  } catch (e) {
    return false;
  }
}();

function isObscured(element, offset) {
  if (!document.elementFromPoint) {
    return false;
  }
  // default to the center of the element
  offset = offset || {
    top: Math.round(element.offsetHeight / 2),
    left: Math.round(element.offsetWidth / 2)
  };
  var position = findPosition(element, true);
  var elem = document.elementFromPoint(position.left + offset.left, position.top + offset.top);
  return !element.contains(elem);
}

// get the position of an element on the page
function findPosition(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var offset = { top: 0, left: 0 };
  var scroll = { top: 0, left: 0 };
  var offsetParent = element;
  while (offsetParent) {
    // we need to check every element for scrollTop/scrollLeft
    scroll.left += element.scrollLeft || 0;
    scroll.top += element.scrollTop || 0;
    // but only the original element and offsetParents for offsetTop/offsetLeft
    if (offsetParent === element) {
      offset.left += element.offsetLeft;
      offset.top += element.offsetTop;
      offsetParent = element.offsetParent;
    }
    element = element.parentNode;
  }
  if (excludeScroll) {
    offset.left -= scroll.left;
    offset.top -= scroll.top;
  }
  return offset;
}

// based on https://stackoverflow.com/a/38039019/113
function elementIsInView(element) {
  var percentX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var percentY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

  var tolerance = 0.01; //needed because the rects returned by getBoundingClientRect provide the position up to 10 decimals

  var elementRect = element.getBoundingClientRect();
  var parentRects = [];

  while (element.parentElement != null) {
    parentRects.push(element.parentElement.getBoundingClientRect());
    element = element.parentElement;
  }

  return parentRects.every(function (parentRect) {
    var visiblePixelX = Math.min(elementRect.right, parentRect.right) - Math.max(elementRect.left, parentRect.left);
    var visiblePixelY = Math.min(elementRect.bottom, parentRect.bottom) - Math.max(elementRect.top, parentRect.top);
    var visiblePercentageX = visiblePixelX / elementRect.width;
    var visiblePercentageY = visiblePixelY / elementRect.height;
    return visiblePercentageX + tolerance > percentX && visiblePercentageY + tolerance > percentY;
  });
}

function getSelectionPosition(element) {
  // input, textarea, IE
  if (element.setSelectionRange || element.createTextRange) {
    return [element.selectionStart, element.selectionEnd];
  } else {
    // contenteditable
    try {
      var selection = window.getSelection();
      // Clone the Range otherwise setStart/setEnd will mutate the actual selection in Chrome 58+ and Firefox!
      var range = selection.getRangeAt(0).cloneRange();
      var startContainer = range.startContainer,
          startOffset = range.startOffset;

      range.setStart(element, 0);
      var end = range.toString().length;
      range.setEnd(startContainer, startOffset);
      var start = range.toString().length;

      return [start, end];
    } catch (e) {
      return [0, 0];
    }
  }
}

function setSelectionPosition(element, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      start = _ref2[0],
      end = _ref2[1];

  // input, textarea
  if (element.setSelectionRange) {
    element.focus();
    element.setSelectionRange(start, end);
  } else if (element.createTextRange) {
    // IE
    var range = element.createTextRange();
    range.collapse(true);
    range.moveEnd("character", end);
    range.moveStart("character", start);
    range.select();
  } else {
    // contenteditable
    var selection = window.getSelection();
    var startPos = getTextNodeAtPosition(element, start);
    var endPos = getTextNodeAtPosition(element, end);
    selection.removeAllRanges();
    var _range = new Range();
    _range.setStart(startPos.node, startPos.position);
    _range.setEnd(endPos.node, endPos.position);
    selection.addRange(_range);
  }
}

function saveSelection(element) {
  var range = getSelectionPosition(element);
  return function () {
    return setSelectionPosition(element, range);
  };
}

function getCaretPosition(element) {
  return getSelectionPosition(element)[1];
}

function setCaretPosition(element, position) {
  setSelectionPosition(element, [position, position]);
}

function saveCaretPosition(element) {
  var position = getCaretPosition(element);
  return function () {
    return setCaretPosition(element, position);
  };
}

function getTextNodeAtPosition(root, index) {
  var treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, function (elem) {
    if (index > elem.textContent.length) {
      index -= elem.textContent.length;
      return NodeFilter.FILTER_REJECT;
    }
    return NodeFilter.FILTER_ACCEPT;
  });
  var c = treeWalker.nextNode();
  return {
    node: c ? c : root,
    position: c ? index : 0
  };
}

// https://davidwalsh.name/add-rules-stylesheets
var STYLE_SHEET = function () {
  // Create the <style> tag
  var style = document.createElement("style");

  // WebKit hack :(
  style.appendChild(document.createTextNode("/* dynamic stylesheet */"));

  // Add the <style> element to the page
  document.head.appendChild(style);

  return style.sheet;
}();

function addCSSRule(selector, rules) {
  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if ("insertRule" in STYLE_SHEET) {
    STYLE_SHEET.insertRule(selector + "{" + rules + "}", index);
  } else if ("addRule" in STYLE_SHEET) {
    STYLE_SHEET.addRule(selector, rules, index);
  }
}

function constrainToScreen(element, direction, padding) {
  if (!element) {
    return false;
  }
  if (direction === "bottom") {
    var screenBottom = window.innerHeight + getScrollY();
    var overflowY = element.getBoundingClientRect().bottom - screenBottom;
    if (overflowY + padding > 0) {
      element.style.maxHeight = element.getBoundingClientRect().height - overflowY - padding + "px";
      return true;
    }
  } else if (direction === "top") {
    var screenTop = getScrollY();
    var _overflowY = screenTop - element.getBoundingClientRect().top;
    if (_overflowY + padding > 0) {
      element.style.maxHeight = element.getBoundingClientRect().height - _overflowY - padding + "px";
      return true;
    }
  } else {
    throw new Error("Direction " + direction + " not implemented");
  }
  return false;
}

// Used for tackling Safari rendering issues
// https://stackoverflow.com/a/3485654
function forceRedraw(domNode) {
  domNode.style.display = "none";
  domNode.offsetHeight;
  domNode.style.display = "";
}

function moveToBack(element) {
  if (element && element.parentNode) {
    element.parentNode.insertBefore(element, element.parentNode.firstChild);
  }
}

function moveToFront(element) {
  if (element && element.parentNode) {
    element.parentNode.appendChild(element);
  }
}

/**
 * @returns the clip-path CSS property referencing the clip path in the current document, taking into account the <base> tag.
 */
function clipPathReference(id) {
  // add the current page URL (with fragment removed) to support pages with <base> tag.
  // https://stackoverflow.com/questions/18259032/using-base-tag-on-a-page-that-contains-svg-marker-elements-fails-to-render-marke
  var url = window.location.href.replace(/#.*$/, "") + "#" + id;
  return "url(" + url + ")";
}

/***/ }),

/***/ 29:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Triggerable = __webpack_require__(239);

var _Triggerable2 = _interopRequireDefault(_Triggerable);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _Triggerable2.default)(_Popover2.default);

/***/ }),

/***/ 292:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ExternalLink = function ExternalLink(_ref) {
  var href = _ref.href,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["href", "className", "children"]);

  return _react2.default.createElement(
    "a",
    _extends({
      href: href,
      className: className || "link"
      // open in a new tab
      , target: "_blank"
      // prevent malicious pages from navigating us away
      , rel: "noopener"
      // disables quickfilter in tables
      , onClickCapture: function onClickCapture(e) {
        return e.stopPropagation();
      }
    }, props),
    children
  );
};

ExternalLink.displayName = "ExternalLink";
exports.default = ExternalLink;

/***/ }),

/***/ 298:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var ALERT_TYPE_ROWS = exports.ALERT_TYPE_ROWS = "alert-type-rows";
var ALERT_TYPE_TIMESERIES_GOAL = exports.ALERT_TYPE_TIMESERIES_GOAL = "alert-type-timeseries-goal";
var ALERT_TYPE_PROGRESS_BAR_GOAL = exports.ALERT_TYPE_PROGRESS_BAR_GOAL = "alert-type-progress-bar-goal";

var getDefaultAlert = exports.getDefaultAlert = function getDefaultAlert(question, user, visualizationSettings) {
  var alertType = question.alertType(visualizationSettings);

  var typeDependentAlertFields = alertType === ALERT_TYPE_ROWS ? { alert_condition: "rows", alert_first_only: false } : {
    alert_condition: "goal",
    alert_first_only: true,
    alert_above_goal: true
  };

  var defaultEmailChannel = {
    enabled: true,
    channel_type: "email",
    recipients: [user],
    schedule_day: "mon",
    schedule_frame: null,
    schedule_hour: 0,
    schedule_type: "daily"
  };

  return _extends({
    card: { id: question.id() },
    channels: [defaultEmailChannel]
  }, typeDependentAlertFields);
};

/***/ }),

/***/ 30:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeGetMergedParameterFieldValues = exports.getSegments = exports.getMetrics = exports.getFields = exports.getTables = exports.getDatabasesList = exports.getDatabases = exports.getMetadata = exports.getShallowSegments = exports.getShallowMetrics = exports.getShallowFields = exports.getShallowTables = exports.getShallowDatabases = exports.getMetadataFetched = exports.getNormalizedSegments = exports.getNormalizedMetrics = exports.getNormalizedFields = exports.getNormalizedTables = exports.getNormalizedDatabases = exports.getNormalizedMetadata = undefined;
exports.copyObjects = copyObjects;

var _reselect = __webpack_require__(87);

var _Metadata = __webpack_require__(65);

var _Metadata2 = _interopRequireDefault(_Metadata);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _Metric = __webpack_require__(231);

var _Metric2 = _interopRequireDefault(_Metric);

var _Segment = __webpack_require__(230);

var _Segment2 = _interopRequireDefault(_Segment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _recompose = __webpack_require__(581);

var _field = __webpack_require__(93);

var _schema_metadata = __webpack_require__(10);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*  weak */

var getNormalizedMetadata = exports.getNormalizedMetadata = function getNormalizedMetadata(state) {
  return state.metadata;
};

// fully denomalized, raw "entities"
var getNormalizedDatabases = exports.getNormalizedDatabases = function getNormalizedDatabases(state) {
  return state.metadata.databases;
};
var getNormalizedTables = exports.getNormalizedTables = function getNormalizedTables(state) {
  return state.metadata.tables;
};
var getNormalizedFields = exports.getNormalizedFields = function getNormalizedFields(state) {
  return state.metadata.fields;
};
var getNormalizedMetrics = exports.getNormalizedMetrics = function getNormalizedMetrics(state) {
  return state.metadata.metrics;
};
var getNormalizedSegments = exports.getNormalizedSegments = function getNormalizedSegments(state) {
  return state.metadata.segments;
};

var getMetadataFetched = exports.getMetadataFetched = function getMetadataFetched(state) {
  return state.requests.fetched.metadata || {};
};

// TODO: these should be denomalized but non-cylical, and only to the same "depth" previous "tableMetadata" was, e.x.
//
// TABLE:
//
// {
//     db: {
//         tables: undefined,
//     }
//     fields: [{
//         table: undefined,
//         target: {
//             table: {
//                 fields: undefined
//             }
//         }
//     }]
// }
//
var getShallowDatabases = exports.getShallowDatabases = getNormalizedDatabases;
var getShallowTables = exports.getShallowTables = getNormalizedTables;
var getShallowFields = exports.getShallowFields = getNormalizedFields;
var getShallowMetrics = exports.getShallowMetrics = getNormalizedMetrics;
var getShallowSegments = exports.getShallowSegments = getNormalizedSegments;

// fully connected graph of all databases, tables, fields, segments, and metrics
var getMetadata = exports.getMetadata = (0, _reselect.createSelector)([getNormalizedDatabases, getNormalizedTables, getNormalizedFields, getNormalizedSegments, getNormalizedMetrics], function (databases, tables, fields, segments, metrics) {
  var meta = new _Metadata2.default();
  meta.databases = copyObjects(meta, databases, _Database2.default);
  meta.tables = copyObjects(meta, tables, _Table2.default);
  meta.fields = copyObjects(meta, fields, _Field2.default);
  meta.segments = copyObjects(meta, segments, _Segment2.default);
  meta.metrics = copyObjects(meta, metrics, _Metric2.default);
  // meta.loaded    = getLoadedStatuses(requestStates)

  hydrateList(meta.databases, "tables", meta.tables);

  hydrateList(meta.tables, "fields", meta.fields);
  hydrateList(meta.tables, "segments", meta.segments);
  hydrateList(meta.tables, "metrics", meta.metrics);

  hydrate(meta.tables, "db", function (t) {
    return meta.database(t.db_id || t.db);
  });

  hydrate(meta.segments, "table", function (s) {
    return meta.table(s.table_id);
  });
  hydrate(meta.metrics, "table", function (m) {
    return meta.table(m.table_id);
  });
  hydrate(meta.fields, "table", function (f) {
    return meta.table(f.table_id);
  });

  hydrate(meta.fields, "target", function (f) {
    return meta.field(f.fk_target_field_id);
  });
  hydrate(meta.fields, "name_field", function (f) {
    if (f.name_field != null) {
      return meta.field(f.name_field);
    } else if (f.table && f.isPK()) {
      return _underscore2.default.find(f.table.fields, function (f) {
        return f.isEntityName();
      });
    }
  });

  hydrate(meta.fields, "operators", function (f) {
    return (0, _schema_metadata.getOperators)(f, f.table);
  });
  hydrate(meta.tables, "aggregation_options", function (t) {
    return (0, _schema_metadata.getAggregatorsWithFields)(t);
  });
  hydrate(meta.tables, "breakout_options", function (t) {
    return (0, _schema_metadata.getBreakouts)(t.fields);
  });

  hydrate(meta.fields, "values", function (f) {
    return (0, _field.getFieldValues)(f);
  });
  hydrate(meta.fields, "remapping", function (f) {
    return new Map((0, _field.getRemappings)(f));
  });

  hydrateLookup(meta.databases, "tables", "id");
  hydrateLookup(meta.tables, "fields", "id");
  hydrateLookup(meta.fields, "operators", "name");

  return meta;
});

var getDatabases = exports.getDatabases = (0, _reselect.createSelector)([getMetadata], function (_ref) {
  var databases = _ref.databases;
  return databases;
});

var getDatabasesList = exports.getDatabasesList = (0, _reselect.createSelector)([getDatabases, function (state) {
  return state.metadata.databasesList;
}], function (databases, ids) {
  return ids.map(function (id) {
    return databases[id];
  });
});

var getTables = exports.getTables = (0, _reselect.createSelector)([getMetadata], function (_ref2) {
  var tables = _ref2.tables;
  return tables;
});

var getFields = exports.getFields = (0, _reselect.createSelector)([getMetadata], function (_ref3) {
  var fields = _ref3.fields;
  return fields;
});
var getMetrics = exports.getMetrics = (0, _reselect.createSelector)([getMetadata], function (_ref4) {
  var metrics = _ref4.metrics;
  return metrics;
});

var getSegments = exports.getSegments = (0, _reselect.createSelector)([getMetadata], function (_ref5) {
  var segments = _ref5.segments;
  return segments;
});

// FIELD VALUES FOR DASHBOARD FILTERS / SQL QUESTION PARAMETERS

// Returns a dictionary of field id:s mapped to matching field values
// Currently this assumes that you are passing the props of <ParameterValueWidget> which contain the
// `field_ids` array inside `parameter` prop.
var getParameterFieldValuesByFieldId = function getParameterFieldValuesByFieldId(state, props) {
  var _$chain;

  // NOTE Atte Keinänen 9/14/17: Reading the state directly instead of using `getFields` selector
  // because `getMetadata` doesn't currently work with fields of public dashboards
  return (_$chain = _underscore2.default.chain((0, _icepick.getIn)(state, ["metadata", "fields"]))
  // SQL template tags provide `field_id` instead of `field_ids`
  ).pick.apply(_$chain, _toConsumableArray(props.parameter.field_ids || [props.parameter.field_id])).mapObject(_field.getFieldValues).value();
};

// Custom equality selector for checking if two field value dictionaries contain same fields and field values
// Currently we simply check if fields match and the lengths of field value arrays are equal which makes the comparison fast
// See https://github.com/reactjs/reselect#customize-equalitycheck-for-defaultmemoize
var createFieldValuesEqualSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, function (a, b) {
  // TODO: Why can't we use plain shallowEqual, i.e. why the field value arrays change very often?
  return (0, _recompose.shallowEqual)(_underscore2.default.mapObject(a, function (values) {
    return values.length;
  }), _underscore2.default.mapObject(b, function (values) {
    return values.length;
  }));
});

// HACK Atte Keinänen 7/27/17: Currently the field value analysis code only returns a single value for booleans,
// this will be addressed in analysis sync refactor
var patchBooleanFieldValues_HACK = function patchBooleanFieldValues_HACK(valueArray) {
  var isBooleanFieldValues = valueArray && valueArray.length === 1 && valueArray[0] && typeof valueArray[0][0] === "boolean";

  if (isBooleanFieldValues) {
    return [[true], [false]];
  } else {
    return valueArray;
  }
};

// Merges the field values of fields linked to a parameter and removes duplicates
// We want that we have a distinct selector for each field id combination, and for that reason
// we export a method that creates a new selector; see
// https://github.com/reactjs/reselect#sharing-selectors-with-props-across-multiple-components
// TODO Atte Keinänen 7/20/17: Should we have any thresholds if the count of field values is high or we have many (>2?) fields?
var makeGetMergedParameterFieldValues = exports.makeGetMergedParameterFieldValues = function makeGetMergedParameterFieldValues() {
  return createFieldValuesEqualSelector(getParameterFieldValuesByFieldId, function (fieldValues) {
    var fieldIds = Object.keys(fieldValues);

    if (fieldIds.length === 0) {
      // If we have no fields for the parameter, don't return any field values
      return [];
    } else if (fieldIds.length === 1) {
      // We have just a single field so we can return the field values almost as-is,
      // only address the boolean bug for now
      var singleFieldValues = fieldValues[fieldIds[0]];
      return patchBooleanFieldValues_HACK(singleFieldValues);
    } else {
      // We have multiple fields, so let's merge their values to a single array
      var sortedMergedValues = _underscore2.default.chain(Object.values(fieldValues)).flatten(true).sortBy(function (fieldValue) {
        var valueIsRemapped = fieldValue.length === 2;
        return valueIsRemapped ? fieldValue[1] : fieldValue[0];
      }).value();

      // run the uniqueness comparision always against a non-remapped value
      return _underscore2.default.uniq(sortedMergedValues, false, function (fieldValue) {
        return fieldValue[0];
      });
    }
  });
};

// UTILS:

// clone each object in the provided mapping of objects
function copyObjects(metadata, objects, Klass) {
  var copies = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = Object.values(objects)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var object = _step.value;

      if (object && object.id != null) {
        // $FlowFixMe
        copies[object.id] = new Klass(object);
        // $FlowFixMe
        copies[object.id].metadata = metadata;
      } else {
        console.warn("Missing id:", object);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return copies;
}

// calls a function to derive the value of a property for every object
function hydrate(objects, property, getPropertyValue) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = Object.values(objects)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var object = _step2.value;

      // $FlowFixMe
      object[property] = getPropertyValue(object);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}

// replaces lists of ids with the actual objects
function hydrateList(objects, property, targetObjects) {
  hydrate(objects, property, function (object) {
    return (object[property] || []).map(function (id) {
      return targetObjects[id];
    });
  });
}

// creates a *_lookup object for a previously hydrated list
function hydrateLookup(objects, property) {
  var idProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "id";

  hydrate(objects, property + "_lookup", function (object) {
    var lookup = {};
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = (object[property] || [])[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var item = _step3.value;

        lookup[item[idProperty]] = item;
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }

    return lookup;
  });
}

/***/ }),

/***/ 301:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.METABASE_SEEN_ALERT_SPLASH_COOKIE = exports.METABASE_SESSION_COOKIE = undefined;

var _auth = __webpack_require__(267);

var _jsCookie = __webpack_require__(746);

var _jsCookie2 = _interopRequireDefault(_jsCookie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var METABASE_SESSION_COOKIE = exports.METABASE_SESSION_COOKIE = "metabase.SESSION_ID";
var METABASE_SEEN_ALERT_SPLASH_COOKIE = exports.METABASE_SEEN_ALERT_SPLASH_COOKIE = "metabase.SEEN_ALERT_SPLASH";

// Handles management of Metabase cookie work
var MetabaseCookies = {
  // set the session cookie.  if sessionId is null, clears the cookie
  setSessionCookie: function setSessionCookie(sessionId) {
    var options = {
      path: window.MetabaseRoot || "/",
      expires: 14,
      secure: window.location.protocol === "https:"
    };

    try {
      if (sessionId) {
        // set a session cookie
        _jsCookie2.default.set(METABASE_SESSION_COOKIE, sessionId, options);
      } else {
        sessionId = _jsCookie2.default.get(METABASE_SESSION_COOKIE);

        // delete the current session cookie and Google Auth creds
        _jsCookie2.default.remove(METABASE_SESSION_COOKIE);
        (0, _auth.clearGoogleAuthCredentials)();

        return sessionId;
      }
    } catch (e) {
      console.error("setSessionCookie:", e);
    }
  },

  setHasSeenAlertSplash: function setHasSeenAlertSplash(hasSeen) {
    var options = {
      path: window.MetabaseRoot || "/",
      expires: 365,
      secure: window.location.protocol === "https:"
    };

    try {
      _jsCookie2.default.set(METABASE_SEEN_ALERT_SPLASH_COOKIE, hasSeen, options);
    } catch (e) {
      console.error("setSeenAlertSplash:", e);
    }
  },

  getHasSeenAlertSplash: function getHasSeenAlertSplash() {
    try {
      return _jsCookie2.default.get(METABASE_SEEN_ALERT_SPLASH_COOKIE) || false;
    } catch (e) {
      console.error("getSeenAlertSplash:", e);
      return false;
    }
  }
};

exports.default = MetabaseCookies;

/***/ }),

/***/ 305:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _GridLayout = __webpack_require__(529);

var _GridLayout2 = _interopRequireDefault(_GridLayout);

var _DashCard = __webpack_require__(531);

var _DashCard2 = _interopRequireDefault(_DashCard);

var _Modal = __webpack_require__(55);

var _Modal2 = _interopRequireDefault(_Modal);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _RemoveFromDashboardModal = __webpack_require__(535);

var _RemoveFromDashboardModal2 = _interopRequireDefault(_RemoveFromDashboardModal);

var _AddSeriesModal = __webpack_require__(536);

var _AddSeriesModal2 = _interopRequireDefault(_AddSeriesModal);

var _visualizations = __webpack_require__(53);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _dashboard_grid = __webpack_require__(271);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MOBILE_ASPECT_RATIO = 3 / 2;
var MOBILE_TEXT_CARD_ROW_HEIGHT = 40;

var DashboardGrid = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(DashboardGrid, _Component);

  function DashboardGrid(props, context) {
    _classCallCheck(this, DashboardGrid);

    var _this = _possibleConstructorReturn(this, (DashboardGrid.__proto__ || Object.getPrototypeOf(DashboardGrid)).call(this, props, context));

    _this.state = {
      layout: _this.getLayout(props),
      dashcards: _this.getSortedDashcards(props),
      removeModalDashCard: null,
      addSeriesModalDashCard: null,
      isDragging: false
    };

    _underscore2.default.bindAll(_this, "onDashCardMouseDown");
    return _this;
  }

  _createClass(DashboardGrid, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        dashcards: this.getSortedDashcards(nextProps),
        layout: this.getLayout(nextProps)
      });
    }
  }, {
    key: "onLayoutChange",
    value: function onLayoutChange(layout) {
      var _this2 = this;

      var changes = layout.filter(function (newLayout) {
        return !_underscore2.default.isEqual(newLayout, _this2.getLayoutForDashCard(newLayout.dashcard));
      });
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var change = _step.value;

          this.props.setDashCardAttributes({
            id: change.dashcard.id,
            attributes: {
              col: change.x,
              row: change.y,
              sizeX: change.w,
              sizeY: change.h
            }
          });
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (changes && changes.length > 0) {
        _analytics2.default.trackEvent("Dashboard", "Layout Changed");
      }
    }
  }, {
    key: "getSortedDashcards",
    value: function getSortedDashcards(props) {
      return props.dashboard && props.dashboard.ordered_cards.sort(function (a, b) {
        if (a.row < b.row) {
          return -1;
        }
        if (a.row > b.row) {
          return 1;
        }
        if (a.col < b.col) {
          return -1;
        }
        if (a.col > b.col) {
          return 1;
        }
        return 0;
      });
    }
  }, {
    key: "getLayoutForDashCard",
    value: function getLayoutForDashCard(dashcard) {
      var _getVisualizationRaw = (0, _visualizations.getVisualizationRaw)([{ card: dashcard.card }]),
          CardVisualization = _getVisualizationRaw.CardVisualization;

      var initialSize = _dashboard_grid.DEFAULT_CARD_SIZE;
      var minSize = CardVisualization.minSize || _dashboard_grid.DEFAULT_CARD_SIZE;
      return {
        i: String(dashcard.id),
        x: dashcard.col || 0,
        y: dashcard.row || 0,
        w: dashcard.sizeX || initialSize.width,
        h: dashcard.sizeY || initialSize.height,
        dashcard: dashcard,
        minSize: minSize
      };
    }
  }, {
    key: "getLayout",
    value: function getLayout(props) {
      return props.dashboard.ordered_cards.map(this.getLayoutForDashCard);
    }
  }, {
    key: "renderRemoveModal",
    value: function renderRemoveModal() {
      var _this3 = this;

      // can't use PopoverWithTrigger due to strange interaction with ReactGridLayout
      var isOpen = this.state.removeModalDashCard != null;
      return _react2.default.createElement(
        _Modal2.default,
        { isOpen: isOpen },
        isOpen && _react2.default.createElement(_RemoveFromDashboardModal2.default, {
          dashcard: this.state.removeModalDashCard,
          dashboard: this.props.dashboard,
          removeCardFromDashboard: this.props.removeCardFromDashboard,
          onClose: function onClose() {
            return _this3.setState({ removeModalDashCard: null });
          }
        })
      );
    }
  }, {
    key: "renderAddSeriesModal",
    value: function renderAddSeriesModal() {
      var _this4 = this;

      // can't use PopoverWithTrigger due to strange interaction with ReactGridLayout
      var isOpen = this.state.addSeriesModalDashCard != null;
      return _react2.default.createElement(
        _Modal2.default,
        { className: "Modal AddSeriesModal", isOpen: isOpen },
        isOpen && _react2.default.createElement(_AddSeriesModal2.default, {
          dashcard: this.state.addSeriesModalDashCard,
          dashboard: this.props.dashboard,
          cards: this.props.cards,
          dashcardData: this.props.dashcardData,
          databases: this.props.databases,
          fetchCards: this.props.fetchCards,
          fetchCardData: this.props.fetchCardData,
          fetchDatabaseMetadata: this.props.fetchDatabaseMetadata,
          removeCardFromDashboard: this.props.removeCardFromDashboard,
          setDashCardAttributes: this.props.setDashCardAttributes,
          onClose: function onClose() {
            return _this4.setState({ addSeriesModalDashCard: null });
          }
        })
      );
    }

    // we need to track whether or not we're dragging so we can disable pointer events on action buttons :-/

  }, {
    key: "onDrag",
    value: function onDrag() {
      if (!this.state.isDragging) {
        this.setState({ isDragging: true });
      }
    }
  }, {
    key: "onDragStop",
    value: function onDragStop() {
      this.setState({ isDragging: false });
    }

    // we use onMouseDownCapture to prevent dragging due to react-grid-layout bug referenced below

  }, {
    key: "onDashCardMouseDown",
    value: function onDashCardMouseDown(e) {
      if (!this.props.isEditing) {
        e.stopPropagation();
      }
    }
  }, {
    key: "onDashCardRemove",
    value: function onDashCardRemove(dc) {
      this.setState({ removeModalDashCard: dc });
    }
  }, {
    key: "onDashCardAddSeries",
    value: function onDashCardAddSeries(dc) {
      this.setState({ addSeriesModalDashCard: dc });
    }
  }, {
    key: "renderDashCard",
    value: function renderDashCard(dc, isMobile) {
      return _react2.default.createElement(_DashCard2.default, {
        dashcard: dc,
        dashcardData: this.props.dashcardData,
        parameterValues: this.props.parameterValues,
        slowCards: this.props.slowCards,
        fetchCardData: this.props.fetchCardData,
        markNewCardSeen: this.props.markNewCardSeen,
        isEditing: this.props.isEditing,
        isEditingParameter: this.props.isEditingParameter,
        isFullscreen: this.props.isFullscreen,
        isMobile: isMobile,
        onRemove: this.onDashCardRemove.bind(this, dc),
        onAddSeries: this.onDashCardAddSeries.bind(this, dc),
        onUpdateVisualizationSettings: this.props.onUpdateDashCardVisualizationSettings.bind(this, dc.id),
        onReplaceAllVisualizationSettings: this.props.onReplaceAllDashCardVisualizationSettings.bind(this, dc.id),
        navigateToNewCardFromDashboard: this.props.navigateToNewCardFromDashboard,
        metadata: this.props.metadata
      });
    }
  }, {
    key: "renderMobile",
    value: function renderMobile() {
      var _this5 = this;

      var _props = this.props,
          isEditing = _props.isEditing,
          isEditingParameter = _props.isEditingParameter,
          width = _props.width;
      var dashcards = this.state.dashcards;

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("DashboardGrid", {
            "Dash--editing": isEditing,
            "Dash--editingParameter": isEditingParameter,
            "Dash--dragging": this.state.isDragging
          }),
          style: { margin: 0 }
        },
        dashcards && dashcards.map(function (dc) {
          return _react2.default.createElement(
            "div",
            {
              key: dc.id,
              className: "DashCard",
              style: {
                width: width,
                marginTop: 10,
                marginBottom: 10,
                height:
                // "text" cards should get a height based on their dc sizeY
                dc.card.display === "text" ? MOBILE_TEXT_CARD_ROW_HEIGHT * dc.sizeY : width / MOBILE_ASPECT_RATIO
              }
            },
            _this5.renderDashCard(dc, true)
          );
        })
      );
    }
  }, {
    key: "renderGrid",
    value: function renderGrid() {
      var _this6 = this;

      var _props2 = this.props,
          dashboard = _props2.dashboard,
          isEditing = _props2.isEditing,
          isEditingParameter = _props2.isEditingParameter,
          width = _props2.width;

      var rowHeight = Math.floor(width / _dashboard_grid.GRID_WIDTH / _dashboard_grid.GRID_ASPECT_RATIO);
      return _react2.default.createElement(
        _GridLayout2.default,
        {
          className: (0, _classnames2.default)("DashboardGrid", {
            "Dash--editing": isEditing,
            "Dash--editingParameter": isEditingParameter,
            "Dash--dragging": this.state.isDragging
          }),
          layout: this.state.layout,
          cols: _dashboard_grid.GRID_WIDTH,
          margin: _dashboard_grid.GRID_MARGIN,
          rowHeight: rowHeight,
          onLayoutChange: function onLayoutChange() {
            return _this6.onLayoutChange.apply(_this6, arguments);
          },
          onDrag: function onDrag() {
            return _this6.onDrag.apply(_this6, arguments);
          },
          onDragStop: function onDragStop() {
            return _this6.onDragStop.apply(_this6, arguments);
          },
          isEditing: isEditing
        },
        dashboard && dashboard.ordered_cards.map(function (dc) {
          return _react2.default.createElement(
            "div",
            {
              key: dc.id,
              className: "DashCard",
              onMouseDownCapture: _this6.onDashCardMouseDown,
              onTouchStartCapture: _this6.onDashCardMouseDown
            },
            _this6.renderDashCard(dc, false)
          );
        })
      );
    }
  }, {
    key: "render",
    value: function render() {
      var width = this.props.width;

      return _react2.default.createElement(
        "div",
        { className: "flex layout-centered" },
        width === 0 ? _react2.default.createElement("div", null) : width <= 752 ? this.renderMobile() : this.renderGrid(),
        this.renderRemoveModal(),
        this.renderAddSeriesModal()
      );
    }
  }]);

  return DashboardGrid;
}(_react.Component), _class2.propTypes = {
  isEditing: _propTypes2.default.bool.isRequired,
  isEditingParameter: _propTypes2.default.bool.isRequired,
  dashboard: _propTypes2.default.object.isRequired,
  parameterValues: _propTypes2.default.object.isRequired,
  cards: _propTypes2.default.array,

  setDashCardAttributes: _propTypes2.default.func.isRequired,
  removeCardFromDashboard: _propTypes2.default.func.isRequired,
  markNewCardSeen: _propTypes2.default.func.isRequired,
  fetchCardData: _propTypes2.default.func.isRequired,

  onUpdateDashCardVisualizationSettings: _propTypes2.default.func.isRequired,
  onReplaceAllDashCardVisualizationSettings: _propTypes2.default.func.isRequired,

  onChangeLocation: _propTypes2.default.func.isRequired
}, _class2.defaultProps = {
  width: 0,
  isEditing: false,
  isEditingParameter: false
}, _temp)) || _class;

DashboardGrid.displayName = "DashboardGrid";
exports.default = DashboardGrid;

/***/ }),

/***/ 310:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _initialiseProps;
/* eslint "react/prop-types": "warn" */


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _cxs = __webpack_require__(176);

var _cxs2 = _interopRequireDefault(_cxs);

var _OnClickOutsideWrapper = __webpack_require__(130);

var _OnClickOutsideWrapper2 = _interopRequireDefault(_OnClickOutsideWrapper);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _keyboard = __webpack_require__(69);

var _dom = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var inputBoxClasses = (0, _cxs2.default)({
  maxHeight: 130
});

// somewhat matches react-select's API: https://github.com/JedWatson/react-select
var TokenField = (_temp = _class = function (_Component) {
  _inherits(TokenField, _Component);

  function TokenField(props) {
    _classCallCheck(this, TokenField);

    var _this = _possibleConstructorReturn(this, (TokenField.__proto__ || Object.getPrototypeOf(TokenField)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      inputValue: "",
      searchValue: "",
      filteredOptions: [],
      selectedOptionValue: null,
      isFocused: props.autoFocus || false,
      isAllSelected: false,
      listIsHovered: false
    };
    return _this;
  }

  _createClass(TokenField, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this._updateFilteredValues(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this._updateFilteredValues(nextProps);
    }
  }, {
    key: "setInputValue",
    value: function setInputValue(inputValue) {
      var _this2 = this;

      var setSearchValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var newState = {
        inputValue: inputValue
      };
      if (setSearchValue) {
        newState.searchValue = inputValue;
      }
      this.setState(newState, function () {
        return _this2._updateFilteredValues(_this2.props);
      });
    }
  }, {
    key: "clearInputValue",
    value: function clearInputValue() {
      var clearSearchValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.setInputValue("", clearSearchValue);
    }
  }, {
    key: "_value",
    value: function _value(option) {
      var valueKey = this.props.valueKey;

      return typeof valueKey === "function" ? valueKey(option) : option[valueKey];
    }
  }, {
    key: "_label",
    value: function _label(option) {
      var labelKey = this.props.labelKey;

      return typeof labelKey === "function" ? labelKey(option) : option[labelKey];
    }
  }, {
    key: "_isLastFreeformValue",
    value: function _isLastFreeformValue(inputValue) {
      var _props = this.props,
          value = _props.value,
          parseFreeformValue = _props.parseFreeformValue,
          updateOnInputChange = _props.updateOnInputChange;

      if (parseFreeformValue && updateOnInputChange) {
        var freeformValue = parseFreeformValue(inputValue);
        var currentLastValue = value[value.length - 1];
        // check to see if the current last value is the same as the inputValue, in which case we should replace it or remove it
        return currentLastValue === freeformValue;
      }
    }

    // capture events on the input to allow for convenient keyboard shortcuts

  }, {
    key: "addSelectedOption",
    value: function addSelectedOption(e) {
      var _this3 = this;

      var multi = this.props.multi;
      var _state = this.state,
          filteredOptions = _state.filteredOptions,
          selectedOptionValue = _state.selectedOptionValue;

      var input = (0, _reactDom.findDOMNode)(this.refs.input);
      var option = _underscore2.default.find(filteredOptions, function (option) {
        return _this3._valueIsEqual(selectedOptionValue, _this3._value(option));
      });
      if (option) {
        this.addOption(option);
        // clear the input if the option is the same as the last value
        if (this._isLastFreeformValue(this._value(option))) {
          // also clear the search
          this.clearInputValue(true);
        } else {
          // only clear the search if this was the last option
          this.clearInputValue(filteredOptions.length === 1);
        }
        return true;
      } else if (this.props.parseFreeformValue) {
        // if we previously updated on input change then we don't need to do it again,
        if (this.props.updateOnInputChange) {
          // if multi=true also prevent the input from changing due to this key press
          if (multi) {
            e.preventDefault();
          }
          // and clear the input
          this.clearInputValue();
          // return false so we don't stop the keyDown from propagating in case we're listening
          // for it, e.x. in the filter popover this allows enter to commit the filter
          return false;
        } else {
          var _value2 = this.props.parseFreeformValue(input.value);
          if (_value2 != null && (multi || _value2 !== this.props.value[0])) {
            this.addValue(_value2);
            this.clearInputValue();
            return true;
          }
        }
      }
    }
  }, {
    key: "addValue",
    value: function addValue(valueToAdd) {
      var replaceLast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var _props2 = this.props,
          value = _props2.value,
          onChange = _props2.onChange,
          multi = _props2.multi;

      if (!Array.isArray(valueToAdd)) {
        valueToAdd = [valueToAdd];
      }
      if (multi) {
        if (replaceLast) {
          onChange(dedup(value.slice(0, -1).concat(valueToAdd)));
        } else {
          onChange(dedup(value.concat(valueToAdd)));
        }
      } else {
        onChange(valueToAdd.slice(0, 1));
      }
      // reset the input value
      // setTimeout(() =>
      //   this.setInputValue("")
      // )
    }
  }, {
    key: "removeValue",
    value: function removeValue(valueToRemove) {
      var _this4 = this;

      var _props3 = this.props,
          value = _props3.value,
          onChange = _props3.onChange;

      var values = value.filter(function (v) {
        return !_this4._valueIsEqual(v, valueToRemove);
      });
      onChange(values);
      // reset the input value
      // this.setInputValue("");
    }
  }, {
    key: "_valueIsEqual",
    value: function _valueIsEqual(v1, v2) {
      return JSON.stringify(v1) === JSON.stringify(v2);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevState.selectedOptionValue !== this.state.selectedOptionValue && this.scrollElement != null) {
        var element = (0, _reactDom.findDOMNode)(this.scrollElement);
        if (element && (0, _dom.isObscured)(element)) {
          element.scrollIntoView(element);
        }
      }
      // if we added a valkue then scroll to the last item (the input)
      if (this.props.value.length > prevProps.value.length) {
        var input = (0, _reactDom.findDOMNode)(this.refs.input);
        if (input && (0, _dom.isObscured)(input)) {
          input.scrollIntoView(input);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      var _props4 = this.props,
          value = _props4.value,
          placeholder = _props4.placeholder,
          multi = _props4.multi,
          optionRenderer = _props4.optionRenderer,
          valueRenderer = _props4.valueRenderer,
          layoutRenderer = _props4.layoutRenderer,
          color = _props4.color,
          parseFreeformValue = _props4.parseFreeformValue,
          updateOnInputChange = _props4.updateOnInputChange;
      var _state2 = this.state,
          inputValue = _state2.inputValue,
          searchValue = _state2.searchValue,
          filteredOptions = _state2.filteredOptions,
          isFocused = _state2.isFocused,
          isAllSelected = _state2.isAllSelected,
          selectedOptionValue = _state2.selectedOptionValue;


      if (!multi && isFocused) {
        inputValue = inputValue || value[0];
        value = [];
      }

      // if we have a value and updateOnInputChange is enabled, and the last value matches the inputValue
      if (value.length > 0 && updateOnInputChange && parseFreeformValue && value[value.length - 1] === parseFreeformValue(inputValue)) {
        if (isFocused) {
          // if focused, don't render the last value
          value = value.slice(0, -1);
        } else {
          // if not focused, don't render the inputValue
          inputValue = "";
        }
      }

      // if not focused we won't get key events to accept the selected value, so don't render as selected
      if (!isFocused) {
        selectedOptionValue = null;
      }

      // don't show the placeholder if we already have a value
      if (value.length > 0) {
        placeholder = null;
      }

      var valuesList = _react2.default.createElement(
        "ul",
        {
          className: (0, _classnames2.default)("border-bottom p1 pb2 flex flex-wrap bg-white scroll-x scroll-y", inputBoxClasses),
          style: this.props.style,
          onMouseDownCapture: this.onMouseDownCapture
        },
        value.map(function (v, index) {
          return _react2.default.createElement(
            "li",
            {
              key: index,
              className: (0, _classnames2.default)("mt1 ml1 py1 pl2 rounded bg-grey-05", multi ? "pr1" : "pr2")
            },
            _react2.default.createElement(
              "span",
              { className: "text-bold" },
              valueRenderer(v)
            ),
            multi && _react2.default.createElement(
              "a",
              {
                className: "text-grey-3 text-default-hover px1",
                onClick: function onClick(e) {
                  _this5.removeValue(v);
                  e.preventDefault();
                },
                onMouseDown: function onMouseDown(e) {
                  return e.preventDefault();
                }
              },
              _react2.default.createElement(_Icon2.default, { name: "close", className: "", size: 12 })
            )
          );
        }),
        _react2.default.createElement(
          "li",
          { className: "flex-full mr1 py1 pl1 mt1 bg-white" },
          _react2.default.createElement("input", {
            ref: "input",
            className: "full h4 text-bold text-default no-focus borderless"
            // set size to be small enough that it fits in a parameter.
            , size: 10,
            placeholder: placeholder,
            value: inputValue,
            autoFocus: isFocused,
            onKeyDown: this.onInputKeyDown,
            onChange: this.onInputChange,
            onFocus: this.onInputFocus,
            onBlur: this.onInputBlur,
            onPaste: this.onInputPaste
          })
        )
      );

      var optionsList = filteredOptions.length === 0 ? null : _react2.default.createElement(
        "ul",
        {
          className: "pl1 py1 scroll-y scroll-show border-bottom",
          style: { maxHeight: 300 },
          onMouseEnter: function onMouseEnter() {
            return _this5.setState({ listIsHovered: true });
          },
          onMouseLeave: function onMouseLeave() {
            return _this5.setState({ listIsHovered: false });
          }
        },
        filteredOptions.map(function (option) {
          return _react2.default.createElement(
            "li",
            { className: "mr1", key: _this5._value(option) },
            _react2.default.createElement(
              "div",
              {
                ref: _this5._valueIsEqual(selectedOptionValue, _this5._value(option)) ? function (_) {
                  return _this5.scrollElement = _;
                } : null,
                className: (0, _classnames2.default)("py1 pl1 pr2 block rounded text-bold text-" + color + "-hover inline-block full cursor-pointer", "bg-grey-0-hover", _defineProperty({}, "text-" + color + " bg-grey-0", !_this5.state.listIsHovered && _this5._valueIsEqual(selectedOptionValue, _this5._value(option)))),
                onClick: function onClick(e) {
                  _this5.addOption(option);
                  // clear the input value, and search value if last option
                  _this5.clearInputValue(filteredOptions.length === 1);
                  e.preventDefault();
                },
                onMouseDown: function onMouseDown(e) {
                  return e.preventDefault();
                }
              },
              optionRenderer(option)
            )
          );
        })
      );

      return layoutRenderer({
        valuesList: valuesList,
        optionsList: optionsList,
        isFocused: isFocused,
        isAllSelected: isAllSelected,
        isFiltered: !!searchValue,
        onClose: this.onClose
      });
    }
  }]);

  return TokenField;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.array,
  options: _propTypes2.default.array,
  placeholder: _propTypes2.default.string,
  autoFocus: _propTypes2.default.bool,
  multi: _propTypes2.default.bool,

  style: _propTypes2.default.object,
  color: _propTypes2.default.string,

  valueKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]),
  labelKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]),

  removeSelected: _propTypes2.default.bool,
  filterOption: _propTypes2.default.func,

  onChange: _propTypes2.default.func.isRequired,
  onInputChange: _propTypes2.default.func,
  onInputKeyDown: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func,

  updateOnInputChange: _propTypes2.default.bool,
  // if provided, parseFreeformValue parses the input string into a value,
  // or returns null to indicate an invalid value
  parseFreeformValue: _propTypes2.default.func,

  valueRenderer: _propTypes2.default.func.isRequired, // TODO: default
  optionRenderer: _propTypes2.default.func.isRequired, // TODO: default
  layoutRenderer: _propTypes2.default.func
}, _class.defaultProps = {
  removeSelected: true,

  // $FlowFixMe
  valueKey: "value",
  labelKey: "label",

  valueRenderer: function valueRenderer(value) {
    return _react2.default.createElement(
      "span",
      null,
      value
    );
  },
  optionRenderer: function optionRenderer(option) {
    return _react2.default.createElement(
      "span",
      null,
      option
    );
  },
  layoutRenderer: function layoutRenderer(props) {
    return _react2.default.createElement(DefaultTokenFieldLayout, props);
  },

  color: "brand"
}, _initialiseProps = function _initialiseProps() {
  var _this6 = this;

  this.scrollElement = null;

  this._updateFilteredValues = function (props) {
    var options = props.options,
        value = props.value,
        removeSelected = props.removeSelected,
        filterOption = props.filterOption;
    var _state3 = _this6.state,
        searchValue = _state3.searchValue,
        selectedOptionValue = _state3.selectedOptionValue;

    var selectedValues = new Set(value.map(function (v) {
      return JSON.stringify(v);
    }));

    if (!filterOption) {
      filterOption = function filterOption(option, searchValue) {
        return String(_this6._label(option) || "").indexOf(searchValue) >= 0;
      };
    }

    var selectedCount = 0;
    var filteredOptions = options.filter(function (option) {
      var isSelected = selectedValues.has(JSON.stringify(_this6._value(option)));
      var isLastFreeform = _this6._isLastFreeformValue(_this6._value(option)) && _this6._isLastFreeformValue(searchValue);
      var isMatching = filterOption(option, searchValue);
      if (isSelected) {
        selectedCount++;
      }
      // filter out options who have already been selected, unless:
      return (
        // remove selected is disabled
        (!removeSelected ||
        // or it's not in the selectedValues
        !isSelected ||
        // or it's the current "freeform" value, which updates as we type
        isLastFreeform) &&
        // and it's matching
        isMatching
      );
    });

    if (selectedOptionValue == null || !_underscore2.default.find(filteredOptions, function (option) {
      return _this6._valueIsEqual(selectedOptionValue, _this6._value(option));
    })) {
      // if there are results based on the user's typing...
      if (filteredOptions.length > 0) {
        // select the first option in the list and set the selected option to that
        selectedOptionValue = _this6._value(filteredOptions[0]);
      } else {
        selectedOptionValue = null;
      }
    }

    _this6.setState({
      filteredOptions: filteredOptions,
      selectedOptionValue: selectedOptionValue,
      isAllSelected: options.length > 0 && selectedCount === options.length
    });
  };

  this.onInputChange = function (_ref) {
    var value = _ref.target.value;
    var _props5 = _this6.props,
        updateOnInputChange = _props5.updateOnInputChange,
        onInputChange = _props5.onInputChange,
        parseFreeformValue = _props5.parseFreeformValue;


    if (onInputChange) {
      value = onInputChange(value) || "";
    }

    // update the input value
    _this6.setInputValue(value);

    // if updateOnInputChange is true and parseFreeformValue is enabled then try adding/updating the freeform value immediately
    if (updateOnInputChange && parseFreeformValue) {
      var replaceLast = _this6._isLastFreeformValue(_this6.state.inputValue);
      // call parseFreeformValue to make sure we can add it
      var freeformValue = parseFreeformValue(value);
      if (freeformValue != null) {
        // if so, add it, replacing the last value if necessary
        _this6.addValue(freeformValue, replaceLast);
      } else {
        // otherwise remove the value if necessary, e.x. after deleting
        if (replaceLast) {
          _this6.removeValue(parseFreeformValue(_this6.state.inputValue));
        }
      }
    }
  };

  this.onInputKeyDown = function (event) {
    if (_this6.props.onInputKeyDown) {
      _this6.props.onInputKeyDown(event);
    }

    var keyCode = event.keyCode;

    var _state4 = _this6.state,
        filteredOptions = _state4.filteredOptions,
        selectedOptionValue = _state4.selectedOptionValue;

    // enter, tab, comma

    if (keyCode === _keyboard.KEYCODE_ESCAPE || keyCode === _keyboard.KEYCODE_TAB || keyCode === _keyboard.KEYCODE_COMMA || keyCode === _keyboard.KEYCODE_ENTER) {
      if (_this6.addSelectedOption(event)) {
        event.stopPropagation();
      }
    } else if (event.keyCode === _keyboard.KEYCODE_UP) {
      // up arrow
      event.preventDefault();
      var index = _underscore2.default.findIndex(filteredOptions, function (option) {
        return _this6._valueIsEqual(selectedOptionValue, _this6._value(option));
      });
      if (index > 0) {
        _this6.setState({
          selectedOptionValue: _this6._value(filteredOptions[index - 1])
        });
      }
    } else if (keyCode === _keyboard.KEYCODE_DOWN) {
      // down arrow
      event.preventDefault();
      var _index = _underscore2.default.findIndex(filteredOptions, function (option) {
        return _this6._valueIsEqual(selectedOptionValue, _this6._value(option));
      });
      if (_index >= 0 && _index < filteredOptions.length - 1) {
        _this6.setState({
          selectedOptionValue: _this6._value(filteredOptions[_index + 1])
        });
      }
    } else if (keyCode === _keyboard.KEYCODE_BACKSPACE) {
      // backspace
      var _value3 = _this6.props.value;

      if (!_this6.state.inputValue && _value3.length > 0) {
        _this6.removeValue(_value3[_value3.length - 1]);
      }
    }
  };

  this.onInputFocus = function () {
    if (_this6.props.onFocus) {
      _this6.props.onFocus();
    }
    _this6.setState({ isFocused: true, searchValue: _this6.state.inputValue }, function () {
      return _this6._updateFilteredValues(_this6.props);
    });
  };

  this.onInputBlur = function () {
    if (_this6.props.onBlur) {
      _this6.props.onBlur();
    }
    _this6.setState({ isFocused: false });
  };

  this.onInputPaste = function (e) {
    if (_this6.props.parseFreeformValue) {
      e.preventDefault();
      var string = e.clipboardData.getData("Text");
      var values = _this6.props.multi ? string.split(/\n|,/g).map(_this6.props.parseFreeformValue).filter(function (s) {
        return s;
      }) : [string];
      if (values.length > 0) {
        _this6.addValue(values);
      }
    }
  };

  this.onMouseDownCapture = function (e) {
    var input = (0, _reactDom.findDOMNode)(_this6.refs.input);
    input.focus();
    // prevents clicks from blurring input while still allowing text selection:
    if (input !== e.target) {
      e.preventDefault();
    }
  };

  this.onClose = function () {
    _this6.setState({ isFocused: false });
  };

  this.addOption = function (option) {
    var replaceLast = _this6._isLastFreeformValue(_this6.state.inputValue);
    // add the option's value to the current value
    _this6.addValue(_this6._value(option), replaceLast);
  };
}, _temp);
TokenField.displayName = "TokenField";
exports.default = TokenField;


var dedup = function dedup(array) {
  return Array.from(new Set(array));
};

var DefaultTokenFieldLayout = function DefaultTokenFieldLayout(_ref2) {
  var valuesList = _ref2.valuesList,
      optionsList = _ref2.optionsList,
      isFocused = _ref2.isFocused,
      onClose = _ref2.onClose;
  return _react2.default.createElement(
    _OnClickOutsideWrapper2.default,
    { handleDismissal: onClose },
    _react2.default.createElement(
      "div",
      null,
      valuesList,
      _react2.default.createElement(
        _Popover2.default,
        {
          isOpen: isFocused && !!optionsList,
          hasArrow: false,
          tetherOptions: {
            attachment: "top left",
            targetAttachment: "bottom left",
            targetOffset: "10 0"
          }
        },
        optionsList
      )
    )
  );
};

DefaultTokenFieldLayout.displayName = "DefaultTokenFieldLayout";
DefaultTokenFieldLayout.propTypes = {
  valuesList: _propTypes2.default.element.isRequired,
  optionsList: _propTypes2.default.element,
  isFocused: _propTypes2.default.bool,
  onClose: _propTypes2.default.func
};

/***/ }),

/***/ 326:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BackgroundJobRequest = exports.RestfulRequest = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["Background job result isn't available for an unknown reason"], ["Background job result isn't available for an unknown reason"]);

var _services = __webpack_require__(15);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _extendableBuiltin(cls) {
  function ExtendableBuiltin() {
    var instance = Reflect.construct(cls, Array.from(arguments));
    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    return instance;
  }

  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
    constructor: {
      value: cls,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ExtendableBuiltin, cls);
  } else {
    ExtendableBuiltin.__proto__ = cls;
  }

  return ExtendableBuiltin;
}

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RestfulRequest =

// Name of the request result property
// In general, using the default value `result` is good for consistency
// but using an existing prop name (like `xray` or `dashboard`) temporarily
// can make the migration process from old implementation to this request API a lot easier

// API endpoint that is used for the request
exports.RestfulRequest = function RestfulRequest() {
  var _this = this;

  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      endpoint = _ref.endpoint,
      actionPrefix = _ref.actionPrefix,
      resultPropName = _ref.resultPropName,
      storeAsDictionary = _ref.storeAsDictionary;

  _classCallCheck(this, RestfulRequest);

  this.endpoint = null;
  this.actionPrefix = null;
  this.resultPropName = "result";
  this.storeAsDictionary = false;

  this.trigger = function (params) {
    return function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch) {
        var result;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                dispatch.action(_this.actions.requestStarted);
                _context.prev = 1;
                _context.next = 4;
                return _this.endpoint(params);

              case 4:
                result = _context.sent;

                dispatch.action(_this.actions.requestSuccessful, { result: result });
                _context.next = 12;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);

                dispatch.action(_this.actions.requestFailed, { error: _context.t0 });
                throw _context.t0;

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, _this, [[1, 8]]);
      }));

      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }();
  };

  this.reset = function () {
    return function (dispatch) {
      return dispatch(_this.actions.reset);
    };
  };

  this.mergeToDictionary = function (dict, result) {
    dict = dict || {};
    result = _underscore2.default.isArray(result) ? _underscore2.default.indexBy(result, "id") : _defineProperty({}, result.id, result);

    return _extends({}, dict, result);
  };

  this.getReducers = function () {
    var _ref6;

    return _ref6 = {}, _defineProperty(_ref6, _this.actions.requestStarted, function (state) {
      return _extends({}, state, {
        loading: true,
        error: null
      });
    }), _defineProperty(_ref6, _this.actions.requestSuccessful, function (state, _ref4) {
      var _extends2;

      var result = _ref4.payload.result;
      return _extends({}, state, (_extends2 = {}, _defineProperty(_extends2, _this.resultPropName, _this.storeAsDictionary ? _this.mergeToDictionary(state[_this.resultPropName], result) : result), _defineProperty(_extends2, "loading", false), _defineProperty(_extends2, "fetched", true), _defineProperty(_extends2, "error", null), _extends2));
    }), _defineProperty(_ref6, _this.actions.requestFailed, function (state, _ref5) {
      var error = _ref5.payload.error;
      return _extends({}, state, {
        loading: false,
        error: error
      });
    }), _defineProperty(_ref6, _this.actions.resetRequest, function (state) {
      return _extends({}, state, _this.getDefaultState());
    }), _ref6;
  };

  this.getDefaultState = function () {
    var _ref7;

    return _ref7 = {}, _defineProperty(_ref7, _this.resultPropName, null), _defineProperty(_ref7, "loading", false), _defineProperty(_ref7, "fetched", false), _defineProperty(_ref7, "error", null), _ref7;
  };

  this.endpoint = endpoint;
  this.actionPrefix = actionPrefix;
  this.resultPropName = resultPropName || this.resultPropName;
  this.storeAsDictionary = storeAsDictionary;

  this.actions = {
    requestStarted: this.actionPrefix + "/REQUEST_STARTED",
    requestSuccessful: this.actionPrefix + "/REQUEST_SUCCESSFUL",
    requestFailed: this.actionPrefix + "/REQUEST_FAILED",
    resetRequest: this.actionPrefix + "/REQUEST_RESET"
  };
}

// Triggers the request; modelled as a Redux thunk action so wrap this to `dispatch()` call


// If `true`, then the result (either an object an array) will be converted to a dictionary
// where the dictionary key is the `id` field of the result.
// This dictionary is merged to the possibly pre-existing dictionary.


// Prefix for request Redux actions
;

var POLLING_INTERVAL = 100;

var BackgroundJobRequest =

// Name of the request result property
// In general, using the default value `result` is good for consistency
// but using an existing prop name (like `xray` or `dashboard`) temporarily
// can make the migration process from old implementation to this request API a lot easier

// API endpoint that creates a new background job
exports.BackgroundJobRequest = function BackgroundJobRequest() {
  var _this2 = this;

  var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      creationEndpoint = _ref8.creationEndpoint,
      actionPrefix = _ref8.actionPrefix,
      resultPropName = _ref8.resultPropName;

  _classCallCheck(this, BackgroundJobRequest);

  this.creationEndpoint = null;
  this.actionPrefix = null;
  this.resultPropName = "result";
  this.pollingTimeoutId = null;

  this.trigger = function (params) {
    return function () {
      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch) {
        var newJobId, result;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                dispatch.action(_this2.actions.requestStarted);

                _context2.prev = 1;
                _context2.next = 4;
                return _this2._createNewJob(params);

              case 4:
                newJobId = _context2.sent;
                _context2.next = 7;
                return _this2._pollForResult(newJobId);

              case 7:
                result = _context2.sent;

                dispatch.action(_this2.actions.requestSuccessful, { result: result });
                _context2.next = 15;
                break;

              case 11:
                _context2.prev = 11;
                _context2.t0 = _context2["catch"](1);

                dispatch.action(_this2.actions.requestFailed, { error: _context2.t0 });
                throw _context2.t0;

              case 15:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, _this2, [[1, 11]]);
      }));

      return function (_x4) {
        return _ref9.apply(this, arguments);
      };
    }();
  };

  this._createNewJob = function () {
    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(requestParams) {
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return _this2.creationEndpoint(requestParams);

            case 2:
              return _context3.abrupt("return", _context3.sent["job-id"]);

            case 3:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, _this2);
    }));

    return function (_x5) {
      return _ref10.apply(this, arguments);
    };
  }();

  this._pollForResult = function (jobId) {
    if (_this2.pollingTimeoutId) {
      clearTimeout(_this2.pollingTimeoutId);
    }

    return new Promise(function (resolve, reject) {
      var poll = function () {
        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
          var response;
          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  _context4.prev = 0;
                  _context4.next = 3;
                  return _services.AsyncApi.status({ jobId: jobId });

                case 3:
                  response = _context4.sent;

                  if (!(response.status === "done")) {
                    _context4.next = 8;
                    break;
                  }

                  resolve(response.result);
                  _context4.next = 13;
                  break;

                case 8:
                  if (!(response.status === "error")) {
                    _context4.next = 12;
                    break;
                  }

                  throw new Error(response.result.cause);

                case 12:
                  if (response.status === "result-not-available") {
                    // The job result has been deleted; this is an unexpected state as we just
                    // created the job so simply throw a descriptive error
                    reject(new ResultNoAvailableError());
                  } else {
                    _this2.pollingTimeoutId = setTimeout(poll, POLLING_INTERVAL);
                  }

                case 13:
                  _context4.next = 19;
                  break;

                case 15:
                  _context4.prev = 15;
                  _context4.t0 = _context4["catch"](0);

                  _this2.pollingTimeoutId = null;
                  reject(_context4.t0);

                case 19:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, _this2, [[0, 15]]);
        }));

        return function poll() {
          return _ref11.apply(this, arguments);
        };
      }();

      poll();
    });
  };

  this.reset = function () {
    return function (dispatch) {
      return dispatch(_this2.actions.reset);
    };
  };

  this.getReducers = function () {
    var _ref14;

    return _ref14 = {}, _defineProperty(_ref14, _this2.actions.requestStarted, function (state) {
      return _extends({}, state, {
        loading: true,
        error: null
      });
    }), _defineProperty(_ref14, _this2.actions.requestSuccessful, function (state, _ref12) {
      var _extends3;

      var result = _ref12.payload.result;
      return _extends({}, state, (_extends3 = {}, _defineProperty(_extends3, _this2.resultPropName, result), _defineProperty(_extends3, "loading", false), _defineProperty(_extends3, "fetched", true), _defineProperty(_extends3, "error", null), _extends3));
    }), _defineProperty(_ref14, _this2.actions.requestFailed, function (state, _ref13) {
      var error = _ref13.payload.error;
      return _extends({}, state, {
        loading: false,
        error: error
      });
    }), _defineProperty(_ref14, _this2.actions.resetRequest, function (state) {
      return _extends({}, state, _this2.getDefaultState());
    }), _ref14;
  };

  this.getDefaultState = function () {
    var _ref15;

    return _ref15 = {}, _defineProperty(_ref15, _this2.resultPropName, null), _defineProperty(_ref15, "loading", false), _defineProperty(_ref15, "fetched", false), _defineProperty(_ref15, "error", null), _ref15;
  };

  this.creationEndpoint = creationEndpoint;
  this.actionPrefix = actionPrefix;
  this.resultPropName = resultPropName || this.resultPropName;

  this.actions = {
    requestStarted: this.actionPrefix + "/REQUEST_STARTED",
    requestSuccessful: this.actionPrefix + "/REQUEST_SUCCESSFUL",
    requestFailed: this.actionPrefix + "/REQUEST_FAILED",
    resetRequest: this.actionPrefix + "/REQUEST_RESET"
  };
}

// Triggers the request; modelled as a Redux thunk action so wrap this to `dispatch()` call


// Prefix for request Redux actions
;

var ResultNoAvailableError = function (_extendableBuiltin2) {
  _inherits(ResultNoAvailableError, _extendableBuiltin2);

  function ResultNoAvailableError() {
    _classCallCheck(this, ResultNoAvailableError);

    var _this3 = _possibleConstructorReturn(this, (ResultNoAvailableError.__proto__ || Object.getPrototypeOf(ResultNoAvailableError)).call(this));

    _this3.message = (0, _c3po.t)(_templateObject);
    return _this3;
  }

  return ResultNoAvailableError;
}(_extendableBuiltin(Error));

/***/ }),

/***/ 33:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Option = exports.SelectButton = exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp3, _class3, _temp4, _class4, _temp5; /* eslint "react/prop-types": "warn" */


var _templateObject = _taggedTemplateLiteral(["Nothing to select"], ["Nothing to select"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactVirtualized = __webpack_require__(166);

__webpack_require__(414);

var _c3po = __webpack_require__(2);

var _ColumnarSelector = __webpack_require__(333);

var _ColumnarSelector2 = _interopRequireDefault(_ColumnarSelector);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Select = (_temp = _class = function (_Component) {
  _inherits(Select, _Component);

  function Select() {
    _classCallCheck(this, Select);

    return _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).apply(this, arguments));
  }

  _createClass(Select, [{
    key: "render",
    value: function render() {
      if (this.props.children) {
        return _react2.default.createElement(BrowserSelect, this.props);
      } else {
        return _react2.default.createElement(LegacySelect, this.props);
      }
    }
  }]);

  return Select;
}(_react.Component), _class.propTypes = {
  children: _propTypes2.default.any
}, _temp);
Select.displayName = "Select";
exports.default = Select;
var BrowserSelect = (_temp3 = _class2 = function (_Component2) {
  _inherits(BrowserSelect, _Component2);

  function BrowserSelect() {
    var _ref;

    var _temp2, _this2, _ret;

    _classCallCheck(this, BrowserSelect);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref = BrowserSelect.__proto__ || Object.getPrototypeOf(BrowserSelect)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {
      inputValue: ""
    }, _temp2), _possibleConstructorReturn(_this2, _ret);
  }

  _createClass(BrowserSelect, [{
    key: "isSelected",
    value: function isSelected(otherValue) {
      var value = this.props.value;

      return value === otherValue || (value == null || value === "") && (otherValue == null || otherValue === "");
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          className = _props.className,
          value = _props.value,
          onChange = _props.onChange,
          searchProp = _props.searchProp,
          searchCaseInsensitive = _props.searchCaseInsensitive,
          isInitiallyOpen = _props.isInitiallyOpen,
          placeholder = _props.placeholder,
          triggerElement = _props.triggerElement,
          width = _props.width,
          height = _props.height,
          rowHeight = _props.rowHeight;


      var children = this.props.children;

      var selectedName = void 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var child = _step.value;

          if (this.isSelected(child.props.value)) {
            selectedName = child.props.children;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (selectedName == null && placeholder) {
        selectedName = placeholder;
      }

      var inputValue = this.state.inputValue;

      var filter = function filter() {
        return true;
      };
      if (searchProp && inputValue) {
        filter = function filter(child) {
          var childValue = String(child.props[searchProp] || "");
          if (!inputValue) {
            return false;
          } else if (searchCaseInsensitive) {
            return childValue.toLowerCase().startsWith(inputValue.toLowerCase());
          } else {
            return childValue.startsWith(inputValue);
          }
        };
      }

      // make sure we filter by the search query
      children = children.filter(filter);

      var extraProps = {};
      if (this.props.compact) {
        extraProps = {
          tetherOptions: {
            attachment: "top left",
            targetAttachment: "bottom left",
            targetOffset: "0px 0px"
          },
          hasArrow: false
        };
      }

      return _react2.default.createElement(
        _PopoverWithTrigger2.default,
        _extends({
          ref: "popover",
          className: className,
          triggerElement: triggerElement || _react2.default.createElement(
            SelectButton,
            { hasValue: !!value },
            selectedName
          ),
          triggerClasses: className,
          verticalAttachments: ["top", "bottom"],
          isInitiallyOpen: isInitiallyOpen
        }, extraProps),
        _react2.default.createElement(
          "div",
          { className: "flex flex-column" },
          searchProp && _react2.default.createElement("input", {
            className: "AdminSelect m1 flex-full",
            value: inputValue,
            onChange: function onChange(e) {
              return _this3.setState({ inputValue: e.target.value });
            },
            autoFocus: true
          }),
          _react2.default.createElement(_reactVirtualized.List, {
            width: width,
            height:
            // check to see if the height of the number of rows is less than the provided (or default)
            // height. if so, set the height to the number of rows * the row height so that
            // large blank spaces at the bottom are prevented
            children.length * rowHeight < height ? children.length * rowHeight : height,
            rowHeight: rowHeight,
            rowCount: children.length,
            rowRenderer: function rowRenderer(_ref2) {
              var index = _ref2.index,
                  key = _ref2.key,
                  style = _ref2.style;

              var child = children[index];

              /*
                             * for each child we need to add props based on
                             * the parent's onClick and the current selection
                             * status, so we use cloneElement here
                            * */
              return _react2.default.createElement(
                "div",
                { key: key, style: style, onClick: function onClick(e) {
                    return e.stopPropagation();
                  } },
                _react2.default.cloneElement(children[index], {
                  selected: _this3.isSelected(child.props.value),
                  onClick: function onClick() {
                    if (!child.props.disabled) {
                      onChange({ target: { value: child.props.value } });
                    }
                    _this3.refs.popover.close();
                  }
                })
              );
            }
          })
        )
      );
    }
  }]);

  return BrowserSelect;
}(_react.Component), _class2.propTypes = {
  children: _propTypes2.default.array.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  value: _propTypes2.default.any,
  searchProp: _propTypes2.default.string,
  searchCaseInsensitive: _propTypes2.default.bool,
  isInitiallyOpen: _propTypes2.default.bool,
  placeholder: _propTypes2.default.string,
  // NOTE - @kdoh
  // seems too generic for us?
  triggerElement: _propTypes2.default.any,
  height: _propTypes2.default.number,
  width: _propTypes2.default.number,
  rowHeight: _propTypes2.default.number,
  // TODO - @kdoh
  // we should not allow this
  className: _propTypes2.default.string,
  compact: _propTypes2.default.bool
}, _class2.defaultProps = {
  className: "",
  width: 320,
  height: 320,
  rowHeight: 40
}, _temp3);
BrowserSelect.displayName = "BrowserSelect";
var SelectButton = exports.SelectButton = function SelectButton(_ref3) {
  var hasValue = _ref3.hasValue,
      children = _ref3.children;
  return _react2.default.createElement(
    "div",
    {
      className: "AdminSelect border-med flex align-center " + (!hasValue ? " text-grey-3" : "")
    },
    _react2.default.createElement(
      "span",
      { className: "AdminSelect-content mr1" },
      children
    ),
    _react2.default.createElement(_Icon2.default, {
      className: "AdminSelect-chevron flex-align-right",
      name: "chevrondown",
      size: 12
    })
  );
};

SelectButton.displayName = "SelectButton";
SelectButton.propTypes = {
  hasValue: _propTypes2.default.bool,
  children: _propTypes2.default.any
};

var Option = exports.Option = (_temp4 = _class3 = function (_Component3) {
  _inherits(Option, _Component3);

  function Option() {
    _classCallCheck(this, Option);

    return _possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).apply(this, arguments));
  }

  _createClass(Option, [{
    key: "render",
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          selected = _props2.selected,
          disabled = _props2.disabled,
          icon = _props2.icon,
          iconColor = _props2.iconColor,
          iconSize = _props2.iconSize,
          onClick = _props2.onClick;

      return _react2.default.createElement(
        "div",
        {
          onClick: onClick,
          className: (0, _classnames2.default)("ColumnarSelector-row flex align-center cursor-pointer no-decoration relative", {
            "ColumnarSelector-row--selected": selected,
            disabled: disabled
          })
        },
        _react2.default.createElement(_Icon2.default, { name: "check", size: 14, style: { position: "absolute" } }),
        icon && _react2.default.createElement(_Icon2.default, {
          name: icon,
          size: iconSize,
          style: {
            position: "absolute",
            color: iconColor,
            visibility: !selected ? "visible" : "hidden"
          }
        }),
        _react2.default.createElement(
          "span",
          { className: "ml4 no-decoration" },
          children
        )
      );
    }
  }]);

  return Option;
}(_react.Component), _class3.propTypes = {
  children: _propTypes2.default.any,
  selected: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  onClick: _propTypes2.default.func,
  icon: _propTypes2.default.string,
  iconColor: _propTypes2.default.string,
  iconSize: _propTypes2.default.number
}, _temp4);
Option.displayName = "Option";
var LegacySelect = (_temp5 = _class4 = function (_Component4) {
  _inherits(LegacySelect, _Component4);

  function LegacySelect() {
    _classCallCheck(this, LegacySelect);

    return _possibleConstructorReturn(this, (LegacySelect.__proto__ || Object.getPrototypeOf(LegacySelect)).apply(this, arguments));
  }

  _createClass(LegacySelect, [{
    key: "toggle",
    value: function toggle() {
      this.refs.popover.toggle();
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      var _props3 = this.props,
          className = _props3.className,
          value = _props3.value,
          values = _props3.values,
          onChange = _props3.onChange,
          options = _props3.options,
          disabledOptionIds = _props3.disabledOptionIds,
          optionNameFn = _props3.optionNameFn,
          optionValueFn = _props3.optionValueFn,
          placeholder = _props3.placeholder,
          emptyPlaceholder = _props3.emptyPlaceholder,
          isInitiallyOpen = _props3.isInitiallyOpen,
          disabled = _props3.disabled;


      var selectedName = value ? optionNameFn(value) : options && options.length > 0 ? placeholder : emptyPlaceholder;

      var triggerElement = _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("flex align-center", !value && (!values || values.length === 0) ? " text-grey-2" : "")
        },
        values && values.length !== 0 ? values.map(function (value) {
          return optionNameFn(value);
        }).sort().map(function (name, index) {
          return _react2.default.createElement(
            "span",
            { key: index, className: "mr1" },
            "" + name + (index !== values.length - 1 ? ",   " : "")
          );
        }) : _react2.default.createElement(
          "span",
          { className: "mr1" },
          selectedName
        ),
        _react2.default.createElement(_Icon2.default, { className: "flex-align-right", name: "chevrondown", size: 12 })
      );

      var sections = {};
      options.forEach(function (option) {
        var sectionName = option.section || "";
        sections[sectionName] = sections[sectionName] || {
          title: sectionName || undefined,
          items: []
        };
        sections[sectionName].items.push(option);
      });
      sections = Object.keys(sections).map(function (sectionName) {
        return sections[sectionName];
      });

      var columns = [{
        selectedItem: value,
        selectedItems: values,
        sections: sections,
        disabledOptionIds: disabledOptionIds,
        itemTitleFn: optionNameFn,
        itemDescriptionFn: function itemDescriptionFn(item) {
          return item.description;
        },
        itemSelectFn: function itemSelectFn(item) {
          onChange(optionValueFn(item));
          if (!values) {
            _this6.toggle();
          }
        }
      }];

      var disablePopover = disabled || !options || options.length === 0;

      return _react2.default.createElement(
        _PopoverWithTrigger2.default,
        {
          ref: "popover",
          className: className,
          triggerElement: triggerElement,
          triggerClasses: this.props.triggerClasses || (0, _classnames2.default)("AdminSelect", this.props.className),
          isInitiallyOpen: isInitiallyOpen,
          disabled: disablePopover
        },
        _react2.default.createElement(
          "div",
          { onClick: function onClick(e) {
              return e.stopPropagation();
            } },
          _react2.default.createElement(_ColumnarSelector2.default, { columns: columns })
        )
      );
    }
  }]);

  return LegacySelect;
}(_react.Component), _class4.propTypes = {
  value: _propTypes2.default.any,
  values: _propTypes2.default.array,
  options: _propTypes2.default.array.isRequired,
  disabledOptionIds: _propTypes2.default.array,
  placeholder: _propTypes2.default.string,
  emptyPlaceholder: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  optionNameFn: _propTypes2.default.func,
  optionValueFn: _propTypes2.default.func,
  className: _propTypes2.default.string,
  isInitiallyOpen: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  //TODO: clean up hardcoded "AdminSelect" class on trigger to avoid this workaround
  triggerClasses: _propTypes2.default.string
}, _class4.defaultProps = {
  placeholder: "",
  emptyPlaceholder: (0, _c3po.t)(_templateObject),
  disabledOptionIds: [],
  optionNameFn: function optionNameFn(option) {
    return option.name;
  },
  optionValueFn: function optionValueFn(option) {
    return option;
  },
  isInitiallyOpen: false
}, _temp5);
LegacySelect.displayName = "LegacySelect";

/***/ }),

/***/ 332:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _initialiseProps;

var _templateObject = _taggedTemplateLiteral(["not implemented ", ""], ["not implemented ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["true"], ["true"]),
    _templateObject3 = _taggedTemplateLiteral(["false"], ["false"]),
    _templateObject4 = _taggedTemplateLiteral(["Add filter"], ["Add filter"]),
    _templateObject5 = _taggedTemplateLiteral(["Update filter"], ["Update filter"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _FieldList = __webpack_require__(136);

var _FieldList2 = _interopRequireDefault(_FieldList);

var _OperatorSelector = __webpack_require__(413);

var _OperatorSelector2 = _interopRequireDefault(_OperatorSelector);

var _FilterOptions = __webpack_require__(243);

var _FilterOptions2 = _interopRequireDefault(_FilterOptions);

var _DatePicker = __webpack_require__(137);

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _TimePicker = __webpack_require__(421);

var _TimePicker2 = _interopRequireDefault(_TimePicker);

var _NumberPicker = __webpack_require__(422);

var _NumberPicker2 = _interopRequireDefault(_NumberPicker);

var _SelectPicker = __webpack_require__(248);

var _SelectPicker2 = _interopRequireDefault(_SelectPicker);

var _TextPicker = __webpack_require__(247);

var _TextPicker2 = _interopRequireDefault(_TextPicker);

var _FieldValuesWidget = __webpack_require__(249);

var _FieldValuesWidget2 = _interopRequireDefault(_FieldValuesWidget);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _schema_metadata = __webpack_require__(10);

var _formatting = __webpack_require__(8);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterPopover = (_temp = _class = function (_Component) {
  _inherits(FilterPopover, _Component);

  function FilterPopover(props) {
    _classCallCheck(this, FilterPopover);

    var _this = _possibleConstructorReturn(this, (FilterPopover.__proto__ || Object.getPrototypeOf(FilterPopover)).call(this, props));

    _initialiseProps.call(_this);

    var filter = props.filter || [];
    _this.state = {
      // $FlowFixMe
      filter: filter
    };
    return _this;
  }

  _createClass(FilterPopover, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      window.addEventListener("keydown", this.commitOnEnter);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener("keydown", this.commitOnEnter);
    }
  }, {
    key: "setValue",
    value: function setValue(index, value) {
      var filter = this.state.filter;
      // $FlowFixMe Flow doesn't like spread operator

      var newFilter = [].concat(_toConsumableArray(filter));
      newFilter[index + 2] = value;
      this.setState({ filter: newFilter });
    }
  }, {
    key: "_updateOperator",
    value: function _updateOperator(oldFilter, operatorName) {
      var query = this.props.query;

      var _query$table$fieldTar = query.table().fieldTarget(oldFilter[1]),
          field = _query$table$fieldTar.field;

      var operator = field.operator(operatorName);
      var oldOperator = field.operator(oldFilter[0]);

      // update the operator
      // $FlowFixMe
      var filter = [operatorName, oldFilter[1]];

      if (operator) {
        for (var i = 0; i < operator.fields.length; i++) {
          if (operator.fields[i].default !== undefined) {
            filter.push(operator.fields[i].default);
          } else {
            filter.push(undefined);
          }
        }
        if (operator.optionsDefaults) {
          filter.push(operator.optionsDefaults);
        }
        if (oldOperator) {
          // copy over values of the same type
          for (var _i = 0; _i < oldFilter.length - 2; _i++) {
            var _field = operator.multi ? operator.fields[0] : operator.fields[_i];
            var oldField = oldOperator.multi ? oldOperator.fields[0] : oldOperator.fields[_i];
            if (_field && oldField && _field.type === oldField.type && oldFilter[_i + 2] !== undefined) {
              filter[_i + 2] = oldFilter[_i + 2];
            }
          }
        }
      }
      return filter;
    }
  }, {
    key: "isValid",
    value: function isValid() {
      var query = this.props.query;
      var filter = this.state.filter;
      // has an operator name and field id

      if (filter[0] == null || !_query2.default.isValidField(filter[1])) {
        return false;
      }
      // field/operator combo is valid

      var _query$table$fieldTar2 = query.table().fieldTarget(filter[1]),
          field = _query$table$fieldTar2.field;

      var operator = field.operators_lookup[filter[0]];
      if (operator) {
        // has the mininum number of arguments
        if (filter.length - 2 < operator.fields.length) {
          return false;
        }
      }
      // arguments are non-null/undefined
      for (var i = 2; i < filter.length; i++) {
        if (filter[i] == null) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "renderPicker",
    value: function renderPicker(filter, field) {
      var _this2 = this;

      var operator = field.operators_lookup[filter[0]];
      var fieldWidgets = operator && operator.fields.map(function (operatorField, index) {
        if (!operator) {
          return null;
        }
        var values = void 0,
            onValuesChange = void 0;
        var placeholder = operator && operator.placeholders && operator.placeholders[index] || undefined;
        if (operator.multi) {
          values = _this2.state.filter.slice(2);
          onValuesChange = function onValuesChange(values) {
            return _this2.setValues(values);
          };
        } else {
          // $FlowFixMe
          values = [_this2.state.filter[2 + index]];
          onValuesChange = function onValuesChange(values) {
            return _this2.setValue(index, values[0]);
          };
        }
        if (operatorField.type === "hidden") {
          return null;
        } else if (operatorField.type === "select") {
          return _react2.default.createElement(_SelectPicker2.default, {
            key: index,
            options: operatorField.values
            // $FlowFixMe
            , values: values,
            onValuesChange: onValuesChange,
            placeholder: placeholder,
            multi: operator.multi,
            onCommit: _this2.onCommit
          });
        } else if (field) {
          return _react2.default.createElement(_FieldValuesWidget2.default, {
            value: values,
            onChange: onValuesChange,
            multi: operator.multi,
            placeholder: placeholder,
            field: field,
            searchField: field.filterSearchField(),
            autoFocus: index === 0,
            alwaysShowOptions: operator.fields.length === 1,
            formatOptions: (0, _schema_metadata.getFilterArgumentFormatOptions)(operator, index),
            minWidth: 440,
            maxWidth: 440
          });
        } else if (operatorField.type === "text") {
          return _react2.default.createElement(_TextPicker2.default, {
            key: index
            // $FlowFixMe
            , values: values,
            onValuesChange: onValuesChange,
            placeholder: placeholder,
            multi: operator.multi,
            onCommit: _this2.onCommit
          });
        } else if (operatorField.type === "number") {
          return _react2.default.createElement(_NumberPicker2.default, {
            key: index
            // $FlowFixMe
            , values: values,
            onValuesChange: onValuesChange,
            placeholder: placeholder,
            multi: operator.multi,
            onCommit: _this2.onCommit
          });
        }
        return _react2.default.createElement(
          "span",
          { key: index },
          (0, _c3po.t)(_templateObject, operatorField.type),
          " ",
          operator.multi ? (0, _c3po.t)(_templateObject2) : (0, _c3po.t)(_templateObject3)
        );
      });
      if (fieldWidgets && fieldWidgets.filter(function (f) {
        return f;
      }).length > 0) {
        return fieldWidgets;
      } else {
        return _react2.default.createElement("div", { className: "mb1" });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var query = this.props.query;
      var filter = this.state.filter;

      var _filter = _slicedToArray(filter, 2),
          operatorName = _filter[0],
          fieldRef = _filter[1];

      if (operatorName === "SEGMENT" || fieldRef == undefined) {
        return _react2.default.createElement(
          "div",
          { className: "FilterPopover" },
          _react2.default.createElement(_FieldList2.default, {
            className: "text-purple",
            maxHeight: this.props.maxHeight,
            field: fieldRef,
            fieldOptions: query.filterFieldOptions(filter),
            segmentOptions: query.filterSegmentOptions(filter),
            tableMetadata: query.table(),
            onFieldChange: this.setField,
            onFilterChange: this.commitFilter
          })
        );
      } else {
        var _query$table$fieldTar3 = query.table().fieldTarget(fieldRef),
            table = _query$table$fieldTar3.table,
            field = _query$table$fieldTar3.field;

        var dimension = query.parseFieldReference(fieldRef);
        return _react2.default.createElement(
          "div",
          {
            style: {
              minWidth: 300,
              // $FlowFixMe
              maxWidth: dimension.field().isDate() ? null : 500
            }
          },
          _react2.default.createElement(
            "div",
            { className: "FilterPopover-header border-bottom text-grey-3 p1 flex align-center" },
            _react2.default.createElement(
              "div",
              { className: "flex py1" },
              _react2.default.createElement(
                "a",
                {
                  className: "cursor-pointer text-purple-hover transition-color flex align-center",
                  onClick: this.clearField
                },
                _react2.default.createElement(_Icon2.default, { name: "chevronleft", size: 16 }),
                _react2.default.createElement(
                  "h3",
                  { className: "ml1" },
                  (0, _formatting.singularize)(table.display_name)
                )
              ),
              _react2.default.createElement(
                "h3",
                { className: "mx1" },
                "-"
              ),
              _react2.default.createElement(
                "h3",
                { className: "text-default" },
                (0, _formatting.formatField)(field)
              )
            ),
            (0, _schema_metadata.isTime)(field) || (0, _schema_metadata.isDate)(field) ? null : _react2.default.createElement(
              "div",
              { className: "flex flex-align-right pl3" },
              _react2.default.createElement(_OperatorSelector2.default, {
                operator: operatorName,
                operators: field.operators,
                onOperatorChange: this.setOperator
              })
            )
          ),
          (0, _schema_metadata.isTime)(field) ? _react2.default.createElement(_TimePicker2.default, {
            className: "mt1 border-top",
            filter: filter,
            onFilterChange: this.setFilter
          }) : (0, _schema_metadata.isDate)(field) ? _react2.default.createElement(_DatePicker2.default, {
            className: "mt1 border-top",
            filter: filter,
            onFilterChange: this.setFilter
          }) : _react2.default.createElement(
            "div",
            null,
            this.renderPicker(filter, field)
          ),
          _react2.default.createElement(
            "div",
            { className: "FilterPopover-footer flex align-center p1 pl2" },
            _react2.default.createElement(_FilterOptions2.default, {
              filter: filter,
              onFilterChange: this.setFilter,
              operator: (0, _schema_metadata.isDate)(field) ? // DatePicker uses a different set of operator objects
              (0, _DatePicker.getOperator)(filter) : // Normal operators defined in schema_metadata
              field.operator && field.operator(operatorName)
            }),
            _react2.default.createElement(
              "button",
              {
                "data-ui-tag": "add-filter",
                className: (0, _classnames2.default)("Button Button--purple ml-auto", {
                  disabled: !this.isValid()
                }),
                onClick: function onClick() {
                  return _this3.commitFilter(_this3.state.filter);
                }
              },
              !this.props.filter ? (0, _c3po.t)(_templateObject4) : (0, _c3po.t)(_templateObject5)
            )
          )
        );
      }
    }
  }]);

  return FilterPopover;
}(_react.Component), _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.commitOnEnter = function (event) {
    if (_this4.isValid() && event.key === "Enter") {
      _this4.commitFilter(_this4.state.filter);
    }
  };

  this.commitFilter = function (filter) {
    _this4.props.onCommitFilter(filter);
    _this4.props.onClose();
  };

  this.setField = function (fieldId) {
    var query = _this4.props.query;
    var filter = _this4.state.filter;

    if (filter[1] !== fieldId) {
      // different field, reset the filter
      filter = [];

      // update the field
      filter[1] = fieldId;

      // default to the first operator

      var _query$table$fieldTar4 = query.table().fieldTarget(filter[1]),
          field = _query$table$fieldTar4.field;

      // let the DatePicker choose the default operator, otherwise use the first one


      var operator = (0, _schema_metadata.isDate)(field) ? null : field.operators[0].name;

      // $FlowFixMe
      filter = _this4._updateOperator(filter, operator);
    }
    _this4.setState({ filter: filter });
  };

  this.setFilter = function (filter) {
    _this4.setState({ filter: filter });
  };

  this.setOperator = function (operator) {
    var filter = _this4.state.filter;

    if (filter[0] !== operator) {
      filter = _this4._updateOperator(filter, operator);
    }
    _this4.setState({ filter: filter });
  };

  this.setValues = function (values) {
    var filter = _this4.state.filter;
    // $FlowFixMe

    _this4.setState({ filter: filter.slice(0, 2).concat(values) });
  };

  this.clearField = function () {
    var filter = _this4.state.filter;
    // $FlowFixMe

    _this4.setState({
      filter: [].concat(_toConsumableArray(filter.slice(0, 1)), [null], _toConsumableArray(filter.slice(2)))
    });
  };

  this.onCommit = function () {
    if (_this4.isValid()) {
      _this4.commitFilter(_this4.state.filter);
    }
  };
}, _temp);
FilterPopover.displayName = "FilterPopover";
exports.default = FilterPopover;

/***/ }),

/***/ 333:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

__webpack_require__(415);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColumnarSelector = (_temp = _class = function (_Component) {
  _inherits(ColumnarSelector, _Component);

  function ColumnarSelector() {
    _classCallCheck(this, ColumnarSelector);

    return _possibleConstructorReturn(this, (ColumnarSelector.__proto__ || Object.getPrototypeOf(ColumnarSelector)).apply(this, arguments));
  }

  _createClass(ColumnarSelector, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var isItemSelected = function isItemSelected(item, column) {
        return column.selectedItems ? column.selectedItems.includes(item) : column.selectedItem === item;
      };
      var isItemDisabled = function isItemDisabled(item, column) {
        return column.disabledOptionIds ? column.disabledOptionIds.includes(item.id) : false;
      };

      var columns = this.props.columns.map(function (column, columnIndex) {
        var sectionElements = void 0;
        if (column) {
          var lastColumn = columnIndex === _this2.props.columns.length - 1;
          var sections = column.sections || [column];
          sectionElements = sections.map(function (section, sectionIndex) {
            var title = section.title;
            var items = section.items.map(function (item, rowIndex) {
              var itemClasses = (0, _classnames2.default)({
                "ColumnarSelector-row": true,
                "ColumnarSelector-row--selected": isItemSelected(item, column),
                "ColumnarSelector-row--disabled": isItemDisabled(item, column),
                flex: true,
                "no-decoration": true,
                "cursor-default": isItemDisabled(item, column)
              });
              var checkIcon = lastColumn ? _react2.default.createElement(_Icon2.default, { name: "check", size: 14 }) : null;
              var descriptionElement = void 0;
              var description = column.itemDescriptionFn && column.itemDescriptionFn(item);
              if (description) {
                descriptionElement = _react2.default.createElement(
                  "div",
                  { className: "ColumnarSelector-description" },
                  description
                );
              }
              return _react2.default.createElement(
                "li",
                { key: rowIndex },
                _react2.default.createElement(
                  "a",
                  {
                    className: itemClasses,
                    onClick: !isItemDisabled(item, column) && column.itemSelectFn.bind(null, item)
                  },
                  checkIcon,
                  _react2.default.createElement(
                    "div",
                    { className: "flex flex-column ml1" },
                    column.itemTitleFn(item),
                    descriptionElement
                  )
                )
              );
            });
            var titleElement = void 0;
            if (title) {
              titleElement = _react2.default.createElement(
                "div",
                { className: "ColumnarSelector-title" },
                title
              );
            }
            return _react2.default.createElement(
              "section",
              { key: sectionIndex, className: "ColumnarSelector-section" },
              titleElement,
              _react2.default.createElement(
                "ul",
                { className: "ColumnarSelector-rows" },
                items
              )
            );
          });
        }

        return _react2.default.createElement(
          "div",
          {
            key: columnIndex,
            className: "ColumnarSelector-column scroll-y scroll-show"
          },
          sectionElements
        );
      });

      return _react2.default.createElement(
        "div",
        { className: "ColumnarSelector" },
        columns
      );
    }
  }]);

  return ColumnarSelector;
}(_react.Component), _class.propTypes = {
  columns: _propTypes2.default.array.isRequired
}, _temp);
ColumnarSelector.displayName = "ColumnarSelector";
exports.default = ColumnarSelector;

/***/ }),

/***/ 334:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Invalid expression"], ["Invalid expression"]),
    _templateObject2 = _taggedTemplateLiteral(["unknown error"], ["unknown error"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _ExpressionEditorTextfield = __webpack_require__(427);

var _ExpressionEditorTextfield2 = _interopRequireDefault(_ExpressionEditorTextfield);

var _c3po = __webpack_require__(2);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _parser = __webpack_require__(428);

var _formatter = __webpack_require__(117);

var _dom = __webpack_require__(28);

var _keyboard = __webpack_require__(69);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _TokenizedInput = __webpack_require__(431);

var _TokenizedInput2 = _interopRequireDefault(_TokenizedInput);

var _expressions = __webpack_require__(118);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_SUGGESTIONS = 30;

var ExpressionEditorTextfield = (_temp = _class = function (_Component) {
  _inherits(ExpressionEditorTextfield, _Component);

  function ExpressionEditorTextfield(props, context) {
    _classCallCheck(this, ExpressionEditorTextfield);

    var _this = _possibleConstructorReturn(this, (ExpressionEditorTextfield.__proto__ || Object.getPrototypeOf(ExpressionEditorTextfield)).call(this, props, context));

    _this.onInputClick = function () {
      _this._triggerAutosuggest();
    };

    _this._triggerAutosuggest = function () {
      _this.onExpressionChange(_this.state.expressionString);
    };

    _this._setCaretPosition = function (position, autosuggest) {
      (0, _dom.setCaretPosition)(_reactDom2.default.findDOMNode(_this.refs.input), position);
      if (autosuggest) {
        setTimeout(function () {
          return _this._triggerAutosuggest();
        });
      }
    };

    _underscore2.default.bindAll(_this, "_triggerAutosuggest", "onInputKeyDown", "onInputBlur", "onSuggestionAccepted", "onSuggestionMouseDown");
    return _this;
  }

  _createClass(ExpressionEditorTextfield, [{
    key: "_getParserInfo",
    value: function _getParserInfo() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

      return {
        tableMetadata: props.tableMetadata,
        customFields: props.customFields || {},
        startRule: props.startRule
      };
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.componentWillReceiveProps(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      // we only refresh our state if we had no previous state OR if our expression or table has changed
      if (!this.state || this.props.expression != newProps.expression || this.props.tableMetadata != newProps.tableMetadata) {
        var parserInfo = this._getParserInfo(newProps);
        var parsedExpression = newProps.expression;
        var expressionString = (0, _formatter.format)(newProps.expression, parserInfo);
        var expressionErrorMessage = null;
        var suggestions = [];
        try {
          if (expressionString) {
            (0, _parser.compile)(expressionString, parserInfo);
          }
        } catch (e) {
          expressionErrorMessage = e;
        }

        this.setState({
          parsedExpression: parsedExpression,
          expressionString: expressionString,
          expressionErrorMessage: expressionErrorMessage,
          suggestions: suggestions,
          highlightedSuggestion: 0
        });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this._setCaretPosition(this.state.expressionString.length, this.state.expressionString.length === 0);
    }
  }, {
    key: "onSuggestionAccepted",
    value: function onSuggestionAccepted() {
      var _this2 = this;

      var expressionString = this.state.expressionString;

      var suggestion = this.state.suggestions[this.state.highlightedSuggestion];

      if (suggestion) {
        var prefix = expressionString.slice(0, suggestion.index);
        if (suggestion.prefixTrim) {
          prefix = prefix.replace(suggestion.prefixTrim, "");
        }
        var postfix = expressionString.slice(suggestion.index);
        if (suggestion.postfixTrim) {
          postfix = postfix.replace(suggestion.postfixTrim, "");
        }
        if (!postfix && suggestion.postfixText) {
          postfix = suggestion.postfixText;
        }

        this.onExpressionChange(prefix + suggestion.text + postfix);
        setTimeout(function () {
          return _this2._setCaretPosition((prefix + suggestion.text).length, true);
        });
      }

      this.setState({
        highlightedSuggestion: 0
      });
    }
  }, {
    key: "onSuggestionMouseDown",
    value: function onSuggestionMouseDown(event, index) {
      // when a suggestion is clicked, we'll highlight the clicked suggestion and then hand off to the same code that deals with ENTER / TAB keydowns
      event.preventDefault();
      event.stopPropagation();
      this.setState({ highlightedSuggestion: index }, this.onSuggestionAccepted);
    }
  }, {
    key: "onInputKeyDown",
    value: function onInputKeyDown(e) {
      var _this3 = this;

      var _state = this.state,
          suggestions = _state.suggestions,
          highlightedSuggestion = _state.highlightedSuggestion;


      if (e.keyCode === _keyboard.KEYCODE_LEFT || e.keyCode === _keyboard.KEYCODE_RIGHT) {
        setTimeout(function () {
          return _this3._triggerAutosuggest();
        });
        return;
      }
      if (e.keyCode === _keyboard.KEYCODE_ESCAPE) {
        e.stopPropagation();
        e.preventDefault();
        this.clearSuggestions();
        return;
      }

      if (!suggestions.length) {
        return;
      }
      if (e.keyCode === _keyboard.KEYCODE_ENTER) {
        this.onSuggestionAccepted();
        e.preventDefault();
      } else if (e.keyCode === _keyboard.KEYCODE_UP) {
        this.setState({
          highlightedSuggestion: (highlightedSuggestion + suggestions.length - 1) % suggestions.length
        });
        e.preventDefault();
      } else if (e.keyCode === _keyboard.KEYCODE_DOWN) {
        this.setState({
          highlightedSuggestion: (highlightedSuggestion + suggestions.length + 1) % suggestions.length
        });
        e.preventDefault();
      }
    }
  }, {
    key: "clearSuggestions",
    value: function clearSuggestions() {
      this.setState({
        suggestions: [],
        highlightedSuggestion: 0
      });
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur() {
      this.clearSuggestions();

      // whenever our input blurs we push the updated expression to our parent if valid
      if ((0, _expressions.isExpression)(this.state.parsedExpression)) {
        this.props.onChange(this.state.parsedExpression);
      } else if (this.state.expressionErrorMessage) {
        this.props.onError(this.state.expressionErrorMessage);
      } else {
        this.props.onError({ message: (0, _c3po.t)(_templateObject) });
      }
    }
  }, {
    key: "onExpressionChange",
    value: function onExpressionChange(expressionString) {
      var inputElement = _reactDom2.default.findDOMNode(this.refs.input);
      if (!inputElement) {
        return;
      }

      var parserInfo = this._getParserInfo();

      var expressionErrorMessage = null;
      var suggestions = [];
      var parsedExpression = void 0;

      try {
        parsedExpression = (0, _parser.compile)(expressionString, parserInfo);
      } catch (e) {
        expressionErrorMessage = e;
        console.error("expression error:", expressionErrorMessage);
      }

      var isValid = parsedExpression && parsedExpression.length > 0;

      var _getSelectionPosition = (0, _dom.getSelectionPosition)(inputElement),
          _getSelectionPosition2 = _slicedToArray(_getSelectionPosition, 2),
          selectionStart = _getSelectionPosition2[0],
          selectionEnd = _getSelectionPosition2[1];

      var hasSelection = selectionStart !== selectionEnd;
      var isAtEnd = selectionEnd === expressionString.length;
      var endsWithWhitespace = /\s$/.test(expressionString);

      // don't show suggestions if
      // * there's a section
      // * we're at the end of a valid expression, unless the user has typed another space
      if (!hasSelection && !(isValid && isAtEnd && !endsWithWhitespace)) {
        try {
          suggestions = (0, _parser.suggest)(expressionString, _extends({}, parserInfo, {
            index: selectionEnd
          }));
        } catch (e) {
          console.error("suggest error:", e);
        }
      }

      this.setState({
        expressionErrorMessage: expressionErrorMessage,
        expressionString: expressionString,
        parsedExpression: parsedExpression,
        suggestions: suggestions,
        showAll: false
      });
    }
  }, {
    key: "onShowMoreMouseDown",
    value: function onShowMoreMouseDown(e) {
      e.preventDefault();
      this.setState({ showAll: true });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var errorMessage = this.state.expressionErrorMessage;
      if (errorMessage && !errorMessage.length) errorMessage = (0, _c3po.t)(_templateObject2);

      var placeholder = this.props.placeholder;
      var _state2 = this.state,
          suggestions = _state2.suggestions,
          showAll = _state2.showAll;


      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)(_ExpressionEditorTextfield2.default.editor, "relative") },
        _react2.default.createElement(_TokenizedInput2.default, {
          ref: "input",
          className: (0, _classnames2.default)(_ExpressionEditorTextfield2.default.input, "my1 input block full", {
            "border-error": errorMessage
          }),
          type: "text",
          placeholder: placeholder,
          value: this.state.expressionString,
          onChange: function onChange(e) {
            return _this4.onExpressionChange(e.target.value);
          },
          onKeyDown: this.onInputKeyDown,
          onBlur: this.onInputBlur,
          onFocus: function onFocus(e) {
            return _this4._triggerAutosuggest();
          },
          onClick: this.onInputClick,
          autoFocus: true,
          parserInfo: this._getParserInfo()
        }),
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(_ExpressionEditorTextfield2.default.equalSign, "spread flex align-center h4 text-dark", _defineProperty({}, _ExpressionEditorTextfield2.default.placeholder, !this.state.expressionString))
          },
          "="
        ),
        suggestions.length ? _react2.default.createElement(
          _Popover2.default,
          {
            className: "pb1 not-rounded border-dark",
            hasArrow: false,
            tetherOptions: {
              attachment: "top left",
              targetAttachment: "bottom left"
            }
          },
          _react2.default.createElement(
            "ul",
            { style: { minWidth: 150, overflow: "hidden" } },
            (showAll ? suggestions : suggestions.slice(0, MAX_SUGGESTIONS)).map(function (suggestion, i) {
              return (
                // insert section title. assumes they're sorted by type
                [(i === 0 || suggestion.type !== suggestions[i - 1].type) && _react2.default.createElement(
                  "li",
                  {
                    ref: "header-" + i,
                    className: "mx2 h6 text-uppercase text-bold text-grey-3 py1 pt2"
                  },
                  suggestion.type
                ), _react2.default.createElement(
                  "li",
                  {
                    ref: i,
                    style: { paddingTop: 5, paddingBottom: 5 },
                    className: (0, _classnames2.default)("px2 cursor-pointer text-white-hover bg-brand-hover", {
                      "text-white bg-brand": i === _this4.state.highlightedSuggestion
                    }),
                    onMouseDownCapture: function onMouseDownCapture(e) {
                      return _this4.onSuggestionMouseDown(e, i);
                    }
                  },
                  suggestion.prefixLength ? _react2.default.createElement(
                    "span",
                    null,
                    _react2.default.createElement(
                      "span",
                      {
                        className: (0, _classnames2.default)("text-brand text-bold", {
                          "text-white bg-brand": i === _this4.state.highlightedSuggestion
                        })
                      },
                      suggestion.name.slice(0, suggestion.prefixLength)
                    ),
                    _react2.default.createElement(
                      "span",
                      null,
                      suggestion.name.slice(suggestion.prefixLength)
                    )
                  ) : suggestion.name
                )]
              );
            }),
            !showAll && suggestions.length >= MAX_SUGGESTIONS && _react2.default.createElement(
              "li",
              {
                style: { paddingTop: 5, paddingBottom: 5 },
                onMouseDownCapture: function onMouseDownCapture(e) {
                  return _this4.onShowMoreMouseDown(e);
                },
                className: "px2 text-italic text-grey-3 cursor-pointer text-brand-hover"
              },
              "and ",
              suggestions.length - MAX_SUGGESTIONS,
              " more"
            )
          )
        ) : null
      );
    }
  }]);

  return ExpressionEditorTextfield;
}(_react.Component), _class.propTypes = {
  expression: _propTypes2.default.array, // should be an array like [parsedExpressionObj, expressionString]
  tableMetadata: _propTypes2.default.object.isRequired,
  customFields: _propTypes2.default.object,
  onChange: _propTypes2.default.func.isRequired,
  onError: _propTypes2.default.func.isRequired,
  startRule: _propTypes2.default.string.isRequired
}, _class.defaultProps = {
  expression: [null, ""],
  startRule: "expression",
  placeholder: "write some math!"
}, _temp);
ExpressionEditorTextfield.displayName = "ExpressionEditorTextfield";
exports.default = ExpressionEditorTextfield;

/***/ }),

/***/ 34:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newQuestion = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.question = question;
exports.plainQuestion = plainQuestion;
exports.dashboard = dashboard;
exports.modelToUrl = modelToUrl;
exports.pulse = pulse;
exports.tableRowsQuery = tableRowsQuery;
exports.collection = collection;
exports.label = label;
exports.publicQuestion = publicQuestion;
exports.publicDashboard = publicDashboard;
exports.embedCard = embedCard;
exports.embedDashboard = embedDashboard;

var _card = __webpack_require__(62);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// provides functions for building urls to things we care about

var newQuestion = exports.newQuestion = function newQuestion() {
  return "/question/new";
};
function question(cardId) {
  var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

  if (hash && (typeof hash === "undefined" ? "undefined" : _typeof(hash)) === "object") {
    hash = (0, _card.serializeCardForUrl)(hash);
  }
  if (query && (typeof query === "undefined" ? "undefined" : _typeof(query)) === "object") {
    query = Object.entries(query).map(function (kv) {
      if (Array.isArray(kv[1])) {
        return kv[1].map(function (v) {
          return encodeURIComponent(kv[0]) + "=" + encodeURIComponent(v);
        }).join("&");
      } else {
        return kv.map(encodeURIComponent).join("=");
      }
    }).join("&");
  }
  if (hash && hash.charAt(0) !== "#") {
    hash = "#" + hash;
  }
  if (query && query.charAt(0) !== "?") {
    query = "?" + query;
  }
  // NOTE that this is for an ephemeral card link, not an editable card
  return cardId != null ? "/question/" + cardId + query + hash : "/question" + query + hash;
}

function plainQuestion() {
  return _Question2.default.create({ metadata: null }).getUrl();
}

function dashboard(dashboardId) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      addCardWithId = _ref.addCardWithId;

  return addCardWithId != null ? "/dashboard/" + dashboardId + "#add=" + addCardWithId : "/dashboard/" + dashboardId;
}

function modelToUrl(model, modelId) {
  switch (model) {
    case "card":
      return question(modelId);
    case "dashboard":
      return dashboard(modelId);
    case "pulse":
      return pulse(modelId);
    default:
      return null;
  }
}

function pulse(pulseId) {
  return "/pulse/#" + pulseId;
}

function tableRowsQuery(databaseId, tableId, metricId, segmentId) {
  var query = "?db=" + databaseId + "&table=" + tableId;

  if (metricId) {
    query += "&metric=" + metricId;
  }

  if (segmentId) {
    query += "&segment=" + segmentId;
  }

  return question(null, query);
}

function collection(collection) {
  return "/questions/collections/" + collection.slug;
}

function label(label) {
  return "/questions/search?label=" + encodeURIComponent(label.slug);
}

function publicQuestion(uuid) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var siteUrl = _settings2.default.get("site_url");
  return siteUrl + "/public/question/" + uuid + (type ? "." + type : "");
}

function publicDashboard(uuid) {
  var siteUrl = _settings2.default.get("site_url");
  return siteUrl + "/public/dashboard/" + uuid;
}

function embedCard(token) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  return "/embed/question/" + token + (type ? "." + type : "");
}

function embedDashboard(token) {
  return "/embed/dashboard/" + token;
}

/***/ }),

/***/ 340:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _colors = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DEFAULT_COLOR_SQUARE_SIZE = 32;

var ColorSquare = function ColorSquare(_ref) {
  var color = _ref.color,
      size = _ref.size;
  return _react2.default.createElement("div", {
    style: {
      width: size,
      height: size,
      backgroundColor: color,
      borderRadius: size / 8
    }
  });
};

ColorSquare.displayName = "ColorSquare";
var ColorPicker = (_temp = _class = function (_Component) {
  _inherits(ColorPicker, _Component);

  function ColorPicker() {
    _classCallCheck(this, ColorPicker);

    return _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).apply(this, arguments));
  }

  _createClass(ColorPicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          colors = _props.colors,
          onChange = _props.onChange,
          padding = _props.padding,
          size = _props.size,
          triggerSize = _props.triggerSize,
          value = _props.value;

      return _react2.default.createElement(
        "div",
        { className: "inline-block" },
        _react2.default.createElement(
          _PopoverWithTrigger2.default,
          {
            ref: "colorPopover",
            triggerElement: _react2.default.createElement(
              "div",
              {
                className: "bordered rounded flex align-center",
                style: { padding: triggerSize / 4 }
              },
              _react2.default.createElement(ColorSquare, { color: value, size: triggerSize })
            )
          },
          _react2.default.createElement(
            "div",
            { className: "p1" },
            _react2.default.createElement(
              "ol",
              {
                className: "flex flex-wrap",
                style: {
                  maxWidth: 120
                }
              },
              colors.map(function (color, index) {
                return _react2.default.createElement(
                  "li",
                  {
                    className: "cursor-pointer",
                    style: { padding: padding },
                    key: index,
                    onClick: function onClick() {
                      onChange(color);
                      _this2.refs.colorPopover.close();
                    }
                  },
                  _react2.default.createElement(ColorSquare, { color: color, size: size })
                );
              })
            )
          )
        )
      );
    }
  }]);

  return ColorPicker;
}(_react.Component), _class.defaultProps = {
  colors: [].concat(_toConsumableArray(Object.values(_colors.normal))),
  size: DEFAULT_COLOR_SQUARE_SIZE,
  triggerSize: DEFAULT_COLOR_SQUARE_SIZE,
  padding: 4
}, _class.propTypes = {
  colors: _propTypes2.default.array,
  onChange: _propTypes2.default.func.isRequired,
  size: _propTypes2.default.number,
  triggerSize: _propTypes2.default.number,
  value: _propTypes2.default.string
}, _temp);
ColorPicker.displayName = "ColorPicker";
exports.default = ColorPicker;

/***/ }),

/***/ 341:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

// import L from "leaflet";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _colors = __webpack_require__(38);

var _CardRenderer = __webpack_require__(257);

var _CardRenderer2 = _interopRequireDefault(_CardRenderer);

__webpack_require__(342);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

var _mapping = __webpack_require__(266);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LeafletChoropleth = function LeafletChoropleth(_ref) {
  var series = _ref.series,
      geoJson = _ref.geoJson,
      _ref$minimalBounds = _ref.minimalBounds,
      minimalBounds = _ref$minimalBounds === undefined ? (0, _mapping.computeMinimalBounds)(geoJson.features) : _ref$minimalBounds,
      _ref$getColor = _ref.getColor,
      getColor = _ref$getColor === undefined ? function () {
    return _colors.normal.blue;
  } : _ref$getColor,
      _ref$onHoverFeature = _ref.onHoverFeature,
      onHoverFeature = _ref$onHoverFeature === undefined ? function () {} : _ref$onHoverFeature,
      _ref$onClickFeature = _ref.onClickFeature,
      onClickFeature = _ref$onClickFeature === undefined ? function () {} : _ref$onClickFeature;
  return _react2.default.createElement(_CardRenderer2.default, {
    series: series,
    className: "spread",
    renderer: function renderer(element, props) {
      element.className = "spread";
      element.style.backgroundColor = "transparent";

      var map = _leaflet2.default.map(element, {
        zoomSnap: 0,
        worldCopyJump: true,
        attributionControl: false,

        // disable zoom controls
        dragging: false,
        tap: false,
        zoomControl: false,
        touchZoom: false,
        doubleClickZoom: false,
        scrollWheelZoom: false,
        boxZoom: false,
        keyboard: false
      });

      // L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      //     attribution: 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors'
      // }).addTo(map);

      var style = function style(feature) {
        return {
          fillColor: getColor(feature),
          weight: 1,
          opacity: 1,
          color: "white",
          fillOpacity: 1
        };
      };

      var onEachFeature = function onEachFeature(feature, layer) {
        layer.on({
          mousemove: function mousemove(e) {
            onHoverFeature({
              feature: feature,
              event: e.originalEvent
            });
          },
          mouseout: function mouseout(e) {
            onHoverFeature(null);
          },
          click: function click(e) {
            onClickFeature({
              feature: feature,
              event: e.originalEvent
            });
          }
        });
      };

      // main layer
      _leaflet2.default.featureGroup([_leaflet2.default.geoJson(geoJson, {
        style: style,
        onEachFeature: onEachFeature
      })]).addTo(map);

      // left and right duplicates so we can pan a bit
      _leaflet2.default.featureGroup([_leaflet2.default.geoJson(geoJson, {
        style: style,
        onEachFeature: onEachFeature,
        coordsToLatLng: function coordsToLatLng(_ref2) {
          var _ref3 = _slicedToArray(_ref2, 2),
              longitude = _ref3[0],
              latitude = _ref3[1];

          return _leaflet2.default.latLng(latitude, longitude - 360);
        }
      }), _leaflet2.default.geoJson(geoJson, {
        style: style,
        onEachFeature: onEachFeature,
        coordsToLatLng: function coordsToLatLng(_ref4) {
          var _ref5 = _slicedToArray(_ref4, 2),
              longitude = _ref5[0],
              latitude = _ref5[1];

          return _leaflet2.default.latLng(latitude, longitude + 360);
        }
      })]).addTo(map);

      map.fitBounds(minimalBounds);
      // map.fitBounds(geoFeatureGroup.getBounds());
    }
  });
};

LeafletChoropleth.displayName = "LeafletChoropleth";
exports.default = LeafletChoropleth;

/***/ }),

/***/ 344:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DirectionalButton = function DirectionalButton(_ref) {
  var _ref$direction = _ref.direction,
      direction = _ref$direction === undefined ? "back" : _ref$direction,
      onClick = _ref.onClick;
  return _react2.default.createElement(
    "div",
    {
      className: "shadowed cursor-pointer text-brand-hover text-grey-4 flex align-center circle p2 bg-white transition-background transition-color",
      onClick: onClick,
      style: {
        border: "1px solid #DCE1E4",
        boxShadow: "0 2px 4px 0 #DCE1E4"
      }
    },
    _react2.default.createElement(_Icon2.default, { name: direction + "Arrow" })
  );
};

DirectionalButton.displayName = "DirectionalButton";
exports.default = DirectionalButton;

/***/ }),

/***/ 346:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2; /* eslint "react/prop-types": "warn" */

var _templateObject = _taggedTemplateLiteral(["Select a default value\u2026"], ["Select a default value\u2026"]),
    _templateObject2 = _taggedTemplateLiteral(["Select\u2026"], ["Select\u2026"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = __webpack_require__(7);

var _c3po = __webpack_require__(2);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _DateSingleWidget = __webpack_require__(514);

var _DateSingleWidget2 = _interopRequireDefault(_DateSingleWidget);

var _DateRangeWidget = __webpack_require__(515);

var _DateRangeWidget2 = _interopRequireDefault(_DateRangeWidget);

var _DateRelativeWidget = __webpack_require__(516);

var _DateRelativeWidget2 = _interopRequireDefault(_DateRelativeWidget);

var _DateMonthYearWidget = __webpack_require__(517);

var _DateMonthYearWidget2 = _interopRequireDefault(_DateMonthYearWidget);

var _DateQuarterYearWidget = __webpack_require__(518);

var _DateQuarterYearWidget2 = _interopRequireDefault(_DateQuarterYearWidget);

var _DateAllOptionsWidget = __webpack_require__(519);

var _DateAllOptionsWidget2 = _interopRequireDefault(_DateAllOptionsWidget);

var _CategoryWidget = __webpack_require__(520);

var _CategoryWidget2 = _interopRequireDefault(_CategoryWidget);

var _TextWidget = __webpack_require__(521);

var _TextWidget2 = _interopRequireDefault(_TextWidget);

var _ParameterFieldWidget = __webpack_require__(522);

var _ParameterFieldWidget2 = _interopRequireDefault(_ParameterFieldWidget);

var _metadata = __webpack_require__(16);

var _metadata2 = __webpack_require__(30);

var _Parameter = __webpack_require__(85);

var _ParameterWidget = __webpack_require__(270);

var _ParameterWidget2 = _interopRequireDefault(_ParameterWidget);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DATE_WIDGETS = {
  "date/single": _DateSingleWidget2.default,
  "date/range": _DateRangeWidget2.default,
  "date/relative": _DateRelativeWidget2.default,
  "date/month-year": _DateMonthYearWidget2.default,
  "date/quarter-year": _DateQuarterYearWidget2.default,
  "date/all-options": _DateAllOptionsWidget2.default
};

var makeMapStateToProps = function makeMapStateToProps() {
  var getMergedParameterFieldValues = (0, _metadata2.makeGetMergedParameterFieldValues)();
  var mapStateToProps = function mapStateToProps(state, props) {
    return {
      metadata: (0, _metadata2.getMetadata)(state),
      values: getMergedParameterFieldValues(state, props)
    };
  };
  return mapStateToProps;
};

var mapDispatchToProps = {
  fetchFieldValues: _metadata.fetchFieldValues,
  fetchField: _metadata.fetchField
};

var ParameterValueWidget = (_dec = (0, _reactRedux.connect)(makeMapStateToProps, mapDispatchToProps), _dec(_class = (_temp2 = _class2 = function (_Component) {
  _inherits(ParameterValueWidget, _Component);

  function ParameterValueWidget() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ParameterValueWidget);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ParameterValueWidget.__proto__ || Object.getPrototypeOf(ParameterValueWidget)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isFocused: false }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ParameterValueWidget, [{
    key: "getField",
    value: function getField() {
      var _props = this.props,
          parameter = _props.parameter,
          metadata = _props.metadata;

      return parameter.field_id != null ? metadata.fields[parameter.field_id] : null;
    }
  }, {
    key: "getWidget",
    value: function getWidget() {
      var _props2 = this.props,
          parameter = _props2.parameter,
          values = _props2.values;

      if (DATE_WIDGETS[parameter.type]) {
        return DATE_WIDGETS[parameter.type];
      } else if (this.getField()) {
        return _ParameterFieldWidget2.default;
      } else if (values && values.length > 0) {
        return _CategoryWidget2.default;
      } else {
        return _TextWidget2.default;
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      // In public dashboards we receive field values before mounting this component and
      // without need to call `fetchFieldValues` separately
      if (_underscore2.default.isEmpty(this.props.values)) {
        this.updateFieldValues(this.props);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.parameter.field_id != null && nextProps.parameter.field_id !== this.props.parameter.field_id) {
        this.updateFieldValues(nextProps);
      }
    }
  }, {
    key: "updateFieldValues",
    value: function updateFieldValues(props) {
      if (props.parameter.field_id != null) {
        props.fetchField(props.parameter.field_id);
        props.fetchFieldValues(props.parameter.field_id);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          parameter = _props3.parameter,
          value = _props3.value,
          values = _props3.values,
          setValue = _props3.setValue,
          isEditing = _props3.isEditing,
          placeholder = _props3.placeholder,
          isFullscreen = _props3.isFullscreen,
          noReset = _props3.noReset,
          commitImmediately = _props3.commitImmediately,
          className = _props3.className,
          parentFocusChanged = _props3.focusChanged;


      var hasValue = value != null;

      var Widget = this.getWidget();

      var focusChanged = function focusChanged(isFocused) {
        if (parentFocusChanged) {
          parentFocusChanged(isFocused);
        }
        _this2.setState({ isFocused: isFocused });
      };

      var getParameterTypeIcon = function getParameterTypeIcon() {
        if (!isEditing && !hasValue && !_this2.state.isFocused) {
          return _react2.default.createElement(_Icon2.default, {
            name: (0, _Parameter.getParameterIconName)(parameter.type),
            className: "flex-align-left mr1 flex-no-shrink",
            size: 14
          });
        } else {
          return null;
        }
      };

      var getWidgetStatusIcon = function getWidgetStatusIcon() {
        if (isFullscreen) return null;

        if (hasValue && !noReset) {
          return _react2.default.createElement(_Icon2.default, {
            name: "close",
            className: "flex-align-right cursor-pointer flex-no-shrink",
            size: 12,
            onClick: function onClick(e) {
              if (hasValue) {
                e.stopPropagation();
                setValue(null);
              }
            }
          });
        } else if (Widget.noPopover && _this2.state.isFocused) {
          return _react2.default.createElement(_Icon2.default, {
            name: "enterorreturn",
            className: "flex-align-right flex-no-shrink",
            size: 12
          });
        } else if (Widget.noPopover) {
          return _react2.default.createElement(_Icon2.default, {
            name: "empty",
            className: "flex-align-right cursor-pointer flex-no-shrink",
            size: 12
          });
        } else if (!Widget.noPopover) {
          return _react2.default.createElement(_Icon2.default, {
            name: "chevrondown",
            className: "flex-align-right flex-no-shrink",
            size: 12
          });
        }
      };

      if (Widget.noPopover) {
        var _cx;

        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(_ParameterWidget2.default.parameter, _ParameterWidget2.default.noPopover, className, (_cx = {}, _defineProperty(_cx, _ParameterWidget2.default.selected, hasValue), _defineProperty(_cx, _ParameterWidget2.default.isEditing, isEditing), _cx))
          },
          getParameterTypeIcon(),
          _react2.default.createElement(Widget, {
            placeholder: placeholder,
            value: value,
            values: values,
            field: this.getField(),
            setValue: setValue,
            isEditing: isEditing,
            commitImmediately: commitImmediately,
            focusChanged: focusChanged
          }),
          getWidgetStatusIcon()
        );
      } else {
        var placeholderText = isEditing ? (0, _c3po.t)(_templateObject) : placeholder || (0, _c3po.t)(_templateObject2);

        return _react2.default.createElement(
          _PopoverWithTrigger2.default,
          {
            ref: "valuePopover",
            triggerElement: _react2.default.createElement(
              "div",
              {
                ref: "trigger",
                className: (0, _classnames2.default)(_ParameterWidget2.default.parameter, className, _defineProperty({}, _ParameterWidget2.default.selected, hasValue))
              },
              getParameterTypeIcon(),
              _react2.default.createElement(
                "div",
                { className: "mr1 text-nowrap" },
                hasValue ? Widget.format(value, values) : placeholderText
              ),
              getWidgetStatusIcon()
            ),
            target: function target() {
              return _this2.refs.trigger;
            } // not sure why this is necessary
            // make sure the full date picker will expand to fit the dual calendars
            , autoWidth: parameter.type === "date/all-options"
          },
          _react2.default.createElement(Widget, {
            value: value,
            values: values,
            setValue: setValue,
            onClose: function onClose() {
              return _this2.refs.valuePopover.close();
            }
          })
        );
      }
    }
  }]);

  return ParameterValueWidget;
}(_react.Component), _class2.propTypes = {
  parameter: _propTypes2.default.object.isRequired,
  name: _propTypes2.default.string,
  value: _propTypes2.default.any,
  setValue: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  isEditing: _propTypes2.default.bool,
  noReset: _propTypes2.default.bool,
  commitImmediately: _propTypes2.default.bool,
  focusChanged: _propTypes2.default.func,
  isFullscreen: _propTypes2.default.bool,
  className: _propTypes2.default.string,

  // provided by @connect
  values: _propTypes2.default.array,
  metadata: _propTypes2.default.object.isRequired
}, _class2.defaultProps = {
  values: [],
  isEditing: false,
  noReset: false,
  commitImmediately: false,
  className: ""
}, _temp2)) || _class);
ParameterValueWidget.displayName = "ParameterValueWidget";
exports.default = ParameterValueWidget;

/***/ }),

/***/ 347:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDashboardActions = undefined;

var _templateObject = _taggedTemplateLiteral(["Daytime mode"], ["Daytime mode"]),
    _templateObject2 = _taggedTemplateLiteral(["Nighttime mode"], ["Nighttime mode"]),
    _templateObject3 = _taggedTemplateLiteral(["Exit fullscreen"], ["Exit fullscreen"]),
    _templateObject4 = _taggedTemplateLiteral(["Enter fullscreen"], ["Enter fullscreen"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _NightModeIcon = __webpack_require__(523);

var _NightModeIcon2 = _interopRequireDefault(_NightModeIcon);

var _FullscreenIcon = __webpack_require__(524);

var _FullscreenIcon2 = _interopRequireDefault(_FullscreenIcon);

var _RefreshWidget = __webpack_require__(525);

var _RefreshWidget2 = _interopRequireDefault(_RefreshWidget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var getDashboardActions = exports.getDashboardActions = function getDashboardActions(_ref) {
  var _ref$isEditing = _ref.isEditing,
      isEditing = _ref$isEditing === undefined ? false : _ref$isEditing,
      _ref$isEmpty = _ref.isEmpty,
      isEmpty = _ref$isEmpty === undefined ? false : _ref$isEmpty,
      isFullscreen = _ref.isFullscreen,
      isNightMode = _ref.isNightMode,
      onNightModeChange = _ref.onNightModeChange,
      onFullscreenChange = _ref.onFullscreenChange,
      refreshPeriod = _ref.refreshPeriod,
      refreshElapsed = _ref.refreshElapsed,
      onRefreshPeriodChange = _ref.onRefreshPeriodChange;

  var buttons = [];

  if (!isEditing && !isEmpty) {
    buttons.push(_react2.default.createElement(_RefreshWidget2.default, {
      "data-metabase-event": "Dashboard;Refresh Menu Open",
      className: "text-brand-hover",
      key: "refresh",
      period: refreshPeriod,
      elapsed: refreshElapsed,
      onChangePeriod: onRefreshPeriodChange
    }));
  }

  if (!isEditing && isFullscreen) {
    buttons.push(_react2.default.createElement(
      _Tooltip2.default,
      { tooltip: isNightMode ? (0, _c3po.t)(_templateObject) : (0, _c3po.t)(_templateObject2) },
      _react2.default.createElement(
        "span",
        { "data-metabase-event": "Dashboard;Night Mode;" + !isNightMode },
        _react2.default.createElement(_NightModeIcon2.default, {
          className: "text-brand-hover cursor-pointer",
          key: "night",
          isNightMode: isNightMode,
          onClick: function onClick() {
            return onNightModeChange(!isNightMode);
          }
        })
      )
    ));
  }

  if (!isEditing && !isEmpty) {
    // option click to enter fullscreen without making the browser go fullscreen
    buttons.push(_react2.default.createElement(
      _Tooltip2.default,
      {
        tooltip: isFullscreen ? (0, _c3po.t)(_templateObject3) : (0, _c3po.t)(_templateObject4)
      },
      _react2.default.createElement(
        "span",
        {
          "data-metabase-event": "Dashboard;Fullscreen Mode;" + !isFullscreen
        },
        _react2.default.createElement(_FullscreenIcon2.default, {
          className: "text-brand-hover cursor-pointer",
          key: "fullscreen",
          isFullscreen: isFullscreen,
          onClick: function onClick(e) {
            return onFullscreenChange(!isFullscreen, !e.altKey);
          }
        })
      )
    ));
  }

  return buttons;
};

/***/ }),

/***/ 348:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["Customize this ", ""], ["Customize this ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["Reset to defaults"], ["Reset to defaults"]),
    _templateObject3 = _taggedTemplateLiteral(["Done"], ["Done"]),
    _templateObject4 = _taggedTemplateLiteral(["Cancel"], ["Cancel"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _icepick = __webpack_require__(14);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _c3po = __webpack_require__(2);

var _Warnings = __webpack_require__(349);

var _Warnings2 = _interopRequireDefault(_Warnings);

var _Visualization = __webpack_require__(78);

var _Visualization2 = _interopRequireDefault(_Visualization);

var _settings = __webpack_require__(45);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _visualizations = __webpack_require__(53);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChartSettingsTab = function ChartSettingsTab(_ref) {
  var name = _ref.name,
      active = _ref.active,
      _onClick = _ref.onClick;
  return _react2.default.createElement(
    "a",
    {
      className: (0, _classnames2.default)("block text-brand py1 text-centered", {
        "bg-brand text-white": active
      }),
      onClick: function onClick() {
        return _onClick(name);
      }
    },
    name.toUpperCase()
  );
};

ChartSettingsTab.displayName = "ChartSettingsTab";
var ChartSettingsTabs = function ChartSettingsTabs(_ref2) {
  var tabs = _ref2.tabs,
      selectTab = _ref2.selectTab,
      activeTab = _ref2.activeTab;
  return _react2.default.createElement(
    "ul",
    { className: "bordered rounded flex justify-around overflow-hidden" },
    tabs.map(function (tab, index) {
      return _react2.default.createElement(
        "li",
        { className: "flex-full border-left", key: index },
        _react2.default.createElement(ChartSettingsTab, {
          name: tab,
          active: tab === activeTab,
          onClick: selectTab
        })
      );
    })
  );
};

ChartSettingsTabs.displayName = "ChartSettingsTabs";
var Widget = function Widget(_ref3) {
  var title = _ref3.title,
      hidden = _ref3.hidden,
      disabled = _ref3.disabled,
      widget = _ref3.widget,
      value = _ref3.value,
      onChange = _ref3.onChange,
      props = _ref3.props;

  var W = widget;
  return _react2.default.createElement(
    "div",
    { className: (0, _classnames2.default)("mb2", { hide: hidden, disable: disabled }) },
    title && _react2.default.createElement(
      "h4",
      { className: "mb1" },
      title
    ),
    W && _react2.default.createElement(W, _extends({ value: value, onChange: onChange }, props))
  );
};

Widget.displayName = "Widget";

var ChartSettings = function (_Component) {
  _inherits(ChartSettings, _Component);

  function ChartSettings(props) {
    _classCallCheck(this, ChartSettings);

    var _this = _possibleConstructorReturn(this, (ChartSettings.__proto__ || Object.getPrototypeOf(ChartSettings)).call(this, props));

    _this.selectTab = function (tab) {
      _this.setState({ currentTab: tab });
    };

    _this.onResetSettings = function () {
      _analytics2.default.trackEvent("Chart Settings", "Reset Settings");
      _this.setState({
        settings: {},
        series: _this._getSeries(_this.props.series, {})
      });
    };

    _this.onChangeSettings = function (newSettings) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = Object.keys(newSettings)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var key = _step.value;

          _analytics2.default.trackEvent("Chart Settings", "Change Setting", key);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var settings = _extends({}, _this.state.settings, newSettings);
      _this.setState({
        settings: settings,
        series: _this._getSeries(_this.props.series, settings)
      });
    };

    var initialSettings = props.series[0].card.visualization_settings;
    _this.state = {
      currentTab: null,
      settings: initialSettings,
      series: _this._getSeries(props.series, initialSettings)
    };
    return _this;
  }

  _createClass(ChartSettings, [{
    key: "_getSeries",
    value: function _getSeries(series, settings) {
      if (settings) {
        series = (0, _icepick.assocIn)(series, [0, "card", "visualization_settings"], settings);
      }
      var transformed = (0, _visualizations.getVisualizationTransformed)((0, _visualizations.extractRemappings)(series));
      return transformed.series;
    }
  }, {
    key: "onDone",
    value: function onDone() {
      this.props.onChange(this.state.settings);
      this.props.onClose();
    }
  }, {
    key: "getChartTypeName",
    value: function getChartTypeName() {
      var _getVisualizationTran = (0, _visualizations.getVisualizationTransformed)(this.props.series),
          CardVisualization = _getVisualizationTran.CardVisualization;

      switch (CardVisualization.identifier) {
        case "table":
          return "table";
        case "scalar":
          return "number";
        case "funnel":
          return "funnel";
        default:
          return "chart";
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          onClose = _props.onClose,
          isDashboard = _props.isDashboard;
      var series = this.state.series;


      var tabs = {};
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = (0, _settings.getSettingsWidgets)(series, this.onChangeSettings, isDashboard)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var widget = _step2.value;

          tabs[widget.section] = tabs[widget.section] || [];
          tabs[widget.section].push(widget);
        }

        // Move settings from the "undefined" section in the first tab
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      if (tabs["undefined"] && Object.values(tabs).length > 1) {
        var _Object$values$;

        var extra = tabs["undefined"];
        delete tabs["undefined"];
        (_Object$values$ = Object.values(tabs)[0]).unshift.apply(_Object$values$, _toConsumableArray(extra));
      }

      var tabNames = Object.keys(tabs);
      var currentTab = this.state.currentTab || tabNames[0];
      var widgets = tabs[currentTab];

      return _react2.default.createElement(
        "div",
        { className: "flex flex-column spread p4" },
        _react2.default.createElement(
          "h2",
          { className: "my2" },
          (0, _c3po.t)(_templateObject, this.getChartTypeName())
        ),
        tabNames.length > 1 && _react2.default.createElement(ChartSettingsTabs, {
          tabs: tabNames,
          selectTab: this.selectTab,
          activeTab: currentTab
        }),
        _react2.default.createElement(
          "div",
          { className: "Grid flex-full mt3" },
          _react2.default.createElement(
            "div",
            { className: "Grid-cell Cell--1of3 scroll-y p1" },
            widgets && widgets.map(function (widget) {
              return _react2.default.createElement(Widget, _extends({ key: widget.id }, widget));
            })
          ),
          _react2.default.createElement(
            "div",
            { className: "Grid-cell flex flex-column" },
            _react2.default.createElement(
              "div",
              { className: "flex flex-column" },
              _react2.default.createElement(_Warnings2.default, {
                className: "mx2 align-self-end text-gold",
                warnings: this.state.warnings,
                size: 20
              })
            ),
            _react2.default.createElement(
              "div",
              { className: "flex-full relative" },
              _react2.default.createElement(_Visualization2.default, {
                className: "spread",
                rawSeries: series,
                isEditing: true,
                showTitle: true,
                isDashboard: true,
                showWarnings: true,
                onUpdateVisualizationSettings: this.onChangeSettings,
                onUpdateWarnings: function onUpdateWarnings(warnings) {
                  return _this2.setState({ warnings: warnings });
                }
              })
            )
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "pt1" },
          !_underscore2.default.isEqual(this.state.settings, {}) && _react2.default.createElement(
            "a",
            {
              className: "Button Button--danger float-right",
              onClick: this.onResetSettings,
              "data-metabase-event": "Chart Settings;Reset"
            },
            (0, _c3po.t)(_templateObject2)
          ),
          _react2.default.createElement(
            "div",
            { className: "float-left" },
            _react2.default.createElement(
              "a",
              {
                className: "Button Button--primary ml2",
                onClick: function onClick() {
                  return _this2.onDone();
                },
                "data-metabase-event": "Chart Settings;Done"
              },
              (0, _c3po.t)(_templateObject3)
            ),
            _react2.default.createElement(
              "a",
              {
                className: "Button ml2",
                onClick: onClose,
                "data-metabase-event": "Chart Settings;Cancel"
              },
              (0, _c3po.t)(_templateObject4)
            )
          )
        )
      );
    }
  }]);

  return ChartSettings;
}(_react.Component);

ChartSettings.displayName = "ChartSettings";
exports.default = ChartSettings;

/***/ }),

/***/ 349:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Warnings = function Warnings(_ref) {
  var warnings = _ref.warnings,
      className = _ref.className,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 16 : _ref$size;

  if (!warnings || warnings.length === 0) {
    return null;
  }
  var tooltip = _react2.default.createElement(
    "ul",
    { className: "px2 pt2 pb1", style: { maxWidth: 350 } },
    warnings.map(function (warning) {
      return _react2.default.createElement(
        "li",
        { className: "pb1", key: warning },
        warning
      );
    })
  );

  return _react2.default.createElement(
    _Tooltip2.default,
    { tooltip: tooltip },
    _react2.default.createElement(_Icon2.default, { className: className, name: "warning", size: size })
  );
};

Warnings.displayName = "Warnings";
exports.default = Warnings;

/***/ }),

/***/ 350:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _reactRouterRedux = __webpack_require__(19);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _browser = __webpack_require__(200);

var _screenfull = __webpack_require__(760);

var _screenfull2 = _interopRequireDefault(_screenfull);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TICK_PERIOD = 0.25; // seconds

/* This contains some state for dashboard controls on both private and embedded dashboards.
 * It should probably be in Redux?
 */

exports.default = function (ComposedComponent) {
  var _class, _temp2;

  return (0, _reactRedux.connect)(null, { replace: _reactRouterRedux.replace })((_temp2 = _class = function (_Component) {
    _inherits(_class, _Component);

    function _class() {
      var _ref,
          _this2 = this;

      var _temp, _this, _ret;

      _classCallCheck(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        isFullscreen: false,
        isNightMode: false,

        refreshPeriod: null,
        refreshElapsed: null
      }, _this.loadDashboardParams = function () {
        var location = _this.props.location;


        var options = (0, _browser.parseHashOptions)(location.hash);
        _this.setRefreshPeriod(Number.isNaN(options.refresh) || options.refresh === 0 ? null : options.refresh);
        _this.setNightMode(options.theme === "night" || options.night); // DEPRECATED: options.night
        _this.setFullscreen(options.fullscreen);
      }, _this.updateDashboardParams = function () {
        var _this$props = _this.props,
            location = _this$props.location,
            replace = _this$props.replace;


        var options = (0, _browser.parseHashOptions)(location.hash);
        var setValue = function setValue(name, value) {
          if (value) {
            options[name] = value;
          } else {
            delete options[name];
          }
        };
        setValue("refresh", _this.state.refreshPeriod);
        setValue("fullscreen", _this.state.isFullscreen);
        setValue("theme", _this.state.isNightMode ? "night" : null);

        delete options.night; // DEPRECATED: options.night

        // Delete the "add card to dashboard" parameter if it's present because we don't
        // want to add the card again on page refresh. The `add` parameter is already handled in
        // DashboardApp before this method is called.
        delete options.add;

        var hash = (0, _browser.stringifyHashOptions)(options);
        hash = hash ? "#" + hash : "";

        if (hash !== location.hash) {
          replace({
            pathname: location.pathname,
            search: location.search,
            hash: hash
          });
        }
      }, _this.setRefreshPeriod = function (refreshPeriod) {
        _this._clearRefreshInterval();
        if (refreshPeriod != null) {
          _this._interval = setInterval(_this._tickRefreshClock, TICK_PERIOD * 1000);
          _this.setState({ refreshPeriod: refreshPeriod, refreshElapsed: 0 });
          _analytics2.default.trackEvent("Dashboard", "Set Refresh", refreshPeriod);
        } else {
          _this.setState({
            refreshPeriod: null,
            refreshElapsed: null
          });
        }
      }, _this.setNightMode = function (isNightMode) {
        isNightMode = !!isNightMode;
        _this.setState({ isNightMode: isNightMode });
      }, _this.setFullscreen = function (isFullscreen) {
        var browserFullscreen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        isFullscreen = !!isFullscreen;
        if (isFullscreen !== _this.state.isFullscreen) {
          if (_screenfull2.default.enabled && browserFullscreen) {
            if (isFullscreen) {
              _screenfull2.default.request();
            } else {
              _screenfull2.default.exit();
            }
          }
          _this.setState({ isFullscreen: isFullscreen });
        }
      }, _this._tickRefreshClock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var refreshElapsed;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                refreshElapsed = (_this.state.refreshElapsed || 0) + TICK_PERIOD;

                if (!(_this.state.refreshPeriod && refreshElapsed >= _this.state.refreshPeriod)) {
                  _context.next = 8;
                  break;
                }

                _this.setState({ refreshElapsed: 0 });
                _context.next = 5;
                return _this.props.fetchDashboard(_this.props.dashboardId, _this.props.location.query);

              case 5:
                _this.props.fetchDashboardCardData({
                  reload: true,
                  clear: false
                });
                _context.next = 9;
                break;

              case 8:
                _this.setState({ refreshElapsed: refreshElapsed });

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, _this2);
      })), _this._fullScreenChanged = function () {
        _this.setState({ isFullscreen: !!_screenfull2.default.isFullscreen });
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(_class, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        if (_screenfull2.default.enabled) {
          document.addEventListener(_screenfull2.default.raw.fullscreenchange, this._fullScreenChanged);
        }
        this.loadDashboardParams();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updateDashboardParams();
        this._showNav(!this.state.isFullscreen);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._showNav(true);
        this._clearRefreshInterval();
        if (_screenfull2.default.enabled) {
          document.removeEventListener(_screenfull2.default.raw.fullscreenchange, this._fullScreenChanged);
        }
      }
    }, {
      key: "_clearRefreshInterval",
      value: function _clearRefreshInterval() {
        if (this._interval != null) {
          clearInterval(this._interval);
        }
      }
    }, {
      key: "_showNav",
      value: function _showNav(show) {
        // NOTE Atte Keinänen 8/10/17: For some reason `document` object isn't present in Jest tests
        // when _showNav is called for the first time
        if (window.document) {
          var nav = window.document.querySelector(".Nav");
          if (show && nav) {
            nav.classList.remove("hide");
          } else if (!show && nav) {
            nav.classList.add("hide");
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(ComposedComponent, _extends({}, this.props, this.state, {
          loadDashboardParams: this.loadDashboardParams,
          updateDashboardParams: this.updateDashboardParams,
          onNightModeChange: this.setNightMode,
          onFullscreenChange: this.setFullscreen,
          onRefreshPeriodChange: this.setRefreshPeriod
        }));
      }
    }]);

    return _class;
  }(_react.Component), _class.displayName = "DashboardControls[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _temp2));
};

/***/ }),

/***/ 352:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Download full results"], ["Download full results"]),
    _templateObject2 = _taggedTemplateLiteral(["Download this data"], ["Download this data"]),
    _templateObject3 = _taggedTemplateLiteral(["Warning"], ["Warning"]),
    _templateObject4 = _taggedTemplateLiteral(["Your answer has a large number of rows so it could take a while to download."], ["Your answer has a large number of rows so it could take a while to download."]),
    _templateObject5 = _taggedTemplateLiteral(["The maximum download size is 1 million rows."], ["The maximum download size is 1 million rows."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _url = __webpack_require__(300);

var _querystring = __webpack_require__(104);

var _querystring2 = _interopRequireDefault(_querystring);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _DownloadButton = __webpack_require__(538);

var _DownloadButton2 = _interopRequireDefault(_DownloadButton);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _FieldSet = __webpack_require__(157);

var _FieldSet2 = _interopRequireDefault(_FieldSet);

var _urls = __webpack_require__(34);

var Urls = _interopRequireWildcard(_urls);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var EXPORT_FORMATS = ["csv", "xlsx", "json"];

var QueryDownloadWidget = function QueryDownloadWidget(_ref) {
  var className = _ref.className,
      card = _ref.card,
      result = _ref.result,
      uuid = _ref.uuid,
      token = _ref.token;
  return _react2.default.createElement(
    _PopoverWithTrigger2.default,
    {
      triggerElement: _react2.default.createElement(
        _Tooltip2.default,
        { tooltip: (0, _c3po.t)(_templateObject) },
        _react2.default.createElement(_Icon2.default, { title: (0, _c3po.t)(_templateObject2), name: "downarrow", size: 16 })
      ),
      triggerClasses: (0, _classnames2.default)(className, "text-brand-hover")
    },
    _react2.default.createElement(
      "div",
      { className: "p2", style: { maxWidth: 320 } },
      _react2.default.createElement(
        "h4",
        null,
        (0, _c3po.t)(_templateObject)
      ),
      result.data.rows_truncated != null && _react2.default.createElement(
        _FieldSet2.default,
        { className: "my2 text-gold border-gold", legend: (0, _c3po.t)(_templateObject3) },
        _react2.default.createElement(
          "div",
          { className: "my1" },
          (0, _c3po.t)(_templateObject4)
        ),
        _react2.default.createElement(
          "div",
          null,
          (0, _c3po.t)(_templateObject5)
        )
      ),
      _react2.default.createElement(
        "div",
        { className: "flex flex-row mt2" },
        EXPORT_FORMATS.map(function (type) {
          return uuid ? _react2.default.createElement(PublicQueryButton, {
            key: type,
            type: type,
            uuid: uuid,
            result: result,
            className: "mr1 text-uppercase text-default"
          }) : token ? _react2.default.createElement(EmbedQueryButton, {
            key: type,
            type: type,
            token: token,
            className: "mr1 text-uppercase text-default"
          }) : card && card.id ? _react2.default.createElement(SavedQueryButton, {
            key: type,
            type: type,
            card: card,
            result: result,
            className: "mr1 text-uppercase text-default"
          }) : card && !card.id ? _react2.default.createElement(UnsavedQueryButton, {
            key: type,
            type: type,
            card: card,
            result: result,
            className: "mr1 text-uppercase text-default"
          }) : null;
        })
      )
    )
  );
};

QueryDownloadWidget.displayName = "QueryDownloadWidget";
var UnsavedQueryButton = function UnsavedQueryButton(_ref2) {
  var className = _ref2.className,
      type = _ref2.type,
      json_query = _ref2.result.json_query,
      card = _ref2.card;
  return _react2.default.createElement(
    _DownloadButton2.default,
    {
      className: className,
      url: "api/dataset/" + type,
      params: { query: JSON.stringify(_underscore2.default.omit(json_query, "constraints")) },
      extensions: [type]
    },
    type
  );
};

UnsavedQueryButton.displayName = "UnsavedQueryButton";
var SavedQueryButton = function SavedQueryButton(_ref3) {
  var className = _ref3.className,
      type = _ref3.type,
      json_query = _ref3.result.json_query,
      card = _ref3.card;
  return _react2.default.createElement(
    _DownloadButton2.default,
    {
      className: className,
      url: "api/card/" + card.id + "/query/" + type,
      params: { parameters: JSON.stringify(json_query.parameters) },
      extensions: [type]
    },
    type
  );
};

SavedQueryButton.displayName = "SavedQueryButton";
var PublicQueryButton = function PublicQueryButton(_ref4) {
  var className = _ref4.className,
      type = _ref4.type,
      uuid = _ref4.uuid,
      json_query = _ref4.result.json_query;
  return _react2.default.createElement(
    _DownloadButton2.default,
    {
      className: className,
      method: "GET",
      url: Urls.publicQuestion(uuid, type),
      params: { parameters: JSON.stringify(json_query.parameters) },
      extensions: [type]
    },
    type
  );
};

PublicQueryButton.displayName = "PublicQueryButton";
var EmbedQueryButton = function EmbedQueryButton(_ref5) {
  var className = _ref5.className,
      type = _ref5.type,
      token = _ref5.token;

  // Parse the query string part of the URL (e.g. the `?key=value` part) into an object. We need to pass them this
  // way to the `DownloadButton` because it's a form which means we need to insert a hidden `<input>` for each param
  // we want to pass along. For whatever wacky reason the /api/embed endpoint expect params like ?key=value instead
  // of like ?params=<json-encoded-params-array> like the other endpoints do.
  var query = (0, _url.parse)(window.location.href).query; // get the part of the URL that looks like key=value
  var params = query && _querystring2.default.parse(query); // expand them out into a map

  return _react2.default.createElement(
    _DownloadButton2.default,
    {
      className: className,
      method: "GET",
      url: Urls.embedCard(token, type),
      params: params,
      extensions: [type]
    },
    type
  );
};

EmbedQueryButton.displayName = "EmbedQueryButton";
QueryDownloadWidget.propTypes = {
  className: _propTypes2.default.string,
  card: _propTypes2.default.object,
  result: _propTypes2.default.object,
  uuid: _propTypes2.default.string
};

exports.default = QueryDownloadWidget;

/***/ }),

/***/ 359:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.parseViewBox = parseViewBox;
exports.loadIcon = loadIcon;
/*  weak */

/*
    Metabase Icon Paths
    -----

    These paths represent the current canonical icon set for Metabase.
*/

var ICON_PATHS = exports.ICON_PATHS = {
  add: "M19,13 L19,2 L14,2 L14,13 L2,13 L2,18 L14,18 L14,30 L19,30 L19,18 L30,18 L30,13 L19,13 Z",
  addtodash: {
    path: "M21,23 L16,23 L16,27 L21,27 L21,32 L25,32 L25,27 L30,27 L30,23 L25,23 L25,18 L21,18 L21,23 Z M32,7 L32,14 L28,14 L28,8 L0,8 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 L4,0 L28,0 C30.209139,-4.05812251e-16 32,1.790861 32,4 L32,7 Z M0,8 L4,8 L4,28 L0,28 L0,8 Z M0,28 L12,28 L12,32 L4,32 C1.790861,32 2.705415e-16,30.209139 0,28 Z",
    attrs: { fillRule: "evenodd" }
  },
  alert: {
    path: "M14.677 7.339c-4.77.562-5.23 4.75-5.23 7.149 0 2.576 0 3.606-.53 4.121-.352.344-1.058.515-2.117.515V21.7h18v-2.576c-1.059 0-1.588 0-2.118-.515-.353-.343-.53-2.06-.53-5.151-.316-3.705-2.06-5.745-5.23-6.12a1.52 1.52 0 0 0 .466-1.093c0-.853-.71-1.545-1.588-1.545-.877 0-1.588.692-1.588 1.545 0 .427.178.814.465 1.094zM16.05 0c2.473 0 5.57 1.851 6.22 4.12 3.057 1.58 4.868 4.503 5.223 8.706l.013.158v.157c0 .905.014 1.682.042 2.327H30.6V25.73H1.5V15.468h3.091c.002-.326.003-.725.003-1.222 0-2.308.316-4.322 1.26-6.233.881-1.784 2.223-2.988 3.976-3.893C10.48 1.85 13.576 0 16.05 0zM13.1 25.8c.25 1.6 1.166 2.4 2.75 2.4s2.5-.8 2.75-2.4h-5.5zm-4.35-3.16h14.191l-.586 3.261c-.497 3.607-2.919 6.001-6.51 6.001-3.59 0-6.012-2.394-6.508-6L8.75 22.64z",
    attrs: { fillRule: "nonzero" }
  },
  alertConfirm: {
    path: "M24.326 7.184a9.604 9.604 0 0 0-.021-.034c-.876-1.39-2.056-2.47-3.518-3.19-.509-2.269-2.51-3.96-4.9-3.96-2.361 0-4.344 1.652-4.881 3.88C7.113 5.63 5.68 9.55 5.68 14.424c0 .88-.003 1.473-.01 1.902H2.8v9.605h26.175v-9.602h-3.297v6.257H6.097V19.67c1.152 0 1.92-.194 2.304-.583.576-.583.576-1.75.576-4.664 0-2.716.5-7.456 5.69-8.091a1.754 1.754 0 0 1-.507-1.238c0-.966.773-1.749 1.727-1.749.955 0 1.728.783 1.728 1.75 0 .483-.194.92-.507 1.237 2.2.27 3.768 1.308 4.705 3.112.037-.04.874-.793 2.513-2.26zm-11.312 18.7H9.741C10.214 29.398 12.48 32 15.887 32c3.409 0 5.674-2.602 6.147-6.116H18.76c-.27 1.911-1.228 2.77-2.874 2.77-1.645 0-2.603-.859-2.873-2.77zm.297-12.466l2.504-2.707 3.819 4.106 7.653-8.254L29.8 9.38 19.636 20.295l-6.325-6.877z",
    attrs: { fillRule: "nonzero" }
  },
  all: "M30.595 13.536c1.85.755 1.879 2.05.053 2.9l-11.377 5.287c-1.82.846-4.763.858-6.583.022L1.344 16.532c-1.815-.835-1.785-2.131.05-2.89l1.637-.677 8.977 4.125c2.194 1.009 5.74.994 7.934-.026l9.022-4.193 1.63.665zm-1.63 7.684l1.63.666c1.85.755 1.879 2.05.053 2.898l-11.377 5.288c-1.82.847-4.763.859-6.583.022L1.344 24.881c-1.815-.834-1.785-2.131.05-2.89l1.637-.677 8.977 4.126c2.194 1.008 5.74.993 7.934-.026l9.022-4.194zM12.686 1.576c1.843-.762 4.834-.77 6.687-.013l11.22 4.578c1.85.755 1.88 2.05.054 2.899l-11.377 5.288c-1.82.846-4.763.858-6.583.022L1.344 9.136c-1.815-.834-1.785-2.13.05-2.89l11.293-4.67z",
  archive: {
    path: "M27.557 1v2.356a1 1 0 0 1-1 1H5.443a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h21.114a1 1 0 0 1 1 1zM4.356 26.644h23.288v-15.57H4.356v15.57zM32 8.718V29a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V8.718a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2zM16.116 25.076l5.974-6.57h-3.983V12.93h-3.982v5.575h-3.982l5.973 6.571z",
    attrs: { fillRule: "evenodd" }
  },
  area: "M31.154 28.846l.852.004V8.64l-1.15 2.138-6.818 6.37c-.13.122-9.148 1.622-9.148 1.622l-.545.096-.383.4-7.93 8.31-1.016 1.146 2.227.017 23.91.107L7.25 28.74l7.93-8.31 9.615-1.684 7.211-6.737v15.984a.855.855 0 0 1-.852.854zM0 28.74l11.79-13.362 11.788-3.369 8.077-8.07c.194-.193.351-.128.351.15V28.85L0 28.74z",
  attachment: {
    path: "M22.162 8.704c.029 8.782-.038 14.123-.194 15.926-.184 2.114-2.922 4.322-5.9 4.322-3.06 0-5.542-1.98-5.836-4.376-.294-2.392-.195-14.266.01-18.699.077-1.661 1.422-2.83 3.548-2.83 2.067 0 3.488 1.335 3.594 3.164.06 1.052.074 3.49.053 7.107-.006.928-.013 1.891-.023 3.072l-.023 2.527c-.006.824-.01 1.358-.01 1.718 0 1.547-.39 2.011-1.475 2.011-.804 0-1.202-.522-1.202-1.38V8.699a1.524 1.524 0 0 0-3.048 0v12.567c0 2.389 1.554 4.428 4.25 4.428 2.897 0 4.523-1.934 4.523-5.06 0-.348.003-.875.01-1.691l.022-2.526c.01-1.184.018-2.15.024-3.082.021-3.697.008-6.155-.058-7.3C20.227 2.592 17.469 0 13.79 0c-3.695 0-6.438 2.382-6.593 5.737-.213 4.613-.312 16.585.01 19.21C7.697 28.94 11.53 32 16.067 32c4.482 0 8.61-3.327 8.937-7.106.168-1.935.235-7.302.206-16.2a1.524 1.524 0 0 0-3.048.01z",
    attrs: { fillRule: "nonzero" }
  },
  backArrow: "M11.7416687,19.0096 L18.8461178,26.4181004 L14.2696969,30.568 L0.38960831,16.093881 L0,15.6875985 L0.49145276,15.241949 L14.6347557,1 L19.136,5.22693467 L11.3214393,13.096 L32,13.096 L32,19.0096 L11.7416687,19.0096 Z",
  bar: "M2 23.467h6.4V32H2v-8.533zm10.667-12.8h6.4V32h-6.4V10.667zM23.333 0h6.4v32h-6.4V0z",
  beaker: "M4.31736354,31.1631075 C3.93810558,30.6054137 3.89343681,29.6635358 4.20559962,29.0817181 L11.806982,14.9140486 L11.8069821,10.5816524 L10.7015144,10.4653256 C10.0309495,10.394763 9.48734928,9.78799739 9.48734928,9.12166999 L9.48734928,7.34972895 C9.48734928,6.67821106 10.0368737,6.13383825 10.7172248,6.13383825 L21.8462005,6.13383825 C22.525442,6.13383825 23.0760761,6.68340155 23.0760761,7.34972895 L23.0760761,9.12166999 C23.0760761,9.79318788 22.5250158,10.3375607 21.856025,10.3375607 L20.9787023,10.3375607 L20.9787024,14.9281806 L28.77277,29.0827118 C29.0983515,29.6739888 29.0709073,30.6193105 28.7174156,31.1846409 L28.852457,30.9686726 C28.4963041,31.538259 27.6541076,32 26.9865771,32 L6.10749779,32 C5.43315365,32 4.58248747,31.5529687 4.19978245,30.9902061 L4.31736354,31.1631075 Z M15.5771418,17.6040443 C16.5170398,17.6040443 17.2789777,16.8377777 17.2789777,15.89254 C17.2789777,14.9473023 16.5170398,14.1810358 15.5771418,14.1810358 C14.6372438,14.1810358 13.8753059,14.9473023 13.8753059,15.89254 C13.8753059,16.8377777 14.6372438,17.6040443 15.5771418,17.6040443 Z M16.5496195,12.8974079 C17.8587633,12.8974079 18.9200339,11.830108 18.9200339,10.5135268 C18.9200339,9.1969457 17.8587633,8.1296458 16.5496195,8.1296458 C15.2404758,8.1296458 14.1792052,9.1969457 14.1792052,10.5135268 C14.1792052,11.830108 15.2404758,12.8974079 16.5496195,12.8974079 Z M5.71098553,30.2209651 L10.9595331,20.5151267 C10.9595331,20.5151267 12.6834557,21.2672852 14.3734184,21.2672852 C16.0633811,21.2672852 16.8198616,19.2872624 17.588452,18.6901539 C18.3570425,18.0930453 19.9467191,17.1113296 19.9467191,17.1113296 L27.0506095,30.1110325 L5.71098553,30.2209651 Z M13.6608671,4.37817079 C14.4114211,4.37817079 15.0198654,3.78121712 15.0198654,3.04483745 C15.0198654,2.30845779 14.4114211,1.71150412 13.6608671,1.71150412 C12.9103132,1.71150412 12.3018689,2.30845779 12.3018689,3.04483745 C12.3018689,3.78121712 12.9103132,4.37817079 13.6608671,4.37817079 Z M17.9214578,2.45333328 C18.6119674,2.45333328 19.1717361,1.90413592 19.1717361,1.22666664 C19.1717361,0.549197362 18.6119674,0 17.9214578,0 C17.2309481,0 16.6711794,0.549197362 16.6711794,1.22666664 C16.6711794,1.90413592 17.2309481,2.45333328 17.9214578,2.45333328 Z",
  bolt: "M21.697 0L8 16.809l7.549 2.538L11.687 32l12.652-16.6-7.695-2.317z",
  breakout: "M24.47 1H32v7.53h-7.53V1zm0 11.294H32v7.53h-7.53v-7.53zm0 11.294H32v7.53h-7.53v-7.53zM0 1h9.412v30.118H0V1zm11.731 13.714c.166-.183.452-.177.452-.177h6.475s-1.601-2.053-2.07-2.806c-.469-.753-.604-1.368 0-1.905.603-.536 1.226-.281 1.878.497.652.779 2.772 3.485 3.355 4.214.583.73.65 1.965 0 2.835-.65.87-2.65 4.043-3.163 4.65-.514.607-1.123.713-1.732.295-.609-.419-.838-1.187-.338-1.872.5-.684 2.07-3.073 2.07-3.073h-6.475s-.27 0-.46-.312-.151-.612-.151-.612l.007-1.246s-.014-.306.152-.488z",
  bubble: "M18.155 20.882c-5.178-.638-9.187-5.051-9.187-10.402C8.968 4.692 13.66 0 19.448 0c5.789 0 10.48 4.692 10.48 10.48 0 3.05-1.302 5.797-3.383 7.712a7.127 7.127 0 1 1-8.39 2.69zm-6.392 10.14a2.795 2.795 0 1 1 0-5.59 2.795 2.795 0 0 1 0 5.59zm-6.079-6.288a4.541 4.541 0 1 1 0-9.083 4.541 4.541 0 0 1 0 9.083z",
  burger: "M2.5 3.6h27a2.5 2.5 0 1 1 0 5h-27a2.5 2.5 0 0 1 0-5zm0 9.931h27a2.5 2.5 0 1 1 0 5h-27a2.5 2.5 0 1 1 0-5zm0 9.931h27a2.5 2.5 0 1 1 0 5h-27a2.5 2.5 0 0 1 0-5z",
  calendar: {
    path: "M21,2 L21,0 L18,0 L18,2 L6,2 L6,0 L3,0 L3,2 L2.99109042,2 C1.34177063,2 0,3.34314575 0,5 L0,6.99502651 L0,20.009947 C0,22.2157067 1.78640758,24 3.99005301,24 L20.009947,24 C22.2157067,24 24,22.2135924 24,20.009947 L24,6.99502651 L24,5 C24,3.34651712 22.6608432,2 21.0089096,2 L21,2 L21,2 Z M22,8 L22,20.009947 C22,21.1099173 21.1102431,22 20.009947,22 L3.99005301,22 C2.89008272,22 2,21.1102431 2,20.009947 L2,8 L22,8 L22,8 Z M6,12 L10,12 L10,16 L6,16 L6,12 Z",
    attrs: { viewBox: "0 0 24 24" }
  },
  check: "M1 14 L5 10 L13 18 L27 4 L31 8 L13 26 z ",
  chevrondown: "M1 12 L16 26 L31 12 L27 8 L16 18 L5 8 z ",
  chevronleft: "M20 1 L24 5 L14 16 L24 27 L20 31 L6 16 z",
  chevronright: "M12 1 L26 16 L12 31 L8 27 L18 16 L8 5 z ",
  chevronup: "M1 20 L16 6 L31 20 L27 24 L16 14 L5 24 z",
  clipboard: "M8.54667751,5.50894675 L6.00494659,5.50894675 C4.89702623,5.50894675 4,6.40070914 4,7.50075379 L4,30.0171397 C4,31.1120596 4.89764516,32.0089468 6.00494659,32.0089468 L25.9950534,32.0089468 C27.1029738,32.0089468 28,31.1171844 28,30.0171397 L28,7.50075379 C28,6.40583387 27.1023548,5.50894675 25.9950534,5.50894675 L23.5373296,5.50894675 L23.5373296,3.0446713 L19.9106557,3.0446713 C19.9106557,3.0446713 19.6485834,8.05825522e-08 16.0837607,0 C12.518938,-8.05825523e-08 12.1644547,3.04776207 12.1644547,3.04776207 L8.57253264,3.04776207 L8.54667751,5.50894675 Z M23.5373296,7.50894675 L26,7.50894675 L26,30.0089468 L6,30.0089468 L6,7.50894675 L8.52566721,7.50894675 L8.4996301,9.98745456 L23.5373296,9.98745456 L23.5373296,7.50894675 Z M10.573037,5.01478303 L13.9861608,5.01478303 L13.9861608,3.76128231 C13.9861608,3.76128231 14.0254332,1.94834752 16.0135743,1.94834752 C18.0017155,1.94834752 18.0017156,3.7055821 18.0017156,3.7055821 L18.0017156,4.94060459 L21.4955568,4.94060459 L21.4955568,8.03924122 L10.5173901,8.03924122 L10.573037,5.01478303 Z M16,5.00894675 C16.5522847,5.00894675 17,4.5612315 17,4.00894675 C17,3.456662 16.5522847,3.00894675 16,3.00894675 C15.4477153,3.00894675 15,3.456662 15,4.00894675 C15,4.5612315 15.4477153,5.00894675 16,5.00894675 Z M8.5,18.0089468 L8.5,21.0082323 L11.5,21.0082323 L11.5,18.0446111 L8.5,18.0089468 Z M8.5,23.0089468 L8.5,26.0082323 L11.5,26.0082323 L11.5,23.0446111 L8.5,23.0089468 Z M8.5,13.0089468 L8.5,16.0082323 L11.5,16.0082323 L11.5,13.0446111 L8.5,13.0089468 Z M13.5,13.0193041 L13.5,16 L23.5,16 L23.5,13 L13.5,13.0193041 Z M13.5,23.0193041 L13.5,26 L23.5,26 L23.5,23 L13.5,23.0193041 Z M13.5,18.0193041 L13.5,21 L23.5,21 L23.5,18 L13.5,18.0193041 Z",
  clock: "M16 0 A16 16 0 0 0 0 16 A16 16 0 0 0 16 32 A16 16 0 0 0 32 16 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 28 16 A12 12 0 0 1 16 28 A12 12 0 0 1 4 16 A12 12 0 0 1 16 4 M14 6 L14 17.25 L22 22 L24.25 18.5 L18 14.75 L18 6z",
  clone: {
    path: "M12,11 L16,11 L16,0 L5,0 L5,3 L12,3 L12,11 L12,11 Z M0,4 L11,4 L11,15 L0,15 L0,4 Z",
    attrs: { viewBox: "0 0 16 15" }
  },
  close: "M4 8 L8 4 L16 12 L24 4 L28 8 L20 16 L28 24 L24 28 L16 20 L8 28 L4 24 L12 16 z ",
  collection: "M16.5695046,2.82779686 L15.5639388,2.83217072 L30.4703127,11.5065092 L30.4818076,9.80229623 L15.5754337,18.2115855 L16.5436335,18.2077098 L1.65289961,9.96407638 L1.67877073,11.6677911 L16.5695046,2.82779686 Z M0.691634577,11.6826271 L15.5823685,19.9262606 C15.8836872,20.0930731 16.2506087,20.0916044 16.5505684,19.9223849 L31.4569423,11.5130957 C32.1196316,11.1392458 32.1260238,10.1915465 31.4684372,9.80888276 L16.5620632,1.1345443 C16.2511162,0.953597567 15.8658421,0.955273376 15.5564974,1.13891816 L0.665763463,9.97891239 C0.0118284022,10.3671258 0.0262104889,11.3142428 0.691634577,11.6826271 Z M15.5699489,25.798061 L16.0547338,26.0652615 L16.536759,25.7931643 L31.4991818,17.3470627 C31.973977,17.0790467 32.1404815,16.4788587 31.8710802,16.0065052 C31.6016788,15.5341517 30.9983884,15.3685033 30.5235933,15.6365193 L15.5611705,24.0826209 L16.5279806,24.0777242 L1.46763754,15.7768642 C0.99012406,15.5136715 0.388560187,15.6854222 0.124007019,16.16048 C-0.14054615,16.6355379 0.0320922897,17.2340083 0.509605765,17.497201 L15.5699489,25.798061 Z M15.5699489,31.7327994 L16.0547338,32 L16.536759,31.7279028 L31.4991818,23.2818011 C31.973977,23.0137852 32.1404815,22.4135972 31.8710802,21.9412437 C31.6016788,21.4688901 30.9983884,21.3032418 30.5235933,21.5712578 L15.5611705,30.0173594 L16.5279806,30.0124627 L1.46763754,21.7116027 C0.99012406,21.44841 0.388560187,21.6201606 0.124007019,22.0952185 C-0.14054615,22.5702764 0.0320922897,23.1687467 0.509605765,23.4319394 L15.5699489,31.7327994 Z",
  compare: {
    path: "M8.514 23.486C3.587 21.992 0 17.416 0 12 0 5.373 5.373 0 12 0c5.415 0 9.992 3.587 11.486 8.514C28.413 10.008 32 14.584 32 20c0 6.627-5.373 12-12 12-5.415 0-9.992-3.587-11.486-8.514zm2.293.455A10.003 10.003 0 0 0 20 30c5.523 0 10-4.477 10-10 0-4.123-2.496-7.664-6.059-9.193.04.392.059.79.059 1.193 0 6.627-5.373 12-12 12-.403 0-.8-.02-1.193-.059z",
    attrs: {
      fillRule: "nonzero"
    }
  },
  compass_needle: {
    path: "M0 32l10.706-21.064L32 0 21.22 20.89 0 32zm16.092-12.945a3.013 3.013 0 0 0 3.017-3.009 3.013 3.013 0 0 0-3.017-3.008 3.013 3.013 0 0 0-3.017 3.008 3.013 3.013 0 0 0 3.017 3.009z"
  },
  connections: {
    path: "M5.37815706,11.5570815 C5.55061975,11.1918363 5.64705882,10.783651 5.64705882,10.3529412 C5.64705882,9.93118218 5.55458641,9.53102128 5.38881053,9.1716274 L11.1846365,4.82475792 C11.6952189,5.33295842 12.3991637,5.64705882 13.1764706,5.64705882 C14.7358628,5.64705882 16,4.38292165 16,2.82352941 C16,1.26413718 14.7358628,0 13.1764706,0 C11.6170784,0 10.3529412,1.26413718 10.3529412,2.82352941 C10.3529412,3.2452884 10.4454136,3.64544931 10.6111895,4.00484319 L10.6111895,4.00484319 L4.81536351,8.35171266 C4.3047811,7.84351217 3.60083629,7.52941176 2.82352941,7.52941176 C1.26413718,7.52941176 0,8.79354894 0,10.3529412 C0,11.9123334 1.26413718,13.1764706 2.82352941,13.1764706 C3.59147157,13.1764706 4.28780867,12.8698929 4.79682555,12.3724528 L10.510616,16.0085013 C10.408473,16.3004758 10.3529412,16.6143411 10.3529412,16.9411765 C10.3529412,18.5005687 11.6170784,19.7647059 13.1764706,19.7647059 C14.7358628,19.7647059 16,18.5005687 16,16.9411765 C16,15.3817842 14.7358628,14.1176471 13.1764706,14.1176471 C12.3029783,14.1176471 11.5221273,14.5142917 11.0042049,15.1372938 L5.37815706,11.5570815 Z",
    attrs: { viewBox: "0 0 16 19.7647" }
  },
  contract: "M18.0015892,0.327942852 L18.0015892,14 L31.6736463,14 L26.6544389,8.98079262 L32,3.63523156 L28.3647684,0 L23.0192074,5.34556106 L18.0015892,0.327942852 Z M14,31.6720571 L14,18 L0.327942852,18 L5.34715023,23.0192074 L0.00158917013,28.3647684 L3.63682073,32 L8.98238179,26.6544389 L14,31.6720571 Z",
  copy: {
    path: "M10.329 6.4h-3.33c-.95 0-1.72.77-1.72 1.72v.413h17.118V8.12c0-.941-.77-1.719-1.72-1.719h-3.31l-1.432-1.705a2.137 2.137 0 0 0-2.097-2.562 2.137 2.137 0 0 0-2.054 2.73L10.329 6.4zm12.808 4.267h1.4v8.557h-4.42l.111-4.188-5.981 6.064 5.805 6.264v-3.966h4.485v6.469H3.14v-19.2h19.997zm3.54 12.731v6.888c0 .947-.769 1.714-1.725 1.714H2.725C1.772 32 1 31.23 1 30.286V5.981c0-.947.768-1.714 1.725-1.714h6.834A4.273 4.273 0 0 1 13.839 0c2.363 0 4.279 1.91 4.279 4.267h6.834c.953 0 1.725.77 1.725 1.714v13.243H31v4.174h-4.323zM5.279 12.8h10.7v2.133h-10.7V12.8zm0 4.267h5.564V19.2H5.279v-2.133zm0 4.266h5.564v2.134H5.279v-2.134zm0 4.267h8.56v2.133h-8.56V25.6z",
    attrs: { fillRule: "evenodd" }
  },
  cursor_move: "M14.8235294,14.8235294 L14.8235294,6.58823529 L17.1764706,6.58823529 L17.1764706,14.8235294 L25.4117647,14.8235294 L25.4117647,17.1764706 L17.1764706,17.1764706 L17.1764706,25.4117647 L14.8235294,25.4117647 L14.8235294,17.1764706 L6.58823529,17.1764706 L6.58823529,14.8235294 L14.8235294,14.8235294 L14.8235294,14.8235294 Z M16,0 L20.1176471,6.58823529 L11.8823529,6.58823529 L16,0 Z M11.8823529,25.4117647 L20.1176471,25.4117647 L16,32 L11.8823529,25.4117647 Z M32,16 L25.4117647,20.1176471 L25.4117647,11.8823529 L32,16 Z M6.58823529,11.8823529 L6.58823529,20.1176471 L0,16 L6.58823529,11.8823529 Z",
  cursor_resize: "M17.4017952,6.81355995 L15.0488541,6.81355995 L15.0488541,25.6370894 L17.4017952,25.6370894 L17.4017952,6.81355995 Z M16.2253247,0.225324657 L20.3429717,6.81355995 L12.1076776,6.81355995 L16.2253247,0.225324657 Z M12.1076776,25.6370894 L20.3429717,25.6370894 L16.2253247,32.2253247 L12.1076776,25.6370894 Z",
  costapproximate: "M27 19a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM16 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 22a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM5 19a3 3 0 1 1 0-6 3 3 0 0 1 0 6z",
  costexact: "M27 19a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM16 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 22a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM5 19a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm11 0a3 3 0 1 1 0-6 3 3 0 0 1 0 6z",
  costextended: "M27,19 C25.3431458,19 24,17.6568542 24,16 C24,14.3431458 25.3431458,13 27,13 C28.6568542,13 30,14.3431458 30,16 C30,17.6568542 28.6568542,19 27,19 Z M16,8 C14.3431458,8 13,6.65685425 13,5 C13,3.34314575 14.3431458,2 16,2 C17.6568542,2 19,3.34314575 19,5 C19,6.65685425 17.6568542,8 16,8 Z M16,30 C14.3431458,30 13,28.6568542 13,27 C13,25.3431458 14.3431458,24 16,24 C17.6568542,24 19,25.3431458 19,27 C19,28.6568542 17.6568542,30 16,30 Z M5,19 C3.34314575,19 2,17.6568542 2,16 C2,14.3431458 3.34314575,13 5,13 C6.65685425,13 8,14.3431458 8,16 C8,17.6568542 6.65685425,19 5,19 Z M16,19 C14.3431458,19 13,17.6568542 13,16 C13,14.3431458 14.3431458,13 16,13 C17.6568542,13 19,14.3431458 19,16 C19,17.6568542 17.6568542,19 16,19 Z M10,12 C8.8954305,12 8,11.1045695 8,10 C8,8.8954305 8.8954305,8 10,8 C11.1045695,8 12,8.8954305 12,10 C12,11.1045695 11.1045695,12 10,12 Z M22,12 C20.8954305,12 20,11.1045695 20,10 C20,8.8954305 20.8954305,8 22,8 C23.1045695,8 24,8.8954305 24,10 C24,11.1045695 23.1045695,12 22,12 Z M22,24 C20.8954305,24 20,23.1045695 20,22 C20,20.8954305 20.8954305,20 22,20 C23.1045695,20 24,20.8954305 24,22 C24,23.1045695 23.1045695,24 22,24 Z M10,24 C8.8954305,24 8,23.1045695 8,22 C8,20.8954305 8.8954305,20 10,20 C11.1045695,20 12,20.8954305 12,22 C12,23.1045695 11.1045695,24 10,24 Z",
  database: "M1.18285296e-08,10.5127919 C-1.47856568e-08,7.95412848 1.18285298e-08,4.57337284 1.18285298e-08,4.57337284 C1.18285298e-08,4.57337284 1.58371041,5.75351864e-10 15.6571342,0 C29.730558,-5.7535027e-10 31.8900148,4.13849684 31.8900148,4.57337284 L31.8900148,10.4843058 C31.8900148,10.4843058 30.4448001,15.1365942 16.4659751,15.1365944 C2.48715012,15.1365947 2.14244494e-08,11.4353349 1.18285296e-08,10.5127919 Z M0.305419478,21.1290071 C0.305419478,21.1290071 0.0405133833,21.2033291 0.0405133833,21.8492606 L0.0405133833,27.3032816 C0.0405133833,27.3032816 1.46515486,31.941655 15.9641228,31.941655 C30.4630908,31.941655 32,27.3446712 32,27.3446712 C32,27.3446712 32,21.7986104 32,21.7986105 C32,21.2073557 31.6620557,21.0987647 31.6620557,21.0987647 C31.6620557,21.0987647 29.7146434,25.22314 16.0318829,25.22314 C2.34912233,25.22314 0.305419478,21.1290071 0.305419478,21.1290071 Z M0.305419478,12.656577 C0.305419478,12.656577 0.0405133833,12.730899 0.0405133833,13.3768305 L0.0405133833,18.8308514 C0.0405133833,18.8308514 1.46515486,23.4692249 15.9641228,23.4692249 C30.4630908,23.4692249 32,18.8722411 32,18.8722411 C32,18.8722411 32,13.3261803 32,13.3261803 C32,12.7349256 31.6620557,12.6263346 31.6620557,12.6263346 C31.6620557,12.6263346 29.7146434,16.7507099 16.0318829,16.7507099 C2.34912233,16.7507099 0.305419478,12.656577 0.305419478,12.656577 Z",
  dashboard: "M32,29 L32,4 L32,0 L0,0 L0,8 L28,8 L28,28 L4,28 L4,8 L0,8 L0,29.5 L0,32 L32,32 L32,29 Z M7.27272727,18.9090909 L17.4545455,18.9090909 L17.4545455,23.2727273 L7.27272727,23.2727273 L7.27272727,18.9090909 Z M7.27272727,12.0909091 L24.7272727,12.0909091 L24.7272727,16.4545455 L7.27272727,16.4545455 L7.27272727,12.0909091 Z M20.3636364,18.9090909 L24.7272727,18.9090909 L24.7272727,23.2727273 L20.3636364,23.2727273 L20.3636364,18.9090909 Z",
  curve: "M3.033 3.791v22.211H31.09c.403 0 .882.872.882 1.59 0 .717-.48 1.408-.882 1.408H0V3.791c0-.403.875-.914 1.487-.914.612 0 1.546.511 1.546.914zm3.804 17.912C5.714 21.495 5 20.318 5 19.355c0-.963.831-2.296 1.837-2.296 2.093 0 2.965-1.207 4.204-5.242l.148-.482C12.798 6.077 14.18 3 17.968 3c3.792 0 5.17 3.08 6.765 8.343l.145.478c1.227 4.034 2.093 5.238 4.181 5.238 1.006 0 1.875 1.29 1.875 2.296 0 1.007-.898 2.184-1.875 2.348-3.656.612-6.004-2.364-7.665-7.821l-.146-.482c-1.14-3.76-1.8-6.754-3.28-6.754-1.483 0-2.147 2.995-3.297 6.754l-.148.486c-1.675 5.454-3.93 8.514-7.686 7.817z",
  document: "M29,10.1052632 L29,28.8325291 C29,30.581875 27.5842615,32 25.8337327,32 L7.16626728,32 C5.41758615,32 4,30.5837102 4,28.8441405 L4,3.15585953 C4,1.41292644 5.42339685,9.39605581e-15 7.15970573,8.42009882e-15 L20.713352,8.01767853e-16 L20.713352,8.42105263 L22.3846872,8.42105263 L22.3846872,0.310375032 L28.7849894,8.42105263 L20.713352,8.42105263 L20.713352,10.1052632 L29,10.1052632 Z M7.3426704,12.8000006 L25.7273576,12.8000006 L25.7273576,14.4842112 L7.3426704,14.4842112 L7.3426704,12.8000006 Z M7.3426704,17.3473687 L25.7273576,17.3473687 L25.7273576,19.0315793 L7.3426704,19.0315793 L7.3426704,17.3473687 Z M7.3426704,21.8947352 L25.7273576,21.8947352 L25.7273576,23.5789458 L7.3426704,23.5789458 L7.3426704,21.8947352 Z M7.43137255,26.2736849 L16.535014,26.2736849 L16.535014,27.9578954 L7.43137255,27.9578954 L7.43137255,26.2736849 Z",
  downarrow: "M12.2782161,19.3207547 L12.2782161,0 L19.5564322,0 L19.5564322,19.3207547 L26.8346484,19.3207547 L15.9173242,32 L5,19.3207547 L12.2782161,19.3207547 Z",
  download: "M19.3636364,15.0588235 L19.3636364,0 L13.6363636,0 L13.6363636,15.0588235 L7.90909091,15.0588235 L16.5,24.9411765 L25.0909091,15.0588235 L19.3636364,15.0588235 Z M27,26.3529412 L27,32 L6,32 L6,26.3529412 L27,26.3529412 Z",
  editdocument: "M19.27 20.255l-5.642 2.173 1.75-6.085L28.108 3.45 32 7.363 19.27 20.255zM20.442 6.9l-2.044-2.049H4.79v23.29h18.711v-6.577l4.787-4.83V31a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h18.024a1 1 0 0 1 .711.297L23.85 3.45 20.442 6.9z",
  ellipsis: {
    path: "M26.1111111,19 C27.7066004,19 29,17.6568542 29,16 C29,14.3431458 27.7066004,13 26.1111111,13 C24.5156218,13 23.2222222,14.3431458 23.2222222,16 C23.2222222,17.6568542 24.5156218,19 26.1111111,19 Z M5.88888889,19 C7.48437817,19 8.77777778,17.6568542 8.77777778,16 C8.77777778,14.3431458 7.48437817,13 5.88888889,13 C4.29339961,13 3,14.3431458 3,16 C3,17.6568542 4.29339961,19 5.88888889,19 Z M16,19 C17.5954893,19 18.8888889,17.6568542 18.8888889,16 C18.8888889,14.3431458 17.5954893,13 16,13 C14.4045107,13 13.1111111,14.3431458 13.1111111,16 C13.1111111,17.6568542 14.4045107,19 16,19 Z",
    attrs: { width: 32, height: 32 }
  },
  embed: "M12.734 9.333L6.099 16l6.635 6.667a2.547 2.547 0 0 1 0 3.59 2.518 2.518 0 0 1-3.573 0L.74 17.795a2.547 2.547 0 0 1 0-3.59L9.16 5.743a2.518 2.518 0 0 1 3.573 0 2.547 2.547 0 0 1 0 3.59zm6.527 13.339l6.64-6.71-6.63-6.623a2.547 2.547 0 0 1-.01-3.59 2.518 2.518 0 0 1 3.573-.01l8.42 8.412c.99.988.995 2.596.011 3.59l-8.42 8.51a2.518 2.518 0 0 1-3.574.01 2.547 2.547 0 0 1-.01-3.59z",
  empty: " ",
  enterorreturn: "M6.81 16.784l6.14-4.694a1.789 1.789 0 0 0 .341-2.49 1.748 1.748 0 0 0-2.464-.344L.697 17a1.788 1.788 0 0 0-.01 2.826l10.058 7.806c.77.598 1.875.452 2.467-.326a1.79 1.79 0 0 0-.323-2.492l-5.766-4.475h23.118c.971 0 1.759-.796 1.759-1.777V6.777C32 5.796 31.212 5 30.24 5c-.971 0-1.759.796-1.759 1.777v10.007H6.811z",
  expand: "M29,13.6720571 L29,8.26132482e-16 L15.3279429,8.64083276e-16 L20.3471502,5.01920738 L15.0015892,10.3647684 L18.6368207,14 L23.9823818,8.65443894 L29,13.6720571 Z M0.00158917013,15.3279429 L0.00158917013,29 L13.6736463,29 L8.65443894,23.9807926 L14,18.6352316 L10.3647684,15 L5.01920738,20.3455611 L0.00158917013,15.3279429 Z",
  expandarrow: "M16.429 28.429L.429 5.57h32z",
  external: "M13.7780693,4.44451732 L5.1588494,4.44451732 C2.32615959,4.44451732 0,6.75504816 0,9.60367661 L0,25.1192379 C0,27.9699171 2.30950226,30.2783972 5.1588494,30.2783972 L18.9527718,30.2783972 C21.7854617,30.2783972 24.1116212,27.9678664 24.1116212,25.1192379 L24.1116212,19.9448453 L20.6671039,19.9448453 L20.6671039,25.1192379 C20.6671039,26.0662085 19.882332,26.8338799 18.9527718,26.8338799 L5.1588494,26.8338799 C4.21204994,26.8338799 3.44451732,26.0677556 3.44451732,25.1192379 L3.44451732,9.60367661 C3.44451732,8.656706 4.22928927,7.88903464 5.1588494,7.88903464 L13.7780693,7.88903464 L13.7780693,4.44451732 L13.7780693,4.44451732 Z M30.9990919,14.455325 L30.9990919,1 L17.5437669,1 L22.4834088,5.93964193 L17.2225866,11.2004641 L20.8001918,14.7780693 L26.061014,9.51724709 L30.9990919,14.455325 L30.9990919,14.455325 L30.9990919,14.455325 Z",
  everything: {
    path: "M26.656 17.273a400.336 400.336 0 0 1 2.632.017l.895.008-2.824-9.56c-.122-.411.1-.848.495-.975a.743.743 0 0 1 .936.516l3.177 10.752.033.23V31H0V17.994L3.303 7.212a.743.743 0 0 1 .94-.507c.394.132.611.57.486.982L1.763 17.37h3.486V9.758c0-.865.669-1.558 1.505-1.558h18.398c.83 0 1.504.69 1.504 1.56v7.513zm-1.497 0h-.176c-.362.002-.648.006-.853.012a7.264 7.264 0 0 0-.272.011c-.056.004-.056.004-.117.011-.058-.001-.058-.001-.355.135-.233.164-.344.37-.452.68-.05.147-.236.807-.287.97-.132.419-.279.775-.469 1.108-.43.752-1.048 1.322-1.959 1.693-.15.062-2.005.093-4.356.056-1.561-.024-4.056-.096-4.053-.095-.92-.185-1.634-.826-2.173-1.818a7.023 7.023 0 0 1-.566-1.4 5.72 5.72 0 0 1-.147-.614.758.758 0 0 0-.738-.652h-1.44V9.76l18.406.002c.003 0 .006 4.98.007 7.51zM1.497 18.931v10.507h29.006V18.863a780.193 780.193 0 0 0-3.023-.025 233.572 233.572 0 0 0-2.489-.003c-.287.001-.524.004-.706.008-.067.23-.17.59-.216.736-.164.52-.352.977-.605 1.42-.594 1.042-1.468 1.846-2.7 2.349-.681.278-8.668.153-9.236.04-1.407-.283-2.456-1.225-3.194-2.582a8.596 8.596 0 0 1-.74-1.874H1.498zM6.982 5.828h18.074c.375 0 .679-.35.679-.78 0-.432-.304-.782-.679-.782H6.982c-.375 0-.678.35-.678.781 0 .431.303.781.678.781zm1.38-3.267h15.28c.369 0 .668-.35.668-.78 0-.431-.299-.781-.668-.781H8.362c-.37 0-.668.35-.668.78 0 .432.299.781.668.781z",
    attrs: { fillRule: "evenodd" }
  },
  eye: "M30.622 18.49c-.549.769-1.46 1.86-2.737 3.273-1.276 1.414-2.564 2.614-3.866 3.602-2.297 1.757-4.963 2.635-8 2.635-3.062 0-5.741-.878-8.038-2.635-1.302-.988-2.59-2.188-3.866-3.602-1.276-1.413-2.188-2.504-2.737-3.272-.549-.769-.9-1.277-1.053-1.524-.433-.63-.433-1.276 0-1.934.128-.247.472-.755 1.034-1.524.561-.768 1.48-1.852 2.756-3.252 1.276-1.4 2.564-2.593 3.866-3.581C10.303 4.892 12.982 4 16.019 4c3.011 0 5.678.892 8 2.676 1.302.988 2.59 2.182 3.866 3.581 1.276 1.4 2.195 2.484 2.756 3.252.562.769.906 1.277 1.034 1.524.433.63.433 1.276 0 1.934-.153.247-.504.755-1.053 1.524zm-1.516-3.214c-.248.376-.248 1.089.034 1.499l-.11-.16-.088-.17a21.93 21.93 0 0 0-.784-1.121c-.483-.66-1.338-1.67-2.546-2.995-1.154-1.266-2.306-2.333-3.466-3.214-1.781-1.368-3.788-2.04-6.127-2.04-2.365 0-4.385.673-6.179 2.05-1.146.87-2.298 1.938-3.452 3.204-1.208 1.325-2.063 2.334-2.546 2.995a21.93 21.93 0 0 0-.784 1.12l-.075.145-.09.135c.249-.376.249-1.089-.033-1.499l.08.122c.105.17.432.644.941 1.356.466.653 1.313 1.666 2.517 3 1.152 1.275 2.3 2.346 3.451 3.22 1.752 1.339 3.773 2.001 6.17 2.001 2.37 0 4.379-.661 6.14-2.008 1.143-.867 2.291-1.938 3.443-3.214 1.204-1.333 2.05-2.346 2.517-2.999.509-.712.836-1.186.942-1.356l.045-.071zm-17.353 5.663C10.584 19.709 10 18.237 10 16.522c0-1.744.584-3.224 1.753-4.439 1.168-1.215 2.59-1.822 4.268-1.822 1.65 0 3.058.607 4.226 1.822C21.416 13.298 22 14.778 22 16.522c0 1.715-.584 3.187-1.753 4.417-1.168 1.229-2.577 1.844-4.226 1.844-1.677 0-3.1-.615-4.268-1.844zm6.265-2.12c.624-.655.906-1.368.906-2.297 0-.957-.281-1.67-.893-2.307-.592-.616-1.203-.879-2.01-.879-.84 0-1.462.266-2.052.88-.612.636-.893 1.35-.893 2.306 0 .929.282 1.642.906 2.298.59.62 1.207.887 2.039.887.8 0 1.405-.264 1.997-.887z",
  field: "M10,1 L22,1 L22,4 L10,4 L10,1 Z M10,6 L22,6 L22,12 L10,12 L10,6 Z M10,14 L22,14 L22,20 L10,20 L10,14 Z M10,22 L22,22 L22,28 L16.1421494,32 L10,28 L10,22 Z",
  fields: "M0,0 L7.51851852,0 L7.51851852,3.2 L0,3.2 L0,0 Z M10.7407407,0 L18.2592593,0 L18.2592593,3.2 L10.7407407,3.2 L10.7407407,0 Z M21.4814815,0 L29,0 L29,3.2 L21.4814815,3.2 L21.4814815,0 Z M0,5.33333333 L7.51851852,5.33333333 L7.51851852,29.8666667 L3.85540334,32 L0,29.8666667 L0,5.33333333 Z M10.7407407,5.33333333 L18.2592593,5.33333333 L18.2592593,29.8666667 L14.5690136,32 L10.7407407,29.8666667 L10.7407407,5.33333333 Z M21.4814815,5.33333333 L29,5.33333333 L29,29.8666667 L25.2114718,32 L21.4814815,29.8666667 L21.4814815,5.33333333 Z",
  filter: {
    svg: '<g><path d="M1,12 L17,12 L17,14 L1,14 L1,12 Z M1,7 L17,7 L17,9 L1,9 L1,7 Z M1,2 L17,2 L17,4 L1,4 L1,2 Z" fill="currentcolor"></path><path d="M9,15.5 C10.3807119,15.5 11.5,14.3807119 11.5,13 C11.5,11.6192881 10.3807119,10.5 9,10.5 C7.61928813,10.5 6.5,11.6192881 6.5,13 C6.5,14.3807119 7.61928813,15.5 9,15.5 Z M13,5.5 C14.3807119,5.5 15.5,4.38071187 15.5,3 C15.5,1.61928813 14.3807119,0.5 13,0.5 C11.6192881,0.5 10.5,1.61928813 10.5,3 C10.5,4.38071187 11.6192881,5.5 13,5.5 Z M3,10.5 C4.38071187,10.5 5.5,9.38071187 5.5,8 C5.5,6.61928813 4.38071187,5.5 3,5.5 C1.61928813,5.5 0.5,6.61928813 0.5,8 C0.5,9.38071187 1.61928813,10.5 3,10.5 Z" id="Path" fill="currentcolor"></path><path d="M13,4.5 C12.1715729,4.5 11.5,3.82842712 11.5,3 C11.5,2.17157288 12.1715729,1.5 13,1.5 C13.8284271,1.5 14.5,2.17157288 14.5,3 C14.5,3.82842712 13.8284271,4.5 13,4.5 Z M9,14.5 C8.17157288,14.5 7.5,13.8284271 7.5,13 C7.5,12.1715729 8.17157288,11.5 9,11.5 C9.82842712,11.5 10.5,12.1715729 10.5,13 C10.5,13.8284271 9.82842712,14.5 9,14.5 Z M3,9.5 C2.17157288,9.5 1.5,8.82842712 1.5,8 C1.5,7.17157288 2.17157288,6.5 3,6.5 C3.82842712,6.5 4.5,7.17157288 4.5,8 C4.5,8.82842712 3.82842712,9.5 3,9.5 Z" fill="#FFFFFF"></path></g>',
    attrs: { viewBox: "0 0 19 16" }
  },
  funnel: "M3.18586974,3.64621479 C2.93075885,3.28932022 3.08031197,3 3.5066208,3 L28.3780937,3 C28.9190521,3 29.0903676,3.34981042 28.7617813,3.77995708 L18.969764,16.5985181 L18.969764,24.3460671 C18.969764,24.8899179 18.5885804,25.5564176 18.133063,25.8254534 C18.133063,25.8254534 12.5698889,29.1260709 12.5673818,28.9963552 C12.4993555,25.4767507 12.5749031,16.7812673 12.5749031,16.7812673 L3.18586974,3.64621479 Z",
  funneladd: "M22.5185184,5.27947653 L17.2510286,5.27947653 L17.2510286,9.50305775 L22.5185184,9.50305775 L22.5185184,14.7825343 L26.7325102,14.7825343 L26.7325102,9.50305775 L32,9.50305775 L32,5.27947653 L26.7325102,5.27947653 L26.7325102,0 L22.5185184,0 L22.5185184,5.27947653 Z M14.9369872,0.791920724 C14.9369872,0.791920724 2.77552871,0.83493892 1.86648164,0.83493892 C0.957434558,0.83493892 0.45215388,1.50534608 0.284450368,1.77831828 C0.116746855,2.05129048 -0.317642562,2.91298361 0.398382661,3.9688628 C1.11440788,5.024742 9.74577378,17.8573356 9.74577378,17.8573356 C9.74577378,17.8573356 9.74577394,28.8183645 9.74577378,29.6867194 C9.74577362,30.5550744 9.83306175,31.1834301 10.7557323,31.6997692 C11.6784029,32.2161084 12.4343349,31.9564284 12.7764933,31.7333621 C13.1186517,31.5102958 19.6904355,27.7639669 20.095528,27.4682772 C20.5006204,27.1725875 20.7969652,26.5522071 20.7969651,25.7441659 C20.7969649,24.9361247 20.7969651,18.2224765 20.7969651,18.2224765 L21.6163131,16.9859755 L18.152048,15.0670739 C18.152048,15.0670739 17.3822517,16.199685 17.2562629,16.4000338 C17.1302741,16.6003826 16.8393552,16.9992676 16.8393551,17.7062886 C16.8393549,18.4133095 16.8393551,24.9049733 16.8393551,24.9049733 L13.7519708,26.8089871 C13.7519708,26.8089871 13.7318369,18.3502323 13.7318367,17.820601 C13.7318366,17.2909696 13.8484216,16.6759061 13.2410236,15.87149 C12.6336257,15.0670739 5.59381579,4.76288686 5.59381579,4.76288686 L14.9359238,4.76288686 L14.9369872,0.791920724 Z",
  funneloutline: {
    path: "M3.186 3.646C2.93 3.29 3.08 3 3.506 3h24.872c.541 0 .712.35.384.78L18.97 16.599v7.747c0 .544-.381 1.21-.837 1.48 0 0-5.563 3.3-5.566 3.17-.068-3.52.008-12.215.008-12.215L3.185 3.646z",
    attrs: {
      stroke: "currentcolor",
      strokeWidth: "4",
      fill: "none",
      fillRule: "evenodd"
    }
  },
  folder: "M3.96901618e-15,5.41206355 L0.00949677904,29 L31.8821132,29 L31.8821132,10.8928571 L18.2224205,10.8928571 L15.0267944,5.41206355 L3.96901618e-15,5.41206355 Z M16.8832349,5.42402804 L16.8832349,4.52140947 C16.8832349,3.68115822 17.5639241,3 18.4024298,3 L27.7543992,3 L30.36417,3 C31.2031259,3 31.8832341,3.67669375 31.8832341,4.51317691 L31.8832341,7.86669975 L31.8832349,8.5999999 L18.793039,8.5999999 L16.8832349,5.42402804 Z",
  gear: "M14 0 H18 L19 6 L20.707 6.707 L26 3.293 L28.707 6 L25.293 11.293 L26 13 L32 14 V18 L26 19 L25.293 20.707 L28.707 26 L26 28.707 L20.707 25.293 L19 26 L18 32 L14 32 L13 26 L11.293 25.293 L6 28.707 L3.293 26 L6.707 20.707 L6 19 L0 18 L0 14 L6 13 L6.707 11.293 L3.293 6 L6 3.293 L11.293 6.707 L13 6 L14 0 z M16 10 A6 6 0 0 0 16 22 A6 6 0 0 0 16 10",
  grabber: "M0,5 L32,5 L32,9.26666667 L0,9.26666667 L0,5 Z M0,13.5333333 L32,13.5333333 L32,17.8 L0,17.8 L0,13.5333333 Z M0,22.0666667 L32,22.0666667 L32,26.3333333 L0,26.3333333 L0,22.0666667 Z",
  grid: "M2 2 L10 2 L10 10 L2 10z M12 2 L20 2 L20 10 L12 10z M22 2 L30 2 L30 10 L22 10z M2 12 L10 12 L10 20 L2 20z M12 12 L20 12 L20 20 L12 20z M22 12 L30 12 L30 20 L22 20z M2 22 L10 22 L10 30 L2 30z M12 22 L20 22 L20 30 L12 30z M22 22 L30 22 L30 30 L22 30z",
  google: {
    svg: '<g fill="none" fill-rule="evenodd"><path d="M16 32c4.32 0 7.947-1.422 10.596-3.876l-5.05-3.91c-1.35.942-3.164 1.6-5.546 1.6-4.231 0-7.822-2.792-9.102-6.65l-5.174 4.018C4.356 28.41 9.742 32 16 32z" fill="#34A853"/><path d="M6.898 19.164A9.85 9.85 0 0 1 6.364 16c0-1.102.196-2.169.516-3.164L1.707 8.818A16.014 16.014 0 0 0 0 16c0 2.578.622 5.013 1.707 7.182l5.19-4.018z" fill="#FBBC05"/><path d="M31.36 16.356c0-1.316-.107-2.276-.338-3.272H16v5.938h8.818c-.178 1.476-1.138 3.698-3.271 5.191l5.049 3.911c3.022-2.79 4.764-6.897 4.764-11.768z" fill="#4285F4"/><path d="M16 6.187c3.004 0 5.031 1.297 6.187 2.382l4.515-4.409C23.93 1.582 20.32 0 16 0 9.742 0 4.338 3.591 1.707 8.818l5.173 4.018c1.298-3.858 4.889-6.65 9.12-6.65z" fill="#EA4335"/></g>'
  },
  history: {
    path: "M4.03074198,15 C4.54693838,6.62927028 11.4992947,0 20,0 C28.836556,0 36,7.163444 36,16 C36,24.836556 28.836556,32 20,32 C16.9814511,32 14.1581361,31.164104 11.7489039,29.7111608 L14.1120194,26.4586113 C15.8515127,27.4400159 17.8603607,28 20,28 C26.627417,28 32,22.627417 32,16 C32,9.372583 26.627417,4 20,4 C13.7093362,4 8.54922468,8.84046948 8.04107378,15 L11,15 L6,22 L1.34313965,15 L4.03074198,15 Z M22,15.2218254 L24.5913352,17.8131606 L24.5913352,17.8131606 C25.3723838,18.5942092 25.3723838,19.8605392 24.5913352,20.6415878 C23.8176686,21.4152544 22.5633071,21.4152544 21.7896404,20.6415878 C21.7852062,20.6371536 21.7807931,20.6326983 21.7764012,20.6282222 L18.8194549,17.6145768 C18.3226272,17.2506894 18,16.6630215 18,16 L18,10 C18,8.8954305 18.8954305,8 20,8 C21.1045695,8 22,8.8954305 22,10 L22,15.2218254 Z",
    attrs: { viewBox: "0 0 36 33" }
  },
  info: "M16 0 A16 16 0 0 1 16 32 A16 16 0 0 1 16 0 M19 15 L13 15 L13 26 L19 26 z M16 6 A3 3 0 0 0 16 12 A3 3 0 0 0 16 6",
  infooutlined: "M16 29c7.18 0 13-5.82 13-13S23.18 3 16 3 3 8.82 3 16s5.82 13 13 13zm0 3C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.697-20h-4.185v14h4.185V12zm.432-3.834c0-.342-.067-.661-.203-.958a2.527 2.527 0 0 0-1.37-1.31 2.613 2.613 0 0 0-.992-.188c-.342 0-.661.062-.959.189a2.529 2.529 0 0 0-1.33 1.309c-.13.297-.195.616-.195.958 0 .334.065.646.196.939.13.292.31.549.54.77.23.22.492.395.79.526.297.13.616.196.958.196.351 0 .682-.066.992-.196.31-.13.583-.306.817-.527a2.47 2.47 0 0 0 .553-.77c.136-.292.203-.604.203-.938z",
  insight: "M12.6325203 19.3674797 0 16 12.6325203 12.6325203 16 0 19.3674797 12.6325203 32 16 19.3674797 19.3674797 16 32z",
  int: {
    path: "M15.141,15.512 L14.294,20 L13.051,20 C12.8309989,20 12.6403341,19.9120009 12.479,19.736 C12.3176659,19.5599991 12.237,19.343668 12.237,19.087 C12.237,19.0503332 12.2388333,19.0155002 12.2425,18.9825 C12.2461667,18.9494998 12.2516666,18.9146668 12.259,18.878 L12.908,15.512 L10.653,15.512 L10.015,19.01 C9.94899967,19.3620018 9.79866784,19.6149992 9.564,19.769 C9.32933216,19.9230008 9.06900143,20 8.783,20 L7.584,20 L8.42,15.512 L7.155,15.512 C6.92033216,15.512 6.74066729,15.4551672 6.616,15.3415 C6.49133271,15.2278328 6.429,15.0390013 6.429,14.775 C6.429,14.6723328 6.43999989,14.5550007 6.462,14.423 L6.605,13.554 L8.695,13.554 L9.267,10.518 L6.913,10.518 L7.122,9.385 C7.17333359,9.10633194 7.28699912,8.89916734 7.463,8.7635 C7.63900088,8.62783266 7.92499802,8.56 8.321,8.56 L9.542,8.56 L10.224,5.018 C10.282667,4.7246652 10.4183323,4.49733414 10.631,4.336 C10.8436677,4.17466586 11.0929986,4.094 11.379,4.094 L12.611,4.094 L11.775,8.56 L14.019,8.56 L14.866,4.094 L16.076,4.094 C16.3326679,4.094 16.5416659,4.1673326 16.703,4.314 C16.8643341,4.4606674 16.945,4.64766553 16.945,4.875 C16.945,4.9483337 16.9413334,5.00333315 16.934,5.04 L16.252,8.56 L18.485,8.56 L18.276,9.693 C18.2246664,9.97166806 18.1091676,10.1788327 17.9295,10.3145 C17.7498324,10.4501673 17.4656686,10.518 17.077,10.518 L15.977,10.518 L15.416,13.554 L16.978,13.554 C17.2126678,13.554 17.3904994,13.6108328 17.5115,13.7245 C17.6325006,13.8381672 17.693,14.0306653 17.693,14.302 C17.693,14.4046672 17.6820001,14.5219993 17.66,14.654 L17.528,15.512 L15.141,15.512 Z M10.928,13.554 L13.183,13.554 L13.744,10.518 L11.5,10.518 L10.928,13.554 Z",
    attrs: { viewBox: "0 0 24 24" }
  },
  io: "M1,9 L6,9 L6,24 L1,24 L1,9 Z M31,16 C31,11.581722 27.418278,8 23,8 C18.581722,8 15,11.581722 15,16 C15,20.418278 18.581722,24 23,24 C27.418278,24 31,20.418278 31,16 Z M19,16 C19,13.790861 20.790861,12 23,12 C25.209139,12 27,13.790861 27,16 C27,18.209139 25.209139,20 23,20 C20.790861,20 19,18.209139 19,16 Z M15.3815029,9 L13.4537572,9 L7,23.5 L8.92774566,23.5 L15.3815029,9 Z",
  key: {
    path: "M11.5035746,7.9975248 C10.8617389,5.26208051 13.0105798,1.44695394 16.9897081,1.44695394 C20.919315,1.44695394 23.1811258,5.37076315 22.2565255,8.42469226 C21.3223229,7.86427598 20.2283376,7.54198814 19.0589133,7.54198814 C17.3567818,7.54198814 15.8144729,8.22477622 14.6920713,9.33083544 C14.4930673,9.31165867 14.2913185,9.30184676 14.087273,9.30184676 C10.654935,9.30184676 7.87247532,12.0782325 7.87247532,15.5030779 C7.87247532,17.1058665 8.48187104,18.5666337 9.48208198,19.6672763 L8.98356958,20.658345 L9.19925633,22.7713505 L7.5350473,23.4587525 C7.37507672,23.5248284 7.30219953,23.707739 7.37031308,23.8681037 L7.95501877,25.2447188 L6.28291833,25.7863476 C6.10329817,25.8445303 6.01548404,26.0233452 6.06755757,26.1919683 L6.54426059,27.7356153 L5.02460911,28.2609385 C4.86686602,28.3154681 4.7743984,28.501653 4.83652351,28.6704172 L6.04508836,31.95351 C6.10987939,32.1295162 6.29662279,32.2151174 6.46814592,32.160881 L9.48965349,31.2054672 C9.66187554,31.1510098 9.86840241,30.9790422 9.95250524,30.8208731 L14.8228902,21.6613229 C15.8820565,21.5366928 16.8596786,21.1462953 17.6869404,20.558796 C17.5652123,20.567429 17.4424042,20.5718139 17.318643,20.5718139 C14.2753735,20.5718139 11.8083161,17.9204625 11.8083161,14.6498548 C11.8083161,12.518229 12.8562751,10.6496514 14.428709,9.60671162 C13.4433608,10.7041074 12.8441157,12.1538355 12.8441157,13.7432193 C12.8441157,16.9974306 15.3562245,19.6661883 18.5509945,19.9240384 L19.1273026,21.5699573 L20.7971002,22.8826221 L20.1355191,24.5572635 C20.0719252,24.7182369 20.1528753,24.8977207 20.3155476,24.9601226 L21.7119724,25.4957977 L20.9400489,27.0748531 C20.8571275,27.2444782 20.9247553,27.4318616 21.082226,27.5115385 L22.5237784,28.2409344 L21.8460256,29.6990003 C21.7756734,29.8503507 21.8453702,30.0462011 22.0099247,30.1187455 L25.2111237,31.5300046 C25.3827397,31.6056621 25.5740388,31.5307937 25.6541745,31.3697345 L27.0658228,28.5325576 C27.1462849,28.3708422 27.1660474,28.1028205 27.1106928,27.9324485 L23.8023823,17.7500271 C24.7201964,16.6692906 25.273711,15.270754 25.273711,13.7432193 C25.273711,12.0364592 24.582689,10.4907436 23.4645818,9.36943333 C25.0880384,5.38579616 22.187534,0 16.9897081,0 C12.1196563,0 9.42801686,4.46934651 10.0266074,7.9975248 L11.5035746,7.9975248 Z M19.0589133,14.7767578 C20.203026,14.7767578 21.1305126,13.8512959 21.1305126,12.7096808 C21.1305126,11.5680656 20.203026,10.6426037 19.0589133,10.6426037 C17.9148007,10.6426037 16.9873141,11.5680656 16.9873141,12.7096808 C16.9873141,13.8512959 17.9148007,14.7767578 19.0589133,14.7767578 Z",
    attrs: { fillRule: "evenodd" }
  },
  label: "M14.577 31.042a2.005 2.005 0 0 1-2.738-.733L1.707 12.759c-.277-.477-.298-1.265-.049-1.757L6.45 1.537C6.7 1.044 7.35.67 7.9.7l10.593.582c.551.03 1.22.44 1.498.921l10.132 17.55a2.002 2.002 0 0 1-.734 2.737l-14.812 8.552zm.215-22.763a3.016 3.016 0 1 0-5.224 3.016 3.016 3.016 0 0 0 5.224-3.016z",
  ldap: {
    path: "M1.006 3h13.702c.554 0 1.178.41 1.39.915l.363.874c.21.504.827.915 1.376.915h13.169c.54 0 .994.448.994 1.001v20.952a.99.99 0 0 1-.992 1H1.002c-.54 0-.993-.45-.993-1.005l-.01-23.646C0 3.446.45 3 1.007 3zM16.5 19.164c1.944 0 3.52-1.828 3.52-4.082 0-2.254-1.576-4.082-3.52-4.082-1.945 0-3.52 1.828-3.52 4.082 0 2.254 1.575 4.082 3.52 4.082zm6.5 4.665c0-1.872-1.157-3.521-2.913-4.484-.927.97-2.192 1.568-3.587 1.568s-2.66-.597-3.587-1.568C11.157 20.308 10 21.957 10 23.83h13z",
    attrs: { fillRule: "evenodd" }
  },
  left: "M21,0 L5,16 L21,32 L21,5.47117907e-13 L21,0 Z",
  lightbulb: "M16.1 11.594L18.756 8.9a1.03 1.03 0 0 1 1.446-.018c.404.39.412 1.03.018 1.43l-3.193 3.24v4.975c0 .559-.458 1.011-1.022 1.011a1.017 1.017 0 0 1-1.023-1.01v-5.17l-3.003-3.046c-.394-.4-.386-1.04.018-1.43a1.03 1.03 0 0 1 1.446.018l2.657 2.695zM11.03 28.815h9.938a1.01 1.01 0 1 1 0 2.02 376.72 376.72 0 0 0-2.964.002C18.005 31.857 16.767 32 16 32c-.767 0-1.993-.139-1.993-1.163H11.03a1.011 1.011 0 0 1 0-2.022zm0-3.033h9.938a1.011 1.011 0 0 1 0 2.022H11.03a1.011 1.011 0 1 1 0-2.022zM8.487 20.43A11.659 11.659 0 0 1 4.5 11.627C4.5 5.214 9.64 0 16 0s11.5 5.214 11.5 11.627c0 3.43-1.481 6.617-3.987 8.803v1.308c0 1.954-1.601 3.538-3.577 3.538h-7.872c-1.976 0-3.577-1.584-3.577-3.538V20.43zm2.469-1.915l.597.455v2.768c0 .279.23.505.511.505h7.872a.508.508 0 0 0 .51-.505V18.97l.598-.455a8.632 8.632 0 0 0 3.39-6.888c0-4.755-3.785-8.594-8.434-8.594-4.649 0-8.433 3.84-8.433 8.594a8.632 8.632 0 0 0 3.389 6.888z",
  link: "M12.56 17.04c-1.08 1.384-1.303 1.963 1.755 4.04 3.058 2.076 7.29.143 8.587-1.062 1.404-1.304 4.81-4.697 7.567-7.842 2.758-3.144 1.338-8.238-.715-9.987-5.531-4.71-9.5-.554-11.088.773-2.606 2.176-5.207 5.144-5.207 5.144s1.747-.36 2.784 0c1.036.36 2.102.926 2.102.926l4.003-3.969s2.367-1.907 4.575 0 .674 4.404 0 5.189c-.674.784-6.668 6.742-6.668 6.742s-1.52.811-2.37.811c-.85 0-2.582-.528-2.582-.932 0-.405-1.665-1.22-2.744.166zm7.88-2.08c1.08-1.384 1.303-1.963-1.755-4.04-3.058-2.076-7.29-.143-8.587 1.062-1.404 1.304-4.81 4.697-7.567 7.842-2.758 3.144-1.338 8.238.715 9.987 5.531 4.71 9.5.554 11.088-.773 2.606-2.176 5.207-5.144 5.207-5.144s-1.747.36-2.784 0a17.379 17.379 0 0 1-2.102-.926l-4.003 3.969s-2.367 1.907-4.575 0-.674-4.404 0-5.189c.674-.784 6.668-6.742 6.668-6.742s1.52-.811 2.37-.811c.85 0 2.582.528 2.582.932 0 .405 1.665 1.22 2.744-.166z",
  line: "M18.867 16.377l-3.074-3.184-.08.077-.002-.002.01-.01-.53-.528-.066-.07-.001.002-2.071-2.072L-.002 23.645l2.668 2.668 10.377-10.377 3.074 3.183.08-.076.001.003-.008.008.5.501.094.097.002-.001 2.072 2.072L31.912 8.669 29.244 6 18.867 16.377z",
  list: "M3 8 A3 3 0 0 0 9 8 A3 3 0 0 0 3 8 M12 6 L28 6 L28 10 L12 10z M3 16 A3 3 0 0 0 9 16 A3 3 0 0 0 3 16 M12 14 L28 14 L28 18 L12 18z M3 24 A3 3 0 0 0 9 24 A3 3 0 0 0 3 24 M12 22 L28 22 L28 26 L12 26z",
  location: {
    path: "M19.4917776,13.9890373 C20.4445763,12.5611169 21,10.8454215 21,9 C21,4.02943725 16.9705627,0 12,0 C7.02943725,0 3,4.02943725 3,9 C3,10.8454215 3.5554237,12.5611168 4.50822232,13.9890371 L4.49999986,14.0000004 L4.58010869,14.0951296 C4.91305602,14.5790657 5.29212089,15.0288088 5.71096065,15.4380163 L12.5,23.5 L19.4999993,13.9999996 L19.4917776,13.9890373 L19.4917776,13.9890373 Z M12,12 C13.6568542,12 15,10.6568542 15,9 C15,7.34314575 13.6568542,6 12,6 C10.3431458,6 9,7.34314575 9,9 C9,10.6568542 10.3431458,12 12,12 Z",
    attrs: { viewBox: "0 0 24 24" }
  },
  lock: {
    path: "M7.30894737,12.4444444 L4.91725192,12.4444444 C3.2943422,12.4444444 2,13.7457504 2,15.3509926 L2,29.0934518 C2,30.7017608 3.30609817,32 4.91725192,32 L27.0827481,32 C28.7056578,32 30,30.6986941 30,29.0934518 L30,15.3509926 C30,13.7426837 28.6939018,12.4444444 27.0827481,12.4444444 L24.6910526,12.4444444 L24.6910526,7.44176009 C24.6910526,3.33441301 21.3568185,0 17.2438323,0 L14.7561677,0 C10.6398254,0 7.30894737,3.33178948 7.30894737,7.44176009 L7.30894737,12.4444444 Z M10.8678947,8.21027479 C10.8678947,5.65010176 12.9450109,3.57467145 15.5045167,3.57467145 L16.4954833,3.57467145 C19.0562189,3.57467145 21.1321053,5.65531119 21.1321053,8.21027479 L21.1321053,12.8458781 L10.8678947,12.8458781 L10.8678947,8.21027479 Z M16,26.6666667 C17.9329966,26.6666667 19.5,25.0747902 19.5,23.1111111 C19.5,21.147432 17.9329966,19.5555556 16,19.5555556 C14.0670034,19.5555556 12.5,21.147432 12.5,23.1111111 C12.5,25.0747902 14.0670034,26.6666667 16,26.6666667 Z",
    attrs: { fillRule: "evenodd" }
  },
  lockoutline: "M7 12H5.546A3.548 3.548 0 0 0 2 15.553v12.894A3.547 3.547 0 0 0 5.546 32h20.908C28.414 32 30 30.41 30 28.447V15.553A3.547 3.547 0 0 0 26.454 12H25V8.99C25 4.029 20.97 0 16 0c-4.972 0-9 4.025-9 8.99V12zm4-3.766c0-2.338 1.89-4.413 4.219-4.634L16 3.525l.781.075C19.111 3.82 21 5.896 21 8.234V12H11V8.234zm-5 9.537C6 16.793 6.796 16 7.775 16h16.45c.98 0 1.775.787 1.775 1.77v8.46c0 .977-.796 1.77-1.775 1.77H7.775A1.77 1.77 0 0 1 6 26.23v-8.46zM16 25a3 3 0 1 0 0-6 3 3 0 0 0 0 6z",
  mail: "M1.503 6h28.994C31.327 6 32 6.673 32 7.503v16.06A3.436 3.436 0 0 1 28.564 27H3.436A3.436 3.436 0 0 1 0 23.564V7.504C0 6.673.673 6 1.503 6zm4.403 2.938l10.63 8.052 10.31-8.052H5.906zm-2.9 1.632v11.989c0 .83.674 1.503 1.504 1.503h23.087c.83 0 1.504-.673 1.504-1.503V11.005l-11.666 8.891a1.503 1.503 0 0 1-1.806.013l-12.622-9.34z",
  mine: "M28.4907419,50 C25.5584999,53.6578499 21.0527692,56 16,56 C10.9472308,56 6.44150015,53.6578499 3.50925809,50 L28.4907419,50 Z M29.8594823,31.9999955 C27.0930063,27.217587 21.922257,24 16,24 C10.077743,24 4.9069937,27.217587 2.1405177,31.9999955 L29.8594849,32 Z M16,21 C19.8659932,21 23,17.1944204 23,12.5 C23,7.80557963 22,3 16,3 C10,3 9,7.80557963 9,12.5 C9,17.1944204 12.1340068,21 16,21 Z",
  moon: "M11.6291702,1.84239429e-11 C19.1234093,1.22958025 24.8413559,7.73631246 24.8413559,15.5785426 C24.8413559,24.2977683 17.7730269,31.3660972 9.05380131,31.3660972 C7.28632096,31.3660972 5.58667863,31.0756481 4,30.5398754 C11.5007933,28.2096945 16.9475786,21.2145715 16.9475786,12.9472835 C16.9475786,7.90001143 14.9174312,3.32690564 11.6291702,1.70246039e-11 L11.6291702,1.84239429e-11 Z",
  move: "M23 27h-8v-5h8v-4l8 6-8 7v-4zM17.266 0h.86a2 2 0 0 1 1.42.592L27.49 8.61a2 2 0 0 1 .58 1.407v6h-5.01v-5.065L17.133 5H0V2a2 2 0 0 1 2-2h15.266zM5 27h7v5H2a2 2 0 0 1-2-2V5h5v22z",
  number: "M0 .503A.5.5 0 0 1 .503 0h30.994A.5.5 0 0 1 32 .503v30.994a.5.5 0 0 1-.503.503H.503A.5.5 0 0 1 0 31.497V.503zM8.272 22V10.8H6.464c-.064.427-.197.784-.4 1.072-.203.288-.45.52-.744.696a2.984 2.984 0 0 1-.992.368c-.368.07-.75.099-1.144.088v1.712H6V22h2.272zm2.96-5.648c0 1.12.11 2.056.328 2.808.219.752.515 1.352.888 1.8.373.448.808.768 1.304.96a4.327 4.327 0 0 0 1.576.288c.565 0 1.096-.096 1.592-.288a3.243 3.243 0 0 0 1.312-.96c.379-.448.677-1.048.896-1.8.219-.752.328-1.688.328-2.808 0-1.088-.11-2.003-.328-2.744-.219-.741-.517-1.336-.896-1.784a3.243 3.243 0 0 0-1.312-.96 4.371 4.371 0 0 0-1.592-.288c-.555 0-1.08.096-1.576.288-.496.192-.93.512-1.304.96-.373.448-.67 1.043-.888 1.784-.219.741-.328 1.656-.328 2.744zm2.272 0c0-.192.003-.424.008-.696.005-.272.024-.552.056-.84.032-.288.085-.573.16-.856a2.95 2.95 0 0 1 .312-.76 1.67 1.67 0 0 1 .512-.544c.208-.139.467-.208.776-.208.31 0 .57.07.784.208.213.139.39.32.528.544.139.224.243.477.312.76a7.8 7.8 0 0 1 .224 1.696 25.247 25.247 0 0 1-.024 1.856c-.021.453-.088.89-.2 1.312a2.754 2.754 0 0 1-.544 1.08c-.25.299-.61.448-1.08.448-.459 0-.81-.15-1.056-.448a2.815 2.815 0 0 1-.536-1.08 6.233 6.233 0 0 1-.2-1.312c-.021-.453-.032-.84-.032-1.16zm6.624 0c0 1.12.11 2.056.328 2.808.219.752.515 1.352.888 1.8.373.448.808.768 1.304.96a4.327 4.327 0 0 0 1.576.288c.565 0 1.096-.096 1.592-.288a3.243 3.243 0 0 0 1.312-.96c.379-.448.677-1.048.896-1.8.219-.752.328-1.688.328-2.808 0-1.088-.11-2.003-.328-2.744-.219-.741-.517-1.336-.896-1.784a3.243 3.243 0 0 0-1.312-.96 4.371 4.371 0 0 0-1.592-.288c-.555 0-1.08.096-1.576.288-.496.192-.93.512-1.304.96-.373.448-.67 1.043-.888 1.784-.219.741-.328 1.656-.328 2.744zm2.272 0c0-.192.003-.424.008-.696.005-.272.024-.552.056-.84.032-.288.085-.573.16-.856a2.95 2.95 0 0 1 .312-.76 1.67 1.67 0 0 1 .512-.544c.208-.139.467-.208.776-.208.31 0 .57.07.784.208.213.139.39.32.528.544.139.224.243.477.312.76a7.8 7.8 0 0 1 .224 1.696 25.247 25.247 0 0 1-.024 1.856c-.021.453-.088.89-.2 1.312a2.754 2.754 0 0 1-.544 1.08c-.25.299-.61.448-1.08.448-.459 0-.81-.15-1.056-.448a2.815 2.815 0 0 1-.536-1.08 6.233 6.233 0 0 1-.2-1.312c-.021-.453-.032-.84-.032-1.16z",
  pencil: "M11.603 29.428a2.114 2.114 0 0 1-.345.111l-8.58 2.381c-1.606.446-3.073-1.047-2.582-2.627l2.482-7.974c.06-.424.25-.834.575-1.164L22.279.633A2.12 2.12 0 0 1 25.257.59l6.103 5.872c.835.803.855 2.124.046 2.952l-18.983 19.41c-.21.256-.486.467-.82.604zm-6.424-2.562l4.605-1.015L21.04 14.185l-3.172-3.043-11.46 11.666-1.229 4.058zM20.733 8.2l3.07 2.942 3.07-3.145-3.07-2.942-3.07 3.145z",
  permissionsLimited: "M0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C7.163444,32 0,24.836556 0,16 Z M29,16 C29,8.82029825 23.1797017,3 16,3 C8.82029825,3 3,8.82029825 3,16 C3,23.1797017 8.82029825,29 16,29 C23.1797017,29 29,23.1797017 29,16 Z M16,5 C11.0100706,5.11743299 5.14533409,7.90852303 5,15.5 C4.85466591,23.091477 11.0100706,26.882567 16,27 L16,5 Z",
  pie: "M15.181 15.435V.021a15.94 15.94 0 0 1 11.42 3.995l-11.42 11.42zm1.131 1.384H31.98a15.941 15.941 0 0 0-4.114-11.553L16.312 16.819zm15.438 2.013H13.168V.25C5.682 1.587 0 8.13 0 16c0 8.837 7.163 16 16 16 7.87 0 14.413-5.682 15.75-13.168z",
  pinmap: "M13.4 18.987v8.746L15.533 32l2.134-4.25v-8.763a10.716 10.716 0 0 1-4.267 0zm2.133-1.92a8.533 8.533 0 1 0 0-17.067 8.533 8.533 0 0 0 0 17.067z",
  popular: "M23.29 11.224l-7.067 7.067-2.658-2.752.007-.007-.386-.385-.126-.131-.003.002-1.789-1.79L.705 23.793A.994.994 0 0 0 .704 25.2l.896.897a1 1 0 0 0 1.408-.002l8.253-8.252 2.654 2.748.226-.218-.161.161 1.152 1.152c.64.64 1.668.636 2.304 0l8.158-8.159L32 19.933V5H17.067l6.223 6.224z",
  pulse: "M16.9862306,27.387699 C17.4904976,29.2137955 20.0148505,29.3806482 20.7550803,27.6368095 L24.8588086,17.9692172 L31.7352165,17.9692172 L31.7352165,13.9692172 L23.5350474,13.9692172 C22.7324769,13.9692172 22.0076375,14.4489743 21.6940431,15.1877423 L19.314793,20.7927967 L14.8067319,4.4678059 C14.3010535,2.63659841 11.7668377,2.47581319 11.033781,4.22842821 L6.99549907,13.8832799 L0,13.8832799 L0,17.8832799 L8.32686781,17.8832799 C9.13327931,17.8832799 9.86080237,17.3989791 10.1719732,16.655022 L12.491241,11.1100437 L16.9862306,27.387699 Z",
  recents: "M15.689 17.292l-.689.344V6.992c0-.55.448-.992 1.001-.992h.907c.547 0 1.001.445 1.001.995v9.187l-.372.186 4.362 5.198a1.454 1.454 0 1 1-2.228 1.87L15 17.87l.689-.578zM16 32c8.837 0 16-7.163 16-16S24.837 0 16 0 0 7.163 0 16s7.163 16 16 16z",
  share: {
    path: "M13.714 8.96H9.143L16 0l6.857 8.96h-4.571v19.16h-4.572V8.96zM4.571 32.52a4 4 0 0 0 4 4H23.43a4 4 0 0 0 4-4V20.36a4 4 0 0 0-4-4h-.572v-4.48H28a4 4 0 0 1 4 4V37a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V15.88a4 4 0 0 1 4-4h5.143v4.48H8.57a4 4 0 0 0-4 4v12.16z",
    attrs: { fillRule: "evenodd", viewBox: "0 0 32 41" }
  },
  sql: {
    path: "M4,0 L28,0 C30.209139,-4.05812251e-16 32,1.790861 32,4 L32,28 C32,30.209139 30.209139,32 28,32 L4,32 C1.790861,32 2.705415e-16,30.209139 0,28 L0,4 L0,4 C-2.705415e-16,1.790861 1.790861,4.05812251e-16 4,0 L4,0 Z M6,6 C4.8954305,6 4,6.8954305 4,8 L4,26 C4,27.1045695 4.8954305,28 6,28 L26,28 C27.1045695,28 28,27.1045695 28,26 L28,8 C28,6.8954305 27.1045695,6 26,6 L6,6 Z M14,20 L25,20 L25,24 L14,24 L14,20 Z M14,13.5 L8,17 L8,10 L14,13.5 Z",
    attrs: { fillRule: "evenodd" }
  },
  progress: {
    path: "M0 11.996A3.998 3.998 0 0 1 4.004 8h23.992A4 4 0 0 1 32 11.996v8.008A3.998 3.998 0 0 1 27.996 24H4.004A4 4 0 0 1 0 20.004v-8.008zM22 11h3.99A3.008 3.008 0 0 1 29 14v4c0 1.657-1.35 3-3.01 3H22V11z",
    attrs: { fillRule: "evenodd" }
  },
  sort: "M14.615.683c.765-.926 2.002-.93 2.77 0L26.39 11.59c.765.927.419 1.678-.788 1.678H6.398c-1.2 0-1.557-.747-.788-1.678L14.615.683zm2.472 30.774c-.6.727-1.578.721-2.174 0l-9.602-11.63c-.6-.727-.303-1.316.645-1.316h20.088c.956 0 1.24.595.645 1.316l-9.602 11.63z",
  sum: "M3 27.41l1.984 4.422L27.895 32l.04-5.33-17.086-.125 8.296-9.457-.08-3.602L11.25 5.33H27.43V0H5.003L3.08 4.51l10.448 10.9z",
  sync: "M16 2 A14 14 0 0 0 2 16 A14 14 0 0 0 16 30 A14 14 0 0 0 26 26 L 23.25 23 A10 10 0 0 1 16 26 A10 10 0 0 1 6 16 A10 10 0 0 1 16 6 A10 10 0 0 1 23.25 9 L19 13 L30 13 L30 2 L26 6 A14 14 0 0 0 16 2",
  question: "M16,32 C24.836556,32 32,24.836556 32,16 C32,7.163444 24.836556,0 16,0 C7.163444,0 0,7.163444 0,16 C0,24.836556 7.163444,32 16,32 L16,32 Z M16,29.0909091 C8.77009055,29.0909091 2.90909091,23.2299095 2.90909091,16 C2.90909091,8.77009055 8.77009055,2.90909091 16,2.90909091 C23.2299095,2.90909091 29.0909091,8.77009055 29.0909091,16 C29.0909091,23.2299095 23.2299095,29.0909091 16,29.0909091 Z M12,9.56020942 C12.2727286,9.34380346 12.5694087,9.1413622 12.8900491,8.95287958 C13.2106896,8.76439696 13.5552807,8.59860455 13.9238329,8.45549738 C14.2923851,8.31239021 14.6885728,8.20069848 15.1124079,8.12041885 C15.5362429,8.04013921 15.9950835,8 16.4889435,8 C17.1818216,8 17.8065083,8.08725916 18.3630221,8.2617801 C18.919536,8.43630105 19.3931184,8.68586225 19.7837838,9.0104712 C20.1744491,9.33508016 20.4748147,9.7260012 20.6848894,10.1832461 C20.8949642,10.6404909 21,11.1483393 21,11.7068063 C21,12.2373499 20.9226052,12.6963331 20.7678133,13.0837696 C20.6130213,13.4712061 20.4176916,13.8080265 20.1818182,14.0942408 C19.9459448,14.3804552 19.6861194,14.6282712 19.4023342,14.8376963 C19.1185489,15.0471215 18.8495099,15.2408368 18.5952088,15.4188482 C18.3409078,15.5968595 18.1197798,15.773123 17.9318182,15.947644 C17.7438566,16.1221649 17.6240789,16.3176254 17.5724816,16.5340314 L17.2628993,18 L14.9189189,18 L14.6756757,16.3141361 C14.6167073,15.9720751 14.653562,15.6736487 14.7862408,15.4188482 C14.9189196,15.1640476 15.1013502,14.9336834 15.3335381,14.7277487 C15.565726,14.521814 15.8255514,14.3263535 16.1130221,14.1413613 C16.4004928,13.9563691 16.6695319,13.7574182 16.9201474,13.5445026 C17.1707629,13.3315871 17.3826773,13.0942421 17.5558968,12.8324607 C17.7291163,12.5706793 17.8157248,12.2582915 17.8157248,11.895288 C17.8157248,11.4764377 17.6701489,11.1431077 17.3789926,10.895288 C17.0878364,10.6474682 16.6879632,10.5235602 16.1793612,10.5235602 C15.7886958,10.5235602 15.462532,10.5619542 15.20086,10.6387435 C14.9391879,10.7155327 14.7143744,10.8010466 14.5264128,10.895288 C14.3384511,10.9895293 14.1744479,11.0750432 14.034398,11.1518325 C13.8943482,11.2286217 13.7543005,11.2670157 13.6142506,11.2670157 C13.2972957,11.2670157 13.0614258,11.1378721 12.9066339,10.8795812 L12,9.56020942 Z M14,22 C14,21.7192968 14.0511359,21.4580909 14.1534091,21.2163743 C14.2556823,20.9746577 14.3958324,20.7641335 14.5738636,20.5847953 C14.7518948,20.4054572 14.96212,20.2631584 15.2045455,20.1578947 C15.4469709,20.0526311 15.7121198,20 16,20 C16.2803044,20 16.5416655,20.0526311 16.7840909,20.1578947 C17.0265164,20.2631584 17.2386355,20.4054572 17.4204545,20.5847953 C17.6022736,20.7641335 17.7443177,20.9746577 17.8465909,21.2163743 C17.9488641,21.4580909 18,21.7192968 18,22 C18,22.2807032 17.9488641,22.5438584 17.8465909,22.7894737 C17.7443177,23.0350889 17.6022736,23.2475625 17.4204545,23.4269006 C17.2386355,23.6062387 17.0265164,23.7465882 16.7840909,23.8479532 C16.5416655,23.9493182 16.2803044,24 16,24 C15.7121198,24 15.4469709,23.9493182 15.2045455,23.8479532 C14.96212,23.7465882 14.7518948,23.6062387 14.5738636,23.4269006 C14.3958324,23.2475625 14.2556823,23.0350889 14.1534091,22.7894737 C14.0511359,22.5438584 14,22.2807032 14,22 Z",
  return: "M15.3040432,11.8500793 C22.1434689,13.0450349 27.291257,18.2496116 27.291257,24.4890512 C27.291257,25.7084278 27.0946472,26.8882798 26.7272246,28.0064033 L26.7272246,28.0064033 C25.214579,22.4825472 20.8068367,18.2141694 15.3040432,17.0604596 L15.3040432,25.1841972 L4.70874296,14.5888969 L15.3040432,3.99359668 L15.3040432,3.99359668 L15.3040432,11.8500793 Z",
  reference: {
    path: "M32 27.5V2a2 2 0 0 0-2-2H4a4 4 0 0 0-4 4v26a2 2 0 0 0 2 2h22V8H4V6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v19h4v2.5z",
    attrs: { fillRule: "evenodd" }
  },
  refresh: "M16 2 A14 14 0 0 0 2 16 A14 14 0 0 0 16 30 A14 14 0 0 0 26 26 L 23.25 23 A10 10 0 0 1 16 26 A10 10 0 0 1 6 16 A10 10 0 0 1 16 6 A10 10 0 0 1 23.25 9 L19 13 L30 13 L30 2 L26 6 A14 14 0 0 0 16 2",
  right: "M9,0 L25,16 L9,32 L9,5.47117907e-13 L9,0 Z",
  ruler: "M0.595961814,24.9588734 C-0.196619577,24.166292 -0.200005392,22.8846495 0.593926984,22.0907171 L22.0908075,0.593836573 C22.8822651,-0.197621013 24.1641442,-0.198948234 24.9589638,0.595871404 L31.4040382,7.04094576 C32.1966196,7.83352715 32.2000054,9.11516967 31.406073,9.90910205 L9.90919246,31.4059826 C9.11773487,32.1974402 7.83585581,32.1987674 7.04103617,31.4039478 L0.595961814,24.9588734 Z M17.8319792,7.8001489 L16.3988585,9.23326963 L18.548673,11.3830842 C18.9443414,11.7787526 18.9470387,12.4175604 18.5485351,12.816064 C18.1527906,13.2118086 17.5140271,13.2146738 17.1155553,12.816202 L14.9657407,10.6663874 L13.5326229,12.0995052 L15.6824375,14.2493198 C16.0781059,14.6449881 16.0808032,15.283796 15.6822996,15.6822996 C15.286555,16.0780441 14.6477916,16.0809094 14.2493198,15.6824375 L12.0995052,13.5326229 L10.6663845,14.9657436 C10.6670858,14.9664411 10.6677865,14.9671398 10.6684864,14.9678397 L14.2470828,18.5464361 C14.6439866,18.9433399 14.6476854,19.5831493 14.2491818,19.9816529 C13.8534373,20.3773974 13.2188552,20.384444 12.813965,19.9795538 L9.23536867,16.4009575 C9.23466875,16.4002576 9.23397006,16.3995569 9.2332726,16.3988555 L7.80015186,17.8319762 L9.94996646,19.9817908 C10.3456348,20.3774592 10.3483321,21.016267 9.94982851,21.4147706 C9.55408397,21.8105152 8.91532053,21.8133804 8.51684869,21.4149086 L6.3670341,19.265094 L4.93391633,20.6982118 L7.08373093,22.8480263 C7.47939928,23.2436947 7.48209658,23.8825026 7.08359298,24.2810062 C6.68784844,24.6767507 6.049085,24.6796159 5.65061316,24.2811441 L3.50079857,22.1313295 L2.02673458,23.6053935 L8.47576453,30.0544235 L30.0544235,8.47576453 L23.6053935,2.02673458 L22.1313295,3.50079857 L24.2811441,5.65061316 C24.6768125,6.04628152 24.6795098,6.68508938 24.2810062,7.08359298 C23.8852616,7.47933752 23.2464982,7.48220276 22.8480263,7.08373093 L20.6982118,4.93391633 L19.2650911,6.36703697 C19.2657924,6.36773446 19.2664931,6.36843318 19.267193,6.36913314 L22.8457894,9.94772948 C23.2426932,10.3446333 23.246392,10.9844427 22.8478884,11.3829463 C22.4521439,11.7786908 21.8175617,11.7857374 21.4126716,11.3808472 L17.8340753,7.8022509 C17.8333753,7.80155099 17.8326767,7.80085032 17.8319792,7.8001489 Z",
  search: "M22.805 25.734c-5.582 4.178-13.543 3.718-18.632-1.37-5.58-5.581-5.595-14.615-.031-20.179 5.563-5.563 14.597-5.55 20.178.031 5.068 5.068 5.545 12.985 1.422 18.563l5.661 5.661a2.08 2.08 0 0 1 .003 2.949 2.085 2.085 0 0 1-2.95-.003l-5.651-5.652zm-1.486-4.371c3.895-3.895 3.885-10.218-.021-14.125-3.906-3.906-10.23-3.916-14.125-.021-3.894 3.894-3.885 10.218.022 14.124 3.906 3.907 10.23 3.916 14.124.022z",
  segment: "M2.99631547,14.0294075 L2.99631579,1.99517286 C2.99631582,0.893269315 3.89614282,0 4.98985651,0 L30.0064593,0 C31.1074614,0 32,0.895880847 32,2.00761243 L32,26.8688779 C32,27.9776516 31.1071386,28.8764903 30.0003242,28.8764903 L17.7266598,28.8764903 L17.7266594,14.0294075 L2.99631547,14.0294075 Z M-7.10651809e-15,16.9955967 L-7.10651809e-15,30.0075311 C-7.10651809e-15,31.1079413 0.900469916,32 2.00155906,32 L14.3949712,32 L14.3949712,16.9955967 L-7.10651809e-15,16.9955967 Z",
  slackIcon: "M11.432 13.934l1.949 5.998 5.573-1.864-1.949-6-5.573 1.866zm-5.266 1.762l-2.722.91a2.776 2.776 0 1 1-1.762-5.265l2.768-.926-.956-2.943a2.776 2.776 0 0 1 5.28-1.716l.942 2.897 5.573-1.865-1.023-3.151a2.776 2.776 0 1 1 5.28-1.716l1.009 3.105 3.67-1.228a2.776 2.776 0 1 1 1.762 5.265l-3.716 1.244 1.949 5.999 3.336-1.117a2.776 2.776 0 0 1 1.762 5.266l-3.382 1.131.956 2.942a2.776 2.776 0 0 1-5.28 1.716l-.942-2.896-5.573 1.865 1.023 3.15a2.776 2.776 0 0 1-5.28 1.716L9.83 26.975l-3.056 1.022a2.776 2.776 0 1 1-1.762-5.265l3.102-1.038-1.949-5.998z",
  star: "M16 0 L21 11 L32 12 L23 19 L26 31 L16 25 L6 31 L9 19 L0 12 L11 11",
  staroutline: "M16 21.935l5.967 3.14-1.14-6.653 4.828-4.712-6.671-.97L16 6.685l-2.984 6.053-6.67.971 4.827 4.712-1.14 6.654L16 21.935zm-9.892 8.547l1.89-11.029L0 11.647l11.053-1.609L16 0l4.947 10.038L32 11.647l-7.997 7.806 1.889 11.03L16 25.274l-9.892 5.207z",
  string: {
    path: "M14.022,18 L11.533,18 C11.2543319,18 11.0247509,17.935084 10.84425,17.80525 C10.6637491,17.675416 10.538667,17.5091677 10.469,17.3065 L9.652,14.8935 L4.389,14.8935 L3.572,17.3065 C3.50866635,17.4838342 3.38516758,17.6437493 3.2015,17.78625 C3.01783241,17.9287507 2.79300133,18 2.527,18 L0.019,18 L5.377,4.1585 L8.664,4.1585 L14.022,18 Z M5.13,12.7085 L8.911,12.7085 L7.638,8.918 C7.55566626,8.67733213 7.45908389,8.3939183 7.34825,8.06775 C7.23741611,7.7415817 7.12816721,7.3885019 7.0205,7.0085 C6.91916616,7.39483527 6.8146672,7.75266502 6.707,8.082 C6.5993328,8.41133498 6.49800047,8.69633213 6.403,8.937 L5.13,12.7085 Z M21.945,18 C21.6663319,18 21.4557507,17.9620004 21.31325,17.886 C21.1707493,17.8099996 21.0520005,17.6516679 20.957,17.411 L20.748,16.8695 C20.5009988,17.078501 20.2635011,17.2621659 20.0355,17.4205 C19.8074989,17.5788341 19.5715846,17.7134161 19.32775,17.82425 C19.0839154,17.9350839 18.8242514,18.0174164 18.54875,18.07125 C18.2732486,18.1250836 17.9676683,18.152 17.632,18.152 C17.1823311,18.152 16.7738352,18.0934173 16.4065,17.97625 C16.0391648,17.8590827 15.7272513,17.6865011 15.47075,17.4585 C15.2142487,17.2304989 15.016334,16.947085 14.877,16.60825 C14.737666,16.269415 14.668,15.8783355 14.668,15.435 C14.668,15.0866649 14.7566658,14.7288352 14.934,14.3615 C15.1113342,13.9941648 15.4184978,13.6600848 15.8555,13.35925 C16.2925022,13.0584152 16.8814963,12.8066677 17.6225,12.604 C18.3635037,12.4013323 19.297661,12.2873335 20.425,12.262 L20.425,11.844 C20.425,11.2676638 20.3062512,10.8512513 20.06875,10.59475 C19.8312488,10.3382487 19.4940022,10.21 19.057,10.21 C18.7086649,10.21 18.4236678,10.2479996 18.202,10.324 C17.9803322,10.4000004 17.7824175,10.4854995 17.60825,10.5805 C17.4340825,10.6755005 17.2646675,10.7609996 17.1,10.837 C16.9353325,10.9130004 16.7390011,10.951 16.511,10.951 C16.3083323,10.951 16.1357507,10.9019172 15.99325,10.80375 C15.8507493,10.7055828 15.7383337,10.5836674 15.656,10.438 L15.124,9.5165 C15.7193363,8.99083071 16.3795797,8.59975128 17.10475,8.34325 C17.8299203,8.08674872 18.6073292,7.9585 19.437,7.9585 C20.0323363,7.9585 20.5690809,8.05508237 21.04725,8.24825 C21.5254191,8.44141763 21.9307483,8.71058161 22.26325,9.05575 C22.5957517,9.40091839 22.8506658,9.81099763 23.028,10.286 C23.2053342,10.7610024 23.294,11.2803305 23.294,11.844 L23.294,18 L21.945,18 Z M18.563,16.2045 C18.9430019,16.2045 19.2754986,16.1380007 19.5605,16.005 C19.8455014,15.8719993 20.1336652,15.6566682 20.425,15.359 L20.425,13.991 C19.8359971,14.0163335 19.3515019,14.0669996 18.9715,14.143 C18.5914981,14.2190004 18.2906678,14.3139994 18.069,14.428 C17.8473322,14.5420006 17.6937504,14.6718326 17.60825,14.8175 C17.5227496,14.9631674 17.48,15.1214991 17.48,15.2925 C17.48,15.6281683 17.5718324,15.8640827 17.7555,16.00025 C17.9391676,16.1364173 18.2083316,16.2045 18.563,16.2045 L18.563,16.2045 Z",
    attrs: { viewBox: "0 0 24 24" }
  },
  sun: "M18.2857143,27.1999586 L18.2857143,29.7130168 C18.2857143,30.9760827 17.2711661,32 16,32 C14.7376349,32 13.7142857,30.9797942 13.7142857,29.7130168 L13.7142857,27.1999586 C14.4528227,27.3498737 15.2172209,27.4285714 16,27.4285714 C16.7827791,27.4285714 17.5471773,27.3498737 18.2857143,27.1999586 Z M13.7142857,4.80004141 L13.7142857,2.28698322 C13.7142857,1.02391726 14.7288339,0 16,0 C17.2623651,0 18.2857143,1.02020582 18.2857143,2.28698322 L18.2857143,4.80004141 C17.5471773,4.65012631 16.7827791,4.57142857 16,4.57142857 C15.2172209,4.57142857 14.4528227,4.65012631 13.7142857,4.80004141 Z M10.5518048,26.0488463 L8.93640145,27.9740091 C8.1245183,28.9415738 6.68916799,29.0738009 5.71539825,28.2567111 C4.74837044,27.4452784 4.62021518,26.0059593 5.43448399,25.0355515 L7.05102836,23.1090289 C8.00526005,24.3086326 9.1956215,25.3120077 10.5518048,26.0488463 Z M21.4481952,5.95115366 L23.0635986,4.02599087 C23.8754817,3.05842622 25.310832,2.92619908 26.2846018,3.74328891 C27.2516296,4.55472158 27.3797848,5.99404073 26.565516,6.96444852 L24.9489716,8.89097108 C23.9947399,7.69136735 22.8043785,6.68799226 21.4481952,5.95115366 Z M7.05102836,8.89097108 L5.43448399,6.96444852 C4.62260085,5.99688386 4.7416285,4.56037874 5.71539825,3.74328891 C6.68242605,2.93185624 8.12213263,3.05558308 8.93640145,4.02599087 L10.5518048,5.95115366 C9.1956215,6.68799226 8.00526005,7.69136735 7.05102836,8.89097108 Z M24.9489716,23.1090289 L26.565516,25.0355515 C27.3773992,26.0031161 27.2583715,27.4396213 26.2846018,28.2567111 C25.317574,29.0681438 23.8778674,28.9444169 23.0635986,27.9740091 L21.4481952,26.0488463 C22.8043785,25.3120077 23.9947399,24.3086326 24.9489716,23.1090289 Z M27.1999586,13.7142857 L29.7130168,13.7142857 C30.9760827,13.7142857 32,14.7288339 32,16 C32,17.2623651 30.9797942,18.2857143 29.7130168,18.2857143 L27.1999586,18.2857143 C27.3498737,17.5471773 27.4285714,16.7827791 27.4285714,16 C27.4285714,15.2172209 27.3498737,14.4528227 27.1999586,13.7142857 Z M4.80004141,18.2857143 L2.28698322,18.2857143 C1.02391726,18.2857143 2.7533531e-14,17.2711661 2.84217094e-14,16 C2.84217094e-14,14.7376349 1.02020582,13.7142857 2.28698322,13.7142857 L4.80004141,13.7142857 C4.65012631,14.4528227 4.57142857,15.2172209 4.57142857,16 C4.57142857,16.7827791 4.65012631,17.5471773 4.80004141,18.2857143 Z M16,22.8571429 C19.7870954,22.8571429 22.8571429,19.7870954 22.8571429,16 C22.8571429,12.2129046 19.7870954,9.14285714 16,9.14285714 C12.2129046,9.14285714 9.14285714,12.2129046 9.14285714,16 C9.14285714,19.7870954 12.2129046,22.8571429 16,22.8571429 Z",
  table: "M11.077 11.077h9.846v9.846h-9.846v-9.846zm11.077 11.077H32V32h-9.846v-9.846zm-11.077 0h9.846V32h-9.846v-9.846zM0 22.154h9.846V32H0v-9.846zM0 0h9.846v9.846H0V0zm0 11.077h9.846v9.846H0v-9.846zM22.154 0H32v9.846h-9.846V0zm0 11.077H32v9.846h-9.846v-9.846zM11.077 0h9.846v9.846h-9.846V0z",
  table2: {
    svg: '<g fill="currentcolor" fill-rule="evenodd"><path d="M10,19 L10,15 L3,15 L3,13 L10,13 L10,9 L12,9 L12,13 L20,13 L20,9 L22,9 L22,13 L29,13 L29,15 L22,15 L22,19 L29,19 L29,21 L22,21 L22,25 L20,25 L20,21 L12,21 L12,25 L10,25 L10,21 L3,21 L3,19 L10,19 L10,19 Z M12,19 L12,15 L20,15 L20,19 L12,19 Z M30.5,0 L32,0 L32,28 L30.5,28 L1.5,28 L0,28 L0,0 L1.5,0 L30.5,0 Z M29,3 L29,25 L3,25 L3,3 L29,3 Z M3,7 L29,7 L29,9 L3,9 L3,7 Z"></path></g>',
    attrs: { viewBox: "0 0 32 28" }
  },
  tilde: "M.018 22.856s-.627-7.417 5.456-10.293c6.416-3.033 12.638 2.01 15.885 2.01 2.09 0 4.067-1.105 4.067-4.483 0-.118 6.563-.086 6.563-.086s.338 5.151-2.756 8.403c-3.095 3.251-7.314 2.899-7.314 2.899s-2.686 0-6.353-1.543c-4.922-2.07-6.494-1.348-7.095-.969-.6.38-1.863 1.04-1.863 4.062H.018z",
  trash: "M4.31904507,29.7285487 C4.45843264,30.9830366 5.59537721,32 6.85726914,32 L20.5713023,32 C21.8337371,32 22.9701016,30.9833707 23.1095264,29.7285487 L25.1428571,11.4285714 L2.28571429,11.4285714 L4.31904507,29.7285487 L4.31904507,29.7285487 Z M6.85714286,4.57142857 L8.57142857,0 L18.8571429,0 L20.5714286,4.57142857 L25.1428571,4.57142857 C27.4285714,4.57142857 27.4285714,9.14285714 27.4285714,9.14285714 L13.7142857,9.14285714 L-1.0658141e-14,9.14285714 C-1.0658141e-14,9.14285714 -1.0658141e-14,4.57142857 2.28571429,4.57142857 L6.85714286,4.57142857 L6.85714286,4.57142857 Z M9.14285714,4.57142857 L18.2857143,4.57142857 L17.1428571,2.28571429 L10.2857143,2.28571429 L9.14285714,4.57142857 L9.14285714,4.57142857 Z",
  unarchive: "M18,7.95916837 L22.98085,7.97386236 L15.9779702,-0.00230793315 L9.02202984,7.93268248 L14,7.94736798 L14,22.8635899 L18,22.8635899 L18,7.95916837 Z M7,12.1176568 L0,12.1176568 L0,17.0882426 L3,17.0882426 L3,32 L29,32 L29,17.0882426 L32,17.0882426 L32,12.1176568 L25,12.1176568 L25,27.8341757 L7,27.8341757 L7,12.1176568 Z",
  unknown: "M16.5,26.5 C22.0228475,26.5 26.5,22.0228475 26.5,16.5 C26.5,10.9771525 22.0228475,6.5 16.5,6.5 C10.9771525,6.5 6.5,10.9771525 6.5,16.5 C6.5,22.0228475 10.9771525,26.5 16.5,26.5 L16.5,26.5 Z M16.5,23.5 C12.6340068,23.5 9.5,20.3659932 9.5,16.5 C9.5,12.6340068 12.6340068,9.5 16.5,9.5 C20.3659932,9.5 23.5,12.6340068 23.5,16.5 C23.5,20.3659932 20.3659932,23.5 16.5,23.5 L16.5,23.5 Z",
  variable: "M32,3.85760518 C32,5.35923081 31.5210404,6.55447236 30.5631068,7.4433657 C29.6051732,8.33225903 28.4358214,8.77669903 27.0550162,8.77669903 C26.2265331,8.77669903 25.4110072,8.67314019 24.6084142,8.46601942 C23.8058212,8.25889864 23.111114,8.05178097 22.5242718,7.84466019 C22.2481108,8.03452091 21.8425054,8.44875625 21.3074434,9.08737864 C20.7723814,9.72600104 20.1682882,10.5026923 19.4951456,11.4174757 C20.116508,14.0582656 20.6170423,15.9352695 20.9967638,17.0485437 C21.3764852,18.1618179 21.7389411,19.2880202 22.0841424,20.4271845 C22.3775635,21.3419679 22.8090586,22.0582498 23.3786408,22.5760518 C23.9482229,23.0938537 24.8457328,23.3527508 26.0711974,23.3527508 C26.5199591,23.3527508 27.0809028,23.2664518 27.7540453,23.0938511 C28.4271878,22.9212505 28.9795016,22.7486524 29.4110032,22.5760518 L28.8414239,24.9061489 C27.1326775,25.6310716 25.6397043,26.1574957 24.3624595,26.4854369 C23.0852148,26.8133781 21.9460676,26.9773463 20.9449838,26.9773463 C20.2200611,26.9773463 19.5037792,26.9083071 18.7961165,26.7702265 C18.0884539,26.632146 17.4412111,26.3818788 16.8543689,26.0194175 C16.2157465,25.6396961 15.6763776,25.1650514 15.236246,24.5954693 C14.7961143,24.0258871 14.4207135,23.2319361 14.1100324,22.2135922 C13.9029116,21.5749698 13.7130537,20.850058 13.5404531,20.038835 C13.3678524,19.2276119 13.1952544,18.51133 13.0226537,17.8899676 C12.5221118,18.6321504 12.1596559,19.1844642 11.9352751,19.5469256 C11.7108942,19.9093869 11.3829579,20.4185512 10.9514563,21.0744337 C9.5879112,23.1629015 8.4056145,24.6515597 7.40453074,25.5404531 C6.40344699,26.4293464 5.20389049,26.8737864 3.80582524,26.8737864 C2.75296129,26.8737864 1.85545139,26.5199604 1.11326861,25.8122977 C0.371085825,25.1046351 0,24.1812355 0,23.0420712 C0,21.5059254 0.478959612,20.2934241 1.4368932,19.4045307 C2.3948268,18.5156374 3.56417864,18.0711974 4.94498382,18.0711974 C5.77346693,18.0711974 6.56741799,18.1704413 7.32686084,18.368932 C8.08630369,18.5674228 8.80258563,18.7874853 9.47572816,19.0291262 C9.73462913,18.8220054 10.1359196,18.4164 10.6796117,17.8122977 C11.2233037,17.2081955 11.814452,16.4573939 12.4530744,15.5598706 C11.8834923,13.2470219 11.4174775,11.5037815 11.0550162,10.3300971 C10.6925548,9.15641269 10.321469,7.99137579 9.94174757,6.83495146 C9.63106641,5.90290796 9.18231146,5.18231107 8.59546926,4.67313916 C8.00862706,4.16396725 7.12837696,3.90938511 5.95469256,3.90938511 C5.43689061,3.90938511 4.85868712,3.99999909 4.22006472,4.18122977 C3.58144233,4.36246045 3.04638835,4.53074356 2.61488673,4.68608414 L3.18446602,2.35598706 C4.73787184,1.66558447 6.20927029,1.14779029 7.5987055,0.802588997 C8.98814071,0.457387702 10.1488627,0.284789644 11.0809061,0.284789644 C11.9266493,0.284789644 12.6515612,0.345198964 13.2556634,0.466019417 C13.8597657,0.586839871 14.4983785,0.845736958 15.171521,1.24271845 C15.7928834,1.62243987 16.3322523,2.10139948 16.789644,2.67961165 C17.2470357,3.25782382 17.6224365,4.04745994 17.9158576,5.04854369 C18.1229784,5.73894628 18.3128362,6.45522822 18.4854369,7.197411 C18.6580375,7.93959379 18.8047459,8.5782066 18.9255663,9.11326861 C19.2880277,8.56094654 19.6634285,7.99137294 20.0517799,7.40453074 C20.4401314,6.81768854 20.7723827,6.29989437 21.0485437,5.85113269 C22.3775687,3.76266485 23.5684953,2.2653767 24.6213592,1.3592233 C25.6742232,0.453069903 26.8651498,0 28.1941748,0 C29.2815588,0 30.1876986,0.358140971 30.9126214,1.07443366 C31.6375441,1.79072634 32,2.71844091 32,3.85760518 L32,3.85760518 Z",
  viewArchive: {
    path: "M2.783 12.8h26.434V29H2.783V12.8zm6.956 3.4h12.522v2.6H9.739v-2.6zM0 4h32v6.4H0V4z",
    attrs: { fillRule: "evenodd" }
  },
  warning: {
    path: "M12.3069589,4.52260192 C14.3462632,1.2440969 17.653446,1.24541073 19.691933,4.52260192 L31.2249413,23.0637415 C33.2642456,26.3422466 31.7889628,29 27.9115531,29 L4.08733885,29 C0.218100769,29 -1.26453645,26.3409327 0.77395061,23.0637415 L12.3069589,4.52260192 Z M18.0499318,23.0163223 C18.0499772,23.0222378 18.05,23.0281606 18.05,23.0340907 C18.05,23.3266209 17.9947172,23.6030345 17.8840476,23.8612637 C17.7737568,24.1186089 17.6195847,24.3426723 17.4224081,24.5316332 C17.2266259,24.7192578 16.998292,24.8660439 16.7389806,24.9713892 C16.4782454,25.0773129 16.1979962,25.1301134 15.9,25.1301134 C15.5950083,25.1301134 15.3111795,25.0774024 15.0502239,24.9713892 C14.7901813,24.8657469 14.5629613,24.7183609 14.3703047,24.5298034 C14.177545,24.3411449 14.0258626,24.1177208 13.9159524,23.8612637 C13.8052827,23.6030345 13.75,23.3266209 13.75,23.0340907 C13.75,22.7411889 13.8054281,22.4661013 13.9165299,22.2109786 C14.0264627,21.9585404 14.1779817,21.7374046 14.3703047,21.5491736 C14.5621821,21.3613786 14.7883231,21.2126553 15.047143,21.1034656 C15.3089445,20.9930181 15.593871,20.938068 15.9,20.938068 C16.1991423,20.938068 16.4804862,20.9931136 16.7420615,21.1034656 C17.0001525,21.2123478 17.2274115,21.360472 17.4224081,21.5473437 C17.6191428,21.7358811 17.7731504,21.957652 17.88347,22.2109786 C17.9124619,22.2775526 17.9376628,22.3454862 17.9590769,22.414741 C18.0181943,22.5998533 18.05,22.7963729 18.05,23 C18.05,23.0054459 18.0499772,23.0108867 18.0499318,23.0163223 L18.0499318,23.0163223 Z M17.7477272,14.1749999 L17.7477272,8.75 L14.1170454,8.75 L14.1170454,14.1749999 C14.1170454,14.8471841 14.1572355,15.5139742 14.2376219,16.1753351 C14.3174838,16.8323805 14.4227217,17.5019113 14.5533248,18.1839498 L14.5921937,18.3869317 L17.272579,18.3869317 L17.3114479,18.1839498 C17.442051,17.5019113 17.5472889,16.8323805 17.6271507,16.1753351 C17.7075371,15.5139742 17.7477272,14.8471841 17.7477272,14.1749999 Z",
    attrs: { fillRule: "evenodd" }
  },
  x: "m11.271709,16 l-3.19744231e-13,4.728291 l4.728291,0 l16,11.271709 l27.271709,2.39808173e-13 l32,4.728291 l20.728291,16 l31.1615012,26.4332102 l26.4332102,31.1615012 l16,20.728291 l5.56678976,31.1615012 l0.838498756,26.4332102 l11.271709,16 z",
  zoom: "M12.416 12.454V8.37h3.256v4.083h4.07v3.266h-4.07v4.083h-3.256V15.72h-4.07v-3.266h4.07zm10.389 13.28c-5.582 4.178-13.543 3.718-18.632-1.37-5.58-5.581-5.595-14.615-.031-20.179 5.563-5.563 14.597-5.55 20.178.031 5.068 5.068 5.545 12.985 1.422 18.563l5.661 5.661a2.08 2.08 0 0 1 .003 2.949 2.085 2.085 0 0 1-2.95-.003l-5.651-5.652zm-1.486-4.371c3.895-3.895 3.885-10.218-.021-14.125-3.906-3.906-10.23-3.916-14.125-.021-3.894 3.894-3.885 10.218.022 14.124 3.906 3.907 10.23 3.916 14.124.022z",
  slack: {
    img: "app/assets/img/slack.png"
  }
};

// $FlowFixMe
ICON_PATHS["horizontal_bar"] = {
  path: ICON_PATHS["bar"],
  attrs: {
    style: { transform: "rotate(90deg) scaleX(-1)" }
  }
};

// $FlowFixMe
ICON_PATHS["forwardArrow"] = {
  path: ICON_PATHS["backArrow"],
  attrs: {
    style: { transform: "rotate(-180deg)" }
  }
};

// $FlowFixMe
ICON_PATHS["scalar"] = ICON_PATHS["number"];

function parseViewBox(viewBox) {
  // a viewBox is a string that takes the form 'min-x, min-y, width, height'
  // grab the values and return just width and height since we currently don't
  // tend to card about min-x or min-y

  // we cast to numbers so we can do math-y stuff with the width and height
  return viewBox.split(" ").map(function (v) {
    return Number(v);
  }).slice(2, 4);
}

function loadIcon(name) {
  var def = ICON_PATHS[name];
  if (!def) {
    console.warn('Icon "' + name + '" does not exist.');
    return;
  }

  if (def.img) {
    return _extends({}, def, { attrs: _extends({}, def.attrs, { className: "Icon Icon-" + name }) });
  }

  var icon = {
    attrs: {
      className: "Icon Icon-" + name,
      viewBox: "0 0 32 32",
      width: "16px",
      height: "16px",
      fill: "currentcolor"
    },
    svg: undefined,
    path: undefined
  };

  if (typeof def === "string") {
    icon.path = def;
  } else if (def != null) {
    var svg = def.svg,
        path = def.path,
        attrs = def.attrs;

    for (var attr in attrs) {
      icon.attrs[attr] = attrs[attr];
    }

    // Note - @kdoh 10/13/2017
    // in the case of a custom viewBox, we need to set the width and height
    // of the icon def based on the view box since we're scaling all icons
    // down by half currently
    if (attrs && attrs.viewBox) {
      var _parseViewBox = parseViewBox(attrs.viewBox),
          _parseViewBox2 = _slicedToArray(_parseViewBox, 2),
          width = _parseViewBox2[0],
          height = _parseViewBox2[1];

      icon.attrs.width = width / 2 + "px";
      icon.attrs.height = height / 2 + "px";
    }
    icon.path = path;
    icon.svg = svg;
  }

  return icon;
}

/***/ }),

/***/ 360:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = init;

__webpack_require__(611);

__webpack_require__(639);

__webpack_require__(364);

var _c3po = __webpack_require__(2);

var _i18n = __webpack_require__(366);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRedux = __webpack_require__(7);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _api = __webpack_require__(205);

var _api2 = _interopRequireDefault(_api);

var _store = __webpack_require__(380);

var _settings3 = __webpack_require__(207);

var _reactRouter = __webpack_require__(13);

var _history = __webpack_require__(747);

var _reactRouterRedux = __webpack_require__(19);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// If enabled this monkeypatches `t` and `jt` to return blacked out
// strings/elements to assist in finding untranslated strings.
/*  weak */

global.t = _c3po.t;

// make the i18n function "t" global so we don't have to import it in basically every file

global.jt = _c3po.jt;

// set the locale before loading anything else

if (window.MetabaseLocalization) {
  (0, _i18n.setLocalization)(window.MetabaseLocalization);
}

// remove trailing slash
var BASENAME = window.MetabaseRoot.replace(/\/+$/, "");

_api2.default.basename = BASENAME;

var browserHistory = (0, _reactRouter.useRouterHistory)(_history.createHistory)({
  basename: BASENAME
});

function _init(reducers, getRoutes, callback) {
  var store = (0, _store.getStore)(reducers, browserHistory);
  var routes = getRoutes(store);
  var history = (0, _reactRouterRedux.syncHistoryWithStore)(browserHistory, store);

  _reactDom2.default.render(_react2.default.createElement(
    _reactRedux.Provider,
    { store: store },
    _react2.default.createElement(
      _reactRouter.Router,
      { history: history },
      routes
    )
  ), document.getElementById("root"));

  // listen for location changes and use that as a trigger for page view tracking
  history.listen(function (location) {
    _analytics2.default.trackPageView(location.pathname);
  });

  (0, _analytics.registerAnalyticsClickListener)();

  store.dispatch((0, _settings3.refreshSiteSettings)());

  // enable / disable GA based on opt-out of anonymous tracking
  _settings2.default.on("anon_tracking_enabled", function () {
    window["ga-disable-" + _settings2.default.get("ga_code")] = _settings2.default.isTrackingEnabled() ? null : true;
  });

  if (callback) {
    callback(store);
  }
}

function init() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (document.readyState != "loading") {
    _init.apply(undefined, args);
  } else {
    document.addEventListener("DOMContentLoaded", function () {
      return _init.apply(undefined, args);
    });
  }
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(68)))

/***/ }),

/***/ 364:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.enableTranslatedStringReplacement = enableTranslatedStringReplacement;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// If enabled this monkeypatches `t` and `jt` to return blacked out
// strings/elements to assist in finding untranslated strings.
//
// Enable:
//    localStorage["metabase-i18n-debug"] = true; window.location.reload()
//
// Disable:
//    delete localStorage["metabase-i18n-debug"]; window.location.reload()
//
// Should be loaded before almost everything else.

// special strings that need to be handled specially
var SPECIAL_STRINGS = new Set([
// Expression editor aggregation names need to be unique for the parser
"Count", "CumulativeCount", "Sum", "CumulativeSum", "Distinct", "StandardDeviation", "Average", "Min", "Max"]);

function enableTranslatedStringReplacement() {
  var c3po = __webpack_require__(2);
  var _t = c3po.t;
  var _jt = c3po.jt;
  c3po.t = function () {
    var string = _t.apply(undefined, arguments);
    if (SPECIAL_STRINGS.has(string)) {
      return string.toUpperCase();
    } else {
      // divide by 2 because Unicode `FULL BLOCK` is quite wide
      return new Array(Math.ceil(string.length / 2) + 1).join("█");
    }
  };
  // eslint-disable-next-line react/display-name
  c3po.jt = function () {
    var elements = _jt.apply(undefined, arguments);
    return _react2.default.createElement(
      "span",
      { style: { backgroundColor: "currentcolor" } },
      elements
    );
  };
}

if (window.localStorage && window.localStorage["metabase-i18n-debug"]) {
  enableTranslatedStringReplacement();
}

/***/ }),

/***/ 366:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadLocalization = undefined;

var loadLocalization = exports.loadLocalization = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(locale) {
    var translationsObject;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _services.I18NApi.locale({ locale: locale });

          case 2:
            translationsObject = _context.sent;

            setLocalization(translationsObject);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function loadLocalization(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.setLocalization = setLocalization;

var _c3po = __webpack_require__(2);

var _services = __webpack_require__(15);

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function setLocalization(translationsObject) {
  var locale = translationsObject.headers.language;

  addMsgIds(translationsObject);

  // add and set locale with C-3PO
  (0, _c3po.addLocale)(locale, translationsObject);
  (0, _c3po.useLocale)(locale);
}

// we delete msgid property since it's redundant, but have to add it back in to
// make c-3po happy
function addMsgIds(translationsObject) {
  var msgs = translationsObject.translations[""];
  for (var msgid in msgs) {
    if (msgs[msgid].msgid === undefined) {
      msgs[msgid].msgid = msgid;
    }
  }
}

/***/ }),

/***/ 367:
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
  return new Promise(function (resolve) {
    __webpack_require__.e/* require.ensure */(1).then((function (require) {
      resolve(__webpack_require__(787));
    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
  });
}

/***/ }),

/***/ 37:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NATIVE_QUERY_TEMPLATE = exports.STRUCTURED_QUERY_TEMPLATE = undefined;
exports.isStructured = isStructured;
exports.isNative = isNative;
exports.canRun = canRun;
exports.cardIsEquivalent = cardIsEquivalent;
exports.getQuery = getQuery;
exports.getTableMetadata = getTableMetadata;
exports.getTemplateTags = getTemplateTags;
exports.getParameters = getParameters;
exports.getParametersWithExtras = getParametersWithExtras;
exports.applyParameters = applyParameters;
exports.isTransientId = isTransientId;
exports.questionUrlWithParameters = questionUrlWithParameters;

var _Parameter = __webpack_require__(85);

var _query = __webpack_require__(70);

var Query = _interopRequireWildcard(_query);

var _query2 = __webpack_require__(17);

var _query3 = _interopRequireDefault(_query2);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _urls = __webpack_require__(34);

var Urls = _interopRequireWildcard(_urls);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// TODO Atte Keinänen 6/5/17 Should these be moved to corresponding metabase-lib classes?
// Is there any reason behind keeping them in a central place?

// legacy
var STRUCTURED_QUERY_TEMPLATE = exports.STRUCTURED_QUERY_TEMPLATE = {
  type: "query",
  database: null,
  query: {
    source_table: null,
    aggregation: undefined,
    breakout: undefined,
    filter: undefined
  }
};

var NATIVE_QUERY_TEMPLATE = exports.NATIVE_QUERY_TEMPLATE = {
  type: "native",
  database: null,
  native: {
    query: "",
    template_tags: {}
  }
};

function isStructured(card) {
  return card.dataset_query.type === "query";
}

function isNative(card) {
  return card.dataset_query.type === "native";
}

function canRun(card) {
  if (card.dataset_query.type === "query") {
    var query = getQuery(card);
    return query != null && query.source_table != undefined && Query.hasValidAggregation(query);
  } else if (card.dataset_query.type === "native") {
    var native = card.dataset_query.native;
    return native && card.dataset_query.database != undefined && native.query !== "";
  } else {
    return false;
  }
}

function cardIsEquivalent(cardA, cardB) {
  cardA = (0, _icepick.updateIn)(cardA, ["dataset_query", "parameters"], function (parameters) {
    return parameters || [];
  });
  cardB = (0, _icepick.updateIn)(cardB, ["dataset_query", "parameters"], function (parameters) {
    return parameters || [];
  });
  cardA = _underscore2.default.pick(cardA, "dataset_query", "display", "visualization_settings");
  cardB = _underscore2.default.pick(cardB, "dataset_query", "display", "visualization_settings");
  return _underscore2.default.isEqual(cardA, cardB);
}

function getQuery(card) {
  if (card.dataset_query.type === "query") {
    return card.dataset_query.query;
  } else {
    return null;
  }
}

function getTableMetadata(card, metadata) {
  var query = getQuery(card);
  if (query && query.source_table != null) {
    return metadata.tables[query.source_table] || null;
  }
  return null;
}

function getTemplateTags(card) {
  return card && card.dataset_query && card.dataset_query.type === "native" && card.dataset_query.native.template_tags ? Object.values(card.dataset_query.native.template_tags) : [];
}

function getParameters(card) {
  if (card && card.parameters) {
    return card.parameters;
  }

  var tags = getTemplateTags(card);
  return (0, _Parameter.getTemplateTagParameters)(tags);
}

function getParametersWithExtras(card, parameterValues) {
  return getParameters(card).map(function (parameter) {
    // if we have a parameter value for this parameter, set "value"
    if (parameterValues && parameter.id in parameterValues) {
      parameter = (0, _icepick.assoc)(parameter, "value", parameterValues[parameter.id]);
    }
    // if we have a field id for this parameter, set "field_id"
    var fieldId = (0, _Parameter.getParameterTargetFieldId)(parameter.target, card.dataset_query);
    if (fieldId != null) {
      parameter = (0, _icepick.assoc)(parameter, "field_id", fieldId);
    }
    return parameter;
  });
}

// NOTE Atte Keinänen 7/5/17: Still used in dashboards and public questions.
// Query builder uses `Question.getResults` which contains similar logic.
function applyParameters(card, parameters) {
  var parameterValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var parameterMappings = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  var datasetQuery = _utils2.default.copy(card.dataset_query);
  // clean the query
  if (datasetQuery.type === "query") {
    datasetQuery.query = _query3.default.cleanQuery(datasetQuery.query);
  }
  datasetQuery.parameters = [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (parameters || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var parameter = _step.value;

      var value = parameterValues[parameter.id];
      if (value == null) {
        continue;
      }

      var cardId = card.id || card.original_card_id;
      var mapping = _underscore2.default.findWhere(parameterMappings, cardId != null ? {
        card_id: cardId,
        parameter_id: parameter.id
      } : // NOTE: this supports transient dashboards where cards don't have ids
      // BUT will not work correctly with multiseries dashcards since
      // there's no way to identify which card the mapping applies to.
      {
        parameter_id: parameter.id
      });
      if (mapping) {
        // mapped target, e.x. on a dashboard
        datasetQuery.parameters.push({
          type: parameter.type,
          target: mapping.target,
          value: value
        });
      } else if (parameter.target) {
        // inline target, e.x. on a card
        datasetQuery.parameters.push({
          type: parameter.type,
          target: parameter.target,
          value: value
        });
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return datasetQuery;
}

function isTransientId(id) {
  return id != null && typeof id === "string" && isNaN(parseInt(id));
}

/** returns a question URL with parameters added to query string or MBQL filters */
function questionUrlWithParameters(card, metadata, parameters) {
  var parameterValues = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var parameterMappings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
  var cardIsDirty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

  if (!card.dataset_query) {
    return Urls.question(card.id);
  }

  card = _utils2.default.copy(card);

  var cardParameters = getParameters(card);
  var datasetQuery = applyParameters(card, parameters, parameterValues, parameterMappings);

  // If we have a clean question without parameters applied, don't add the dataset query hash
  if (!cardIsDirty && !isTransientId(card.id) && datasetQuery.parameters && datasetQuery.parameters.length === 0) {
    return Urls.question(card.id);
  }

  var query = {};
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    var _loop = function _loop() {
      var datasetParameter = _step2.value;

      var cardParameter = _underscore2.default.find(cardParameters, function (p) {
        return _utils2.default.equals(p.target, datasetParameter.target);
      });
      if (cardParameter) {
        // if the card has a real parameter we can use, use that
        query[cardParameter.slug] = datasetParameter.value;
      } else if (isStructured(card)) {
        // if the card is structured, try converting the parameter to an MBQL filter clause
        var filter = (0, _Parameter.parameterToMBQLFilter)(datasetParameter, metadata);
        if (filter) {
          card = (0, _icepick.updateIn)(card, ["dataset_query", "query"], function (query) {
            return Query.addFilter(query, filter);
          });
        } else {
          console.warn("UNHANDLED PARAMETER", datasetParameter);
        }
      } else {
        console.warn("UNHANDLED PARAMETER", datasetParameter);
      }
    };

    for (var _iterator2 = (datasetQuery.parameters || [])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      _loop();
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  if (isTransientId(card.id)) {
    card = (0, _icepick.assoc)(card, "id", null);
  }
  if (isTransientId(card.original_card_id)) {
    card = (0, _icepick.assoc)(card, "original_card_id", null);
  }

  return Urls.question(null, card.dataset_query ? card : undefined, query);
}

/***/ }),

/***/ 38:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var normal = exports.normal = {
  blue: "#509EE3",
  green: "#9CC177",
  purple: "#A989C5",
  red: "#EF8C8C",
  yellow: "#f9d45c",
  orange: "#F1B556",
  teal: "#A6E7F3",
  indigo: "#7172AD",
  gray: "#7B8797",
  grey1: "#DCE1E4",
  grey2: "#93A1AB",
  grey3: "#2E353B",
  text: "#2E353B"
};

var saturated = exports.saturated = {
  blue: "#2D86D4",
  green: "#84BB4C",
  purple: "#885AB1",
  red: "#ED6E6E",
  yellow: "#F9CF48"
};

var desaturated = exports.desaturated = {
  blue: "#72AFE5",
  green: "#A8C987",
  purple: "#B8A2CC",
  red: "#EEA5A5",
  yellow: "#F7D97B"
};

var harmony = exports.harmony = ["#509ee3", "#9cc177", "#a989c5", "#ef8c8c", "#f9d45c", "#F1B556", "#A6E7F3", "#7172AD", "#7B8797", "#6450e3", "#55e350", "#e35850", "#77c183", "#7d77c1", "#c589b9", "#bec589", "#89c3c5", "#c17777", "#899bc5", "#efce8c", "#50e3ae", "#be8cef", "#8cefc6", "#ef8cde", "#b5f95c", "#5cc2f9", "#f95cd0", "#c1a877", "#f95c67"];

var getRandomColor = exports.getRandomColor = function getRandomColor(family) {
  // $FlowFixMe: Object.values doesn't preserve the type :-/
  var colors = Object.values(family);
  return colors[Math.floor(Math.random() * colors.length)];
};

/***/ }),

/***/ 380:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackEvent = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /*  weak */

exports.getStore = getStore;

var _redux = __webpack_require__(116);

var _reduxForm = __webpack_require__(105);

var _reactRouterRedux = __webpack_require__(19);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _reduxPromise = __webpack_require__(680);

var _reduxPromise2 = _interopRequireDefault(_reduxPromise);

var _reduxLogger = __webpack_require__(681);

var _reduxLogger2 = _interopRequireDefault(_reduxLogger);

var _debug = __webpack_require__(227);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Provides the same functionality as redux-thunk and augments the dispatch method with
 * `dispatch.action(type, payload)` which creates an action that adheres to Flux Standard Action format.
 */
var thunkWithDispatchAction = function thunkWithDispatchAction(_ref) {
  var dispatch = _ref.dispatch,
      getState = _ref.getState;
  return function (next) {
    return function (action) {
      if (typeof action === "function") {
        var dispatchAugmented = Object.assign(dispatch, {
          action: function action(type, payload) {
            return dispatch({ type: type, payload: payload });
          }
        });

        return action(dispatchAugmented, getState);
      }
      return next(action);
    };
  };
};

var devToolsExtension = window.devToolsExtension ? window.devToolsExtension() : function (f) {
  return f;
};

// Look for redux action names that take the form `metabase/<app_section>/<ACTION_NAME>
var METABASE_TRACKABLE_ACTION_REGEX = /^metabase\/(.+)\/([^\/]+)$/;

/**
 * Track events by looking at redux dispatch
 * -----
 * This redux middleware is meant to help automate event capture for instances
 * that opt in to anonymous tracking by looking at redux actions and either
 * using the name of the action, or defined analytics metadata to send event
 * data to GA. This makes it un-necessary to instrument individual redux actions
 *
 * Any actions with a name takes the form `metabase/.../...` will be automatially captured
 *
 * Ignoring actions:
 * Any actions we want to ignore can be bypassed by including a meta object with ignore: true
 * {
 *   type: "...",
 *   meta: {
 *     analytics: { ignore: true }
 *   }
 * }
 *
 * Customizing event names:
 * If we don't want to use the action name metadata can be added to the action
 * to customize the name
 *
 * {
 *   type: "...",
 *   meta: {
 *     analytics: {
 *       category: "foo",
 *       action: "bar",
 *       label: "baz",
 *       value: "qux"
 *    }
 *   }
 *}
 */
var trackEvent = exports.trackEvent = function trackEvent(_ref2) {
  var dispatch = _ref2.dispatch,
      getState = _ref2.getState;
  return function (next) {
    return function (action) {
      // look for the meta analytics object if it exists, this gets used to
      // do customization of the event identifiers sent to GA
      var analytics = action.meta && action.meta.analytics;

      if (analytics) {
        if (!analytics.ignore) {
          _analytics2.default.trackEvent(analytics.category, analytics.action, analytics.label, analytics.value);
        }
      } else if (METABASE_TRACKABLE_ACTION_REGEX.test(action.type)) {
        // if there is no analytics metadata on the action, look to see if it's
        // an action name we want to track based on the format of the aciton name

        // eslint doesn't like the _ to ignore the first bit
        var _action$type$match = action.type.match(METABASE_TRACKABLE_ACTION_REGEX),
            _action$type$match2 = _slicedToArray(_action$type$match, 3),
            _ = _action$type$match2[0],
            categoryName = _action$type$match2[1],
            actionName = _action$type$match2[2];

        _analytics2.default.trackEvent(categoryName, actionName);
      }
      return next(action);
    };
  };
};

function getStore(reducers, history, intialState) {
  var enhancer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (a) {
    return a;
  };

  var reducer = (0, _redux.combineReducers)(_extends({}, reducers, {
    form: _reduxForm.reducer,
    routing: _reactRouterRedux.routerReducer
  }));

  var middleware = [thunkWithDispatchAction, trackEvent, _reduxPromise2.default].concat(_toConsumableArray(_debug.DEBUG ? [_reduxLogger2.default] : []), _toConsumableArray(history ? [(0, _reactRouterRedux.routerMiddleware)(history)] : []));

  return (0, _redux.createStore)(reducer, intialState, (0, _redux.compose)(_redux.applyMiddleware.apply(undefined, _toConsumableArray(middleware)), devToolsExtension, enhancer));
}

/***/ }),

/***/ 383:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tooltipify = function Tooltipify(ComposedComponent) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(_class, _Component);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            tooltip = _props.tooltip,
            props = _objectWithoutProperties(_props, ["tooltip"]);

        if (tooltip) {
          return _react2.default.createElement(
            _Tooltip2.default,
            { tooltip: tooltip },
            _react2.default.createElement(ComposedComponent, props)
          );
        } else {
          return _react2.default.createElement(ComposedComponent, props);
        }
      }
    }]);

    return _class;
  }(_react.Component), _class.displayName = "Tooltipify[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _temp;
};

exports.default = Tooltipify;

/***/ }),

/***/ 384:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 385:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for a {@link Database} schema. Contains {@link Table}s.
 */
var Schema = function (_Base) {
  _inherits(Schema, _Base);

  function Schema() {
    _classCallCheck(this, Schema);

    return _possibleConstructorReturn(this, (Schema.__proto__ || Object.getPrototypeOf(Schema)).apply(this, arguments));
  }

  return Schema;
}(_Base3.default);

exports.default = Schema;

/***/ }),

/***/ 386:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAggregations = getAggregations;
exports.addAggregation = addAggregation;
exports.updateAggregation = updateAggregation;
exports.removeAggregation = removeAggregation;
exports.clearAggregations = clearAggregations;
exports.isBareRows = isBareRows;
exports.hasEmptyAggregation = hasEmptyAggregation;
exports.hasValidAggregation = hasValidAggregation;

var _util = __webpack_require__(27);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// returns canonical list of Aggregations, i.e. with deprecated "rows" removed
function getAggregations(aggregation) {
  var aggregations = void 0;
  if (Array.isArray(aggregation) && Array.isArray(aggregation[0])) {
    aggregations = aggregation;
  } else if (Array.isArray(aggregation) && typeof aggregation[0] === "string") {
    // legacy
    aggregations = [aggregation];
  } else {
    aggregations = [];
  }
  return aggregations.filter(function (agg) {
    return agg && agg[0] && !(0, _util.mbqlEq)(agg[0], "rows");
  });
}

// turns a list of Aggregations into the canonical AggregationClause
function getAggregationClause(aggregations) {
  aggregations = getAggregations(aggregations);
  if (aggregations.length === 0) {
    return undefined;
  } else {
    return aggregations;
  }
}

function addAggregation(aggregation, newAggregation) {
  return getAggregationClause((0, _util.add)(getAggregations(aggregation), newAggregation));
}
function updateAggregation(aggregation, index, updatedAggregation) {
  return getAggregationClause((0, _util.update)(getAggregations(aggregation), index, updatedAggregation));
}
function removeAggregation(aggregation, index) {
  return getAggregationClause((0, _util.remove)(getAggregations(aggregation), index));
}
function clearAggregations(ac) {
  return getAggregationClause((0, _util.clear)());
}

// MISC

function isBareRows(ac) {
  return getAggregations(ac).length === 0;
}

function hasEmptyAggregation(ac) {
  return _underscore2.default.any(getAggregations(ac), function (aggregation) {
    return !(0, _util.noNullValues)(aggregation);
  });
}

function hasValidAggregation(ac) {
  return _underscore2.default.all(getAggregations(ac), function (aggregation) {
    return (0, _util.noNullValues)(aggregation);
  });
}

/***/ }),

/***/ 387:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBreakouts = getBreakouts;
exports.getBreakoutFields = getBreakoutFields;
exports.getBreakoutClause = getBreakoutClause;
exports.addBreakout = addBreakout;
exports.updateBreakout = updateBreakout;
exports.removeBreakout = removeBreakout;
exports.clearBreakouts = clearBreakouts;

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _util = __webpack_require__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// returns canonical list of Breakouts, with nulls removed
function getBreakouts(breakouts) {
  return (breakouts || []).filter(function (b) {
    return b != null;
  });
}

function getBreakoutFields(breakouts, tableMetadata) {
  return getBreakouts(breakouts).map(function (breakout) {
    return (_query2.default.getFieldTarget(breakout, tableMetadata) || {}).field;
  });
}

// turns a list of Breakouts into the canonical BreakoutClause
function getBreakoutClause(breakouts) {
  breakouts = getBreakouts(breakouts);
  if (breakouts.length === 0) {
    return undefined;
  } else {
    return breakouts;
  }
}

function addBreakout(breakout, newBreakout) {
  return getBreakoutClause((0, _util.add)(getBreakouts(breakout), newBreakout));
}
function updateBreakout(breakout, index, updatedBreakout) {
  return getBreakoutClause((0, _util.update)(getBreakouts(breakout), index, updatedBreakout));
}
function removeBreakout(breakout, index) {
  return getBreakoutClause((0, _util.remove)(getBreakouts(breakout), index));
}
function clearBreakouts(breakout) {
  return getBreakoutClause((0, _util.clear)());
}

/***/ }),

/***/ 388:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLimit = getLimit;
exports.updateLimit = updateLimit;
exports.clearLimit = clearLimit;
function getLimit(lc) {
  return lc;
}

function updateLimit(lc, limit) {
  return limit;
}

function clearLimit(lc) {
  return undefined;
}

/***/ }),

/***/ 389:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOrderBys = getOrderBys;
exports.getOrderByClause = getOrderByClause;
exports.addOrderBy = addOrderBy;
exports.updateOrderBy = updateOrderBy;
exports.removeOrderBy = removeOrderBy;
exports.clearOrderBy = clearOrderBy;

var _util = __webpack_require__(27);

// returns canonical list of OrderBys, with nulls removed
function getOrderBys(breakout) {
  return (breakout || []).filter(function (b) {
    return b != null;
  });
}

// turns a list of OrderBys into the canonical OrderByClause
function getOrderByClause(breakouts) {
  breakouts = getOrderBys(breakouts);
  if (breakouts.length === 0) {
    return undefined;
  } else {
    return breakouts;
  }
}

function addOrderBy(breakout, newOrderBy) {
  return getOrderByClause((0, _util.add)(getOrderBys(breakout), newOrderBy));
}
function updateOrderBy(breakout, index, updatedOrderBy) {
  return getOrderByClause((0, _util.update)(getOrderBys(breakout), index, updatedOrderBy));
}
function removeOrderBy(breakout, index) {
  return getOrderByClause((0, _util.remove)(getOrderBys(breakout), index));
}
function clearOrderBy(breakout) {
  return getOrderByClause((0, _util.clear)());
}

/***/ }),

/***/ 39:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

// NOTE: this needs to be imported first due to some cyclical dependency nonsense


/** This is the primary way people interact with tables */
var Table = function (_Base) {
  _inherits(Table, _Base);

  function Table() {
    _classCallCheck(this, Table);

    return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
  }

  _createClass(Table, [{
    key: "newQuestion",
    value: function newQuestion() {
      // $FlowFixMe
      return new _Question2.default();
    }
  }, {
    key: "dimensions",
    value: function dimensions() {
      return this.fields.map(function (field) {
        return field.dimension();
      });
    }
  }, {
    key: "dateFields",
    value: function dateFields() {
      return this.fields.filter(function (field) {
        return field.isDate();
      });
    }
  }, {
    key: "aggregations",
    value: function aggregations() {
      return this.aggregation_options || [];
    }
  }, {
    key: "aggregation",
    value: function aggregation(agg) {
      return _underscore2.default.findWhere(this.aggregations(), { short: agg });
    }
  }, {
    key: "fieldTarget",
    value: function fieldTarget(fieldRef) {
      return _query2.default.getFieldTarget(fieldRef, this);
    }
  }, {
    key: "database",


    // $FlowFixMe Could be replaced with hydrated database property in selectors/metadata.js (instead / in addition to `table.db`)
    get: function get() {
      return this.db;
    }
  }]);

  return Table;
}(_Base3.default);

exports.default = Table;

/***/ }),

/***/ 390:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.getExpressions = getExpressions;
exports.getExpressionsList = getExpressionsList;
exports.addExpression = addExpression;
exports.updateExpression = updateExpression;
exports.removeExpression = removeExpression;
exports.clearExpressions = clearExpressions;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function getExpressions() {
  var expressions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return expressions;
}

function getExpressionsList() {
  var expressions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return Object.entries(expressions).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        name = _ref2[0],
        expression = _ref2[1];

    return {
      name: name,
      expression: expression
    };
  });
}

function addExpression() {
  var expressions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var name = arguments[1];
  var expression = arguments[2];

  return _extends({}, expressions, _defineProperty({}, name, expression));
}
function updateExpression() {
  var expressions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var name = arguments[1];
  var expression = arguments[2];
  var oldName = arguments[3];

  if (oldName != null) {
    expressions = removeExpression(expressions, oldName);
  }
  return addExpression(expressions, name, expression);
}
function removeExpression() {
  var expressions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var name = arguments[1];

  return _underscore2.default.omit(expressions, name);
}
function clearExpressions(expressions) {
  return {};
}

/***/ }),

/***/ 391:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),

/***/ 392:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _Dimension = __webpack_require__(66);

var _Dimension2 = _interopRequireDefault(_Dimension);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 393:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),

/***/ 394:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Aggregation = __webpack_require__(233);

var _Aggregation2 = _interopRequireDefault(_Aggregation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Wrapper class for an aggregation object
 */
var AggregationOption = function (_Base) {
  _inherits(AggregationOption, _Base);

  function AggregationOption() {
    _classCallCheck(this, AggregationOption);

    return _possibleConstructorReturn(this, (AggregationOption.__proto__ || Object.getPrototypeOf(AggregationOption)).apply(this, arguments));
  }

  _createClass(AggregationOption, [{
    key: "hasFields",


    /**
     * Aggregation has one or more required fields
     */

    // TODO: Now just a plain object; wrap to a Field wrapper class
    value: function hasFields() {
      return this.validFieldsFilters.length > 0;
    }
  }, {
    key: "toAggregation",
    value: function toAggregation() {
      return new _Aggregation2.default(null, [this.short].concat(this.fields.map(function (field) {
        return null;
      })));
    }
  }]);

  return AggregationOption;
}(_Base3.default);

exports.default = AggregationOption;

/***/ }),

/***/ 395:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.drillDownForDimensions = drillDownForDimensions;

var _types = __webpack_require__(42);

var _schema_metadata = __webpack_require__(10);

var _actions = __webpack_require__(61);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// Helpers for defining drill-down progressions
var CategoryDrillDown = function CategoryDrillDown(type) {
  return [function (field) {
    return (0, _types.isa)(field.special_type, type);
  }];
};
var DateTimeDrillDown = function DateTimeDrillDown(unit) {
  return [["datetime-field", _schema_metadata.isDate, unit]];
};

var LatLonDrillDown = function LatLonDrillDown(binningStrategy, binWidth) {
  return [["binning-strategy", _schema_metadata.isLatitude, binningStrategy, binWidth], ["binning-strategy", _schema_metadata.isLongitude, binningStrategy, binWidth]];
};

/**
 * Defines the built-in drill-down progressions
 */
var DEFAULT_DRILL_DOWN_PROGRESSIONS = [
// DateTime drill downs
[DateTimeDrillDown("year"), DateTimeDrillDown("quarter"), DateTimeDrillDown("month"), DateTimeDrillDown("week"), DateTimeDrillDown("day"), DateTimeDrillDown("hour"), DateTimeDrillDown("minute")],
// Country => State => City
[CategoryDrillDown(_types.TYPE.Country), CategoryDrillDown(_types.TYPE.State)],
// Country, State, or City => LatLon
[CategoryDrillDown(_types.TYPE.Country), //
LatLonDrillDown("bin-width", 10)], [CategoryDrillDown(_types.TYPE.State), //
LatLonDrillDown("bin-width", 1)], [CategoryDrillDown(_types.TYPE.City), //
LatLonDrillDown("bin-width", 0.1)],
// LatLon drill downs
[LatLonDrillDown("bin-width", function (binWidth) {
  return binWidth >= 20;
}), //
LatLonDrillDown("bin-width", 10)], [LatLonDrillDown("bin-width", function () {
  return true;
}), //
LatLonDrillDown("bin-width", function (binWidth) {
  return binWidth / 10;
})],
// generic num-bins drill down
[[["binning-strategy", _schema_metadata.isAny, "num-bins", function () {
  return true;
}]], [["binning-strategy", _schema_metadata.isAny, "default"]]],
// generic bin-width drill down
[[["binning-strategy", _schema_metadata.isAny, "bin-width", function () {
  return true;
}]], [["binning-strategy", _schema_metadata.isAny, "bin-width", function (binWidth) {
  return binWidth / 10;
}]]]];

/**
 * Returns the next drill down for the current dimension objects
 */
function drillDownForDimensions(dimensions, metadata) {
  var table = metadata && tableForDimensions(dimensions, metadata);

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = DEFAULT_DRILL_DOWN_PROGRESSIONS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var drillProgression = _step.value;

      for (var index = 0; index < drillProgression.length - 1; index++) {
        var currentDrillBreakoutTemplates = drillProgression[index];
        var nextDrillBreakoutTemplates = drillProgression[index + 1];
        if (breakoutTemplatesMatchDimensions(currentDrillBreakoutTemplates, dimensions)) {
          var breakouts = breakoutsForBreakoutTemplates(nextDrillBreakoutTemplates, dimensions, table);
          if (breakouts) {
            return {
              breakouts: breakouts
            };
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return null;
}

// Returns true if the supplied dimension object matches the supplied breakout template.
function breakoutTemplateMatchesDimension(breakoutTemplate, dimension) {
  var breakout = columnToBreakout(dimension.column);
  if (Array.isArray(breakoutTemplate) !== Array.isArray(breakout)) {
    return false;
  }
  if (Array.isArray(breakoutTemplate)) {
    if (!breakoutTemplate[1](dimension.column)) {
      return false;
    }
    for (var i = 2; i < breakoutTemplate.length; i++) {
      if (typeof breakoutTemplate[i] === "function") {
        // $FlowFixMe
        if (!breakoutTemplate[i](breakout[i])) {
          return false;
        }
      } else {
        // $FlowFixMe
        if (breakoutTemplate[i] !== breakout[i]) {
          return false;
        }
      }
    }
    return true;
  } else {
    return breakoutTemplate(dimension.column);
  }
}

// Returns true if all breakout templates having a matching dimension object, but disregarding order
function breakoutTemplatesMatchDimensions(breakoutTemplates, dimensions) {
  dimensions = [].concat(_toConsumableArray(dimensions));
  return _underscore2.default.all(breakoutTemplates, function (breakoutTemplate) {
    var index = _underscore2.default.findIndex(dimensions, function (dimension) {
      return breakoutTemplateMatchesDimension(breakoutTemplate, dimension);
    });
    if (index >= 0) {
      dimensions.splice(index, 1);
      return true;
    } else {
      return false;
    }
  });
}

// Evaluates a breakout template, returning a completed breakout clause
function breakoutForBreakoutTemplate(breakoutTemplate, dimensions, table) {
  var fieldFilter = Array.isArray(breakoutTemplate) ? breakoutTemplate[1] : breakoutTemplate;
  var dimensionColumns = dimensions.map(function (d) {
    return d.column;
  });
  var field = _underscore2.default.find(dimensionColumns, fieldFilter) || _underscore2.default.find(table.fields, fieldFilter);
  if (!field) {
    return null;
  }
  var fieldRef = (0, _actions.getFieldRefFromColumn)(dimensions[0].column, field.id);
  if (Array.isArray(breakoutTemplate)) {
    var prevDimension = _underscore2.default.find(dimensions, function (dimension) {
      return breakoutTemplateMatchesDimension(breakoutTemplate, dimension);
    });
    var breakout = [breakoutTemplate[0], fieldRef];
    for (var i = 2; i < breakoutTemplate.length; i++) {
      var arg = breakoutTemplate[i];
      if (typeof arg === "function") {
        if (!prevDimension) {
          return null;
        }
        var prevBreakout = columnToBreakout(prevDimension.column);
        // $FlowFixMe
        breakout.push(arg(prevBreakout[i]));
      } else {
        breakout.push(arg);
      }
    }
    return breakout;
  } else {
    return fieldRef;
  }
}

// Evaluates all the breakout templates of a drill
function breakoutsForBreakoutTemplates(breakoutTemplates, dimensions, table) {
  var breakouts = [];
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = breakoutTemplates[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var breakoutTemplate = _step2.value;

      var breakout = breakoutForBreakoutTemplate(breakoutTemplate, dimensions, table);
      if (!breakout) {
        return null;
      }
      breakouts.push(breakout);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return breakouts;
}

// Guesses the breakout corresponding to the provided columm object
function columnToBreakout(column) {
  if (column.unit) {
    return ["datetime-field", column.id, column.unit];
  } else if (column.binning_info) {
    var binningStrategy = column.binning_info.binning_strategy;

    switch (binningStrategy) {
      case "bin-width":
        return ["binning-strategy", column.id, "bin-width", column.binning_info.bin_width];
      case "num-bins":
        return ["binning-strategy", column.id, "num-bins", column.binning_info.num_bins];
      default:
        return null;
    }
  } else {
    return column.id;
  }
}

// returns the table metadata for a dimension
function tableForDimensions(dimensions, metadata) {
  var fieldId = (0, _icepick.getIn)(dimensions, [0, "column", "id"]);
  var field = metadata.fields[fieldId];
  return field && field.table;
}

/***/ }),

/***/ 396:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _modes = __webpack_require__(234);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Mode = function () {
  function Mode(question, queryMode) {
    _classCallCheck(this, Mode);

    this._question = question;
    this._queryMode = queryMode;
  }

  _createClass(Mode, [{
    key: "queryMode",
    value: function queryMode() {
      return this._queryMode;
    }
  }, {
    key: "name",
    value: function name() {
      return this._queryMode.name;
    }
  }, {
    key: "actions",
    value: function actions(settings) {
      var _this = this;

      return _underscore2.default.flatten(this._queryMode.actions.map(function (actionCreator) {
        return actionCreator({ question: _this._question, settings: settings });
      }));
    }
  }, {
    key: "actionsForClick",
    value: function actionsForClick(clicked, settings) {
      var _this2 = this;

      return _underscore2.default.flatten(this._queryMode.drills.map(function (actionCreator) {
        return actionCreator({ question: _this2._question, settings: settings, clicked: clicked });
      }));
    }
  }], [{
    key: "forQuestion",
    value: function forQuestion(question) {
      // TODO Atte Keinänen 6/22/17: Move getMode here and refactor it after writing tests
      var card = question.card();
      var tableMetadata = question.tableMetadata();
      var queryMode = (0, _modes.getMode)(card, tableMetadata);

      if (queryMode) {
        return new Mode(question, queryMode);
      } else {
        return null;
      }
    }
  }]);

  return Mode;
}();

exports.default = Mode;

/***/ }),

/***/ 397:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ObjectDetailDrill = __webpack_require__(235);

var _ObjectDetailDrill2 = _interopRequireDefault(_ObjectDetailDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ObjectMode = {
  name: "object",
  actions: [],
  drills: [_ObjectDetailDrill2.default]
};

exports.default = ObjectMode;

/***/ }),

/***/ 398:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var _SummarizeBySegmentMetricAction = __webpack_require__(406);

var _SummarizeBySegmentMetricAction2 = _interopRequireDefault(_SummarizeBySegmentMetricAction);

var _CommonMetricsAction = __webpack_require__(434);

var _CommonMetricsAction2 = _interopRequireDefault(_CommonMetricsAction);

var _CountByTimeAction = __webpack_require__(435);

var _CountByTimeAction2 = _interopRequireDefault(_CountByTimeAction);

var _SummarizeColumnDrill = __webpack_require__(436);

var _SummarizeColumnDrill2 = _interopRequireDefault(_SummarizeColumnDrill);

var _SummarizeColumnByTimeDrill = __webpack_require__(437);

var _SummarizeColumnByTimeDrill2 = _interopRequireDefault(_SummarizeColumnByTimeDrill);

var _CountByColumnDrill = __webpack_require__(438);

var _CountByColumnDrill2 = _interopRequireDefault(_CountByColumnDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// import PlotSegmentField from "../actions/PlotSegmentField";

var SegmentMode = {
  name: "segment",
  actions: [].concat(_toConsumableArray(_actions.DEFAULT_ACTIONS), [_CommonMetricsAction2.default, _CountByTimeAction2.default, _SummarizeBySegmentMetricAction2.default]),
  drills: [].concat(_toConsumableArray(_drill.DEFAULT_DRILLS), [_SummarizeColumnDrill2.default, _SummarizeColumnByTimeDrill2.default, _CountByColumnDrill2.default])
};

exports.default = SegmentMode;

/***/ }),

/***/ 399:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View this as a table"], ["View this as a table"]);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question;

  if (_question.display() !== "table" && _question.display() !== "scalar") {
    return [{
      name: "underlying-data",
      title: (0, _c3po.t)(_templateObject),
      icon: "table",
      question: function question() {
        return _question.toUnderlyingData();
      }
    }];
  }
  return [];
};

/***/ }),

/***/ 400:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View the underlying ", " records"], ["View the underlying ", " records"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default) || query.isBareRows()) {
    return [];
  }
  return [{
    name: "underlying-records",
    title: _react2.default.createElement(
      "span",
      null,
      (0, _c3po.jt)(_templateObject, _react2.default.createElement(
        "span",
        { className: "text-dark" },
        query.table().display_name
      ))
    ),
    icon: "table2",
    question: function question() {
      return _question.toUnderlyingRecords();
    }
  }];
};

/***/ }),

/***/ 401:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Ascending"], ["Ascending"]),
    _templateObject2 = _taggedTemplateLiteral(["Descending"], ["Descending"]);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var question = _ref.question,
      clicked = _ref.clicked;

  var query = question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  if (!clicked || !clicked.column || clicked.value !== undefined || !clicked.column.source) {
    return [];
  }
  var column = clicked.column;


  var fieldRef = query.fieldReferenceForColumn(column);
  if (!fieldRef) {
    return [];
  }

  var _ref2 = query.sorts()[0] || [],
      _ref3 = _slicedToArray(_ref2, 2),
      sortFieldRef = _ref3[0],
      sortDirection = _ref3[1];

  var isAlreadySorted = sortFieldRef != null && _query2.default.isSameField(sortFieldRef, fieldRef);

  var actions = [];
  if (!isAlreadySorted || sortDirection === "descending" || sortDirection === "desc") {
    actions.push({
      name: "sort-ascending",
      section: "sort",
      title: (0, _c3po.t)(_templateObject),
      question: function question() {
        return query.replaceSort([fieldRef, "ascending"]).question();
      }
    });
  }
  if (!isAlreadySorted || sortDirection === "ascending" || sortDirection === "asc") {
    actions.push({
      name: "sort-descending",
      section: "sort",
      title: (0, _c3po.t)(_templateObject2),
      question: function question() {
        return query.replaceSort([fieldRef, "descending"]).question();
      }
    });
  }
  return actions;
};

/***/ }),

/***/ 402:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View this ", "'s ", ""], ["View this ", "'s ", ""]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _types = __webpack_require__(42);

var _formatting = __webpack_require__(8);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function getFiltersForColumn(column) {
  if ((0, _types.isa)(column.base_type, _types.TYPE.Number) || (0, _types.isa)(column.base_type, _types.TYPE.DateTime)) {
    return [{ name: "<", operator: "<" }, { name: "=", operator: "=" }, { name: "≠", operator: "!=" }, { name: ">", operator: ">" }];
  } else {
    return [{ name: "=", operator: "=" }, { name: "≠", operator: "!=" }];
  }
}

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default) || !clicked || !clicked.column || clicked.column.id == null || clicked.value == undefined) {
    return [];
  }

  var value = clicked.value,
      column = clicked.column;


  if ((0, _types.isPK)(column.special_type)) {
    return [];
  }
  if ((0, _types.isFK)(column.special_type)) {
    return [{
      name: "view-fks",
      section: "filter",
      title: _react2.default.createElement(
        "span",
        null,
        (0, _c3po.jt)(_templateObject, (0, _formatting.singularize)((0, _formatting.stripId)(column.display_name)), (0, _formatting.pluralize)(query.table().display_name))
      ),
      question: function question() {
        return _question.filter("=", column, value);
      }
    }];
  }

  var operators = getFiltersForColumn(column) || [];
  return operators.map(function (_ref2) {
    var name = _ref2.name,
        operator = _ref2.operator;
    return {
      name: operator,
      section: "filter",
      title: _react2.default.createElement(
        "span",
        { className: "h2" },
        name
      ),
      question: function question() {
        return _question.filter(operator, column, value);
      }
    };
  });
};

/***/ }),

/***/ 403:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View ", " ", ""], ["View ", " ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["these"], ["these"]),
    _templateObject3 = _taggedTemplateLiteral(["this"], ["this"]);

var _formatting = __webpack_require__(8);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  var dimensions = clicked && clicked.dimensions || [];
  if (!clicked || dimensions.length === 0) {
    return [];
  }

  // the metric value should be the number of rows that will be displayed
  var count = typeof clicked.value === "number" ? clicked.value : 2;

  return [{
    name: "underlying-records",
    section: "records",
    title: (0, _c3po.t)(_templateObject, (0, _formatting.inflect)((0, _c3po.t)(_templateObject2), count, (0, _c3po.t)(_templateObject3), (0, _c3po.t)(_templateObject2)), (0, _formatting.inflect)(query.table().display_name, count)),
    question: function question() {
      return _question.drillUnderlyingRecords(dimensions);
    }
  }];
};

/***/ }),

/***/ 404:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["X-ray ", " ", ""], ["X-ray ", " ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["these"], ["these"]),
    _templateObject3 = _taggedTemplateLiteral(["this"], ["this"]);

var _formatting = __webpack_require__(8);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var question = _ref.question,
      clicked = _ref.clicked;

  var query = question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  // questions with a breakout
  var dimensions = clicked && clicked.dimensions || [];
  if (!clicked || dimensions.length === 0) {
    return [];
  }

  // the metric value should be the number of rows that will be displayed
  var count = typeof clicked.value === "number" ? clicked.value : 2;

  return [{
    name: "exploratory-dashboard",
    section: "auto",
    icon: "bolt",
    title: (0, _c3po.t)(_templateObject, (0, _formatting.inflect)((0, _c3po.t)(_templateObject2), count, (0, _c3po.t)(_templateObject3), (0, _c3po.t)(_templateObject2)), (0, _formatting.inflect)(query.table().display_name, count)),
    url: function url() {
      var filters = query.clearFilters() // clear existing filters so we don't duplicate them
      .question().drillUnderlyingRecords(dimensions).query().filters();
      return question.getAutomaticDashboardUrl(filters);
    }
  }];
};

/***/ }),

/***/ 405:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Zoom in"], ["Zoom in"]);

var _actions = __webpack_require__(61);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked,
      settings = _ref.settings;

  var dimensions = clicked && clicked.dimensions || [];
  var drilldown = (0, _actions.drillDownForDimensions)(dimensions, _question.metadata());
  if (!drilldown) {
    return [];
  }

  return [{
    name: "timeseries-zoom",
    section: "zoom",
    title: (0, _c3po.t)(_templateObject),
    question: function question() {
      return _question.pivot(drilldown.breakouts, dimensions);
    }
  }];
};

/***/ }),

/***/ 406:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Summarize this segment"], ["Summarize this segment"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _AggregationPopover = __webpack_require__(407);

var _AggregationPopover2 = _interopRequireDefault(_AggregationPopover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var omittedAggregations = ["rows", "cum_sum", "cum_count", "stddev"];
var getAggregationOptionsForSummarize = function getAggregationOptionsForSummarize(query) {
  return query.table().aggregations().filter(function (aggregation) {
    return !omittedAggregations.includes(aggregation.short);
  });
};

exports.default = function (_ref) {
  var question = _ref.question;

  var query = question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  var tableMetadata = query.table();

  return [{
    name: "summarize",
    title: (0, _c3po.t)(_templateObject),
    icon: "sum",
    // eslint-disable-next-line react/display-name
    popover: function popover(_ref2) {
      var onChangeCardAndRun = _ref2.onChangeCardAndRun,
          onClose = _ref2.onClose;
      return _react2.default.createElement(_AggregationPopover2.default, {
        query: query,
        tableMetadata: tableMetadata,
        customFields: query.expressions(),
        availableAggregations: getAggregationOptionsForSummarize(query),
        onCommitAggregation: function onCommitAggregation(aggregation) {
          onChangeCardAndRun({
            nextCard: question.summarize(aggregation).card()
          });
          onClose && onClose();
        },
        onClose: onClose,
        showOnlyProvidedAggregations: true
      });
    }
  }];
};

/***/ }),

/***/ 407:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _AggregationPopover = __webpack_require__(236);

var _AggregationPopover2 = _interopRequireDefault(_AggregationPopover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AggregationPopover = function AggregationPopover(props) {
  return _react2.default.createElement(_AggregationPopover2.default, _extends({}, props, { aggregation: props.aggregation || [] }));
};

AggregationPopover.displayName = "AggregationPopover";
exports.default = AggregationPopover;

/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactTransitionGroup = __webpack_require__(194);

var _OnClickOutsideWrapper = __webpack_require__(130);

var _OnClickOutsideWrapper2 = _interopRequireDefault(_OnClickOutsideWrapper);

var _tether = __webpack_require__(690);

var _tether2 = _interopRequireDefault(_tether);

var _dom = __webpack_require__(28);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

__webpack_require__(384);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var POPOVER_TRANSITION_ENTER = 100;
var POPOVER_TRANSITION_LEAVE = 100;

// space we should leave berween page edge and popover edge
var PAGE_PADDING = 10;
// Popover padding and border
var POPOVER_BODY_PADDING = 2;

var Popover = (_temp = _class = function (_Component) {
  _inherits(Popover, _Component);

  function Popover(props, context) {
    _classCallCheck(this, Popover);

    var _this = _possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this, props, context));

    _this.state = {
      width: null,
      height: null
    };

    _this.handleDismissal = _this.handleDismissal.bind(_this);
    return _this;
  }

  _createClass(Popover, [{
    key: "_getPopoverElement",
    value: function _getPopoverElement() {
      var _this2 = this;

      if (!this._popoverElement) {
        this._popoverElement = document.createElement("span");
        this._popoverElement.className = "PopoverContainer";
        document.body.appendChild(this._popoverElement);
        this._timer = setInterval(function () {
          var _popoverElement$getBo = _this2._popoverElement.getBoundingClientRect(),
              width = _popoverElement$getBo.width,
              height = _popoverElement$getBo.height;

          if (_this2.state.width !== width || _this2.state.height !== height) {
            _this2.setState({ width: width, height: height });
          }
        }, 100);
      }
      return this._popoverElement;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this._renderPopover(this.props.isOpen);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this._renderPopover(this.props.isOpen);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this3 = this;

      if (this._tether) {
        this._tether.destroy();
        delete this._tether;
      }
      if (this._popoverElement) {
        this._renderPopover(false);
        setTimeout(function () {
          _reactDom2.default.unmountComponentAtNode(_this3._popoverElement);
          if (_this3._popoverElement.parentNode) {
            _this3._popoverElement.parentNode.removeChild(_this3._popoverElement);
          }
          clearInterval(_this3._timer);
          delete _this3._popoverElement, _this3._timer;
        }, POPOVER_TRANSITION_LEAVE);
      }
    }
  }, {
    key: "handleDismissal",
    value: function handleDismissal() {
      if (this.props.onClose) {
        var _props;

        (_props = this.props).onClose.apply(_props, arguments);
      }
    }
  }, {
    key: "_popoverComponent",
    value: function _popoverComponent() {
      var childProps = {
        maxHeight: this._getMaxHeight()
      };
      return _react2.default.createElement(
        _OnClickOutsideWrapper2.default,
        {
          handleDismissal: this.handleDismissal,
          dismissOnEscape: this.props.dismissOnEscape,
          dismissOnClickOutside: this.props.dismissOnClickOutside
        },
        _react2.default.createElement(
          "div",
          {
            id: this.props.id,
            className: (0, _classnames2.default)("PopoverBody", {
              "PopoverBody--withArrow": this.props.hasArrow,
              "PopoverBody--autoWidth": this.props.autoWidth
            },
            // TODO kdoh 10/16/2017 we should eventually remove this
            this.props.className),
            style: this.props.style
          },
          typeof this.props.children === "function" ? this.props.children(childProps) : _react2.default.Children.count(this.props.children) === 1 ? _react2.default.cloneElement(_react2.default.Children.only(this.props.children), childProps) : this.props.children
        )
      );
    }
  }, {
    key: "_setTetherOptions",
    value: function _setTetherOptions(tetherOptions, o) {
      if (o) {
        tetherOptions = _extends({}, tetherOptions, {
          attachment: o.attachmentY + " " + o.attachmentX,
          targetAttachment: o.targetAttachmentY + " " + o.targetAttachmentX,
          targetOffset: o.offsetY + "px " + o.offsetX + "px"
        });
      }
      if (this._tether) {
        this._tether.setOptions(tetherOptions);
      } else {
        this._tether = new _tether2.default(tetherOptions);
      }
    }
  }, {
    key: "_getMaxHeight",
    value: function _getMaxHeight() {
      var _this4 = this;

      var _getTarget$getBoundin = this._getTarget().getBoundingClientRect(),
          top = _getTarget$getBoundin.top,
          bottom = _getTarget$getBoundin.bottom;

      var attachments = void 0;
      if (this.props.pinInitialAttachment && this._best) {
        // if we have a pinned attachment only use that
        attachments = [this._best.attachmentY];
      } else {
        // otherwise use the verticalAttachments prop
        attachments = this.props.verticalAttachments;
      }

      var availableHeights = attachments.map(function (attachmentY) {
        return attachmentY === "top" ? window.innerHeight - bottom - _this4.props.targetOffsetY - PAGE_PADDING : attachmentY === "bottom" ? top - _this4.props.targetOffsetY - PAGE_PADDING : 0;
      });

      // get the largest available height, then subtract .PopoverBody's border and padding
      return Math.max.apply(Math, _toConsumableArray(availableHeights)) - POPOVER_BODY_PADDING;
    }
  }, {
    key: "_getBestAttachmentOptions",
    value: function _getBestAttachmentOptions(tetherOptions, options, attachments, offscreenProps, getAttachmentOptions) {
      var _this5 = this;

      var best = _extends({}, options);
      var bestOffScreen = -Infinity;
      // try each attachment until one is entirely on screen, or pick the least bad one
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        var _loop = function _loop() {
          var attachment = _step.value;

          // compute the options for this attachment position then set it
          var options = getAttachmentOptions(best, attachment);
          _this5._setTetherOptions(tetherOptions, options);

          // get bounds within *document*
          var elementRect = _tether2.default.Utils.getBounds(tetherOptions.element);

          // get bounds within *window*
          var doc = document.documentElement;
          var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
          var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
          elementRect.top -= top;
          elementRect.bottom += top;
          elementRect.left -= left;
          elementRect.right += left;

          // test to see how much of the popover is off-screen
          var offScreen = offscreenProps.map(function (prop) {
            return Math.min(elementRect[prop], 0);
          }).reduce(function (a, b) {
            return a + b;
          });
          // if none then we're done, otherwise check to see if it's the best option so far
          if (offScreen === 0) {
            best = options;
            return "break";
          } else if (offScreen > bestOffScreen) {
            best = options;
            bestOffScreen = offScreen;
          }
        };

        for (var _iterator = attachments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ret = _loop();

          if (_ret === "break") break;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return best;
    }
  }, {
    key: "_getTarget",
    value: function _getTarget() {
      var target = void 0;
      if (this.props.targetEvent) {
        // create a fake element at the event coordinates
        target = document.getElementById("popover-event-target");
        if (!target) {
          target = document.createElement("div");
          target.id = "popover-event-target";
          document.body.appendChild(target);
        }
        target.style.left = this.props.targetEvent.clientX - 3 + "px";
        target.style.top = this.props.targetEvent.clientY - 3 + "px";
      } else if (this.props.target) {
        if (typeof this.props.target === "function") {
          target = _reactDom2.default.findDOMNode(this.props.target());
        } else {
          target = _reactDom2.default.findDOMNode(this.props.target);
        }
      }
      if (target == null) {
        target = _reactDom2.default.findDOMNode(this).parentNode;
      }
      return target;
    }
  }, {
    key: "_renderPopover",
    value: function _renderPopover(isOpen) {
      var _this6 = this;

      // popover is open, lets do this!
      var popoverElement = this._getPopoverElement();
      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.createElement(
        _reactTransitionGroup.CSSTransitionGroup,
        {
          transitionName: "Popover",
          transitionAppear: true,
          transitionEnter: true,
          transitionLeave: true,
          transitionAppearTimeout: POPOVER_TRANSITION_ENTER,
          transitionEnterTimeout: POPOVER_TRANSITION_ENTER,
          transitionLeaveTimeout: POPOVER_TRANSITION_LEAVE
        },
        isOpen ? this._popoverComponent() : null
      ), popoverElement);

      if (isOpen) {
        var tetherOptions = {
          element: popoverElement,
          target: this._getTarget()
        };

        if (this.props.tetherOptions) {
          this._setTetherOptions(_extends({}, tetherOptions, this.props.tetherOptions));
        } else {
          if (!this._best || !this.props.pinInitialAttachment) {
            var best = {
              attachmentX: "center",
              attachmentY: "top",
              targetAttachmentX: "center",
              targetAttachmentY: "bottom",
              offsetX: 0,
              offsetY: 0
            };

            // horizontal
            best = this._getBestAttachmentOptions(tetherOptions, best, this.props.horizontalAttachments, ["left", "right"], function (best, attachmentX) {
              return _extends({}, best, {
                attachmentX: attachmentX,
                targetAttachmentX: _this6.props.alignHorizontalEdge ? attachmentX : "center",
                offsetX: {
                  center: 0,
                  left: -_this6.props.targetOffsetX,
                  right: _this6.props.targetOffsetX
                }[attachmentX]
              });
            });

            // vertical
            best = this._getBestAttachmentOptions(tetherOptions, best, this.props.verticalAttachments, ["top", "bottom"], function (best, attachmentY) {
              return _extends({}, best, {
                attachmentY: attachmentY,
                targetAttachmentY: (_this6.props.alignVerticalEdge ? attachmentY === "bottom" : attachmentY === "top") ? "bottom" : "top",
                offsetY: {
                  top: _this6.props.targetOffsetY,
                  bottom: -_this6.props.targetOffsetY
                }[attachmentY]
              });
            });

            this._best = best;
          }

          // finally set the best options
          this._setTetherOptions(tetherOptions, this._best);
        }

        if (this.props.sizeToFit) {
          var body = tetherOptions.element.querySelector(".PopoverBody");
          if (this._tether.attachment.top === "top") {
            if ((0, _dom.constrainToScreen)(body, "bottom", PAGE_PADDING)) {
              body.classList.add("scroll-y");
              body.classList.add("scroll-show");
            }
          } else if (this._tether.attachment.top === "bottom") {
            if ((0, _dom.constrainToScreen)(body, "top", PAGE_PADDING)) {
              body.classList.add("scroll-y");
              body.classList.add("scroll-show");
            }
          }
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement("span", { className: "hide" });
    }
  }]);

  return Popover;
}(_react.Component), _class.propTypes = {
  id: _propTypes2.default.string,
  isOpen: _propTypes2.default.bool,
  hasArrow: _propTypes2.default.bool,
  // target: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  tetherOptions: _propTypes2.default.object,
  // used to prevent popovers from being taller than the screen
  sizeToFit: _propTypes2.default.bool,
  pinInitialAttachment: _propTypes2.default.bool,
  // most popovers have a max-width to prevent them from being overly wide
  // in the case their content is of an unexpected length
  // noMaxWidth allows that to be overridden in cases where popovers should
  // expand  alongside their contents contents
  autoWidth: _propTypes2.default.bool,
  // prioritized vertical attachments points on the popover
  verticalAttachments: _propTypes2.default.array,
  // prioritized horizontal attachment points on the popover
  horizontalAttachments: _propTypes2.default.array,
  // by default we align the top edge of the target to the bottom edge of the
  // popover or vice versa. This causes the same edges to be aligned
  alignVerticalEdge: _propTypes2.default.bool,
  // by default we align the popover to the center of the target. This
  // causes the edges to be aligned
  alignHorizontalEdge: _propTypes2.default.bool
}, _class.defaultProps = {
  isOpen: true,
  hasArrow: true,
  verticalAttachments: ["top", "bottom"],
  horizontalAttachments: ["center", "left", "right"],
  alignVerticalEdge: false,
  alignHorizontalEdge: false,
  targetOffsetX: 24,
  targetOffsetY: 5,
  sizeToFit: false,
  autoWidth: false
}, _temp);
Popover.displayName = "Popover";
exports.default = Popover;

/***/ }),

/***/ 412:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Matches"], ["Matches"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _FieldName = __webpack_require__(196);

var _FieldName2 = _interopRequireDefault(_FieldName);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _FilterPopover = __webpack_require__(332);

var _FilterPopover2 = _interopRequireDefault(_FilterPopover);

var _Value = __webpack_require__(250);

var _Value2 = _interopRequireDefault(_Value);

var _query_time = __webpack_require__(92);

var _filter3 = __webpack_require__(91);

var _schema_metadata = __webpack_require__(10);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterWidget = (_temp = _class = function (_Component) {
  _inherits(FilterWidget, _Component);

  function FilterWidget(props) {
    _classCallCheck(this, FilterWidget);

    var _this = _possibleConstructorReturn(this, (FilterWidget.__proto__ || Object.getPrototypeOf(FilterWidget)).call(this, props));

    _this.open = function () {
      _this.setState({ isOpen: true });
    };

    _this.close = function () {
      _this.setState({ isOpen: false });
    };

    _this.state = {
      isOpen: _this.props.filter[0] == undefined
    };
    return _this;
  }

  _createClass(FilterWidget, [{
    key: "renderOperatorFilter",
    value: function renderOperatorFilter() {
      var _props = this.props,
          query = _props.query,
          filter = _props.filter,
          maxDisplayValues = _props.maxDisplayValues;

      var _filter = _slicedToArray(filter, 2),
          op = _filter[0],
          field = _filter[1];
      // $FlowFixMe


      var values = (0, _filter3.hasFilterOptions)(filter) ? filter.slice(2, -1) : filter.slice(2);

      var dimension = query.parseFieldReference(field);
      if (!dimension) {
        return null;
      }

      var operator = dimension.operator(op);

      var formattedValues = void 0;
      // $FlowFixMe: not understanding maxDisplayValues is provided by defaultProps
      if (operator && operator.multi && values.length > maxDisplayValues) {
        formattedValues = [values.length + " selections"];
      } else if (dimension.field().isDate() && !dimension.field().isTime()) {
        formattedValues = (0, _query_time.generateTimeFilterValuesDescriptions)(filter);
      } else {
        var valuesWithOptions = values.map(function (value, index) {
          return [value, (0, _schema_metadata.getFilterArgumentFormatOptions)(operator, index)];
        });
        formattedValues = valuesWithOptions.filter(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              value = _ref2[0],
              options = _ref2[1];

          return value !== undefined && !options.hide;
        }).map(function (_ref3, index) {
          var _ref4 = _slicedToArray(_ref3, 2),
              value = _ref4[0],
              options = _ref4[1];

          return _react2.default.createElement(_Value2.default, _extends({
            key: index,
            value: value,
            column: dimension.field(),
            remap: true
          }, options));
        });
      }

      return _react2.default.createElement(
        "div",
        { className: "flex flex-column justify-center", onClick: this.open },
        _react2.default.createElement(
          "div",
          {
            className: "flex align-center",
            style: {
              padding: "0.5em",
              paddingTop: "0.3em",
              paddingBottom: "0.3em",
              paddingLeft: 0
            }
          },
          _react2.default.createElement(_FieldName2.default, {
            className: "Filter-section Filter-section-field",
            field: field,
            tableMetadata: query.table()
          }),
          _react2.default.createElement(
            "div",
            { className: "Filter-section Filter-section-operator" },
            "\xA0",
            _react2.default.createElement(
              "a",
              { className: "QueryOption flex align-center" },
              operator && operator.moreVerboseName
            )
          )
        ),
        formattedValues.length > 0 && _react2.default.createElement(
          "div",
          { className: "flex align-center flex-wrap" },
          formattedValues.map(function (formattedValue, valueIndex) {
            return _react2.default.createElement(
              "div",
              {
                key: valueIndex,
                className: "Filter-section Filter-section-value"
              },
              _react2.default.createElement(
                "span",
                { className: "QueryOption" },
                formattedValue
              )
            );
          })
        )
      );
    }
  }, {
    key: "renderSegmentFilter",
    value: function renderSegmentFilter() {
      var _props2 = this.props,
          query = _props2.query,
          filter = _props2.filter;

      var segment = _underscore2.default.find(query.table().segments, function (s) {
        return s.id === filter[1];
      });
      return _react2.default.createElement(
        "div",
        { onClick: this.open },
        _react2.default.createElement(
          "div",
          {
            className: "flex align-center",
            style: {
              padding: "0.5em",
              paddingTop: "0.3em",
              paddingBottom: "0.3em",
              paddingLeft: 0
            }
          },
          _react2.default.createElement(
            "div",
            { className: "Filter-section Filter-section-field" },
            _react2.default.createElement(
              "span",
              { className: "QueryOption" },
              (0, _c3po.t)(_templateObject)
            )
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "flex align-center flex-wrap" },
          _react2.default.createElement(
            "div",
            { className: "Filter-section Filter-section-value" },
            _react2.default.createElement(
              "span",
              { className: "QueryOption" },
              segment && segment.name
            )
          )
        )
      );
    }
  }, {
    key: "renderPopover",
    value: function renderPopover() {
      var _this2 = this;

      if (this.state.isOpen) {
        var _props3 = this.props,
            _query = _props3.query,
            _filter2 = _props3.filter;

        return _react2.default.createElement(
          _Popover2.default,
          {
            id: "FilterPopover",
            ref: "filterPopover",
            className: "FilterPopover",
            isInitiallyOpen: this.props.filter[1] === null,
            onClose: this.close,
            horizontalAttachments: ["left", "center"],
            autoWidth: true
          },
          _react2.default.createElement(_FilterPopover2.default, {
            query: _query,
            filter: _filter2,
            onCommitFilter: function onCommitFilter(filter) {
              return _this2.props.updateFilter && _this2.props.updateFilter(_this2.props.index, filter);
            },
            onClose: this.close
          })
        );
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props4 = this.props,
          filter = _props4.filter,
          index = _props4.index,
          removeFilter = _props4.removeFilter;

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("Query-filter p1 pl2", { selected: this.state.isOpen })
        },
        _react2.default.createElement(
          "div",
          { className: "flex justify-center" },
          filter[0] === "SEGMENT" ? this.renderSegmentFilter() : this.renderOperatorFilter(),
          this.renderPopover()
        ),
        removeFilter && _react2.default.createElement(
          "a",
          {
            className: "text-grey-2 no-decoration px1 flex align-center",
            onClick: function onClick() {
              return removeFilter(index);
            }
          },
          _react2.default.createElement(_Icon2.default, { name: "close", size: 14 })
        )
      );
    }
  }]);

  return FilterWidget;
}(_react.Component), _class.defaultProps = {
  maxDisplayValues: 1
}, _temp);
FilterWidget.displayName = "FilterWidget";
exports.default = FilterWidget;

/***/ }),

/***/ 413:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Select = __webpack_require__(33);

var _Select2 = _interopRequireDefault(_Select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OperatorSelector = (_temp = _class = function (_Component) {
  _inherits(OperatorSelector, _Component);

  function OperatorSelector() {
    _classCallCheck(this, OperatorSelector);

    return _possibleConstructorReturn(this, (OperatorSelector.__proto__ || Object.getPrototypeOf(OperatorSelector)).apply(this, arguments));
  }

  _createClass(OperatorSelector, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          operator = _props.operator,
          operators = _props.operators,
          onOperatorChange = _props.onOperatorChange;


      return _react2.default.createElement(
        _Select2.default,
        {
          value: operator,
          onChange: function onChange(e) {
            return onOperatorChange(e.target.value);
          },
          className: "border-medium"
        },
        operators.map(function (o) {
          return _react2.default.createElement(
            _Select.Option,
            { key: o.name, value: o.name },
            o.verboseName
          );
        })
      );
    }
  }]);

  return OperatorSelector;
}(_react.Component), _class.propTypes = {
  operator: _propTypes2.default.string,
  operators: _propTypes2.default.array.isRequired,
  onOperatorChange: _propTypes2.default.func.isRequired
}, _temp);
OperatorSelector.displayName = "OperatorSelector";
exports.default = OperatorSelector;

/***/ }),

/***/ 415:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 416:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Hide calendar"], ["Hide calendar"]),
    _templateObject2 = _taggedTemplateLiteral(["Show calendar"], ["Show calendar"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _Calendar = __webpack_require__(138);

var _Calendar2 = _interopRequireDefault(_Calendar);

var _Input = __webpack_require__(67);

var _Input2 = _interopRequireDefault(_Input);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _ExpandingContent = __webpack_require__(418);

var _ExpandingContent2 = _interopRequireDefault(_ExpandingContent);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _HoursMinutesInput = __webpack_require__(244);

var _HoursMinutesInput2 = _interopRequireDefault(_HoursMinutesInput);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DATE_FORMAT = "YYYY-MM-DD";
var DATE_TIME_FORMAT = "YYYY-MM-DDTHH:mm:ss";

var SpecificDatePicker = (_temp = _class = function (_Component) {
  _inherits(SpecificDatePicker, _Component);

  function SpecificDatePicker(props) {
    _classCallCheck(this, SpecificDatePicker);

    var _this = _possibleConstructorReturn(this, (SpecificDatePicker.__proto__ || Object.getPrototypeOf(SpecificDatePicker)).call(this, props));

    _this.onChange = function (date, hours, minutes) {
      var m = (0, _moment2.default)(date);
      if (!m.isValid()) {
        _this.props.onChange(null);
      }

      var hasTime = false;
      if (hours != null) {
        m.hours(hours);
        hasTime = true;
      }
      if (minutes != null) {
        m.minutes(minutes);
        hasTime = true;
      }

      if (hasTime) {
        _this.props.onChange(m.format(DATE_TIME_FORMAT));
      } else {
        _this.props.onChange(m.format(DATE_FORMAT));
      }
    };

    _this.state = {
      showCalendar: true
    };
    return _this;
  }

  _createClass(SpecificDatePicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          value = _props.value,
          calendar = _props.calendar,
          hideTimeSelectors = _props.hideTimeSelectors;
      var showCalendar = this.state.showCalendar;


      var date = void 0,
          hours = void 0,
          minutes = void 0;
      if ((0, _moment2.default)(value, DATE_TIME_FORMAT, true).isValid()) {
        date = (0, _moment2.default)(value, DATE_TIME_FORMAT, true);
        hours = date.hours();
        minutes = date.minutes();
        date.startOf("day");
      } else if ((0, _moment2.default)(value, DATE_FORMAT, true).isValid()) {
        date = (0, _moment2.default)(value, DATE_FORMAT, true);
      }

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "div",
          { className: "flex align-center mb1" },
          _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)("border-top border-bottom full border-left", {
                "border-right": !calendar
              })
            },
            _react2.default.createElement(_Input2.default, {
              placeholder: (0, _moment2.default)().format("MM/DD/YYYY"),
              className: "borderless full p2 h3",
              style: {
                outline: "none"
              },
              value: date ? date.format("MM/DD/YYYY") : "",
              onBlurChange: function onBlurChange(_ref) {
                var value = _ref.target.value;

                var date = (0, _moment2.default)(value, "MM/DD/YYYY");
                if (date.isValid()) {
                  _this2.onChange(date, hours, minutes);
                } else {
                  _this2.onChange(null);
                }
              },
              ref: "value"
            })
          ),
          calendar && _react2.default.createElement(
            "div",
            { className: "border-right border-bottom border-top p2" },
            _react2.default.createElement(_Tooltip2.default, {
              tooltip: showCalendar ? (0, _c3po.t)(_templateObject) : (0, _c3po.t)(_templateObject2),
              children: _react2.default.createElement(_Icon2.default, {
                className: "text-purple-hover cursor-pointer",
                name: "calendar",
                onClick: function onClick() {
                  return _this2.setState({ showCalendar: !_this2.state.showCalendar });
                }
              })
            })
          )
        ),
        calendar && _react2.default.createElement(
          _ExpandingContent2.default,
          { open: showCalendar },
          _react2.default.createElement(_Calendar2.default, {
            selected: date,
            initial: date || (0, _moment2.default)(),
            onChange: function onChange(value) {
              return _this2.onChange(value, hours, minutes);
            },
            isRangePicker: false
          })
        ),
        !hideTimeSelectors && _react2.default.createElement(
          "div",
          { className: (0, _classnames2.default)({ py2: calendar }, { mb3: !calendar }) },
          hours == null || minutes == null ? _react2.default.createElement(
            "div",
            {
              className: "text-purple-hover cursor-pointer flex align-center",
              onClick: function onClick() {
                return _this2.onChange(date, 12, 30);
              }
            },
            _react2.default.createElement(_Icon2.default, { className: "mr1", name: "clock" }),
            "Add a time"
          ) : _react2.default.createElement(_HoursMinutesInput2.default, {
            onClear: function onClear() {
              return _this2.onChange(date, null, null);
            },
            hours: hours,
            minutes: minutes,
            onChangeHours: function onChangeHours(hours) {
              return _this2.onChange(date, hours, minutes);
            },
            onChangeMinutes: function onChangeMinutes(minutes) {
              return _this2.onChange(date, hours, minutes);
            }
          })
        )
      );
    }
  }]);

  return SpecificDatePicker;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.string,
  onChange: _propTypes2.default.func.isRequired
}, _temp);
SpecificDatePicker.displayName = "SpecificDatePicker";
exports.default = SpecificDatePicker;

/***/ }),

/***/ 417:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 418:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ExpandingContent = function (_Component) {
  _inherits(ExpandingContent, _Component);

  function ExpandingContent() {
    _classCallCheck(this, ExpandingContent);

    var _this = _possibleConstructorReturn(this, (ExpandingContent.__proto__ || Object.getPrototypeOf(ExpandingContent)).call(this));

    _this.state = { open: false };
    return _this;
  }

  _createClass(ExpandingContent, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          open = _props.open;

      return _react2.default.createElement(
        "div",
        {
          style: {
            maxHeight: open ? "none" : 0,
            overflow: "hidden",
            transition: "max-height 0.3s ease"
          }
        },
        children
      );
    }
  }]);

  return ExpandingContent;
}(_react.Component);

ExpandingContent.displayName = "ExpandingContent";
exports.default = ExpandingContent;

/***/ }),

/***/ 419:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DATE_PERIODS = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _NumericInput = __webpack_require__(245);

var _NumericInput2 = _interopRequireDefault(_NumericInput);

var _DateUnitSelector = __webpack_require__(246);

var _DateUnitSelector2 = _interopRequireDefault(_DateUnitSelector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DATE_PERIODS = exports.DATE_PERIODS = ["day", "week", "month", "year"];

var TIME_PERIODS = ["minute", "hour"];

var ALL_PERIODS = DATE_PERIODS.concat(TIME_PERIODS);

var RelativeDatePicker = (_temp2 = _class = function (_Component) {
  _inherits(RelativeDatePicker, _Component);

  function RelativeDatePicker() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RelativeDatePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RelativeDatePicker.__proto__ || Object.getPrototypeOf(RelativeDatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      showUnits: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(RelativeDatePicker, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          _props$filter = _slicedToArray(_props.filter, 4),
          op = _props$filter[0],
          field = _props$filter[1],
          intervals = _props$filter[2],
          unit = _props$filter[3],
          onFilterChange = _props.onFilterChange,
          formatter = _props.formatter;

      return _react2.default.createElement(
        "div",
        { className: "flex-full mb2 flex align-center" },
        _react2.default.createElement(_NumericInput2.default, {
          className: "mr2 input border-purple text-right",
          style: {
            width: 65,
            // needed to match Select's AdminSelect classes :-/
            fontSize: 14,
            fontWeight: 700,
            padding: 8
          },
          "data-ui-tag": "relative-date-input",
          value: typeof intervals === "number" ? Math.abs(intervals) : intervals,
          onChange: function onChange(value) {
            return onFilterChange([op, field, formatter(value), unit]);
          },
          placeholder: "30"
        }),
        _react2.default.createElement(
          "div",
          { className: "flex-full mr2" },
          _react2.default.createElement(_DateUnitSelector2.default, {
            open: this.state.showUnits,
            value: unit,
            onChange: function onChange(value) {
              onFilterChange([op, field, intervals, value]);
              _this2.setState({ showUnits: false });
            },
            togglePicker: function togglePicker() {
              return _this2.setState({ showUnits: !_this2.state.showUnits });
            },
            intervals: intervals,
            formatter: formatter,
            periods: this.props.hideTimeSelectors ? DATE_PERIODS : ALL_PERIODS
          })
        )
      );
    }
  }]);

  return RelativeDatePicker;
}(_react.Component), _class.defaultProps = {
  formatter: function formatter(value) {
    return value;
  }
}, _temp2);
RelativeDatePicker.displayName = "RelativeDatePicker";
exports.default = RelativeDatePicker;

/***/ }),

/***/ 42:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TYPE = undefined;
exports.isa = isa;
exports.isPK = isPK;
exports.isFK = isFK;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PARENTS = _settings2.default.get("types");

/// Basically exactly the same as Clojure's isa?
/// Recurses through the type hierarchy until it can give you an answer.
/// isa(TYPE.BigInteger, TYPE.Number) -> true
/// isa(TYPE.Text, TYPE.Boolean) -> false
function isa(child, ancestor) {
  if (!child || !ancestor) return false;

  if (child === ancestor) return true;

  var parents = PARENTS[child];
  if (!parents) {
    if (child !== "type/*") console.error("Invalid type:", child); // the base type is the only type with no parents, so anything else that gets here is invalid
    return false;
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = parents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var parent = _step.value;

      if (isa(parent, ancestor)) return true;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}

// build a pretty sweet dictionary of top-level types, so people can do TYPE.Latitude instead of "type/Latitude" and get error messages / etc.
// this should also make it easier to keep track of things when we tweak the type hierarchy
var TYPE = exports.TYPE = {};
var _iteratorNormalCompletion2 = true;
var _didIteratorError2 = false;
var _iteratorError2 = undefined;

try {
  for (var _iterator2 = _underscore2.default.keys(PARENTS)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
    var type = _step2.value;

    var key = type.substring(5); // strip off "type/"
    TYPE[key] = type;
  }

  // convenience functions since these operations are super-common
  // this will also make it easier to tweak how these checks work in the future,
  // e.g. when we add an `is_pk` column and eliminate the PK special type we can just look for places that use isPK
} catch (err) {
  _didIteratorError2 = true;
  _iteratorError2 = err;
} finally {
  try {
    if (!_iteratorNormalCompletion2 && _iterator2.return) {
      _iterator2.return();
    }
  } finally {
    if (_didIteratorError2) {
      throw _iteratorError2;
    }
  }
}

function isPK(type) {
  return isa(type, TYPE.PK);
}

function isFK(type) {
  return isa(type, TYPE.FK);
}

/***/ }),

/***/ 420:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Select = __webpack_require__(33);

var _Select2 = _interopRequireDefault(_Select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DateOperatorSelector = function (_Component) {
  _inherits(DateOperatorSelector, _Component);

  function DateOperatorSelector() {
    _classCallCheck(this, DateOperatorSelector);

    return _possibleConstructorReturn(this, (DateOperatorSelector.__proto__ || Object.getPrototypeOf(DateOperatorSelector)).apply(this, arguments));
  }

  _createClass(DateOperatorSelector, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          operator = _props.operator,
          operators = _props.operators,
          onOperatorChange = _props.onOperatorChange;


      return _react2.default.createElement(
        "div",
        { className: "mx2 mb2 relative z3", style: { minWidth: 100 } },
        _react2.default.createElement(
          _Select2.default,
          {
            value: _underscore2.default.findWhere(operators, { name: operator }),
            onChange: function onChange(e) {
              return onOperatorChange(e.target.value);
            },
            width: 150,
            compact: true
          },
          operators.map(function (operator) {
            return _react2.default.createElement(
              _Select.Option,
              { key: operator.name, value: operator },
              operator.displayName
            );
          })
        )
      );
    }
  }]);

  return DateOperatorSelector;
}(_react.Component);

DateOperatorSelector.displayName = "DateOperatorSelector";
exports.default = DateOperatorSelector;

/***/ }),

/***/ 421:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TIME_OPERATORS = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Before"], ["Before"]),
    _templateObject2 = _taggedTemplateLiteral(["After"], ["After"]),
    _templateObject3 = _taggedTemplateLiteral(["Between"], ["Between"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _DatePicker = __webpack_require__(137);

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _HoursMinutesInput = __webpack_require__(244);

var _HoursMinutesInput2 = _interopRequireDefault(_HoursMinutesInput);

var _util = __webpack_require__(27);

var _time = __webpack_require__(73);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var TimeInput = function TimeInput(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange;

  var time = (0, _time.parseTime)(value);
  return _react2.default.createElement(_HoursMinutesInput2.default, {
    hours: time.hour(),
    minutes: time.minute(),
    onChangeHours: function onChangeHours(hours) {
      return onChange(time.hour(hours).format("HH:mm:00.000"));
    },
    onChangeMinutes: function onChangeMinutes(minutes) {
      return onChange(time.minute(minutes).format("HH:mm:00.000"));
    }
  });
};

TimeInput.displayName = "TimeInput";
var SingleTimePicker = function SingleTimePicker(_ref2) {
  var filter = _ref2.filter,
      onFilterChange = _ref2.onFilterChange;
  return _react2.default.createElement(
    "div",
    { className: "mx2 mb2" },
    _react2.default.createElement(TimeInput, {
      value: getTime(filter[2]),
      onChange: function onChange(time) {
        return onFilterChange([filter[0], filter[1], time]);
      }
    })
  );
};

SingleTimePicker.displayName = "SingleTimePicker";
SingleTimePicker.horizontalLayout = true;

var MultiTimePicker = function MultiTimePicker(_ref3) {
  var filter = _ref3.filter,
      onFilterChange = _ref3.onFilterChange;
  return _react2.default.createElement(
    "div",
    {
      className: "flex align-center justify-between mx2 mb1",
      style: { minWidth: 480 }
    },
    _react2.default.createElement(TimeInput, {
      value: getTime(filter[2]),
      onChange: function onChange(time) {
        return onFilterChange([filter[0], filter[1]].concat(_toConsumableArray(sortTimes(time, filter[3]))));
      }
    }),
    _react2.default.createElement(
      "span",
      { className: "h3" },
      "and"
    ),
    _react2.default.createElement(TimeInput, {
      value: getTime(filter[3]),
      onChange: function onChange(time) {
        return onFilterChange([filter[0], filter[1]].concat(_toConsumableArray(sortTimes(filter[2], time))));
      }
    })
  );
};

MultiTimePicker.displayName = "MultiTimePicker";
var sortTimes = function sortTimes(a, b) {
  console.log((0, _time.parseTime)(a).isAfter((0, _time.parseTime)(b)));
  return (0, _time.parseTime)(a).isAfter((0, _time.parseTime)(b)) ? [b, a] : [a, b];
};

var getTime = function getTime(value) {
  if (typeof value === "string" && /^\d+:\d+(:\d+(.\d+(\+\d+:\d+)?)?)?$/.test(value)) {
    return value;
  } else {
    return "00:00:00.000+00:00";
  }
};

var TIME_OPERATORS = exports.TIME_OPERATORS = [{
  name: "before",
  displayName: (0, _c3po.t)(_templateObject),
  init: function init(filter) {
    return ["<", (0, _DatePicker.getDateTimeFieldTarget)(filter[1]), getTime(filter[2])];
  },
  test: function test(_ref4) {
    var _ref5 = _slicedToArray(_ref4, 1),
        op = _ref5[0];

    return op === "<";
  },
  widget: SingleTimePicker
}, {
  name: "after",
  displayName: (0, _c3po.t)(_templateObject2),
  init: function init(filter) {
    return [">", (0, _DatePicker.getDateTimeFieldTarget)(filter[1]), getTime(filter[2])];
  },
  test: function test(_ref6) {
    var _ref7 = _slicedToArray(_ref6, 1),
        op = _ref7[0];

    return op === ">";
  },
  widget: SingleTimePicker
}, {
  name: "between",
  displayName: (0, _c3po.t)(_templateObject3),
  init: function init(filter) {
    return ["BETWEEN", (0, _DatePicker.getDateTimeFieldTarget)(filter[1]), getTime(filter[2]), getTime(filter[3])];
  },
  test: function test(_ref8) {
    var _ref9 = _slicedToArray(_ref8, 1),
        op = _ref9[0];

    return (0, _util.mbqlEq)(op, "between");
  },
  widget: MultiTimePicker
}];

var TimePicker = function TimePicker(props) {
  return _react2.default.createElement(_DatePicker2.default, _extends({}, props, { operators: TIME_OPERATORS }));
};

TimePicker.displayName = "TimePicker";
exports.default = TimePicker;

/***/ }),

/***/ 422:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Enter desired number"], ["Enter desired number"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _TextPicker = __webpack_require__(247);

var _TextPicker2 = _interopRequireDefault(_TextPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NumberPicker = (_temp = _class = function (_Component) {
  _inherits(NumberPicker, _Component);

  function NumberPicker(props) {
    _classCallCheck(this, NumberPicker);

    var _this = _possibleConstructorReturn(this, (NumberPicker.__proto__ || Object.getPrototypeOf(NumberPicker)).call(this, props));

    _this.state = {
      stringValues: props.values.map(function (v) {
        if (typeof v === "number") {
          return String(v);
        } else {
          return String(v || "");
        }
      }),
      validations: _this._validate(props.values)
    };
    return _this;
  }

  _createClass(NumberPicker, [{
    key: "_validate",
    value: function _validate(values) {
      return values.map(function (v) {
        return v === undefined || !isNaN(v);
      });
    }
  }, {
    key: "onValuesChange",
    value: function onValuesChange(stringValues) {
      var values = stringValues.map(function (v) {
        return parseFloat(v);
      });
      this.props.onValuesChange(values.map(function (v) {
        return isNaN(v) ? null : v;
      }));
      this.setState({
        stringValues: stringValues,
        validations: this._validate(values)
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      // $FlowFixMe
      var values = this.state.stringValues.slice(0, this.props.values.length);
      return _react2.default.createElement(_TextPicker2.default, _extends({}, this.props, {
        values: values,
        validations: this.state.validations,
        onValuesChange: function onValuesChange(values) {
          return _this2.onValuesChange(values);
        }
      }));
    }
  }]);

  return NumberPicker;
}(_react.Component), _class.propTypes = {
  values: _propTypes2.default.array.isRequired,
  onValuesChange: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  multi: _propTypes2.default.bool
}, _class.defaultProps = {
  placeholder: (0, _c3po.t)(_templateObject)
}, _temp);
NumberPicker.displayName = "NumberPicker";
exports.default = NumberPicker;

/***/ }),

/***/ 423:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _metadata = __webpack_require__(30);

var _metadata2 = __webpack_require__(16);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, props) {
  return {
    metadata: (0, _metadata.getMetadata)(state, props)
  };
};

var mapDispatchToProps = {
  fetchRemapping: _metadata2.fetchRemapping
};

exports.default = function (ComposedComponent) {
  var _dec, _class, _class2, _temp;

  return _dec = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps), _dec(_class = (_temp = _class2 = function (_Component) {
    _inherits(_class, _Component);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        if (this.props.column) {
          this.props.fetchRemapping(this.props.value, this.props.column.id);
        }
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.column && (this.props.value !== nextProps.value || this.props.column !== nextProps.column)) {
          this.props.fetchRemapping(nextProps.value, nextProps.column.id);
        }
      }
    }, {
      key: "render",
      value: function render() {
        // eslint-disable-next-line no-unused-vars
        var _props = this.props,
            metadata = _props.metadata,
            fetchRemapping = _props.fetchRemapping,
            props = _objectWithoutProperties(_props, ["metadata", "fetchRemapping"]);

        var field = metadata.field(props.column && props.column.id);
        var displayValue = field && field.remappedValue(props.value);
        var displayColumn = displayValue != null && field && field.remappedField() || null;
        return _react2.default.createElement(ComposedComponent, _extends({}, props, {
          displayValue: displayValue,
          displayColumn: displayColumn
        }));
      }
    }]);

    return _class;
  }(_react.Component), _class2.displayName = "Remapped[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _temp)) || _class;
};

/***/ }),

/***/ 424:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetricSchema = exports.SegmentSchema = exports.FieldSchema = exports.TableSchema = exports.DatabaseSchema = undefined;

var _normalizr = __webpack_require__(156);

var DatabaseSchema = exports.DatabaseSchema = new _normalizr.schema.Entity("databases"); // normalizr schema for use in actions/reducers

var TableSchema = exports.TableSchema = new _normalizr.schema.Entity("tables");
var FieldSchema = exports.FieldSchema = new _normalizr.schema.Entity("fields");
var SegmentSchema = exports.SegmentSchema = new _normalizr.schema.Entity("segments");
var MetricSchema = exports.MetricSchema = new _normalizr.schema.Entity("metrics");

DatabaseSchema.define({
  tables: [TableSchema]
});

TableSchema.define({
  db: DatabaseSchema,
  fields: [FieldSchema],
  segments: [SegmentSchema],
  metrics: [MetricSchema]
});

FieldSchema.define({
  target: FieldSchema,
  table: TableSchema,
  name_field: FieldSchema,
  dimensions: {
    human_readable_field: FieldSchema
  }
});

SegmentSchema.define({
  table: TableSchema
});

MetricSchema.define({
  table: TableSchema
});

/***/ }),

/***/ 425:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 426:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// If the composed element increases from it's original width, sets `expand` to true
//
// Used for components which we initially want to be small, but if they expand
// beyond their initial size we want to fix their size to be larger so it doesn't
// jump around, etc
exports.default = function (ComposedComponent) {
  var _class;

  return (0, _ExplicitSize2.default)(_class = function (_React$Component) {
    _inherits(AutoExpanding, _React$Component);

    function AutoExpanding() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, AutoExpanding);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoExpanding.__proto__ || Object.getPrototypeOf(AutoExpanding)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        expand: false
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(AutoExpanding, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.width != null && this.props.width != null && nextProps.width > this.props.width) {
          this.setState({ expand: true });
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(ComposedComponent, _extends({}, this.props, this.state));
      }
    }]);

    return AutoExpanding;
  }(_react2.default.Component)) || _class;
};

/***/ }),

/***/ 427:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"editor":"_1EO7U","input":"_2t1vE","equalSign":"_1zbWs","placeholder":"_33wM1"};

/***/ }),

/***/ 428:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(["sad sad panda, lexing errors detected"], ["sad sad panda, lexing errors detected"]);

exports.compile = compile;
exports.parse = parse;
exports.suggest = suggest;

var _chevrotain = __webpack_require__(335);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _c3po = __webpack_require__(2);

var _expressions = __webpack_require__(118);

var _schema_metadata = __webpack_require__(10);

var _tokens = __webpack_require__(430);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ExpressionsLexer = new _chevrotain.Lexer(_tokens.allTokens);

var ExpressionsParser = function (_Parser) {
  _inherits(ExpressionsParser, _Parser);

  function ExpressionsParser(input) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, ExpressionsParser);

    var parserOptions = {
      // recoveryEnabled: false,
      ignoredIssues: {
        // uses GATE to disambiguate fieldName and metricName
        atomicExpression: { OR1: true }
      }
    };

    var _this = _possibleConstructorReturn(this, (ExpressionsParser.__proto__ || Object.getPrototypeOf(ExpressionsParser)).call(this, input, _tokens.allTokens, parserOptions));

    var $ = _this;

    _this._options = options;

    // an expression without aggregations in it
    $.RULE("expression", function () {
      var outsideAggregation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      return $.SUBRULE($.additionExpression, [outsideAggregation]);
    });

    // an expression with aggregations in it
    $.RULE("aggregation", function () {
      return $.SUBRULE($.additionExpression, [true]);
    });

    // Lowest precedence thus it is first in the rule chain
    // The precedence of binary expressions is determined by
    // how far down the Parse Tree the binary expression appears.
    $.RULE("additionExpression", function (outsideAggregation) {
      var initial = $.SUBRULE($.multiplicationExpression, [outsideAggregation]);
      var operations = $.MANY(function () {
        var op = $.CONSUME(_tokens.AdditiveOperator);
        var rhsVal = $.SUBRULE2($.multiplicationExpression, [outsideAggregation]);
        return [op, rhsVal];
      });
      return _this._math(initial, operations);
    });

    $.RULE("multiplicationExpression", function (outsideAggregation) {
      var initial = $.SUBRULE($.atomicExpression, [outsideAggregation]);
      var operations = $.MANY(function () {
        var op = $.CONSUME(_tokens.MultiplicativeOperator);
        var rhsVal = $.SUBRULE2($.atomicExpression, [outsideAggregation]);
        return [op, rhsVal];
      });
      return _this._math(initial, operations);
    });

    $.RULE("nullaryCall", function () {
      return {
        lParen: $.CONSUME(_tokens.LParen),
        rParen: $.CONSUME(_tokens.RParen)
      };
    });
    $.RULE("unaryCall", function () {
      return {
        lParen: $.CONSUME(_tokens.LParen),
        arg: $.SUBRULE($.expression, [false]),
        rParen: $.CONSUME(_tokens.RParen)
      };
    });

    $.RULE("aggregationExpression", function (outsideAggregation) {
      var _$$OR = $.OR([{
        ALT: function ALT() {
          return _extends({
            aggregation: $.CONSUME(_tokens.NullaryAggregation)
          }, $.OPTION(function () {
            return $.SUBRULE($.nullaryCall);
          }));
        }
      }, {
        ALT: function ALT() {
          return _extends({
            aggregation: $.CONSUME(_tokens.UnaryAggregation)
          }, $.SUBRULE($.unaryCall));
        }
      }]),
          aggregation = _$$OR.aggregation,
          lParen = _$$OR.lParen,
          arg = _$$OR.arg,
          rParen = _$$OR.rParen;

      return _this._aggregation(aggregation, lParen, arg, rParen);
    });

    $.RULE("metricExpression", function () {
      var metricName = $.OR([{ ALT: function ALT() {
          return $.SUBRULE($.stringLiteral);
        } }, { ALT: function ALT() {
          return $.SUBRULE($.identifier);
        } }]);

      var metric = _this.getMetricForName(_this._toString(metricName));
      if (metric != null) {
        return _this._metricReference(metricName, metric.id);
      }
      return _this._unknownMetric(metricName);
    });

    $.RULE("fieldExpression", function () {
      var fieldName = $.OR([{ ALT: function ALT() {
          return $.SUBRULE($.stringLiteral);
        } }, { ALT: function ALT() {
          return $.SUBRULE($.identifier);
        } }]);

      var field = _this.getFieldForName(_this._toString(fieldName));
      if (field != null) {
        return _this._fieldReference(fieldName, field.id);
      }
      var expression = _this.getExpressionForName(_this._toString(fieldName));
      if (expression != null) {
        return _this._expressionReference(fieldName, expression);
      }
      return _this._unknownField(fieldName);
    });

    $.RULE("identifier", function () {
      var identifier = $.CONSUME(_tokens.Identifier);
      return _this._identifier(identifier);
    });

    $.RULE("stringLiteral", function () {
      var stringLiteral = $.CONSUME(_tokens.StringLiteral);
      return _this._stringLiteral(stringLiteral);
    });

    $.RULE("numberLiteral", function () {
      var minus = $.OPTION(function () {
        return $.CONSUME(_tokens.Minus);
      });
      var numberLiteral = $.CONSUME(_tokens.NumberLiteral);
      return _this._numberLiteral(minus, numberLiteral);
    });

    $.RULE("atomicExpression", function (outsideAggregation) {
      return $.OR([
      // aggregations are not allowed inside other aggregations
      {
        GATE: function GATE() {
          return outsideAggregation;
        },
        ALT: function ALT() {
          return $.SUBRULE($.aggregationExpression, [false]);
        }
      },

      // NOTE: DISABLE METRICS
      // {GATE: () => outsideAggregation, ALT: () => $.SUBRULE($.metricExpression) },

      // fields are not allowed outside aggregations
      {
        GATE: function GATE() {
          return !outsideAggregation;
        },
        ALT: function ALT() {
          return $.SUBRULE($.fieldExpression);
        }
      }, {
        ALT: function ALT() {
          return $.SUBRULE($.parenthesisExpression, [outsideAggregation]);
        }
      }, { ALT: function ALT() {
          return $.SUBRULE($.numberLiteral);
        } }], (outsideAggregation ? "aggregation" : "field name") + ", number, or expression");
    });

    $.RULE("parenthesisExpression", function (outsideAggregation) {
      var lParen = $.CONSUME(_tokens.LParen);
      var expValue = $.SUBRULE($.expression, [outsideAggregation]);
      var rParen = $.CONSUME(_tokens.RParen);
      return _this._parens(lParen, expValue, rParen);
    });

    _chevrotain.Parser.performSelfAnalysis(_this);
    return _this;
  }

  _createClass(ExpressionsParser, [{
    key: "getFieldForName",
    value: function getFieldForName(fieldName) {
      var fields = this._options.tableMetadata && this._options.tableMetadata.fields;
      return _underscore2.default.findWhere(fields, { display_name: fieldName });
    }
  }, {
    key: "getExpressionForName",
    value: function getExpressionForName(expressionName) {
      var customFields = this._options && this._options.customFields;
      return customFields[expressionName];
    }
  }, {
    key: "getMetricForName",
    value: function getMetricForName(metricName) {
      var metrics = this._options.tableMetadata && this._options.tableMetadata.metrics;
      return _underscore2.default.find(metrics, function (metric) {
        return metric.name.toLowerCase() === metricName.toLowerCase();
      });
    }
  }]);

  return ExpressionsParser;
}(_chevrotain.Parser);

var ExpressionsParserMBQL = function (_ExpressionsParser) {
  _inherits(ExpressionsParserMBQL, _ExpressionsParser);

  function ExpressionsParserMBQL() {
    _classCallCheck(this, ExpressionsParserMBQL);

    return _possibleConstructorReturn(this, (ExpressionsParserMBQL.__proto__ || Object.getPrototypeOf(ExpressionsParserMBQL)).apply(this, arguments));
  }

  _createClass(ExpressionsParserMBQL, [{
    key: "_math",
    value: function _math(initial, operations) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 2),
              op = _step$value[0],
              rhsVal = _step$value[1];

          // collapse multiple consecutive operators into a single MBQL statement
          if (Array.isArray(initial) && initial[0] === op.image) {
            initial.push(rhsVal);
          } else {
            initial = [op.image, initial, rhsVal];
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return initial;
    }
  }, {
    key: "_aggregation",
    value: function _aggregation(aggregation, lParen, arg, rParen) {
      var agg = (0, _expressions.getAggregationFromName)((0, _chevrotain.getImage)(aggregation));
      return arg == null ? [agg] : [agg, arg];
    }
  }, {
    key: "_metricReference",
    value: function _metricReference(metricName, metricId) {
      return ["METRIC", metricId];
    }
  }, {
    key: "_fieldReference",
    value: function _fieldReference(fieldName, fieldId) {
      return ["field-id", fieldId];
    }
  }, {
    key: "_expressionReference",
    value: function _expressionReference(fieldName) {
      return ["expression", fieldName];
    }
  }, {
    key: "_unknownField",
    value: function _unknownField(fieldName) {
      throw new Error('Unknown field "' + fieldName + '"');
    }
  }, {
    key: "_unknownMetric",
    value: function _unknownMetric(metricName) {
      throw new Error('Unknown metric "' + metricName + '"');
    }
  }, {
    key: "_identifier",
    value: function _identifier(identifier) {
      return identifier.image;
    }
  }, {
    key: "_stringLiteral",
    value: function _stringLiteral(stringLiteral) {
      return JSON.parse(stringLiteral.image);
    }
  }, {
    key: "_numberLiteral",
    value: function _numberLiteral(minus, numberLiteral) {
      return parseFloat(numberLiteral.image) * (minus ? -1 : 1);
    }
  }, {
    key: "_parens",
    value: function _parens(lParen, expValue, rParen) {
      return expValue;
    }
  }, {
    key: "_toString",
    value: function _toString(x) {
      return x;
    }
  }]);

  return ExpressionsParserMBQL;
}(ExpressionsParser);

var syntax = function syntax(type) {
  for (var _len = arguments.length, children = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    children[_key - 1] = arguments[_key];
  }

  return {
    type: type,
    children: children.filter(function (child) {
      return child;
    })
  };
};
var token = function token(_token) {
  return _token && {
    type: "token",
    text: _token.image,
    start: _token.startOffset,
    end: _token.endOffset
  };
};

var ExpressionsParserSyntax = function (_ExpressionsParser2) {
  _inherits(ExpressionsParserSyntax, _ExpressionsParser2);

  function ExpressionsParserSyntax() {
    _classCallCheck(this, ExpressionsParserSyntax);

    return _possibleConstructorReturn(this, (ExpressionsParserSyntax.__proto__ || Object.getPrototypeOf(ExpressionsParserSyntax)).apply(this, arguments));
  }

  _createClass(ExpressionsParserSyntax, [{
    key: "_math",
    value: function _math(initial, operations) {
      var _ref;

      return syntax.apply(undefined, ["math"].concat(_toConsumableArray((_ref = [initial]).concat.apply(_ref, _toConsumableArray(operations.map(function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
            op = _ref3[0],
            arg = _ref3[1];

        return [token(op), arg];
      }))))));
    }
  }, {
    key: "_aggregation",
    value: function _aggregation(aggregation, lParen, arg, rParen) {
      return syntax("aggregation", token(aggregation), token(lParen), arg, token(rParen));
    }
  }, {
    key: "_metricReference",
    value: function _metricReference(metricName, metricId) {
      return syntax("metric", metricName);
    }
  }, {
    key: "_fieldReference",
    value: function _fieldReference(fieldName, fieldId) {
      return syntax("field", fieldName);
    }
  }, {
    key: "_expressionReference",
    value: function _expressionReference(fieldName) {
      return syntax("expression-reference", token(fieldName));
    }
  }, {
    key: "_unknownField",
    value: function _unknownField(fieldName) {
      return syntax("unknown", fieldName);
    }
  }, {
    key: "_unknownMetric",
    value: function _unknownMetric(metricName) {
      return syntax("unknown", metricName);
    }
  }, {
    key: "_identifier",
    value: function _identifier(identifier) {
      return syntax("identifier", token(identifier));
    }
  }, {
    key: "_stringLiteral",
    value: function _stringLiteral(stringLiteral) {
      return syntax("string", token(stringLiteral));
    }
  }, {
    key: "_numberLiteral",
    value: function _numberLiteral(minus, numberLiteral) {
      return syntax("number", token(minus), token(numberLiteral));
    }
  }, {
    key: "_parens",
    value: function _parens(lParen, expValue, rParen) {
      return syntax("group", token(lParen), expValue, token(rParen));
    }
  }, {
    key: "_toString",
    value: function _toString(x) {
      if (typeof x === "string") {
        return x;
      } else if (x.type === "string") {
        return JSON.parse(x.children[0].text);
      } else if (x.type === "identifier") {
        return x.children[0].text;
      }
    }
  }]);

  return ExpressionsParserSyntax;
}(ExpressionsParser);

function getSubTokenTypes(TokenClass) {
  return TokenClass.extendingTokenTypes.map(function (tokenType) {
    return _underscore2.default.findWhere(_tokens.allTokens, { tokenType: tokenType });
  });
}

function getTokenSource(TokenClass) {
  // strip regex escaping, e.x. "\+" -> "+"
  return TokenClass.PATTERN.source.replace(/^\\/, "");
}

function run(Parser, source, options) {
  if (!source) {
    return [];
  }
  var startRule = options.startRule;

  var parser = new Parser(ExpressionsLexer.tokenize(source).tokens, options);
  var expression = parser[startRule]();
  if (parser.errors.length > 0) {
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = parser.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var error = _step2.value;

        // clean up error messages
        error.message = error.message && error.message.replace(/^Expecting:?\s+/, "Expected ").replace(/--> (.*?) <--/g, "$1").replace(/(\n|\s)*but found:?/, " but found ").replace(/\s*but found\s+''$/, "");
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    throw parser.errors;
  }
  return expression;
}

function compile(source) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return run(ExpressionsParserMBQL, source, options);
}

function parse(source) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return run(ExpressionsParserSyntax, source, options);
}

// No need for more than one instance.
var parserInstance = new ExpressionsParser([]);
function suggest(source) {
  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      tableMetadata = _ref4.tableMetadata,
      customFields = _ref4.customFields,
      startRule = _ref4.startRule,
      _ref4$index = _ref4.index,
      index = _ref4$index === undefined ? source.length : _ref4$index;

  var partialSource = source.slice(0, index);
  var lexResult = ExpressionsLexer.tokenize(partialSource);
  if (lexResult.errors.length > 0) {
    throw new Error((0, _c3po.t)(_templateObject));
  }

  var lastInputToken = _underscore2.default.last(lexResult.tokens);
  var partialSuggestionMode = false;
  var assistanceTokenVector = lexResult.tokens;

  // we have requested assistance while inside an Identifier
  if (lastInputToken instanceof _tokens.Identifier && /\w/.test(partialSource[partialSource.length - 1])) {
    assistanceTokenVector = assistanceTokenVector.slice(0, -1);
    partialSuggestionMode = true;
  }

  var finalSuggestions = [];

  // TODO: is there a better way to figure out which aggregation we're inside of?
  var currentAggregationToken = _underscore2.default.find(assistanceTokenVector.slice().reverse(), function (t) {
    return t instanceof _tokens.Aggregation;
  });

  var syntacticSuggestions = parserInstance.computeContentAssist(startRule, assistanceTokenVector);
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = syntacticSuggestions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var _suggestion = _step3.value;
      var nextTokenType = _suggestion.nextTokenType,
          ruleStack = _suggestion.ruleStack;
      // no nesting of aggregations or field references outside of aggregations
      // we have a predicate in the grammar to prevent nested aggregations but chevrotain
      // doesn't support predicates in content-assist mode, so we need this extra check

      var outsideAggregation = startRule === "aggregation" && ruleStack.slice(0, -1).indexOf("aggregationExpression") < 0;

      if (nextTokenType === _tokens.MultiplicativeOperator || nextTokenType === _tokens.AdditiveOperator) {
        var _finalSuggestions;

        var tokens = getSubTokenTypes(nextTokenType);
        (_finalSuggestions = finalSuggestions).push.apply(_finalSuggestions, _toConsumableArray(tokens.map(function (token) {
          return {
            type: "operators",
            name: getTokenSource(token),
            text: " " + getTokenSource(token) + " ",
            prefixTrim: /\s*$/,
            postfixTrim: /^\s*[*/+-]?\s*/
          };
        })));
      } else if (nextTokenType === _tokens.LParen) {
        finalSuggestions.push({
          type: "other",
          name: "(",
          text: " (",
          postfixText: ")",
          prefixTrim: /\s*$/,
          postfixTrim: /^\s*\(?\s*/
        });
      } else if (nextTokenType === _tokens.RParen) {
        finalSuggestions.push({
          type: "other",
          name: ")",
          text: ") ",
          prefixTrim: /\s*$/,
          postfixTrim: /^\s*\)?\s*/
        });
      } else if (nextTokenType === _tokens.Identifier || nextTokenType === _tokens.StringLiteral) {
        if (!outsideAggregation) {
          var _finalSuggestions2, _finalSuggestions3;

          var fields = [];
          if (startRule === "aggregation" && currentAggregationToken) {
            var aggregationShort = (0, _expressions.getAggregationFromName)((0, _chevrotain.getImage)(currentAggregationToken));
            var aggregationOption = _underscore2.default.findWhere(tableMetadata.aggregation_options, { short: aggregationShort });
            fields = aggregationOption && aggregationOption.fields && aggregationOption.fields[0] || [];
          } else if (startRule === "expression") {
            fields = tableMetadata.fields.filter(_schema_metadata.isNumeric);
          }
          (_finalSuggestions2 = finalSuggestions).push.apply(_finalSuggestions2, _toConsumableArray(fields.map(function (field) {
            return {
              type: "fields",
              name: field.display_name,
              text: (0, _expressions.formatFieldName)(field) + " ",
              prefixTrim: /\w+$/,
              postfixTrim: /^\w+\s*/
            };
          })));
          (_finalSuggestions3 = finalSuggestions).push.apply(_finalSuggestions3, _toConsumableArray(Object.keys(customFields || {}).map(function (expressionName) {
            return {
              type: "fields",
              name: expressionName,
              text: (0, _expressions.formatExpressionName)(expressionName) + " ",
              prefixTrim: /\w+$/,
              postfixTrim: /^\w+\s*/
            };
          })));
        }
      } else if (nextTokenType === _tokens.Aggregation || nextTokenType === _tokens.NullaryAggregation || nextTokenType === _tokens.UnaryAggregation || nextTokenType === _tokens.Identifier || nextTokenType === _tokens.StringLiteral) {
        if (outsideAggregation) {
          var _finalSuggestions4;

          (_finalSuggestions4 = finalSuggestions).push.apply(_finalSuggestions4, _toConsumableArray(tableMetadata.aggregation_options.filter(function (a) {
            return (0, _expressions.formatAggregationName)(a);
          }).map(function (aggregationOption) {
            var arity = aggregationOption.fields.length;
            return {
              type: "aggregations",
              name: (0, _expressions.formatAggregationName)(aggregationOption),
              text: (0, _expressions.formatAggregationName)(aggregationOption) + (arity > 0 ? "(" : " "),
              postfixText: arity > 0 ? ")" : " ",
              prefixTrim: /\w+$/,
              postfixTrim: arity > 0 ? /^\w+(\(\)?|$)/ : /^\w+\s*/
            };
          })));
          // NOTE: DISABLE METRICS
          // finalSuggestions.push(...tableMetadata.metrics.map(metric => ({
          //     type: "metrics",
          //     name: metric.name,
          //     text: formatMetricName(metric),
          //     prefixTrim: /\w+$/,
          //     postfixTrim: /^\w+\s*/
          // })))
        }
      } else if (nextTokenType === _tokens.NumberLiteral) {
        // skip number literal
      } else {
        console.warn("non exhaustive match", nextTokenType.name, _suggestion);
      }
    }

    // throw away any suggestion that is not a suffix of the last partialToken.
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  if (partialSuggestionMode) {
    var partial = (0, _chevrotain.getImage)(lastInputToken).toLowerCase();
    finalSuggestions = _underscore2.default.filter(finalSuggestions, function (suggestion) {
      return suggestion.text && suggestion.text.toLowerCase().startsWith(partial) || suggestion.name && suggestion.name.toLowerCase().startsWith(partial);
    });

    var prefixLength = partial.length;
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = finalSuggestions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var suggestion = _step4.value;

        suggestion.prefixLength = prefixLength;
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4.return) {
          _iterator4.return();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }
  }
  var _iteratorNormalCompletion5 = true;
  var _didIteratorError5 = false;
  var _iteratorError5 = undefined;

  try {
    for (var _iterator5 = finalSuggestions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
      var _suggestion2 = _step5.value;

      _suggestion2.index = index;
      if (!_suggestion2.name) {
        _suggestion2.name = _suggestion2.text;
      }
    }

    // deduplicate suggestions and sort by type then name
  } catch (err) {
    _didIteratorError5 = true;
    _iteratorError5 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion5 && _iterator5.return) {
        _iterator5.return();
      }
    } finally {
      if (_didIteratorError5) {
        throw _iteratorError5;
      }
    }
  }

  return _underscore2.default.chain(finalSuggestions).uniq(function (suggestion) {
    return suggestion.text;
  }).sortBy("name").sortBy("type").value();
}

/***/ }),

/***/ 43:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class; /*  weak */

var _Query = __webpack_require__(175);

var _Query2 = _interopRequireDefault(_Query);

var _Metadata = __webpack_require__(65);

var _Metadata2 = _interopRequireDefault(_Metadata);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _NativeQuery = __webpack_require__(133);

var _NativeQuery2 = _interopRequireDefault(_NativeQuery);

var _utils = __webpack_require__(229);

var _card = __webpack_require__(62);

var Card_DEPRECATED = _interopRequireWildcard(_card);

var _Card = __webpack_require__(37);

var _actions = __webpack_require__(61);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

var _services = __webpack_require__(15);

var _AtomicQuery = __webpack_require__(132);

var _AtomicQuery2 = _interopRequireDefault(_AtomicQuery);

var _urls = __webpack_require__(34);

var Urls = _interopRequireWildcard(_urls);

var _Mode = __webpack_require__(396);

var _Mode2 = _interopRequireDefault(_Mode);

var _Alert = __webpack_require__(298);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

/**
 * This is a wrapper around a question/card object, which may contain one or more Query objects
 */
var Question = (_class = function () {

  /**
   * Question constructor
   */


  /**
   * The plain object presentation of this question, equal to the format that Metabase REST API understands.
   * It is called `card` for both historical reasons and to make a clear distinction to this class.
   */
  function Question(metadata, card, parameterValues) {
    _classCallCheck(this, Question);

    this._metadata = metadata;
    this._card = card;
    this._parameterValues = parameterValues || {};
  }

  /**
   * TODO Atte Keinänen 6/13/17: Discussed with Tom that we could use the default Question constructor instead,
   * but it would require changing the constructor signature so that `card` is an optional parameter and has a default value
   */


  /**
   * Parameter values mean either the current values of dashboard filters or SQL editor template parameters.
   * They are in the grey area between UI state and question state, but having them in Question wrapper is convenient.
   */

  /**
   * The Question wrapper requires a metadata object because the queries it contains (like {@link StructuredQuery))
   * need metadata for accessing databases, tables and metrics.
   */


  _createClass(Question, [{
    key: "metadata",
    value: function metadata() {
      return this._metadata;
    }
  }, {
    key: "card",
    value: function card() {
      return this._card;
    }
  }, {
    key: "setCard",
    value: function setCard(card) {
      return new Question(this._metadata, card, this._parameterValues);
    }
  }, {
    key: "withoutNameAndId",
    value: function withoutNameAndId() {
      return this.setCard((0, _icepick.chain)(this.card()).dissoc("id").dissoc("name").dissoc("description").value());
    }

    /**
     * A question contains either a:
     * - StructuredQuery for queries written in MBQL
     * - NativeQuery for queries written in data source's native query language
     *
     * This is just a wrapper object, the data is stored in `this._card.dataset_query` in a format specific to the query type.
     */

  }, {
    key: "query",
    value: function query() {
      var datasetQuery = this._card.dataset_query;

      var _arr = [_StructuredQuery2.default, _NativeQuery2.default];
      for (var _i = 0; _i < _arr.length; _i++) {
        var QueryClass = _arr[_i];
        if (QueryClass.isDatasetQueryType(datasetQuery)) {
          return new QueryClass(this, datasetQuery);
        }
      }

      throw new Error("Unknown query type: " + datasetQuery.type);
    }
  }, {
    key: "isNative",
    value: function isNative() {
      return this.query() instanceof _NativeQuery2.default;
    }

    /**
     * Returns a new Question object with an updated query.
     * The query is saved to the `dataset_query` field of the Card object.
     */

  }, {
    key: "setQuery",
    value: function setQuery(newQuery) {
      if (this._card.dataset_query !== newQuery.datasetQuery()) {
        return this.setCard((0, _icepick.assoc)(this.card(), "dataset_query", newQuery.datasetQuery()));
      }
      return this;
    }
  }, {
    key: "setDatasetQuery",
    value: function setDatasetQuery(newDatasetQuery) {
      return this.setCard((0, _icepick.assoc)(this.card(), "dataset_query", newDatasetQuery));
    }

    /**
     * Returns a list of atomic queries (NativeQuery or StructuredQuery) contained in this question
     */

  }, {
    key: "atomicQueries",
    value: function atomicQueries() {
      var query = this.query();
      if (query instanceof _AtomicQuery2.default) return [query];
      return [];
    }

    /**
     * The visualization type of the question
     */

  }, {
    key: "display",
    value: function display() {
      return this._card && this._card.display;
    }
  }, {
    key: "setDisplay",
    value: function setDisplay(display) {
      return this.setCard((0, _icepick.assoc)(this.card(), "display", display));
    }
  }, {
    key: "visualizationSettings",
    value: function visualizationSettings() {
      return this._card && this._card.visualization_settings;
    }
  }, {
    key: "setVisualizationSettings",
    value: function setVisualizationSettings(settings) {
      return this.setCard((0, _icepick.assoc)(this.card(), "visualization_settings", settings));
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.query().isEmpty();
    }
    /**
     * Question is valid (as far as we know) and can be executed
     */

  }, {
    key: "canRun",
    value: function canRun() {
      return this.query().canRun();
    }
  }, {
    key: "canWrite",
    value: function canWrite() {
      return this._card && this._card.can_write;
    }

    /**
     * Returns the type of alert that current question supports
     *
     * The `visualization_settings` in card object doesn't contain default settings,
     * so you can provide the complete visualization settings object to `alertType`
     * for taking those into account
     */

  }, {
    key: "alertType",
    value: function alertType(visualizationSettings) {
      var display = this.display();

      if (!this.canRun()) {
        return null;
      }

      var isLineAreaBar = display === "line" || display === "area" || display === "bar";

      if (display === "progress") {
        return _Alert.ALERT_TYPE_PROGRESS_BAR_GOAL;
      } else if (isLineAreaBar) {
        var vizSettings = visualizationSettings ? visualizationSettings : this.card().visualization_settings;

        var goalEnabled = vizSettings["graph.show_goal"];
        var hasSingleYAxisColumn = vizSettings["graph.metrics"] && vizSettings["graph.metrics"].length === 1;

        // We don't currently support goal alerts for multiseries question
        if (goalEnabled && hasSingleYAxisColumn) {
          return _Alert.ALERT_TYPE_TIMESERIES_GOAL;
        } else {
          return _Alert.ALERT_TYPE_ROWS;
        }
      } else {
        return _Alert.ALERT_TYPE_ROWS;
      }
    }

    /**
     * Visualization drill-through and action widget actions
     *
     * Although most of these are essentially a way to modify the current query, having them as a part
     * of Question interface instead of Query interface makes it more convenient to also change the current visualization
     */

  }, {
    key: "summarize",
    value: function summarize(aggregation) {
      var tableMetadata = this.tableMetadata();
      return this.setCard((0, _actions.summarize)(this.card(), aggregation, tableMetadata));
    }
  }, {
    key: "breakout",
    value: function breakout(b) {
      return this.setCard((0, _actions.breakout)(this.card(), b));
    }
  }, {
    key: "pivot",
    value: function pivot() {
      var breakouts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var dimensions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      var tableMetadata = this.tableMetadata();
      return this.setCard(
      // $FlowFixMe: tableMetadata could be null
      (0, _actions.pivot)(this.card(), tableMetadata, breakouts, dimensions));
    }
  }, {
    key: "filter",
    value: function filter(operator, column, value) {
      return this.setCard((0, _actions.filter)(this.card(), operator, column, value));
    }
  }, {
    key: "drillUnderlyingRecords",
    value: function drillUnderlyingRecords(dimensions) {
      return this.setCard((0, _actions.drillUnderlyingRecords)(this.card(), dimensions));
    }
  }, {
    key: "toUnderlyingRecords",
    value: function toUnderlyingRecords() {
      var newCard = (0, _actions.toUnderlyingRecords)(this.card());
      if (newCard) {
        return this.setCard(newCard);
      }
    }
  }, {
    key: "toUnderlyingData",
    value: function toUnderlyingData() {
      return this.setDisplay("table");
    }
  }, {
    key: "composeThisQuery",
    value: function composeThisQuery() {
      var SAVED_QUESTIONS_FAUX_DATABASE = -1337;

      if (this.id()) {
        var card = {
          display: "table",
          dataset_query: {
            type: "query",
            database: SAVED_QUESTIONS_FAUX_DATABASE,
            query: {
              source_table: "card__" + this.id()
            }
          }
        };
        return this.setCard(card);
      }
    }
  }, {
    key: "drillPK",
    value: function drillPK(field, value) {
      var query = this.query();
      if (query instanceof _StructuredQuery2.default) {
        return query.reset().setTable(field.table).addFilter(["=", ["field-id", field.id], value]).question();
      }
    }

    // deprecated

  }, {
    key: "tableMetadata",
    value: function tableMetadata() {
      var query = this.query();
      if (query instanceof _StructuredQuery2.default) {
        return query.table();
      } else {
        return null;
      }
    }
  }, {
    key: "mode",
    value: function mode() {
      return _Mode2.default.forQuestion(this);
    }

    /**
     * A user-defined name for the question
     */

  }, {
    key: "displayName",
    value: function displayName() {
      return this._card && this._card.name;
    }
  }, {
    key: "setDisplayName",
    value: function setDisplayName(name) {
      return this.setCard((0, _icepick.assoc)(this.card(), "name", name));
    }
  }, {
    key: "collectionId",
    value: function collectionId() {
      return this._card && this._card.collection_id;
    }
  }, {
    key: "setCollectionId",
    value: function setCollectionId(collectionId) {
      return this.setCard((0, _icepick.assoc)(this.card(), "collection_id", collectionId));
    }
  }, {
    key: "id",
    value: function id() {
      return this._card && this._card.id;
    }
  }, {
    key: "isSaved",
    value: function isSaved() {
      return !!this.id();
    }
  }, {
    key: "publicUUID",
    value: function publicUUID() {
      return this._card && this._card.public_uuid;
    }
  }, {
    key: "getUrl",
    value: function getUrl(originalQuestion) {
      var isDirty = !originalQuestion || this.isDirtyComparedTo(originalQuestion);

      return isDirty ? Urls.question(null, this._serializeForUrl()) : Urls.question(this.id(), "");
    }
  }, {
    key: "getAutomaticDashboardUrl",
    value: function getAutomaticDashboardUrl(filters /*?: Filter[] = []*/) {
      var cellQuery = "";
      if (filters.length > 0) {
        var mbqlFilter = filters.length > 1 ? ["and"].concat(_toConsumableArray(filters)) : filters[0];
        cellQuery = "/cell/" + Card_DEPRECATED.utf8_to_b64url(JSON.stringify(mbqlFilter));
      }
      var questionId = this.id();
      if (questionId != null && !(0, _Card.isTransientId)(questionId)) {
        return "/auto/dashboard/question/" + questionId + cellQuery;
      } else {
        var adHocQuery = Card_DEPRECATED.utf8_to_b64url(JSON.stringify(this.card().dataset_query));
        return "/auto/dashboard/adhoc/" + adHocQuery + cellQuery;
      }
    }
  }, {
    key: "setResultsMetadata",
    value: function setResultsMetadata(resultsMetadata) {
      var metadataColumns = resultsMetadata && resultsMetadata.columns;
      var metadataChecksum = resultsMetadata && resultsMetadata.checksum;

      return this.setCard(_extends({}, this.card(), {
        result_metadata: metadataColumns,
        metadata_checksum: metadataChecksum
      }));
    }

    /**
     * Runs the query and returns an array containing results for each single query.
     *
     * If we have a saved and clean single-query question, we use `CardApi.query` instead of a ad-hoc dataset query.
     * This way we benefit from caching and query optimizations done by Metabase backend.
     */

  }, {
    key: "apiGetResults",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            cancelDeferred = _ref2.cancelDeferred,
            _ref2$isDirty = _ref2.isDirty,
            isDirty = _ref2$isDirty === undefined ? false : _ref2$isDirty,
            _ref2$ignoreCache = _ref2.ignoreCache,
            ignoreCache = _ref2$ignoreCache === undefined ? false : _ref2$ignoreCache;

        var canUseCardApiEndpoint, parameters, queryParams, getDatasetQueryResult, datasetQueries;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // TODO Atte Keinänen 7/5/17: Should we clean this query with Query.cleanQuery(query) before executing it?

                canUseCardApiEndpoint = !isDirty && this.isSaved();
                parameters = this.parametersList()
                // include only parameters that have a value applied
                .filter(function (param) {
                  return _underscore2.default.has(param, "value");
                })
                // only the superset of parameters object that API expects
                .map(function (param) {
                  return _underscore2.default.pick(param, "type", "target", "value");
                });

                if (!canUseCardApiEndpoint) {
                  _context.next = 10;
                  break;
                }

                queryParams = {
                  cardId: this.id(),
                  ignore_cache: ignoreCache,
                  parameters: parameters
                };
                _context.next = 6;
                return _services.CardApi.query(queryParams, {
                  cancelled: cancelDeferred.promise
                });

              case 6:
                _context.t0 = _context.sent;
                return _context.abrupt("return", [_context.t0]);

              case 10:
                getDatasetQueryResult = function getDatasetQueryResult(datasetQuery) {
                  var datasetQueryWithParameters = _extends({}, datasetQuery, {
                    parameters: parameters
                  });

                  return _services.MetabaseApi.dataset(datasetQueryWithParameters, cancelDeferred ? { cancelled: cancelDeferred.promise } : {});
                };

                datasetQueries = this.atomicQueries().map(function (query) {
                  return query.datasetQuery();
                });
                return _context.abrupt("return", Promise.all(datasetQueries.map(getDatasetQueryResult)));

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function apiGetResults() {
        return _ref.apply(this, arguments);
      }

      return apiGetResults;
    }()
  }, {
    key: "apiCreate",
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var createdCard;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _services.CardApi.create(this.card());

              case 2:
                createdCard = _context2.sent;
                return _context2.abrupt("return", this.setCard(createdCard));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function apiCreate() {
        return _ref3.apply(this, arguments);
      }

      return apiCreate;
    }()
  }, {
    key: "apiUpdate",
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var updatedCard;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _services.CardApi.update(this.card());

              case 2:
                updatedCard = _context3.sent;
                return _context3.abrupt("return", this.setCard(updatedCard));

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function apiUpdate() {
        return _ref4.apply(this, arguments);
      }

      return apiUpdate;
    }()

    // TODO: Fix incorrect Flow signature

  }, {
    key: "parameters",
    value: function parameters() {
      return (0, _Card.getParametersWithExtras)(this.card(), this._parameterValues);
    }
  }, {
    key: "parametersList",
    value: function parametersList() {
      // $FlowFixMe
      return Object.values(this.parameters());
    }

    // predicate function that dermines if the question is "dirty" compared to the given question

  }, {
    key: "isDirtyComparedTo",
    value: function isDirtyComparedTo(originalQuestion) {
      // TODO Atte Keinänen 6/8/17: Reconsider these rules because they don't completely match
      // the current implementation which uses original_card_id for indicating that question has a lineage

      // The rules:
      //   - if it's new, then it's dirty when
      //       1) there is a database/table chosen or
      //       2) when there is any content on the native query
      //   - if it's saved, then it's dirty when
      //       1) the current card doesn't match the last saved version

      if (!this._card) {
        return false;
      } else if (!this._card.id) {
        if (this._card.dataset_query.query && this._card.dataset_query.query.source_table) {
          return true;
        } else if (this._card.dataset_query.type === "native" && !_underscore2.default.isEmpty(this._card.dataset_query.native.query)) {
          return true;
        } else {
          return false;
        }
      } else {
        var origCardSerialized = originalQuestion._serializeForUrl({
          includeOriginalCardId: false
        });
        var currentCardSerialized = this._serializeForUrl({
          includeOriginalCardId: false
        });
        return currentCardSerialized !== origCardSerialized;
      }
    }

    // Internal methods

  }, {
    key: "_serializeForUrl",
    value: function _serializeForUrl() {
      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref5$includeOriginal = _ref5.includeOriginalCardId,
          includeOriginalCardId = _ref5$includeOriginal === undefined ? true : _ref5$includeOriginal;

      var cleanedQuery = this.query().clean();

      var cardCopy = _extends({
        name: this._card.name,
        description: this._card.description,
        dataset_query: cleanedQuery.datasetQuery(),
        display: this._card.display,
        parameters: this._card.parameters,
        visualization_settings: this._card.visualization_settings
      }, includeOriginalCardId ? { original_card_id: this._card.original_card_id } : {});

      return Card_DEPRECATED.utf8_to_b64url(JSON.stringify(cardCopy));
    }
  }], [{
    key: "create",
    value: function create() {
      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var databaseId = _ref6.databaseId,
          tableId = _ref6.tableId,
          metadata = _ref6.metadata,
          parameterValues = _ref6.parameterValues,
          cardProps = _objectWithoutProperties(_ref6, ["databaseId", "tableId", "metadata", "parameterValues"]);

      // $FlowFixMe
      var card = {
        name: cardProps.name || null,
        display: cardProps.display || "table",
        visualization_settings: cardProps.visualization_settings || {},
        dataset_query: _StructuredQuery.STRUCTURED_QUERY_TEMPLATE // temporary placeholder
      };

      var initialQuestion = new Question(metadata, card, parameterValues);
      var query = _StructuredQuery2.default.newStucturedQuery({
        question: initialQuestion,
        databaseId: databaseId,
        tableId: tableId
      });

      return initialQuestion.setQuery(query);
    }
  }]);

  return Question;
}(), (_applyDecoratedDescriptor(_class.prototype, "query", [_utils.memoize], Object.getOwnPropertyDescriptor(_class.prototype, "query"), _class.prototype)), _class);
exports.default = Question;

/***/ }),

/***/ 430:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.allTokens = exports.WhiteSpace = exports.RParen = exports.LParen = exports.Comma = exports.StringLiteral = exports.NumberLiteral = exports.Identifier = exports.UnaryAggregation = exports.NullaryAggregation = exports.Aggregation = exports.Div = exports.Multi = exports.MultiplicativeOperator = exports.Minus = exports.Plus = exports.AdditiveOperator = undefined;

var _chevrotain = __webpack_require__(335);

var _config = __webpack_require__(232);

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } // Note: this file is imported by webpack.config.js

var AdditiveOperator = exports.AdditiveOperator = (0, _chevrotain.extendToken)("AdditiveOperator", _chevrotain.Lexer.NA);
var Plus = exports.Plus = (0, _chevrotain.extendToken)("Plus", /\+/, AdditiveOperator);
var Minus = exports.Minus = (0, _chevrotain.extendToken)("Minus", /-/, AdditiveOperator);

var MultiplicativeOperator = exports.MultiplicativeOperator = (0, _chevrotain.extendToken)("MultiplicativeOperator", _chevrotain.Lexer.NA);
var Multi = exports.Multi = (0, _chevrotain.extendToken)("Multi", /\*/, MultiplicativeOperator);
var Div = exports.Div = (0, _chevrotain.extendToken)("Div", /\//, MultiplicativeOperator);

var Aggregation = exports.Aggregation = (0, _chevrotain.extendToken)("Aggregation", _chevrotain.Lexer.NA);

var NullaryAggregation = exports.NullaryAggregation = (0, _chevrotain.extendToken)("NullaryAggregation", Aggregation);
var nullaryAggregationTokens = _config.NULLARY_AGGREGATIONS.map(function (short) {
  return (0, _chevrotain.extendToken)(_config.VALID_AGGREGATIONS.get(short), new RegExp(_config.VALID_AGGREGATIONS.get(short), "i"), NullaryAggregation);
});

var UnaryAggregation = exports.UnaryAggregation = (0, _chevrotain.extendToken)("UnaryAggregation", Aggregation);
var unaryAggregationTokens = _config.UNARY_AGGREGATIONS.map(function (short) {
  return (0, _chevrotain.extendToken)(_config.VALID_AGGREGATIONS.get(short), new RegExp(_config.VALID_AGGREGATIONS.get(short), "i"), UnaryAggregation);
});

var Identifier = exports.Identifier = (0, _chevrotain.extendToken)("Identifier", /\w+/);
var NumberLiteral = exports.NumberLiteral = (0, _chevrotain.extendToken)("NumberLiteral", /-?(0|[1-9]\d*)(\.\d+)?([eE][+-]?\d+)?/);
var StringLiteral = exports.StringLiteral = (0, _chevrotain.extendToken)("StringLiteral", /"(?:[^\\"]+|\\(?:[bfnrtv"\\/]|u[0-9a-fA-F]{4}))*"/);

var Comma = exports.Comma = (0, _chevrotain.extendToken)("Comma", /,/);
Comma.LABEL = "comma";

var LParen = exports.LParen = (0, _chevrotain.extendToken)("LParen", /\(/);
LParen.LABEL = "opening parenthesis";

var RParen = exports.RParen = (0, _chevrotain.extendToken)("RParen", /\)/);
RParen.LABEL = "closing parenthesis";

var WhiteSpace = exports.WhiteSpace = (0, _chevrotain.extendToken)("WhiteSpace", /\s+/);
WhiteSpace.GROUP = _chevrotain.Lexer.SKIPPED;

// whitespace is normally very common so it is placed first to speed up the lexer
var allTokens = exports.allTokens = [WhiteSpace, LParen, RParen, Comma, Plus, Minus, Multi, Div, AdditiveOperator, MultiplicativeOperator, Aggregation, NullaryAggregation].concat(_toConsumableArray(nullaryAggregationTokens), [UnaryAggregation], _toConsumableArray(unaryAggregationTokens), [StringLiteral, NumberLiteral, Identifier]);

/***/ }),

/***/ 431:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _TokenizedExpression = __webpack_require__(432);

var _TokenizedExpression2 = _interopRequireDefault(_TokenizedExpression);

var _dom = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var KEYCODE_BACKSPACE = 8;
var KEYCODE_LEFT = 37;
var KEYCODE_RIGHT = 39;
var KEYCODE_FORWARD_DELETE = 46;

var TokenizedInput = function (_Component) {
  _inherits(TokenizedInput, _Component);

  function TokenizedInput(props) {
    _classCallCheck(this, TokenizedInput);

    var _this = _possibleConstructorReturn(this, (TokenizedInput.__proto__ || Object.getPrototypeOf(TokenizedInput)).call(this, props));

    _this.onSelectionChange = function (e) {
      _reactDom2.default.findDOMNode(_this).selectionStart = (0, _dom.getCaretPosition)(_reactDom2.default.findDOMNode(_this));
    };

    _this.onClick = function (e) {
      _this._isTyping = false;
      return _this.props.onClick(e);
    };

    _this.onInput = function (e) {
      _this._setValue(e.target.textContent);
    };

    _this.onKeyDown = function (e) {
      // isTyping signals whether the user is typing characters (keyCode >= 65) vs. deleting / navigating with arrows / clicking to select
      var isTyping = _this._isTyping;
      // also keep isTyping same when deleting
      _this._isTyping = e.keyCode >= 65 || e.keyCode === KEYCODE_BACKSPACE && isTyping;

      var input = _reactDom2.default.findDOMNode(_this);

      var _getSelectionPosition = (0, _dom.getSelectionPosition)(input),
          _getSelectionPosition2 = _slicedToArray(_getSelectionPosition, 2),
          start = _getSelectionPosition2[0],
          end = _getSelectionPosition2[1];

      if (start !== end) {
        return;
      }

      var element = window.getSelection().focusNode;
      while (element && element !== input) {
        // check ancestors of the focused node for "Expression-tokenized"
        // if the element is marked as "tokenized" we might want to intercept keypresses
        if (element.classList && element.classList.contains("Expression-tokenized")) {
          var positionInElement = (0, _dom.getCaretPosition)(element);
          var atStart = positionInElement === 0;
          var atEnd = positionInElement === element.textContent.length;
          var isSelected = element.classList.contains("Expression-selected");
          if (!isSelected && !isTyping && (atEnd && e.keyCode === KEYCODE_BACKSPACE || atStart && e.keyCode === KEYCODE_FORWARD_DELETE)) {
            // not selected, not "typging", and hit backspace, so mark as "selected"
            element.classList.add("Expression-selected");
            e.stopPropagation();
            e.preventDefault();
            return;
          } else if (isSelected && (atEnd && e.keyCode === KEYCODE_BACKSPACE || atStart && e.keyCode === KEYCODE_FORWARD_DELETE)) {
            // selected and hit backspace, so delete it
            element.parentNode.removeChild(element);
            _this._setValue(input.textContent);
            e.stopPropagation();
            e.preventDefault();
            return;
          } else if (isSelected && (atEnd && e.keyCode === KEYCODE_LEFT || atStart && e.keyCode === KEYCODE_RIGHT)) {
            // selected and hit left arrow, so enter "typing" mode and unselect it
            element.classList.remove("Expression-selected");
            _this._isTyping = true;
            e.stopPropagation();
            e.preventDefault();
            return;
          }
        }
        // nada, try the next ancestor
        element = element.parentNode;
      }

      // if we haven't handled the event yet, pass it on to our parent
      _this.props.onKeyDown(e);
    };

    _this.state = {
      value: ""
    };
    return _this;
  }

  _createClass(TokenizedInput, [{
    key: "_getValue",
    value: function _getValue() {
      if (this.props.value != undefined) {
        return this.props.value;
      } else {
        return this.state.value;
      }
    }
  }, {
    key: "_setValue",
    value: function _setValue(value) {
      _reactDom2.default.findDOMNode(this).value = value;
      if (typeof this.props.onChange === "function") {
        this.props.onChange({ target: { value: value } });
      } else {
        this.setState({ value: value });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      _reactDom2.default.findDOMNode(this).focus();
      this.componentDidUpdate();

      document.addEventListener("selectionchange", this.onSelectionChange, false);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener("selectionchange", this.onSelectionChange, false);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var inputNode = _reactDom2.default.findDOMNode(this);
      var restore = (0, _dom.saveSelection)(inputNode);

      _reactDom2.default.unmountComponentAtNode(inputNode);
      while (inputNode.firstChild) {
        inputNode.removeChild(inputNode.firstChild);
      }
      _reactDom2.default.render(_react2.default.createElement(_TokenizedExpression2.default, {
        source: this._getValue(),
        parserInfo: this.props.parserInfo
      }), inputNode);

      if (document.activeElement === inputNode) {
        restore();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          className = _props.className,
          onFocus = _props.onFocus,
          onBlur = _props.onBlur;

      return _react2.default.createElement("div", {
        className: className,
        style: { whiteSpace: "pre-wrap" },
        contentEditable: true,
        onKeyDown: this.onKeyDown,
        onInput: this.onInput,
        onFocus: onFocus,
        onBlur: onBlur,
        onClick: this.onClick
      });
    }
  }]);

  return TokenizedInput;
}(_react.Component);

TokenizedInput.displayName = "TokenizedInput";
exports.default = TokenizedInput;

/***/ }),

/***/ 432:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

__webpack_require__(433);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TokenizedExpression = function (_React$Component) {
  _inherits(TokenizedExpression, _React$Component);

  function TokenizedExpression() {
    _classCallCheck(this, TokenizedExpression);

    return _possibleConstructorReturn(this, (TokenizedExpression.__proto__ || Object.getPrototypeOf(TokenizedExpression)).apply(this, arguments));
  }

  _createClass(TokenizedExpression, [{
    key: "render",
    value: function render() {
      // TODO: use the Chevrotain parser or tokenizer
      // let parsed = parse(this.props.source, this.props.parserInfo);
      var parsed = parse(this.props.source);
      return renderSyntaxTree(parsed);
    }
  }]);

  return TokenizedExpression;
}(_react2.default.Component);

TokenizedExpression.displayName = "TokenizedExpression";
exports.default = TokenizedExpression;


var renderSyntaxTree = function renderSyntaxTree(node, index) {
  return _react2.default.createElement(
    "span",
    {
      key: index,
      className: (0, _classnames2.default)("Expression-node", "Expression-" + node.type, {
        "Expression-tokenized": node.tokenized
      })
    },
    node.text != null ? node.text : node.children ? node.children.map(renderSyntaxTree) : null
  );
};

renderSyntaxTree.displayName = "renderSyntaxTree";
function nextNonWhitespace(tokens, index) {
  while (index < tokens.length && /^\s+$/.test(tokens[++index])) {}
  return tokens[index];
}

function parse(expressionString) {
  var tokens = (expressionString || " ").match(/[a-zA-Z]\w*|"(?:[^\\"]+|\\(?:[bfnrtv"\\/]|u[0-9a-fA-F]{4}))*"|\(|\)|\d+|\s+|[*/+-]|.+/g);

  var root = { type: "group", children: [] };
  var current = root;
  var outsideAggregation = true;
  var stack = [];
  var push = function push(element) {
    current.children.push(element);
    stack.push(current);
    current = element;
  };
  var pop = function pop() {
    if (stack.length === 0) {
      return;
    }
    current = stack.pop();
  };
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (/^[a-zA-Z]\w*$/.test(token)) {
      if (nextNonWhitespace(tokens, i) === "(") {
        outsideAggregation = false;
        push({
          type: "aggregation",
          tokenized: true,
          children: []
        });
        current.children.push({
          type: "aggregation-name",
          text: token
        });
      } else {
        current.children.push({
          type: outsideAggregation ? "metric" : "field",
          tokenized: true,
          text: token
        });
      }
    } else if (/^"(?:[^\\"]+|\\(?:[bfnrtv"\\/]|u[0-9a-fA-F]{4}))*"$/.test(token)) {
      current.children.push({
        type: "string-literal",
        tokenized: true,
        children: [{ type: "open-quote", text: '"' }, {
          type: outsideAggregation ? "metric" : "field",
          text: JSON.parse(token)
        }, { type: "close-quote", text: '"' }]
      });
    } else if (token === "(") {
      push({ type: "group", children: [] });
      current.children.push({ type: "open-paren", text: "(" });
    } else if (token === ")") {
      current.children.push({ type: "close-paren", text: ")" });
      pop();
      if (current.type === "aggregation") {
        outsideAggregation = true;
        pop();
      }
    } else {
      // special handling for unclosed string literals
      if (i === tokens.length - 1 && /^".+[^"]$/.test(token)) {
        current.children.push({
          type: "string-literal",
          tokenized: true,
          children: [{ type: "open-quote", text: '"' }, {
            type: outsideAggregation ? "metric" : "field",
            text: JSON.parse(token + '"')
          }]
        });
      } else {
        current.children.push({ type: "token", text: token });
      }
    }
  }
  return root;
}

/***/ }),

/***/ 433:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 434:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["View ", ""], ["View ", ""]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  var activeMetrics = query.table().metrics.filter(function (m) {
    return m.isActive();
  });
  return activeMetrics.slice(0, 5).map(function (metric) {
    return {
      name: "common-metric",
      title: _react2.default.createElement(
        "span",
        null,
        (0, _c3po.jt)(_templateObject, _react2.default.createElement(
          "strong",
          null,
          metric.name
        ))
      ),
      question: function question() {
        return _question.summarize(["METRIC", metric.id]);
      }
    };
  });
};

/***/ }),

/***/ 435:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Count of rows by time"], ["Count of rows by time"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _schema_metadata = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  var dateField = query.table().fields.filter(_schema_metadata.isDate)[0];
  if (!dateField) {
    return [];
  }

  return [{
    name: "count-by-time",
    section: "sum",
    title: _react2.default.createElement(
      "span",
      null,
      (0, _c3po.t)(_templateObject)
    ),
    icon: "line",
    question: function question() {
      return _question.summarize(["count"]).breakout(["datetime-field", ["field-id", dateField.id], "as", "day"]);
    }
  }];
};

/***/ }),

/***/ 436:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Sum"], ["Sum"]),
    _templateObject2 = _taggedTemplateLiteral(["Avg"], ["Avg"]),
    _templateObject3 = _taggedTemplateLiteral(["Min"], ["Min"]),
    _templateObject4 = _taggedTemplateLiteral(["Max"], ["Max"]),
    _templateObject5 = _taggedTemplateLiteral(["Distincts"], ["Distincts"]);

var _actions = __webpack_require__(61);

var _schema_metadata = __webpack_require__(10);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var AGGREGATIONS = {
  sum: {
    section: "sum",
    title: (0, _c3po.t)(_templateObject)
  },
  avg: {
    section: "averages",
    title: (0, _c3po.t)(_templateObject2)
  },
  min: {
    section: "averages",
    title: (0, _c3po.t)(_templateObject3)
  },
  max: {
    section: "averages",
    title: (0, _c3po.t)(_templateObject4)
  },
  distinct: {
    section: "averages",
    title: (0, _c3po.t)(_templateObject5)
  }
};

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  if (!clicked || !clicked.column || clicked.value !== undefined || clicked.column.source !== "fields") {
    // TODO Atte Keinänen 7/21/17: Does it slow down the drill-through option calculations remarkably
    // that I removed the `isSummable` condition from here and use `isCompatibleAggregator` method below instead?
    return [];
  }
  var column = clicked.column;


  return Object.entries(AGGREGATIONS).map(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        aggregationShort = _ref3[0],
        action = _ref3[1];

    return [(0, _schema_metadata.getAggregator)(aggregationShort),
    // $FlowFixMe
    action];
  }).filter(function (_ref4) {
    var _ref5 = _slicedToArray(_ref4, 1),
        aggregator = _ref5[0];

    return (0, _schema_metadata.isCompatibleAggregatorForField)(aggregator, column);
  }).map(function (_ref6) {
    var _ref7 = _slicedToArray(_ref6, 2),
        aggregator = _ref7[0],
        action = _ref7[1];

    return _extends({
      name: action.title.toLowerCase()
    }, action, {
      question: function question() {
        return _question.summarize([aggregator.short, (0, _actions.getFieldRefFromColumn)(column)]);
      }
    });
  });
};

/***/ }),

/***/ 437:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["by time"], ["by time"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _StructuredQuery = __webpack_require__(22);

var _StructuredQuery2 = _interopRequireDefault(_StructuredQuery);

var _actions = __webpack_require__(61);

var _schema_metadata = __webpack_require__(10);

var _formatting = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  var query = _question.query();
  if (!(query instanceof _StructuredQuery2.default)) {
    return [];
  }

  var dateField = query.table().fields.filter(_schema_metadata.isDate)[0];
  if (!dateField || !clicked || !clicked.column || clicked.value !== undefined) {
    return [];
  }
  var column = clicked.column;

  var pivotFieldRef = (0, _schema_metadata.isDate)(column) ? (0, _actions.getFieldRefFromColumn)(column) : ["field-id", dateField.id];

  return ["sum", "count"].map(_schema_metadata.getAggregator).filter(function (aggregator) {
    return (0, _schema_metadata.isCompatibleAggregatorForField)(aggregator, column);
  }).map(function (aggregator) {
    return {
      name: "summarize-by-time",
      section: "sum",
      title: _react2.default.createElement(
        "span",
        null,
        (0, _formatting.capitalize)(aggregator.short),
        " ",
        (0, _c3po.t)(_templateObject)
      ),
      question: function question() {
        return _question.summarize(aggregator.requiresField ? [aggregator.short, (0, _actions.getFieldRefFromColumn)(column)] : [aggregator.short]).pivot([["datetime-field", pivotFieldRef, "day"]]);
      }
    };
  });
};

/***/ }),

/***/ 438:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Distribution"], ["Distribution"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _actions = __webpack_require__(61);

var _schema_metadata = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question,
      clicked = _ref.clicked;

  if (!clicked || !clicked.column || clicked.value !== undefined || clicked.column.source !== "fields" || !(0, _schema_metadata.isCategory)(clicked.column)) {
    return [];
  }
  var column = clicked.column;


  return [{
    name: "count-by-column",
    section: "distribution",
    title: _react2.default.createElement(
      "span",
      null,
      (0, _c3po.t)(_templateObject)
    ),
    question: function question() {
      return _question.summarize(["count"]).pivot([(0, _actions.getFieldRefFromColumn)(column)]);
    }
  }];
};

/***/ }),

/***/ 439:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var _PivotByCategoryAction = __webpack_require__(108);

var _PivotByCategoryAction2 = _interopRequireDefault(_PivotByCategoryAction);

var _PivotByLocationAction = __webpack_require__(139);

var _PivotByLocationAction2 = _interopRequireDefault(_PivotByLocationAction);

var _PivotByTimeAction = __webpack_require__(140);

var _PivotByTimeAction2 = _interopRequireDefault(_PivotByTimeAction);

var _PivotByCategoryDrill = __webpack_require__(141);

var _PivotByCategoryDrill2 = _interopRequireDefault(_PivotByCategoryDrill);

var _PivotByLocationDrill = __webpack_require__(180);

var _PivotByLocationDrill2 = _interopRequireDefault(_PivotByLocationDrill);

var _PivotByTimeDrill = __webpack_require__(181);

var _PivotByTimeDrill2 = _interopRequireDefault(_PivotByTimeDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var MetricMode = {
  name: "metric",
  actions: [].concat(_toConsumableArray(_actions.DEFAULT_ACTIONS), [_PivotByCategoryAction2.default, _PivotByLocationAction2.default, _PivotByTimeAction2.default]),
  drills: [].concat(_toConsumableArray(_drill.DEFAULT_DRILLS), [_PivotByCategoryDrill2.default, _PivotByLocationDrill2.default, _PivotByTimeDrill2.default])
};

exports.default = MetricMode;

/***/ }),

/***/ 44:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var BUTTON_VARIANTS = ["small", "medium", "large", "primary", "warning", "cancel", "success", "purple", "borderless", "onlyIcon"];

var Button = function Button(_ref) {
  var className = _ref.className,
      icon = _ref.icon,
      iconRight = _ref.iconRight,
      iconSize = _ref.iconSize,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["className", "icon", "iconRight", "iconSize", "children"]);

  var variantClasses = BUTTON_VARIANTS.filter(function (variant) {
    return props[variant];
  }).map(function (variant) {
    return "Button--" + variant;
  });

  return _react2.default.createElement(
    "button",
    _extends({}, _underscore2.default.omit.apply(_underscore2.default, [props].concat(BUTTON_VARIANTS)), {
      className: (0, _classnames2.default)("Button", className, variantClasses)
    }),
    _react2.default.createElement(
      "div",
      { className: "flex layout-centered" },
      icon && _react2.default.createElement(_Icon2.default, {
        name: icon,
        size: iconSize ? iconSize : 14,
        className: (0, _classnames2.default)({ mr1: !props.onlyIcon })
      }),
      _react2.default.createElement(
        "div",
        null,
        children
      ),
      iconRight && _react2.default.createElement(_Icon2.default, {
        name: iconRight,
        size: iconSize ? iconSize : 14,
        className: (0, _classnames2.default)({ ml1: !props.onlyIcon })
      })
    )
  );
};

Button.displayName = "Button";
Button.propTypes = {
  className: _propTypes2.default.string,
  icon: _propTypes2.default.string,
  iconSize: _propTypes2.default.number,
  children: _propTypes2.default.any,

  small: _propTypes2.default.bool,
  medium: _propTypes2.default.bool,
  large: _propTypes2.default.bool,

  primary: _propTypes2.default.bool,
  warning: _propTypes2.default.bool,
  cancel: _propTypes2.default.bool,
  purple: _propTypes2.default.bool,

  borderless: _propTypes2.default.bool,
  onlyIcon: _propTypes2.default.bool
};

exports.default = Button;

/***/ }),

/***/ 440:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _FieldList = __webpack_require__(136);

var _FieldList2 = _interopRequireDefault(_FieldList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BreakoutPopover = function BreakoutPopover(_ref) {
  var breakout = _ref.breakout,
      tableMetadata = _ref.tableMetadata,
      fieldOptions = _ref.fieldOptions,
      onCommitBreakout = _ref.onCommitBreakout,
      onClose = _ref.onClose,
      maxHeight = _ref.maxHeight;
  return _react2.default.createElement(_FieldList2.default, {
    className: "text-green",
    maxHeight: maxHeight,
    tableMetadata: tableMetadata,
    field: breakout,
    fieldOptions: fieldOptions,
    onFieldChange: function onFieldChange(field) {
      onCommitBreakout(field);
      if (onClose) {
        onClose();
      }
    },
    enableSubDimensions: true,
    alwaysExpanded: true
  });
};

BreakoutPopover.displayName = "BreakoutPopover";
exports.default = BreakoutPopover;

/***/ }),

/***/ 441:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeseriesModeFooter = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// import TimeseriesGroupingWidget
//     from "metabase/qb/components/TimeseriesGroupingWidget";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _TimeseriesFilterWidget = __webpack_require__(442);

var _TimeseriesFilterWidget2 = _interopRequireDefault(_TimeseriesFilterWidget);

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var _PivotByCategoryAction = __webpack_require__(108);

var _PivotByCategoryAction2 = _interopRequireDefault(_PivotByCategoryAction);

var _PivotByLocationAction = __webpack_require__(139);

var _PivotByLocationAction2 = _interopRequireDefault(_PivotByLocationAction);

var _PivotByCategoryDrill = __webpack_require__(141);

var _PivotByCategoryDrill2 = _interopRequireDefault(_PivotByCategoryDrill);

var _PivotByLocationDrill = __webpack_require__(180);

var _PivotByLocationDrill2 = _interopRequireDefault(_PivotByLocationDrill);

var _TimeseriesGroupingWidget = __webpack_require__(443);

var _TimeseriesGroupingWidget2 = _interopRequireDefault(_TimeseriesGroupingWidget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var TimeseriesModeFooter = exports.TimeseriesModeFooter = function TimeseriesModeFooter(props) {
  return _react2.default.createElement(
    "div",
    { className: "flex layout-centered" },
    _react2.default.createElement(
      "span",
      { className: "mr1" },
      "View"
    ),
    _react2.default.createElement(_TimeseriesFilterWidget2.default, _extends({}, props, { card: props.lastRunCard })),
    _react2.default.createElement(
      "span",
      { className: "mx1" },
      "by"
    ),
    _react2.default.createElement(_TimeseriesGroupingWidget2.default, _extends({}, props, { card: props.lastRunCard }))
  );
};

TimeseriesModeFooter.displayName = "TimeseriesModeFooter";
var TimeseriesMode = {
  name: "timeseries",
  actions: [_PivotByCategoryAction2.default, _PivotByLocationAction2.default].concat(_toConsumableArray(_actions.DEFAULT_ACTIONS)),
  drills: [_PivotByCategoryDrill2.default, _PivotByLocationDrill2.default].concat(_toConsumableArray(_drill.DEFAULT_DRILLS)),
  ModeFooter: TimeseriesModeFooter
};

exports.default = TimeseriesMode;

/***/ }),

/***/ 442:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(["After ", ""], ["After ", ""]),
    _templateObject2 = _taggedTemplateLiteral(["Before ", ""], ["Before ", ""]),
    _templateObject3 = _taggedTemplateLiteral(["Is Empty"], ["Is Empty"]),
    _templateObject4 = _taggedTemplateLiteral(["Not Empty"], ["Not Empty"]),
    _templateObject5 = _taggedTemplateLiteral(["All Time"], ["All Time"]),
    _templateObject6 = _taggedTemplateLiteral(["Apply"], ["Apply"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _DatePicker = __webpack_require__(137);

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Select = __webpack_require__(33);

var _Button = __webpack_require__(44);

var _Button2 = _interopRequireDefault(_Button);

var _query = __webpack_require__(70);

var Query = _interopRequireWildcard(_query);

var _filter2 = __webpack_require__(91);

var Filter = _interopRequireWildcard(_filter2);

var _field = __webpack_require__(93);

var Field = _interopRequireWildcard(_field);

var _Card = __webpack_require__(37);

var Card = _interopRequireWildcard(_Card);

var _query_time = __webpack_require__(92);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

var TimeseriesFilterWidget = function (_Component) {
  _inherits(TimeseriesFilterWidget, _Component);

  function TimeseriesFilterWidget() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TimeseriesFilterWidget);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeseriesFilterWidget.__proto__ || Object.getPrototypeOf(TimeseriesFilterWidget)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      // $FlowFixMe
      filter: null,
      filterIndex: -1,
      currentFilter: null
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TimeseriesFilterWidget, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.componentWillReceiveProps(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var query = Card.getQuery(nextProps.card);
      if (query) {
        var breakouts = Query.getBreakouts(query);
        var filters = Query.getFilters(query);

        var timeFieldId = (0, _query_time.parseFieldTargetId)(breakouts[0]);
        var timeField = (0, _query_time.parseFieldTarget)(breakouts[0]);

        var _filterIndex = _underscore2.default.findIndex(filters, function (filter) {
          return Filter.isFieldFilter(filter) && Field.getFieldTargetId(filter[1]) === timeFieldId;
        });

        var _filter = void 0,
            _currentFilter = void 0;
        if (_filterIndex >= 0) {
          _filter = _currentFilter = filters[_filterIndex];
        } else {
          _filter = ["time-interval", timeField, -30, "day"];
        }

        // $FlowFixMe
        this.setState({ filter: _filter, filterIndex: _filterIndex, currentFilter: _currentFilter });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          card = _props.card,
          tableMetadata = _props.tableMetadata,
          setDatasetQuery = _props.setDatasetQuery;
      var _state = this.state,
          filter = _state.filter,
          filterIndex = _state.filterIndex,
          currentFilter = _state.currentFilter;

      var currentDescription = void 0;

      if (currentFilter) {
        currentDescription = (0, _query_time.generateTimeFilterValuesDescriptions)(currentFilter).join(" - ");
        if (currentFilter[0] === ">") {
          currentDescription = (0, _c3po.t)(_templateObject, currentDescription);
        } else if (currentFilter[0] === "<") {
          currentDescription = (0, _c3po.t)(_templateObject2, currentDescription);
        } else if (currentFilter[0] === "IS_NULL") {
          currentDescription = (0, _c3po.t)(_templateObject3);
        } else if (currentFilter[0] === "NOT_NULL") {
          currentDescription = (0, _c3po.t)(_templateObject4);
        }
      } else {
        currentDescription = (0, _c3po.t)(_templateObject5);
      }

      return _react2.default.createElement(
        _PopoverWithTrigger2.default,
        {
          triggerElement: _react2.default.createElement(
            _Select.SelectButton,
            { hasValue: true },
            currentDescription
          ),
          triggerClasses: (0, _classnames2.default)(className, "my2"),
          ref: function ref(_ref2) {
            return _this2._popover = _ref2;
          },
          sizeToFit: true
          // accomodate dual calendar size
          , autoWidth: true
        },
        _react2.default.createElement(_DatePicker2.default, {
          filter: this.state.filter,
          onFilterChange: function onFilterChange(newFilter) {
            _this2.setState({ filter: newFilter });
          },
          tableMetadata: tableMetadata,
          includeAllTime: true
        }),
        _react2.default.createElement(
          "div",
          { className: "p1" },
          _react2.default.createElement(
            _Button2.default,
            {
              purple: true,
              className: "full",
              onClick: function onClick() {
                var query = Card.getQuery(card);
                if (query) {
                  if (filterIndex >= 0) {
                    query = Query.updateFilter(query, filterIndex, filter);
                  } else {
                    query = Query.addFilter(query, filter);
                  }
                  var _datasetQuery = _extends({}, card.dataset_query, {
                    query: query
                  });
                  setDatasetQuery(_datasetQuery, { run: true });
                }
                if (_this2._popover) {
                  _this2._popover.close();
                }
              }
            },
            (0, _c3po.t)(_templateObject6)
          )
        )
      );
    }
  }]);

  return TimeseriesFilterWidget;
}(_react.Component);

TimeseriesFilterWidget.displayName = "TimeseriesFilterWidget";
exports.default = TimeseriesFilterWidget;

/***/ }),

/***/ 443:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _TimeGroupingPopover = __webpack_require__(444);

var _TimeGroupingPopover2 = _interopRequireDefault(_TimeGroupingPopover);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Select = __webpack_require__(33);

var _query = __webpack_require__(70);

var Query = _interopRequireWildcard(_query);

var _Card = __webpack_require__(37);

var Card = _interopRequireWildcard(_Card);

var _query_time = __webpack_require__(92);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

var TimeseriesGroupingWidget = function (_Component) {
  _inherits(TimeseriesGroupingWidget, _Component);

  function TimeseriesGroupingWidget() {
    _classCallCheck(this, TimeseriesGroupingWidget);

    return _possibleConstructorReturn(this, (TimeseriesGroupingWidget.__proto__ || Object.getPrototypeOf(TimeseriesGroupingWidget)).apply(this, arguments));
  }

  _createClass(TimeseriesGroupingWidget, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          card = _props.card,
          setDatasetQuery = _props.setDatasetQuery;


      if (Card.isStructured(card)) {
        var query = Card.getQuery(card);
        var breakouts = query && Query.getBreakouts(query);

        if (!breakouts || breakouts.length === 0) {
          return null;
        }

        return _react2.default.createElement(
          _PopoverWithTrigger2.default,
          {
            triggerElement: _react2.default.createElement(
              _Select.SelectButton,
              { hasValue: true },
              (0, _query_time.formatBucketing)((0, _query_time.parseFieldBucketing)(breakouts[0]))
            ),
            triggerClasses: "my2",
            ref: function ref(_ref) {
              return _this2._popover = _ref;
            }
          },
          _react2.default.createElement(_TimeGroupingPopover2.default, {
            className: "text-brand",
            field: breakouts[0],
            onFieldChange: function onFieldChange(breakout) {
              var query = Card.getQuery(card);
              if (query) {
                query = Query.updateBreakout(query, 0, breakout);
                var _datasetQuery = _extends({}, card.dataset_query, {
                  query: query
                });
                setDatasetQuery(_datasetQuery, { run: true });
                if (_this2._popover) {
                  _this2._popover.close();
                }
              }
            },
            title: null,
            groupingOptions: ["minute", "hour", "day", "week", "month", "quarter", "year"]
          })
        );
      } else {
        return null;
      }
    }
  }]);

  return TimeseriesGroupingWidget;
}(_react.Component);

TimeseriesGroupingWidget.displayName = "TimeseriesGroupingWidget";
exports.default = TimeseriesGroupingWidget;

/***/ }),

/***/ 444:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Group time by"], ["Group time by"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _query_time = __webpack_require__(92);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BUCKETINGS = ["default", "minute", "hour", "day", "week", "month", "quarter", "year", null, "minute-of-hour", "hour-of-day", "day-of-week", "day-of-month", "day-of-year", "week-of-year", "month-of-year", "quarter-of-year"];

var TimeGroupingPopover = (_temp = _class = function (_Component) {
  _inherits(TimeGroupingPopover, _Component);

  function TimeGroupingPopover(props, context) {
    _classCallCheck(this, TimeGroupingPopover);

    var _this = _possibleConstructorReturn(this, (TimeGroupingPopover.__proto__ || Object.getPrototypeOf(TimeGroupingPopover)).call(this, props, context));

    _this.state = {};
    return _this;
  }

  _createClass(TimeGroupingPopover, [{
    key: "setField",
    value: function setField(bucketing) {
      this.props.onFieldChange(["datetime-field", this.props.field[1], "as", bucketing]);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          title = _props.title,
          field = _props.field,
          className = _props.className,
          groupingOptions = _props.groupingOptions;

      var enabledOptions = new Set(groupingOptions);
      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)(className, "px2 py1"), style: { width: "250px" } },
        title && _react2.default.createElement(
          "h3",
          { className: "List-section-header pt1 mx2" },
          title
        ),
        _react2.default.createElement(
          "ul",
          { className: "py1" },
          BUCKETINGS.filter(function (o) {
            return o == null || enabledOptions.has(o);
          }).map(function (bucketing, bucketingIndex) {
            return bucketing == null ? _react2.default.createElement("hr", { key: bucketingIndex, style: { border: "none" } }) : _react2.default.createElement(
              "li",
              {
                key: bucketingIndex,
                className: (0, _classnames2.default)("List-item", {
                  "List-item--selected": (0, _query_time.parseFieldBucketing)(field) === bucketing
                })
              },
              _react2.default.createElement(
                "a",
                {
                  className: "List-item-title full px2 py1 cursor-pointer",
                  onClick: _this2.setField.bind(_this2, bucketing)
                },
                (0, _query_time.formatBucketing)(bucketing)
              )
            );
          })
        )
      );
    }
  }]);

  return TimeGroupingPopover;
}(_react.Component), _class.propTypes = {
  field: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array]),
  onFieldChange: _propTypes2.default.func.isRequired
}, _class.defaultProps = {
  title: (0, _c3po.t)(_templateObject),
  groupingOptions: [
  // "default",
  "minute", "hour", "day", "week", "month", "quarter", "year",
  // "minute-of-hour",
  "hour-of-day", "day-of-week", "day-of-month",
  // "day-of-year",
  "week-of-year", "month-of-year", "quarter-of-year"]
}, _temp);
TimeGroupingPopover.displayName = "TimeGroupingPopover";
exports.default = TimeGroupingPopover;

/***/ }),

/***/ 445:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var _PivotByCategoryAction = __webpack_require__(108);

var _PivotByCategoryAction2 = _interopRequireDefault(_PivotByCategoryAction);

var _PivotByTimeAction = __webpack_require__(140);

var _PivotByTimeAction2 = _interopRequireDefault(_PivotByTimeAction);

var _PivotByCategoryDrill = __webpack_require__(141);

var _PivotByCategoryDrill2 = _interopRequireDefault(_PivotByCategoryDrill);

var _PivotByTimeDrill = __webpack_require__(181);

var _PivotByTimeDrill2 = _interopRequireDefault(_PivotByTimeDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var GeoMode = {
  name: "geo",
  actions: [].concat(_toConsumableArray(_actions.DEFAULT_ACTIONS), [_PivotByCategoryAction2.default, _PivotByTimeAction2.default]),
  drills: [].concat(_toConsumableArray(_drill.DEFAULT_DRILLS), [_PivotByCategoryDrill2.default, _PivotByTimeDrill2.default])
};

exports.default = GeoMode;

/***/ }),

/***/ 446:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var _PivotByCategoryAction = __webpack_require__(108);

var _PivotByCategoryAction2 = _interopRequireDefault(_PivotByCategoryAction);

var _PivotByLocationAction = __webpack_require__(139);

var _PivotByLocationAction2 = _interopRequireDefault(_PivotByLocationAction);

var _PivotByTimeAction = __webpack_require__(140);

var _PivotByTimeAction2 = _interopRequireDefault(_PivotByTimeAction);

var _PivotByCategoryDrill = __webpack_require__(141);

var _PivotByCategoryDrill2 = _interopRequireDefault(_PivotByCategoryDrill);

var _PivotByLocationDrill = __webpack_require__(180);

var _PivotByLocationDrill2 = _interopRequireDefault(_PivotByLocationDrill);

var _PivotByTimeDrill = __webpack_require__(181);

var _PivotByTimeDrill2 = _interopRequireDefault(_PivotByTimeDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var PivotMode = {
  name: "pivot",
  actions: [].concat(_toConsumableArray(_actions.DEFAULT_ACTIONS), [_PivotByCategoryAction2.default, _PivotByLocationAction2.default, _PivotByTimeAction2.default]),
  drills: [].concat(_toConsumableArray(_drill.DEFAULT_DRILLS), [_PivotByCategoryDrill2.default, _PivotByLocationDrill2.default, _PivotByTimeDrill2.default])
};

exports.default = PivotMode;

/***/ }),

/***/ 447:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _CompoundQueryAction = __webpack_require__(448);

var _CompoundQueryAction2 = _interopRequireDefault(_CompoundQueryAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NativeMode = {
  name: "native",
  actions: [_CompoundQueryAction2.default],
  drills: []
};

exports.default = NativeMode;

/***/ }),

/***/ 448:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Analyze the results of this Query"], ["Analyze the results of this Query"]);

var _c3po = __webpack_require__(2);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = function (_ref) {
  var _question = _ref.question;

  if (_question.id()) {
    return [{
      name: "nest-query",
      title: (0, _c3po.t)(_templateObject),
      icon: "table",
      question: function question() {
        return _question.composeThisQuery();
      }
    }];
  }
  return [];
};

/***/ }),

/***/ 449:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions = __webpack_require__(94);

var _drill = __webpack_require__(95);

var DefaultMode = {
  name: "default",
  actions: _actions.DEFAULT_ACTIONS,
  drills: _drill.DEFAULT_DRILLS
};

exports.default = DefaultMode;

/***/ }),

/***/ 45:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["Title"], ["Title"]),
    _templateObject2 = _taggedTemplateLiteral(["Description"], ["Description"]);

exports.getDefaultColumns = getDefaultColumns;
exports.getDefaultDimensionAndMetric = getDefaultDimensionAndMetric;
exports.getOptionFromColumn = getOptionFromColumn;
exports.metricSetting = metricSetting;
exports.dimensionSetting = dimensionSetting;
exports.fieldSetting = fieldSetting;
exports.getPersistableDefaultSettings = getPersistableDefaultSettings;
exports.getSettings = getSettings;
exports.getSettingsWidgets = getSettingsWidgets;

var _visualizations = __webpack_require__(53);

var _c3po = __webpack_require__(2);

var _utils = __webpack_require__(21);

var _schema_metadata = __webpack_require__(10);

var _ChartSettingInput = __webpack_require__(470);

var _ChartSettingInput2 = _interopRequireDefault(_ChartSettingInput);

var _ChartSettingInputGroup = __webpack_require__(471);

var _ChartSettingInputGroup2 = _interopRequireDefault(_ChartSettingInputGroup);

var _ChartSettingInputNumeric = __webpack_require__(472);

var _ChartSettingInputNumeric2 = _interopRequireDefault(_ChartSettingInputNumeric);

var _ChartSettingRadio = __webpack_require__(473);

var _ChartSettingRadio2 = _interopRequireDefault(_ChartSettingRadio);

var _ChartSettingSelect = __webpack_require__(259);

var _ChartSettingSelect2 = _interopRequireDefault(_ChartSettingSelect);

var _ChartSettingToggle = __webpack_require__(474);

var _ChartSettingToggle2 = _interopRequireDefault(_ChartSettingToggle);

var _ChartSettingFieldPicker = __webpack_require__(260);

var _ChartSettingFieldPicker2 = _interopRequireDefault(_ChartSettingFieldPicker);

var _ChartSettingFieldsPicker = __webpack_require__(476);

var _ChartSettingFieldsPicker2 = _interopRequireDefault(_ChartSettingFieldsPicker);

var _ChartSettingColorPicker = __webpack_require__(261);

var _ChartSettingColorPicker2 = _interopRequireDefault(_ChartSettingColorPicker);

var _ChartSettingColorsPicker = __webpack_require__(477);

var _ChartSettingColorsPicker2 = _interopRequireDefault(_ChartSettingColorsPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var WIDGETS = {
  input: _ChartSettingInput2.default,
  inputGroup: _ChartSettingInputGroup2.default,
  number: _ChartSettingInputNumeric2.default,
  radio: _ChartSettingRadio2.default,
  select: _ChartSettingSelect2.default,
  toggle: _ChartSettingToggle2.default,
  field: _ChartSettingFieldPicker2.default,
  fields: _ChartSettingFieldsPicker2.default,
  color: _ChartSettingColorPicker2.default,
  colors: _ChartSettingColorsPicker2.default
};

function getDefaultColumns(series) {
  if (series[0].card.display === "scatter") {
    return getDefaultScatterColumns(series);
  } else {
    return getDefaultLineAreaBarColumns(series);
  }
}

function getDefaultScatterColumns(_ref) {
  var _ref2 = _slicedToArray(_ref, 1),
      _ref2$0$data = _ref2[0].data,
      cols = _ref2$0$data.cols,
      rows = _ref2$0$data.rows;

  var dimensions = cols.filter(_schema_metadata.isDimension);
  var metrics = cols.filter(_schema_metadata.isMetric);
  if (dimensions.length === 2 && metrics.length < 2) {
    return {
      dimensions: [dimensions[0].name],
      metrics: [dimensions[1].name],
      bubble: metrics.length === 1 ? metrics[0].name : null
    };
  } else {
    return {
      dimensions: [null],
      metrics: [null],
      bubble: null
    };
  }
}

function getDefaultLineAreaBarColumns(_ref3) {
  var _ref4 = _slicedToArray(_ref3, 1),
      _ref4$0$data = _ref4[0].data,
      cols = _ref4$0$data.cols,
      rows = _ref4$0$data.rows;

  var type = (0, _utils.getChartTypeFromData)(cols, rows, false);
  switch (type) {
    case _utils.DIMENSION_DIMENSION_METRIC:
      var dimensions = [cols[0], cols[1]];
      if ((0, _schema_metadata.isDate)(dimensions[1]) && !(0, _schema_metadata.isDate)(dimensions[0])) {
        // if the series dimension is a date but the axis dimension is not then swap them
        dimensions.reverse();
      } else if ((0, _utils.getColumnCardinality)(cols, rows, 1) > (0, _utils.getColumnCardinality)(cols, rows, 0)) {
        // if the series dimension is higher cardinality than the axis dimension then swap them
        dimensions.reverse();
      }
      return {
        dimensions: dimensions.map(function (col) {
          return col.name;
        }),
        metrics: [cols[2].name]
      };
    case _utils.DIMENSION_METRIC:
      return {
        dimensions: [cols[0].name],
        metrics: [cols[1].name]
      };
    case _utils.DIMENSION_METRIC_METRIC:
      return {
        dimensions: [cols[0].name],
        metrics: cols.slice(1).map(function (col) {
          return col.name;
        })
      };
    default:
      return {
        dimensions: [null],
        metrics: [null]
      };
  }
}

function getDefaultDimensionAndMetric(_ref5) {
  var _ref6 = _slicedToArray(_ref5, 1),
      data = _ref6[0].data;

  var type = data && (0, _utils.getChartTypeFromData)(data.cols, data.rows, false);
  if (type === _utils.DIMENSION_METRIC) {
    return {
      dimension: data.cols[0].name,
      metric: data.cols[1].name
    };
  } else if (type === _utils.DIMENSION_DIMENSION_METRIC) {
    return {
      dimension: null,
      metric: data.cols[2].name
    };
  } else {
    return {
      dimension: null,
      metric: null
    };
  }
}

function getOptionFromColumn(col) {
  return {
    name: (0, _utils.getFriendlyName)(col),
    value: col.name
  };
}

function metricSetting(id) {
  return fieldSetting(id, _schema_metadata.isMetric, function (series) {
    return getDefaultDimensionAndMetric(series).metric;
  });
}

function dimensionSetting(id) {
  return fieldSetting(id, _schema_metadata.isDimension, function (series) {
    return getDefaultDimensionAndMetric(series).dimension;
  });
}

function fieldSetting(id, filter, getDefault) {
  return {
    widget: "select",
    isValid: function isValid(_ref7, vizSettings) {
      var _ref8 = _slicedToArray(_ref7, 1),
          _ref8$ = _ref8[0],
          card = _ref8$.card,
          data = _ref8$.data;

      return (0, _utils.columnsAreValid)(card.visualization_settings[id], data, filter);
    },
    getDefault: getDefault,
    getProps: function getProps(_ref9) {
      var _ref10 = _slicedToArray(_ref9, 1),
          _ref10$ = _ref10[0],
          card = _ref10$.card,
          cols = _ref10$.data.cols;

      return {
        options: cols.filter(filter).map(getOptionFromColumn)
      };
    }
  };
}

var COMMON_SETTINGS = {
  "card.title": {
    title: (0, _c3po.t)(_templateObject),
    widget: "input",
    getDefault: function getDefault(series) {
      return series.length === 1 ? series[0].card.name : null;
    },
    dashboard: true,
    useRawSeries: true
  },
  "card.description": {
    title: (0, _c3po.t)(_templateObject2),
    widget: "input",
    getDefault: function getDefault(series) {
      return series.length === 1 ? series[0].card.description : null;
    },
    dashboard: true,
    useRawSeries: true
  }
};

function getSetting(settingDefs, id, vizSettings, series) {
  if (id in vizSettings) {
    return;
  }

  var settingDef = settingDefs[id] || {};

  var _series = series,
      _series2 = _slicedToArray(_series, 1),
      card = _series2[0].card;

  var visualization_settings = card.visualization_settings || {};

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (settingDef.readDependencies || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var dependentId = _step.value;

      getSetting(settingDefs, dependentId, vizSettings, series);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (settingDef.useRawSeries && series._raw) {
    series = series._raw;
  }

  try {
    if (settingDef.getValue) {
      return vizSettings[id] = settingDef.getValue(series, vizSettings);
    }

    if (visualization_settings[id] !== undefined) {
      if (!settingDef.isValid || settingDef.isValid(series, vizSettings)) {
        return vizSettings[id] = visualization_settings[id];
      }
    }

    if (settingDef.getDefault) {
      var defaultValue = settingDef.getDefault(series, vizSettings);

      return vizSettings[id] = defaultValue;
    }

    if ("default" in settingDef) {
      return vizSettings[id] = settingDef.default;
    }
  } catch (e) {
    console.warn("Error getting setting", id, e);
  }
  return vizSettings[id] = undefined;
}

function getSettingDefintionsForSeries(series) {
  var _getVisualizationRaw = (0, _visualizations.getVisualizationRaw)(series),
      CardVisualization = _getVisualizationRaw.CardVisualization;

  var definitions = _extends({}, COMMON_SETTINGS, CardVisualization.settings || {});
  for (var id in definitions) {
    definitions[id].id = id;
  }
  return definitions;
}

function getPersistableDefaultSettings(series) {
  // A complete set of settings (not only defaults) is loaded because
  // some persistable default settings need other settings as dependency for calculating the default value
  var completeSettings = getSettings(series);

  var persistableDefaultSettings = {};
  var settingsDefs = getSettingDefintionsForSeries(series);

  for (var id in settingsDefs) {
    var settingDef = settingsDefs[id];
    if (settingDef.persistDefault) {
      persistableDefaultSettings[id] = completeSettings[id];
    }
  }

  return persistableDefaultSettings;
}

function getSettings(series) {
  var vizSettings = {};
  var settingsDefs = getSettingDefintionsForSeries(series);
  for (var id in settingsDefs) {
    getSetting(settingsDefs, id, vizSettings, series);
  }
  return vizSettings;
}

function getSettingWidget(settingDef, vizSettings, series, onChangeSettings) {
  var id = settingDef.id;
  var value = vizSettings[id];
  var onChange = function onChange(value) {
    var newSettings = _defineProperty({}, id, value);
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = (settingDef.writeDependencies || [])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _id = _step2.value;

        newSettings[_id] = vizSettings[_id];
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    onChangeSettings(newSettings);
  };
  if (settingDef.useRawSeries && series._raw) {
    series = series._raw;
  }
  return _extends({}, settingDef, {
    id: id,
    value: value,
    title: settingDef.getTitle ? settingDef.getTitle(series, vizSettings) : settingDef.title,
    hidden: settingDef.getHidden ? settingDef.getHidden(series, vizSettings) : false,
    disabled: settingDef.getDisabled ? settingDef.getDisabled(series, vizSettings) : false,
    props: _extends({}, settingDef.props ? settingDef.props : {}, settingDef.getProps ? settingDef.getProps(series, vizSettings, onChange) : {}),
    widget: typeof settingDef.widget === "string" ? WIDGETS[settingDef.widget] : settingDef.widget,
    onChange: onChange
  });
}

function getSettingsWidgets(series, onChangeSettings) {
  var isDashboard = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var vizSettings = getSettings(series);
  return Object.values(getSettingDefintionsForSeries(series)).map(function (settingDef) {
    return getSettingWidget(settingDef, vizSettings, series, onChangeSettings);
  }).filter(function (widget) {
    return widget.widget && !widget.hidden && (widget.dashboard === undefined || widget.dashboard === isDashboard);
  });
}

/***/ }),

/***/ 450:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getField = getField;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getField(table, fieldId) {
  if (table) {
    // sometimes we populate fields_lookup, sometimes we don't :(
    if (table.fields_lookup) {
      return table.fields_lookup[fieldId];
    } else {
      return _underscore2.default.findWhere(table.fields, { id: fieldId });
    }
  }
} /*  weak */

/***/ }),

/***/ 451:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartClickAction = exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _reactRouter = __webpack_require__(13);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SECTIONS = {
  zoom: {
    icon: "zoom"
  },
  records: {
    icon: "table2"
  },
  details: {
    icon: "document"
  },
  sort: {
    icon: "sort"
  },
  breakout: {
    icon: "breakout"
  },
  sum: {
    icon: "sum"
  },
  averages: {
    icon: "curve"
  },
  filter: {
    icon: "funneloutline"
  },
  dashboard: {
    icon: "dashboard"
  },
  distribution: {
    icon: "bar"
  },
  auto: {
    icon: "bolt"
  }
};
// give them indexes so we can sort the sections by the above ordering (JS objects are ordered)
Object.values(SECTIONS).map(function (section, index) {
  // $FlowFixMe
  section.index = index;
});

var getGALabelForAction = function getGALabelForAction(action) {
  return action ? (action.section || "") + ":" + (action.name || "") : null;
};

var ChartClickActions = function (_Component) {
  _inherits(ChartClickActions, _Component);

  function ChartClickActions() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ChartClickActions);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChartClickActions.__proto__ || Object.getPrototypeOf(ChartClickActions)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      popoverAction: null
    }, _this.close = function () {
      _this.setState({ popoverAction: null });
      if (_this.props.onClose) {
        _this.props.onClose();
      }
    }, _this.handleClickAction = function (action) {
      var onChangeCardAndRun = _this.props.onChangeCardAndRun;

      if (action.popover) {
        _analytics2.default.trackEvent("Actions", "Open Click Action Popover", getGALabelForAction(action));
        _this.setState({ popoverAction: action });
      } else if (action.question) {
        var nextQuestion = action.question();
        if (nextQuestion) {
          _analytics2.default.trackEvent("Actions", "Executed Click Action", getGALabelForAction(action));
          onChangeCardAndRun({ nextCard: nextQuestion.card() });
        }
        _this.close();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ChartClickActions, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          clicked = _props.clicked,
          clickActions = _props.clickActions,
          onChangeCardAndRun = _props.onChangeCardAndRun;


      if (!clicked || !clickActions || clickActions.length === 0) {
        return null;
      }

      var popoverAction = this.state.popoverAction;

      var popover = void 0;
      if (popoverAction && popoverAction.popover) {
        var PopoverContent = popoverAction.popover;
        popover = _react2.default.createElement(PopoverContent, {
          onChangeCardAndRun: function (_onChangeCardAndRun) {
            function onChangeCardAndRun(_x) {
              return _onChangeCardAndRun.apply(this, arguments);
            }

            onChangeCardAndRun.toString = function () {
              return _onChangeCardAndRun.toString();
            };

            return onChangeCardAndRun;
          }(function (_ref2) {
            var nextCard = _ref2.nextCard;

            if (popoverAction) {
              _analytics2.default.trackEvent("Action", "Executed Click Action", getGALabelForAction(popoverAction));
            }
            onChangeCardAndRun({ nextCard: nextCard });
          }),
          onClose: function onClose() {
            _analytics2.default.trackEvent("Action", "Dismissed Click Action Menu", getGALabelForAction(popoverAction));
            _this2.close();
          }
        });
      }

      var sections = _underscore2.default.chain(clickActions).groupBy("section").pairs().sortBy(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 1),
            key = _ref4[0];

        return SECTIONS[key] ? SECTIONS[key].index : 99;
      }).value();

      return _react2.default.createElement(
        _Popover2.default,
        {
          target: clicked.element,
          targetEvent: clicked.event,
          onClose: function onClose() {
            _analytics2.default.trackEvent("Action", "Dismissed Click Action Menu");
            _this2.close();
          },
          verticalAttachments: ["top", "bottom"],
          horizontalAttachments: ["left", "center", "right"],
          sizeToFit: true,
          pinInitialAttachment: true
        },
        popover ? popover : _react2.default.createElement(
          "div",
          { className: "text-bold text-grey-3" },
          sections.map(function (_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2),
                key = _ref6[0],
                actions = _ref6[1];

            return _react2.default.createElement(
              "div",
              {
                key: key,
                className: "border-row-divider p2 flex align-center text-default-hover"
              },
              _react2.default.createElement(_Icon2.default, {
                name: SECTIONS[key] && SECTIONS[key].icon || "unknown",
                className: "mr3",
                size: 16
              }),
              actions.map(function (action, index) {
                return _react2.default.createElement(ChartClickAction, {
                  index: index,
                  action: action,
                  isLastItem: index === actions.length - 1,
                  handleClickAction: _this2.handleClickAction
                });
              })
            );
          })
        )
      );
    }
  }]);

  return ChartClickActions;
}(_react.Component);

ChartClickActions.displayName = "ChartClickActions";
exports.default = ChartClickActions;
var ChartClickAction = exports.ChartClickAction = function ChartClickAction(_ref7) {
  var action = _ref7.action,
      isLastItem = _ref7.isLastItem,
      handleClickAction = _ref7.handleClickAction;

  var className = (0, _classnames2.default)("text-brand-hover cursor-pointer no-decoration", isLastItem ? "pr2" : "pr4");
  // NOTE: Tom Robinson 4/16/2018: disabling <Link> for `question` click actions
  // for now since on dashboards currently they need to go through
  // navigateToNewCardFromDashboard to merge in parameters.,
  // Also need to sort out proper logic in QueryBuilder's componentWillReceiveProps
  // if (action.question) {
  //   return (
  //     <Link to={action.question().getUrl()} className={className}>
  //       {action.title}
  //     </Link>
  //   );
  // } else
  if (action.url) {
    return _react2.default.createElement(
      _reactRouter.Link,
      {
        to: action.url(),
        className: className,
        onClick: function onClick() {
          return _analytics2.default.trackEvent("Actions", "Executed Click Action", getGALabelForAction(action));
        }
      },
      action.title
    );
  } else {
    return _react2.default.createElement(
      "div",
      { className: className, onClick: function onClick() {
          return handleClickAction(action);
        } },
      action.title
    );
  }
};

/***/ }),

/***/ 455:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Name"], ["Name"]),
    _templateObject2 = _taggedTemplateLiteral(["Number"], ["Number"]),
    _templateObject3 = _taggedTemplateLiteral(["Separator style"], ["Separator style"]),
    _templateObject4 = _taggedTemplateLiteral(["Number of decimal places"], ["Number of decimal places"]),
    _templateObject5 = _taggedTemplateLiteral(["Add a prefix"], ["Add a prefix"]),
    _templateObject6 = _taggedTemplateLiteral(["Add a suffix"], ["Add a suffix"]),
    _templateObject7 = _taggedTemplateLiteral(["Multiply by a number"], ["Multiply by a number"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Scalar = __webpack_require__(456);

var _Scalar2 = _interopRequireDefault(_Scalar);

var _c3po = __webpack_require__(2);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Ellipsified = __webpack_require__(97);

var _Ellipsified2 = _interopRequireDefault(_Ellipsified);

var _formatting = __webpack_require__(8);

var _types = __webpack_require__(42);

var _schema_metadata = __webpack_require__(10);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Scalar = (_temp = _class = function (_Component) {
  _inherits(Scalar, _Component);

  function Scalar() {
    _classCallCheck(this, Scalar);

    return _possibleConstructorReturn(this, (Scalar.__proto__ || Object.getPrototypeOf(Scalar)).apply(this, arguments));
  }

  _createClass(Scalar, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          _props$series = _slicedToArray(_props.series, 1),
          _props$series$ = _props$series[0],
          card = _props$series$.card,
          _props$series$$data = _props$series$.data,
          cols = _props$series$$data.cols,
          rows = _props$series$$data.rows,
          className = _props.className,
          actionButtons = _props.actionButtons,
          gridSize = _props.gridSize,
          settings = _props.settings,
          onChangeCardAndRun = _props.onChangeCardAndRun,
          visualizationIsClickable = _props.visualizationIsClickable,
          onVisualizationClick = _props.onVisualizationClick;

      var description = settings["card.description"];

      var isSmall = gridSize && gridSize.width < 4;
      var column = cols[0];

      var scalarValue = rows[0] && rows[0][0];
      if (scalarValue == null) {
        scalarValue = "";
      }

      var compactScalarValue = void 0,
          fullScalarValue = void 0;

      // TODO: some or all of these options should be part of formatValue
      if (typeof scalarValue === "number" && (0, _schema_metadata.isNumber)(column)) {
        // scale
        var scale = parseFloat(settings["scalar.scale"]);
        if (!isNaN(scale)) {
          scalarValue *= scale;
        }

        var localeStringOptions = {};

        // decimals
        var decimals = parseFloat(settings["scalar.decimals"]);
        if (!isNaN(decimals)) {
          scalarValue = _d3.default.round(scalarValue, decimals);
          localeStringOptions.minimumFractionDigits = decimals;
        }

        var number = scalarValue;

        // currency
        if (settings["scalar.currency"] != null) {
          localeStringOptions.style = "currency";
          localeStringOptions.currency = settings["scalar.currency"];
        }

        try {
          // format with separators and correct number of decimals
          if (settings["scalar.locale"]) {
            number = number.toLocaleString(settings["scalar.locale"], localeStringOptions);
          } else {
            // HACK: no locales that don't thousands separators?
            number = number.toLocaleString("en", localeStringOptions).replace(/,/g, "");
          }
        } catch (e) {
          console.warn("error formatting scalar", e);
        }
        fullScalarValue = (0, _formatting.formatValue)(number, { column: column });
      } else {
        fullScalarValue = (0, _formatting.formatValue)(scalarValue, { column: column });
      }

      compactScalarValue = isSmall ? (0, _formatting.formatValue)(scalarValue, { column: column, compact: true }) : fullScalarValue;

      if (settings["scalar.prefix"]) {
        compactScalarValue = settings["scalar.prefix"] + compactScalarValue;
        fullScalarValue = settings["scalar.prefix"] + fullScalarValue;
      }
      if (settings["scalar.suffix"]) {
        compactScalarValue = compactScalarValue + settings["scalar.suffix"];
        fullScalarValue = fullScalarValue + settings["scalar.suffix"];
      }

      var clicked = {
        value: rows[0] && rows[0][0],
        column: cols[0]
      };
      var isClickable = visualizationIsClickable(clicked);

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(className, _Scalar2.default.Scalar, _Scalar2.default[isSmall ? "small" : "large"])
        },
        _react2.default.createElement(
          "div",
          { className: "Card-title absolute top right p1 px2" },
          actionButtons
        ),
        _react2.default.createElement(
          _Ellipsified2.default,
          {
            className: (0, _classnames2.default)(_Scalar2.default.Value, "ScalarValue text-dark fullscreen-normal-text fullscreen-night-text", {
              "text-brand-hover cursor-pointer": isClickable
            }),
            tooltip: fullScalarValue,
            alwaysShowTooltip: fullScalarValue !== compactScalarValue,
            style: { maxWidth: "100%" }
          },
          _react2.default.createElement(
            "span",
            {
              onClick: isClickable && function () {
                return _this2._scalar && onVisualizationClick(_extends({}, clicked, { element: _this2._scalar }));
              },
              ref: function ref(scalar) {
                return _this2._scalar = scalar;
              }
            },
            compactScalarValue
          )
        ),
        this.props.isDashboard && _react2.default.createElement(
          "div",
          { className: _Scalar2.default.Title + " flex align-center relative" },
          _react2.default.createElement(
            _Ellipsified2.default,
            { tooltip: card.name },
            _react2.default.createElement(
              "span",
              {
                onClick: onChangeCardAndRun && function () {
                  return onChangeCardAndRun({ nextCard: card });
                },
                className: (0, _classnames2.default)("fullscreen-normal-text fullscreen-night-text", {
                  "cursor-pointer": !!onChangeCardAndRun
                })
              },
              _react2.default.createElement(
                "span",
                { className: "Scalar-title" },
                settings["card.title"]
              )
            )
          ),
          description && _react2.default.createElement(
            "div",
            {
              className: "absolute top bottom hover-child flex align-center justify-center",
              style: { right: -20, top: 2 }
            },
            _react2.default.createElement(
              _Tooltip2.default,
              { tooltip: description, maxWidth: "22em" },
              _react2.default.createElement(_Icon2.default, { name: "infooutlined" })
            )
          )
        )
      );
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return rows.length === 1 && cols.length === 1;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref) {
      // scalar can always be rendered, nothing needed here

      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;
    }
  }, {
    key: "seriesAreCompatible",
    value: function seriesAreCompatible(initialSeries, newSeries) {
      if (newSeries.data.cols && newSeries.data.cols.length === 1) {
        return true;
      }
      return false;
    }
  }, {
    key: "transformSeries",
    value: function transformSeries(series) {
      if (series.length > 1) {
        return series.map(function (s, seriesIndex) {
          return {
            card: _extends({}, s.card, {
              display: "funnel",
              visualization_settings: _extends({}, s.card.visualization_settings, {
                "graph.x_axis.labels_enabled": false
              }),
              _seriesIndex: seriesIndex
            }),
            data: {
              cols: [{ base_type: _types.TYPE.Text, display_name: (0, _c3po.t)(_templateObject), name: "name" }, _extends({}, s.data.cols[0])],
              rows: [[s.card.name, s.data.rows[0][0]]]
            }
          };
        });
      } else {
        return series;
      }
    }
  }]);

  return Scalar;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject2), _class.identifier = "scalar", _class.iconName = "number", _class.noHeader = true, _class.supportsSeries = true, _class.minSize = { width: 3, height: 3 }, _class.settings = {
  "scalar.locale": {
    title: (0, _c3po.t)(_templateObject3),
    widget: "select",
    props: {
      options: [{ name: "100000.00", value: null }, { name: "100,000.00", value: "en" }, { name: "100 000,00", value: "fr" }, { name: "100.000,00", value: "de" }]
    },
    default: "en"
  },
  "scalar.decimals": {
    title: (0, _c3po.t)(_templateObject4),
    widget: "number"
  },
  "scalar.prefix": {
    title: (0, _c3po.t)(_templateObject5),
    widget: "input"
  },
  "scalar.suffix": {
    title: (0, _c3po.t)(_templateObject6),
    widget: "input"
  },
  "scalar.scale": {
    title: (0, _c3po.t)(_templateObject7),
    widget: "number"
  }
}, _temp);
Scalar.displayName = "Scalar";
exports.default = Scalar;

/***/ }),

/***/ 456:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"Scalar":"_1yBQv","Value":"_4U6UK","Title":"_1QEEv","small":"_3eqn_","large":"_2Rovb"};

/***/ }),

/***/ 457:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Goal met"], ["Goal met"]),
    _templateObject2 = _taggedTemplateLiteral(["Goal exceeded"], ["Goal exceeded"]),
    _templateObject3 = _taggedTemplateLiteral(["Goal ", ""], ["Goal ", ""]),
    _templateObject4 = _taggedTemplateLiteral(["Progress visualization requires a number."], ["Progress visualization requires a number."]),
    _templateObject5 = _taggedTemplateLiteral(["Progress"], ["Progress"]),
    _templateObject6 = _taggedTemplateLiteral(["Goal"], ["Goal"]),
    _templateObject7 = _taggedTemplateLiteral(["Color"], ["Color"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _c3po = __webpack_require__(2);

var _formatting = __webpack_require__(8);

var _schema_metadata = __webpack_require__(10);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _IconBorder = __webpack_require__(143);

var _IconBorder2 = _interopRequireDefault(_IconBorder);

var _colors = __webpack_require__(38);

var _color = __webpack_require__(458);

var _color2 = _interopRequireDefault(_color);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BORDER_RADIUS = 5;
var MAX_BAR_HEIGHT = 65;

var Progress = (_temp = _class = function (_Component) {
  _inherits(Progress, _Component);

  function Progress() {
    _classCallCheck(this, Progress);

    return _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).apply(this, arguments));
  }

  _createClass(Progress, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var component = _reactDom2.default.findDOMNode(this);
      var pointer = _reactDom2.default.findDOMNode(this.refs.pointer);
      var label = _reactDom2.default.findDOMNode(this.refs.label);
      var container = _reactDom2.default.findDOMNode(this.refs.container);
      var bar = _reactDom2.default.findDOMNode(this.refs.bar);

      // Safari not respecting `height: 25%` so just do it here ¯\_(ツ)_/¯
      bar.style.height = Math.min(MAX_BAR_HEIGHT, component.offsetHeight) + "px";

      if (this.props.gridSize && this.props.gridSize.height < 4) {
        pointer.parentNode.style.display = "none";
        label.parentNode.style.display = "none";
        // no need to do the rest of the repositioning
        return;
      } else {
        pointer.parentNode.style.display = null;
        label.parentNode.style.display = null;
      }

      // reset the pointer transform for these computations
      pointer.style.transform = null;

      // position the label
      var containerWidth = container.offsetWidth;
      var labelWidth = label.offsetWidth;
      var pointerWidth = pointer.offsetWidth;
      var pointerCenter = pointer.offsetLeft + pointerWidth / 2;
      var minOffset = -pointerWidth / 2 + BORDER_RADIUS;
      if (pointerCenter - labelWidth / 2 < minOffset) {
        label.style.left = minOffset + "px";
        label.style.right = null;
      } else if (pointerCenter + labelWidth / 2 > containerWidth - minOffset) {
        label.style.left = null;
        label.style.right = minOffset + "px";
      } else {
        label.style.left = pointerCenter - labelWidth / 2 + "px";
        label.style.right = null;
      }

      // shift pointer at ends inward to line up with border radius
      if (pointerCenter < BORDER_RADIUS) {
        pointer.style.transform = "translate(" + BORDER_RADIUS + "px,0)";
      } else if (pointerCenter > containerWidth - 5) {
        pointer.style.transform = "translate(-" + BORDER_RADIUS + "px,0)";
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          _props$series = _slicedToArray(_props.series, 1),
          _props$series$0$data = _props$series[0].data,
          rows = _props$series$0$data.rows,
          cols = _props$series$0$data.cols,
          settings = _props.settings,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable;

      var value = rows[0] && typeof rows[0][0] === "number" ? rows[0][0] : 0;
      var goal = settings["progress.goal"] || 0;

      var mainColor = settings["progress.color"];
      var lightColor = (0, _color2.default)(mainColor).lighten(0.25).rgb().string();
      var darkColor = (0, _color2.default)(mainColor).darken(0.3).rgb().string();

      var progressColor = mainColor;
      var restColor = value > goal ? darkColor : lightColor;
      var arrowColor = value > goal ? darkColor : mainColor;

      var barPercent = Math.max(0, value < goal ? value / goal : goal / value);
      var arrowPercent = Math.max(0, value < goal ? value / goal : 1);

      var barMessage = void 0;
      if (value === goal) {
        barMessage = (0, _c3po.t)(_templateObject);
      } else if (value > goal) {
        barMessage = (0, _c3po.t)(_templateObject2);
      }

      var clicked = {
        value: value,
        column: cols[0]
      };
      var isClickable = visualizationIsClickable(clicked);

      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)(this.props.className, "flex layout-centered") },
        _react2.default.createElement(
          "div",
          {
            className: "flex-full full-height flex flex-column justify-center",
            style: { padding: 10, paddingTop: 0 }
          },
          _react2.default.createElement(
            "div",
            {
              ref: "container",
              className: "relative text-bold text-grey-4",
              style: { height: 20 }
            },
            _react2.default.createElement(
              "div",
              { ref: "label", style: { position: "absolute" } },
              (0, _formatting.formatValue)(value, { comma: true })
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "relative", style: { height: 10, marginBottom: 5 } },
            _react2.default.createElement("div", {
              ref: "pointer",
              style: {
                width: 0,
                height: 0,
                position: "absolute",
                left: arrowPercent * 100 + "%",
                marginLeft: -10,
                borderLeft: "10px solid transparent",
                borderRight: "10px solid transparent",
                borderTop: "10px solid " + arrowColor
              }
            })
          ),
          _react2.default.createElement(
            "div",
            {
              ref: "bar",
              className: (0, _classnames2.default)("relative", { "cursor-pointer": isClickable }),
              style: {
                backgroundColor: restColor,
                borderRadius: BORDER_RADIUS,
                overflow: "hidden"
              },
              onClick: isClickable && function (e) {
                return onVisualizationClick(_extends({}, clicked, { event: e.nativeEvent }));
              }
            },
            _react2.default.createElement("div", {
              style: {
                backgroundColor: progressColor,
                width: barPercent * 100 + "%",
                height: "100%"
              }
            }),
            barMessage && _react2.default.createElement(
              "div",
              { className: "flex align-center absolute spread text-white text-bold px2" },
              _react2.default.createElement(
                _IconBorder2.default,
                { borderWidth: 2 },
                _react2.default.createElement(_Icon2.default, { name: "check", size: 14 })
              ),
              _react2.default.createElement(
                "div",
                { className: "pl2" },
                barMessage
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "mt1" },
            _react2.default.createElement(
              "span",
              { className: "float-left" },
              "0"
            ),
            _react2.default.createElement(
              "span",
              { className: "float-right" },
              (0, _c3po.t)(_templateObject3, (0, _formatting.formatValue)(goal, {
                comma: true
              }))
            )
          )
        )
      );
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return rows.length === 1 && cols.length === 1;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;

      if (!(0, _schema_metadata.isNumeric)(cols[0])) {
        throw new Error((0, _c3po.t)(_templateObject4));
      }
    }
  }]);

  return Progress;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject5), _class.identifier = "progress", _class.iconName = "progress", _class.minSize = { width: 3, height: 3 }, _class.settings = {
  "progress.goal": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject6),
    widget: "number",
    default: 0
  },
  "progress.color": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject7),
    widget: "color",
    default: _colors.normal.green
  }
}, _temp);
Progress.displayName = "Progress";
exports.default = Progress;

/***/ }),

/***/ 459:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestTable = exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Table"], ["Table"]),
    _templateObject2 = _taggedTemplateLiteral(["Pivot the table"], ["Pivot the table"]),
    _templateObject3 = _taggedTemplateLiteral(["Fields to include"], ["Fields to include"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _TableInteractive = __webpack_require__(460);

var _TableInteractive2 = _interopRequireDefault(_TableInteractive);

var _TableSimple = __webpack_require__(462);

var _TableSimple2 = _interopRequireDefault(_TableSimple);

var _c3po = __webpack_require__(2);

var _data_grid = __webpack_require__(464);

var DataGrid = _interopRequireWildcard(_data_grid);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _schema_metadata = __webpack_require__(10);

var _utils = __webpack_require__(21);

var _ChartSettingOrderedFields = __webpack_require__(465);

var _ChartSettingOrderedFields2 = _interopRequireDefault(_ChartSettingOrderedFields);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactRetinaImage = __webpack_require__(155);

var _reactRetinaImage2 = _interopRequireDefault(_reactRetinaImage);

var _icepick = __webpack_require__(14);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Table = (_temp = _class = function (_Component) {
  _inherits(Table, _Component);

  _createClass(Table, null, [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return true;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref) {
      // scalar can always be rendered, nothing needed here

      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;
    }
  }]);

  function Table(props) {
    _classCallCheck(this, Table);

    var _this = _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).call(this, props));

    _this.state = {
      data: null
    };
    return _this;
  }

  _createClass(Table, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this._updateData(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      // TODO: remove use of deprecated "card" and "data" props
      if (newProps.data !== this.props.data || !_underscore2.default.isEqual(newProps.settings, this.props.settings)) {
        this._updateData(newProps);
      }
    }
  }, {
    key: "_updateData",
    value: function _updateData(_ref3) {
      var data = _ref3.data,
          settings = _ref3.settings;

      if (settings["table.pivot"]) {
        this.setState({
          data: DataGrid.pivot(data)
        });
      } else {
        var cols = data.cols,
            rows = data.rows,
            columns = data.columns;

        var columnIndexes = settings["table.columns"].filter(function (f) {
          return f.enabled;
        }).map(function (f) {
          return _underscore2.default.findIndex(cols, function (c) {
            return c.name === f.name;
          });
        }).filter(function (i) {
          return i >= 0 && i < cols.length;
        });

        this.setState({
          data: {
            cols: columnIndexes.map(function (i) {
              return cols[i];
            }),
            columns: columnIndexes.map(function (i) {
              return columns[i];
            }),
            rows: rows.map(function (row) {
              return columnIndexes.map(function (i) {
                return row[i];
              });
            })
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          card = _props.card,
          isDashboard = _props.isDashboard,
          settings = _props.settings;
      var data = this.state.data;

      var sort = (0, _icepick.getIn)(card, ["dataset_query", "query", "order_by"]) || null;
      var isPivoted = settings["table.pivot"];
      var isColumnsDisabled = (settings["table.columns"] || []).filter(function (f) {
        return f.enabled;
      }).length < 1;
      var TableComponent = isDashboard ? _TableSimple2.default : _TableInteractive2.default;

      if (!data) {
        return null;
      }

      if (isColumnsDisabled) {
        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)("flex-full px1 pb1 text-centered flex flex-column layout-centered", { "text-slate-light": isDashboard, "text-slate": !isDashboard })
          },
          _react2.default.createElement(_reactRetinaImage2.default, {
            width: 99,
            src: "app/assets/img/hidden-field.png",
            forceOriginalDimensions: false,
            className: "mb2"
          }),
          _react2.default.createElement(
            "span",
            { className: "h4 text-bold" },
            "Every field is hidden right now"
          )
        );
      } else {
        return (
          // $FlowFixMe
          _react2.default.createElement(TableComponent, _extends({}, this.props, {
            data: data,
            isPivoted: isPivoted,
            sort: sort
          }))
        );
      }
    }
  }]);

  return Table;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "table", _class.iconName = "table", _class.minSize = { width: 4, height: 3 }, _class.settings = {
  "table.pivot": {
    title: (0, _c3po.t)(_templateObject2),
    widget: "toggle",
    getHidden: function getHidden(_ref4) {
      var _ref5 = _slicedToArray(_ref4, 1),
          _ref5$ = _ref5[0],
          card = _ref5$.card,
          data = _ref5$.data;

      return data && data.cols.length !== 3;
    },
    getDefault: function getDefault(_ref6) {
      var _ref7 = _slicedToArray(_ref6, 1),
          _ref7$ = _ref7[0],
          card = _ref7$.card,
          data = _ref7$.data;

      return data && data.cols.length === 3 && _query2.default.isStructured(card.dataset_query) && data.cols.filter(_schema_metadata.isMetric).length === 1 && data.cols.filter(_schema_metadata.isDimension).length === 2;
    }
  },
  "table.columns": {
    title: (0, _c3po.t)(_templateObject3),
    widget: _ChartSettingOrderedFields2.default,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["table.pivot"];
    },
    isValid: function isValid(_ref8) {
      var _ref9 = _slicedToArray(_ref8, 1),
          _ref9$ = _ref9[0],
          card = _ref9$.card,
          data = _ref9$.data;

      return card.visualization_settings["table.columns"] && (0, _utils.columnsAreValid)(card.visualization_settings["table.columns"].map(function (x) {
        return x.name;
      }), data);
    },
    getDefault: function getDefault(_ref10) {
      var _ref11 = _slicedToArray(_ref10, 1),
          cols = _ref11[0].data.cols;

      return cols.map(function (col) {
        return {
          name: col.name,
          enabled: col.visibility_type !== "details-only"
        };
      });
    },
    getProps: function getProps(_ref12) {
      var _ref13 = _slicedToArray(_ref12, 1),
          cols = _ref13[0].data.cols;

      return {
        columnNames: cols.reduce(function (o, col) {
          return _extends({}, o, _defineProperty({}, col.name, (0, _utils.getFriendlyName)(col)));
        }, {})
      };
    }
  },
  "table.column_widths": {}
}, _temp);
Table.displayName = "Table";
exports.default = Table;


/**
 * A modified version of TestPopover for Jest/Enzyme tests.
 * It always uses TableSimple which Enzyme is able to render correctly.
 * TableInteractive uses react-virtualized library which requires a real browser viewport.
 */
var TestTable = exports.TestTable = function TestTable(props) {
  return _react2.default.createElement(Table, _extends({}, props, { isDashboard: true }));
};
TestTable.displayName = "TestTable";
TestTable.uiName = Table.uiName;
TestTable.identifier = Table.identifier;
TestTable.iconName = Table.iconName;
TestTable.minSize = Table.minSize;
TestTable.settings = Table.settings;

/***/ }),

/***/ 460:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp;

// $FlowFixMe: had to ignore react-virtualized in flow, probably due to different version


var _templateObject = _taggedTemplateLiteral(["Unset"], ["Unset"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _c3po = __webpack_require__(2);

__webpack_require__(461);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _formatting = __webpack_require__(8);

var _schema_metadata = __webpack_require__(10);

var _table = __webpack_require__(255);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _reactVirtualized = __webpack_require__(166);

var _reactDraggable = __webpack_require__(338);

var _reactDraggable2 = _interopRequireDefault(_reactDraggable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HEADER_HEIGHT = 36;
var ROW_HEIGHT = 30;
var MIN_COLUMN_WIDTH = ROW_HEIGHT;
var RESIZE_HANDLE_WIDTH = 5;

function pickRowsToMeasure(rows, columnIndex) {
  var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;

  var rowIndexes = [];
  // measure up to 10 non-nil cells
  for (var _rowIndex = 0; _rowIndex < rows.length && rowIndexes.length < count; _rowIndex++) {
    if (rows[_rowIndex][columnIndex] != null) {
      rowIndexes.push(_rowIndex);
    }
  }
  return rowIndexes;
}

var TableInteractive = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(TableInteractive, _Component);

  function TableInteractive(props) {
    _classCallCheck(this, TableInteractive);

    var _this = _possibleConstructorReturn(this, (TableInteractive.__proto__ || Object.getPrototypeOf(TableInteractive)).call(this, props));

    _this.recomputeGridSize = function () {
      if (_this.header && _this.grid) {
        _this.header.recomputeGridSize();
        _this.grid.recomputeGridSize();
      }
    };

    _this.recomputeColumnSizes = _underscore2.default.debounce(function () {
      _this.setState({ contentWidths: null });
    }, 100);

    _this.cellRenderer = function (_ref) {
      var key = _ref.key,
          style = _ref.style,
          rowIndex = _ref.rowIndex,
          columnIndex = _ref.columnIndex;
      var _this$props = _this.props,
          data = _this$props.data,
          isPivoted = _this$props.isPivoted,
          onVisualizationClick = _this$props.onVisualizationClick,
          visualizationIsClickable = _this$props.visualizationIsClickable;
      var rows = data.rows,
          cols = data.cols;


      var column = cols[columnIndex];
      var row = rows[rowIndex];
      var value = row[columnIndex];

      var clicked = (0, _table.getTableCellClickedObject)(data, rowIndex, columnIndex, isPivoted);
      var isClickable = onVisualizationClick && visualizationIsClickable(clicked);

      return _react2.default.createElement(
        "div",
        {
          key: key,
          style: style,
          className: (0, _classnames2.default)("TableInteractive-cellWrapper", {
            "TableInteractive-cellWrapper--firstColumn": columnIndex === 0,
            "TableInteractive-cellWrapper--lastColumn": columnIndex === cols.length - 1,
            "cursor-pointer": isClickable,
            "justify-end": (0, _table.isColumnRightAligned)(column),
            link: isClickable && (0, _schema_metadata.isID)(column)
          }),
          onMouseUp: isClickable ? function (e) {
            onVisualizationClick(_extends({}, clicked, { element: e.currentTarget }));
          } : undefined
        },
        _react2.default.createElement(
          "div",
          { className: "cellData" },
          (0, _formatting.formatValue)(value, {
            column: column,
            type: "cell",
            jsx: true,
            rich: true
          })
        )
      );
    };

    _this.tableHeaderRenderer = function (_ref2) {
      var key = _ref2.key,
          style = _ref2.style,
          columnIndex = _ref2.columnIndex;
      var _this$props2 = _this.props,
          sort = _this$props2.sort,
          isPivoted = _this$props2.isPivoted,
          onVisualizationClick = _this$props2.onVisualizationClick,
          visualizationIsClickable = _this$props2.visualizationIsClickable;
      // $FlowFixMe: not sure why flow has a problem with this

      var cols = _this.props.data.cols;

      var column = cols[columnIndex];

      var columnTitle = (0, _formatting.formatColumn)(column);
      if (!columnTitle && _this.props.isPivoted && columnIndex !== 0) {
        columnTitle = (0, _c3po.t)(_templateObject);
      }

      var clicked = void 0;
      if (isPivoted) {
        // if it's a pivot table, the first column is
        if (columnIndex >= 0) {
          clicked = column._dimension;
        }
      } else {
        clicked = { column: column };
      }

      var isClickable = onVisualizationClick && visualizationIsClickable(clicked);
      var isSortable = isClickable && column.source;
      var isRightAligned = (0, _table.isColumnRightAligned)(column);

      // the column id is in `["field-id", fieldId]` format
      var isSorted = sort && sort[0] && sort[0][0] && sort[0][0][1] === column.id;
      var isAscending = sort && sort[0] && sort[0][1] === "ascending";

      return _react2.default.createElement(
        "div",
        {
          key: key,
          style: _extends({}, style, {
            overflow: "visible" /* ensure resize handle is visible */
          }),
          className: (0, _classnames2.default)("TableInteractive-cellWrapper TableInteractive-headerCellData", {
            "TableInteractive-cellWrapper--firstColumn": columnIndex === 0,
            "TableInteractive-cellWrapper--lastColumn": columnIndex === cols.length - 1,
            "TableInteractive-headerCellData--sorted": isSorted,
            "cursor-pointer": isClickable,
            "justify-end": isRightAligned
          })
          // use onMouseUp instead of onClick since we can stopPropation when resizing headers
          , onMouseUp: isClickable ? function (e) {
            onVisualizationClick(_extends({}, clicked, { element: e.currentTarget }));
          } : undefined
        },
        _react2.default.createElement(
          "div",
          { className: "cellData" },
          isSortable && isRightAligned && _react2.default.createElement(_Icon2.default, {
            className: "Icon mr1",
            name: isAscending ? "chevronup" : "chevrondown",
            size: 8
          }),
          columnTitle,
          isSortable && !isRightAligned && _react2.default.createElement(_Icon2.default, {
            className: "Icon ml1",
            name: isAscending ? "chevronup" : "chevrondown",
            size: 8
          })
        ),
        _react2.default.createElement(
          _reactDraggable2.default,
          {
            axis: "x",
            bounds: { left: RESIZE_HANDLE_WIDTH },
            position: { x: _this.getColumnWidth({ index: columnIndex }), y: 0 },
            onStop: function onStop(e, _ref3) {
              var x = _ref3.x;

              // prevent onVisualizationClick from being fired
              e.stopPropagation();
              _this.onColumnResize(columnIndex, x);
            }
          },
          _react2.default.createElement("div", {
            className: "bg-brand-hover bg-brand-active",
            style: {
              zIndex: 99,
              position: "absolute",
              width: RESIZE_HANDLE_WIDTH,
              top: 0,
              bottom: 0,
              left: -RESIZE_HANDLE_WIDTH - 1,
              cursor: "ew-resize"
            }
          })
        )
      );
    };

    _this.getColumnWidth = function (_ref4) {
      var index = _ref4.index;
      var settings = _this.props.settings;
      var columnWidths = _this.state.columnWidths;

      var columnWidthsSetting = settings["table.column_widths"] || [];
      return columnWidthsSetting[index] || columnWidths[index] || MIN_COLUMN_WIDTH;
    };

    _this.state = {
      columnWidths: [],
      contentWidths: null
    };
    _this.columnHasResized = {};
    return _this;
  }

  _createClass(TableInteractive, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      // for measuring cells:
      this._div = document.createElement("div");
      this._div.className = "TableInteractive";
      this._div.style.display = "inline-block";
      this._div.style.position = "absolute";
      this._div.style.visibility = "hidden";
      this._div.style.zIndex = "-1";
      document.body.appendChild(this._div);

      this._measure();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this._div && this._div.parentNode) {
        this._div.parentNode.removeChild(this._div);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      if (JSON.stringify(this.props.data && this.props.data.cols) !== JSON.stringify(newProps.data && newProps.data.cols)) {
        this.resetColumnWidths();
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      var PROP_KEYS = ["width", "height", "settings", "data"];
      // compare specific props and state to determine if we should re-render
      return !_underscore2.default.isEqual(_underscore2.default.pick.apply(_underscore2.default, [this.props].concat(PROP_KEYS)), _underscore2.default.pick.apply(_underscore2.default, [nextProps].concat(PROP_KEYS))) || !_underscore2.default.isEqual(this.state, nextState);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.state.contentWidths) {
        this._measure();
      }
    }
  }, {
    key: "resetColumnWidths",
    value: function resetColumnWidths() {
      this.setState({
        columnWidths: [],
        contentWidths: null
      });
      this.columnHasResized = {};
      this.props.onUpdateVisualizationSettings({
        "table.column_widths": undefined
      });
    }
  }, {
    key: "_measure",
    value: function _measure() {
      var _this2 = this;

      var _props$data = this.props.data,
          cols = _props$data.cols,
          rows = _props$data.rows;


      _reactDom2.default.render(_react2.default.createElement(
        "div",
        { style: { display: "flex" } },
        cols.map(function (column, columnIndex) {
          return _react2.default.createElement(
            "div",
            { className: "fake-column", key: "column-" + columnIndex },
            _this2.tableHeaderRenderer({
              columnIndex: columnIndex,
              rowIndex: 0,
              key: "header",
              style: {}
            }),
            pickRowsToMeasure(rows, columnIndex).map(function (rowIndex) {
              return _this2.cellRenderer({
                rowIndex: rowIndex,
                columnIndex: columnIndex,
                key: "row-" + rowIndex,
                style: {}
              });
            })
          );
        })
      ), this._div, function () {
        var contentWidths = [].map.call(_this2._div.getElementsByClassName("fake-column"), function (columnElement) {
          return columnElement.offsetWidth;
        });

        var columnWidths = cols.map(function (col, index) {
          if (_this2.columnNeedsResize) {
            if (_this2.columnNeedsResize[index] && !_this2.columnHasResized[index]) {
              _this2.columnHasResized[index] = true;
              return contentWidths[index] + 1; // + 1 to make sure it doen't wrap?
            } else if (_this2.state.columnWidths[index]) {
              return _this2.state.columnWidths[index];
            } else {
              return 0;
            }
          } else {
            return contentWidths[index] + 1;
          }
        });

        _reactDom2.default.unmountComponentAtNode(_this2._div);

        delete _this2.columnNeedsResize;

        _this2.setState({ contentWidths: contentWidths, columnWidths: columnWidths }, _this2.recomputeGridSize);
      });
    }
  }, {
    key: "onCellResize",
    value: function onCellResize(columnIndex) {
      this.columnNeedsResize = this.columnNeedsResize || {};
      this.columnNeedsResize[columnIndex] = true;
      this.recomputeColumnSizes();
    }
  }, {
    key: "onColumnResize",
    value: function onColumnResize(columnIndex, width) {
      var _this3 = this;

      var settings = this.props.settings;

      var columnWidthsSetting = settings["table.column_widths"] ? settings["table.column_widths"].slice() : [];
      columnWidthsSetting[columnIndex] = Math.max(MIN_COLUMN_WIDTH, width);
      this.props.onUpdateVisualizationSettings({
        "table.column_widths": columnWidthsSetting
      });
      setTimeout(function () {
        return _this3.recomputeGridSize();
      }, 1);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _props = this.props,
          width = _props.width,
          height = _props.height,
          _props$data2 = _props.data,
          cols = _props$data2.cols,
          rows = _props$data2.rows,
          className = _props.className;


      if (!width || !height) {
        return _react2.default.createElement("div", { className: className });
      }

      return _react2.default.createElement(
        _reactVirtualized.ScrollSync,
        null,
        function (_ref5) {
          var clientHeight = _ref5.clientHeight,
              clientWidth = _ref5.clientWidth,
              _onScroll = _ref5.onScroll,
              scrollHeight = _ref5.scrollHeight,
              scrollLeft = _ref5.scrollLeft,
              scrollTop = _ref5.scrollTop,
              scrollWidth = _ref5.scrollWidth;
          return _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)(className, "TableInteractive relative", {
                "TableInteractive--pivot": _this4.props.isPivoted,
                "TableInteractive--ready": _this4.state.contentWidths
              })
            },
            _react2.default.createElement("canvas", {
              className: "spread",
              style: { pointerEvents: "none", zIndex: 999 },
              width: width,
              height: height
            }),
            _react2.default.createElement(_reactVirtualized.Grid, {
              ref: function ref(_ref7) {
                return _this4.header = _ref7;
              },
              style: {
                top: 0,
                left: 0,
                right: 0,
                height: HEADER_HEIGHT,
                position: "absolute",
                overflow: "hidden"
              },
              className: "TableInteractive-header scroll-hide-all",
              width: width || 0,
              height: HEADER_HEIGHT,
              rowCount: 1,
              rowHeight: HEADER_HEIGHT
              // HACK: there might be a better way to do this, but add a phantom padding cell at the end to ensure scroll stays synced if main content scrollbars are visible
              , columnCount: cols.length + 1,
              columnWidth: function columnWidth(props) {
                return props.index < cols.length ? _this4.getColumnWidth(props) : 50;
              },
              cellRenderer: function cellRenderer(props) {
                return props.columnIndex < cols.length ? _this4.tableHeaderRenderer(props) : null;
              },
              onScroll: function onScroll(_ref6) {
                var scrollLeft = _ref6.scrollLeft;
                return _onScroll({ scrollLeft: scrollLeft });
              },
              scrollLeft: scrollLeft,
              tabIndex: null
            }),
            _react2.default.createElement(_reactVirtualized.Grid, {
              ref: function ref(_ref9) {
                return _this4.grid = _ref9;
              },
              style: {
                top: HEADER_HEIGHT,
                left: 0,
                right: 0,
                bottom: 0,
                position: "absolute"
              },
              className: "",
              width: width,
              height: height - HEADER_HEIGHT,
              columnCount: cols.length,
              columnWidth: _this4.getColumnWidth,
              rowCount: rows.length,
              rowHeight: ROW_HEIGHT,
              cellRenderer: _this4.cellRenderer,
              onScroll: function onScroll(_ref8) {
                var scrollLeft = _ref8.scrollLeft;

                _this4.props.onActionDismissal();
                return _onScroll({ scrollLeft: scrollLeft });
              },
              scrollLeft: scrollLeft,
              tabIndex: null,
              overscanRowCount: 20
            })
          );
        }
      );
    }
  }]);

  return TableInteractive;
}(_react.Component), _class2.propTypes = {
  data: _propTypes2.default.object.isRequired,
  isPivoted: _propTypes2.default.bool.isRequired,
  sort: _propTypes2.default.array
}, _class2.defaultProps = {
  isPivoted: false
}, _temp)) || _class;

TableInteractive.displayName = "TableInteractive";
exports.default = TableInteractive;

/***/ }),

/***/ 461:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 462:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp;

var _templateObject = _taggedTemplateLiteral(["Rows ", "-", " of ", ""], ["Rows ", "-", " of ", ""]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Table = __webpack_require__(463);

var _Table2 = _interopRequireDefault(_Table);

var _c3po = __webpack_require__(2);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _Ellipsified = __webpack_require__(97);

var _Ellipsified2 = _interopRequireDefault(_Ellipsified);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _formatting = __webpack_require__(8);

var _table = __webpack_require__(255);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableSimple = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(TableSimple, _Component);

  function TableSimple(props) {
    _classCallCheck(this, TableSimple);

    var _this = _possibleConstructorReturn(this, (TableSimple.__proto__ || Object.getPrototypeOf(TableSimple)).call(this, props));

    _this.state = {
      page: 0,
      pageSize: 1,
      sortColumn: null,
      sortDescending: false
    };
    return _this;
  }

  _createClass(TableSimple, [{
    key: "setSort",
    value: function setSort(colIndex) {
      if (this.state.sortColumn === colIndex) {
        this.setState({ sortDescending: !this.state.sortDescending });
      } else {
        this.setState({ sortColumn: colIndex });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var headerHeight = _reactDom2.default.findDOMNode(this.refs.header).getBoundingClientRect().height;
      var footerHeight = this.refs.footer ? _reactDom2.default.findDOMNode(this.refs.footer).getBoundingClientRect().height : 0;
      var rowHeight = _reactDom2.default.findDOMNode(this.refs.firstRow).getBoundingClientRect().height + 1;
      var pageSize = Math.max(1, Math.floor((this.props.height - headerHeight - footerHeight) / rowHeight));
      if (this.state.pageSize !== pageSize) {
        this.setState({ pageSize: pageSize });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          data = _props.data,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable,
          isPivoted = _props.isPivoted;
      var rows = data.rows,
          cols = data.cols;
      var _state = this.state,
          page = _state.page,
          pageSize = _state.pageSize,
          sortColumn = _state.sortColumn,
          sortDescending = _state.sortDescending;


      var start = pageSize * page;
      var end = Math.min(rows.length - 1, pageSize * (page + 1) - 1);

      var rowIndexes = _underscore2.default.range(0, rows.length);
      if (sortColumn != null) {
        rowIndexes = _underscore2.default.sortBy(rowIndexes, function (rowIndex) {
          return rows[rowIndex][sortColumn];
        });
        if (sortDescending) {
          rowIndexes.reverse();
        }
      }

      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)(this.props.className, "relative flex flex-column") },
        _react2.default.createElement(
          "div",
          { className: "flex-full relative" },
          _react2.default.createElement(
            "div",
            {
              className: "absolute top bottom left right scroll-x scroll-show scroll-show--hover",
              style: { overflowY: "hidden" }
            },
            _react2.default.createElement(
              "table",
              {
                className: (0, _classnames2.default)(_Table2.default.Table, _Table2.default.TableSimple, "fullscreen-normal-text", "fullscreen-night-text")
              },
              _react2.default.createElement(
                "thead",
                { ref: "header" },
                _react2.default.createElement(
                  "tr",
                  null,
                  cols.map(function (col, colIndex) {
                    return _react2.default.createElement(
                      "th",
                      {
                        key: colIndex,
                        className: (0, _classnames2.default)("TableInteractive-headerCellData cellData text-brand-hover", {
                          "TableInteractive-headerCellData--sorted": sortColumn === colIndex,
                          "text-right": (0, _table.isColumnRightAligned)(col)
                        }),
                        onClick: function onClick() {
                          return _this2.setSort(colIndex);
                        }
                      },
                      _react2.default.createElement(
                        "div",
                        { className: "relative" },
                        _react2.default.createElement(_Icon2.default, {
                          name: sortDescending ? "chevrondown" : "chevronup",
                          width: 8,
                          height: 8,
                          style: {
                            position: "absolute",
                            right: "100%",
                            marginRight: 3
                          }
                        }),
                        _react2.default.createElement(
                          _Ellipsified2.default,
                          null,
                          (0, _formatting.formatColumn)(col)
                        )
                      )
                    );
                  })
                )
              ),
              _react2.default.createElement(
                "tbody",
                null,
                rowIndexes.slice(start, end + 1).map(function (rowIndex, index) {
                  return _react2.default.createElement(
                    "tr",
                    { key: rowIndex, ref: index === 0 ? "firstRow" : null },
                    rows[rowIndex].map(function (cell, columnIndex) {
                      var clicked = (0, _table.getTableCellClickedObject)(data, rowIndex, columnIndex, isPivoted);
                      var isClickable = onVisualizationClick && visualizationIsClickable(clicked);
                      return _react2.default.createElement(
                        "td",
                        {
                          key: columnIndex,
                          style: { whiteSpace: "nowrap" },
                          className: (0, _classnames2.default)("px1 border-bottom", {
                            "text-right": (0, _table.isColumnRightAligned)(cols[columnIndex])
                          })
                        },
                        _react2.default.createElement(
                          "span",
                          {
                            className: (0, _classnames2.default)({
                              "cursor-pointer text-brand-hover": isClickable
                            }),
                            onClick: isClickable ? function (e) {
                              onVisualizationClick(_extends({}, clicked, {
                                element: e.currentTarget
                              }));
                            } : undefined
                          },
                          cell == null ? "-" : (0, _formatting.formatValue)(cell, {
                            column: cols[columnIndex],
                            jsx: true,
                            rich: true
                          })
                        )
                      );
                    })
                  );
                })
              )
            )
          )
        ),
        pageSize < rows.length ? _react2.default.createElement(
          "div",
          {
            ref: "footer",
            className: "p1 flex flex-no-shrink flex-align-right fullscreen-normal-text fullscreen-night-text"
          },
          _react2.default.createElement(
            "span",
            { className: "text-bold" },
            (0, _c3po.t)(_templateObject, start + 1, end + 1, rows.length)
          ),
          _react2.default.createElement(
            "span",
            {
              className: (0, _classnames2.default)("text-brand-hover px1 cursor-pointer", {
                disabled: start === 0
              }),
              onClick: function onClick() {
                return _this2.setState({ page: page - 1 });
              }
            },
            _react2.default.createElement(_Icon2.default, { name: "left", size: 10 })
          ),
          _react2.default.createElement(
            "span",
            {
              className: (0, _classnames2.default)("text-brand-hover pr1 cursor-pointer", {
                disabled: end + 1 >= rows.length
              }),
              onClick: function onClick() {
                return _this2.setState({ page: page + 1 });
              }
            },
            _react2.default.createElement(_Icon2.default, { name: "right", size: 10 })
          )
        ) : null
      );
    }
  }]);

  return TableSimple;
}(_react.Component), _class2.propTypes = {
  data: _propTypes2.default.object.isRequired
}, _class2.defaultProps = {
  className: ""
}, _temp)) || _class;

TableSimple.displayName = "TableSimple";
exports.default = TableSimple;

/***/ }),

/***/ 463:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"Table":"CtorL","TableSimple":"ipoXK"};

/***/ }),

/***/ 464:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pivot = pivot;
exports.distinctValues = distinctValues;
exports.cardinality = cardinality;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _schema_metadata = __webpack_require__(10);

var SchemaMetadata = _interopRequireWildcard(_schema_metadata);

var _formatting = __webpack_require__(8);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function compareNumbers(a, b) {
  return a - b;
}

function pivot(data) {
  // find the lowest cardinality dimension and make it our "pivoted" column
  // TODO: we assume dimensions are in the first 2 columns, which is less than ideal
  var pivotCol = 0,
      normalCol = 1,
      cellCol = 2,
      pivotColValues = distinctValues(data, pivotCol),
      normalColValues = distinctValues(data, normalCol);
  if (normalColValues.length <= pivotColValues.length) {
    pivotCol = 1;
    normalCol = 0;

    var tmp = pivotColValues;
    pivotColValues = normalColValues;
    normalColValues = tmp;
  }

  // sort the column values sensibly
  if (SchemaMetadata.isNumeric(data.cols[pivotCol])) {
    pivotColValues.sort(compareNumbers);
  } else {
    pivotColValues.sort();
  }

  if (SchemaMetadata.isNumeric(data.cols[normalCol])) {
    normalColValues.sort(compareNumbers);
  } else {
    normalColValues.sort();
  }

  // make sure that the first element in the pivoted column list is null which makes room for the label of the other column
  pivotColValues.unshift(data.cols[normalCol].display_name);

  // start with an empty grid that we'll fill with the appropriate values
  var pivotedRows = normalColValues.map(function (normalColValues, index) {
    var row = pivotColValues.map(function () {
      return null;
    });
    // for onVisualizationClick:
    row._dimension = {
      value: normalColValues,
      column: data.cols[normalCol]
    };
    return row;
  });

  // fill it up with the data
  for (var j = 0; j < data.rows.length; j++) {
    var normalColIdx = normalColValues.lastIndexOf(data.rows[j][normalCol]);
    var pivotColIdx = pivotColValues.lastIndexOf(data.rows[j][pivotCol]);

    pivotedRows[normalColIdx][0] = data.rows[j][normalCol];
    // NOTE: we are hard coding the expectation that the metric is in the 3rd column
    pivotedRows[normalColIdx][pivotColIdx] = data.rows[j][2];
  }

  // provide some column metadata to maintain consistency
  var cols = pivotColValues.map(function (value, idx) {
    if (idx === 0) {
      // first column is always the coldef of the normal column
      return data.cols[normalCol];
    }

    var colDef = _underscore2.default.clone(data.cols[cellCol]);
    colDef.name = colDef.display_name = (0, _formatting.formatValue)(value, { column: data.cols[pivotCol] }) || "";
    // for onVisualizationClick:
    colDef._dimension = {
      value: value,
      column: data.cols[pivotCol]
    };
    // delete colDef.id
    return colDef;
  });

  return {
    cols: cols,
    columns: pivotColValues,
    rows: pivotedRows
  };
}

function distinctValues(data, colIdx) {
  var vals = data.rows.map(function (r) {
    return r[colIdx];
  });

  return vals.filter(function (v, i) {
    return i == vals.lastIndexOf(v);
  });
}

function cardinality(data, colIdx) {
  return distinctValues(data, colIdx).length;
}

/***/ }),

/***/ 465:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _CheckBox = __webpack_require__(89);

var _CheckBox2 = _interopRequireDefault(_CheckBox);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _reactSortable = __webpack_require__(731);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OrderedFieldListItem = (0, _reactSortable.sortable)(_class = function (_Component) {
  _inherits(OrderedFieldListItem, _Component);

  function OrderedFieldListItem() {
    _classCallCheck(this, OrderedFieldListItem);

    return _possibleConstructorReturn(this, (OrderedFieldListItem.__proto__ || Object.getPrototypeOf(OrderedFieldListItem)).apply(this, arguments));
  }

  _createClass(OrderedFieldListItem, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        _extends({}, this.props, { className: "list-item" }),
        this.props.children
      );
    }
  }]);

  return OrderedFieldListItem;
}(_react.Component)) || _class;

OrderedFieldListItem.displayName = "OrderedFieldListItem";

var ChartSettingOrderedFields = function (_Component2) {
  _inherits(ChartSettingOrderedFields, _Component2);

  function ChartSettingOrderedFields(props) {
    _classCallCheck(this, ChartSettingOrderedFields);

    var _this2 = _possibleConstructorReturn(this, (ChartSettingOrderedFields.__proto__ || Object.getPrototypeOf(ChartSettingOrderedFields)).call(this, props));

    _this2.updateState = function (obj) {
      _this2.setState(obj);
      if (obj.draggingIndex == null) {
        _this2.props.onChange([].concat(_toConsumableArray(_this2.state.data.items)));
      }
    };

    _this2.setEnabled = function (index, checked) {
      var items = [].concat(_toConsumableArray(_this2.state.data.items));
      items[index] = _extends({}, items[index], { enabled: checked });
      _this2.setState({ data: { items: items } });
      _this2.props.onChange([].concat(_toConsumableArray(items)));
    };

    _this2.isAnySelected = function () {
      var selected = false;

      var _arr = [].concat(_toConsumableArray(_this2.state.data.items));

      for (var _i = 0; _i < _arr.length; _i++) {
        var item = _arr[_i];
        if (item.enabled) {
          selected = true;
          break;
        }
      }
      return selected;
    };

    _this2.toggleAll = function (anySelected) {
      var items = [].concat(_toConsumableArray(_this2.state.data.items)).map(function (item) {
        return _extends({}, item, {
          enabled: !anySelected
        });
      });
      _this2.setState({ data: { items: items } });
      _this2.props.onChange([].concat(_toConsumableArray(items)));
    };

    _this2.state = {
      draggingIndex: null,
      data: { items: [].concat(_toConsumableArray(_this2.props.value)) }
    };
    return _this2;
  }

  _createClass(ChartSettingOrderedFields, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.setState({ data: { items: [].concat(_toConsumableArray(nextProps.value)) } });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var columnNames = this.props.columnNames;

      var anySelected = this.isAnySelected();
      return _react2.default.createElement(
        "div",
        { className: "list" },
        _react2.default.createElement(
          "div",
          { className: "toggle-all" },
          _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)("flex align-center p1", {
                "text-grey-2": !anySelected
              })
            },
            _react2.default.createElement(_CheckBox2.default, {
              checked: anySelected,
              className: (0, _classnames2.default)("text-brand", { "text-grey-2": !anySelected }),
              onChange: function onChange(e) {
                return _this3.toggleAll(anySelected);
              },
              invertChecked: true
            }),
            _react2.default.createElement(
              "span",
              { className: "ml1 h4" },
              anySelected ? "Unselect all" : "Select all"
            )
          )
        ),
        this.state.data.items.map(function (item, i) {
          return _react2.default.createElement(
            OrderedFieldListItem,
            {
              key: i,
              updateState: _this3.updateState,
              items: _this3.state.data.items,
              draggingIndex: _this3.state.draggingIndex,
              sortId: i,
              outline: "list"
            },
            _react2.default.createElement(
              "div",
              {
                className: (0, _classnames2.default)("flex align-center p1", {
                  "text-grey-2": !item.enabled
                })
              },
              _react2.default.createElement(_CheckBox2.default, {
                checked: item.enabled,
                onChange: function onChange(e) {
                  return _this3.setEnabled(i, e.target.checked);
                }
              }),
              _react2.default.createElement(
                "span",
                { className: "ml1 h4" },
                columnNames[item.name]
              ),
              _react2.default.createElement(_Icon2.default, {
                className: "flex-align-right text-grey-2 mr1 cursor-pointer",
                name: "grabber",
                width: 14,
                height: 14
              })
            )
          );
        })
      );
    }
  }]);

  return ChartSettingOrderedFields;
}(_react.Component);

ChartSettingOrderedFields.displayName = "ChartSettingOrderedFields";
exports.default = ChartSettingOrderedFields;

/***/ }),

/***/ 466:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Write here, and use Markdown if you''d like"], ["Write here, and use Markdown if you''d like"]),
    _templateObject2 = _taggedTemplateLiteral(["Vertical Alignment"], ["Vertical Alignment"]),
    _templateObject3 = _taggedTemplateLiteral(["Top"], ["Top"]),
    _templateObject4 = _taggedTemplateLiteral(["Middle"], ["Middle"]),
    _templateObject5 = _taggedTemplateLiteral(["Bottom"], ["Bottom"]),
    _templateObject6 = _taggedTemplateLiteral(["Horizontal Alignment"], ["Horizontal Alignment"]),
    _templateObject7 = _taggedTemplateLiteral(["Left"], ["Left"]),
    _templateObject8 = _taggedTemplateLiteral(["Center"], ["Center"]),
    _templateObject9 = _taggedTemplateLiteral(["Right"], ["Right"]),
    _templateObject10 = _taggedTemplateLiteral(["Show background"], ["Show background"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactMarkdown = __webpack_require__(732);

var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

var _Text = __webpack_require__(467);

var _Text2 = _interopRequireDefault(_Text);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _c3po = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HEADER_ICON_SIZE = 16;

var HEADER_ACTION_STYLE = {
  padding: 4
};

var getSettingsStyle = function getSettingsStyle(settings) {
  return {
    "align-center": settings["text.align_horizontal"] === "center",
    "align-end": settings["text.align_horizontal"] === "right",
    "justify-center": settings["text.align_vertical"] === "middle",
    "justify-end": settings["text.align_vertical"] === "bottom"
  };
};

var Text = (_temp = _class = function (_Component) {
  _inherits(Text, _Component);

  function Text(props) {
    _classCallCheck(this, Text);

    var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props));

    _this.state = {
      isShowingRenderedOutput: false,
      text: ""
    };
    return _this;
  }

  _createClass(Text, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      // dashboard is going into edit mode
      if (!this.props.isEditing && newProps.isEditing) {
        this.onEdit();
      }
    }
  }, {
    key: "handleTextChange",
    value: function handleTextChange(text) {
      this.props.onUpdateVisualizationSettings({ text: text });
    }
  }, {
    key: "onEdit",
    value: function onEdit() {
      this.setState({ isShowingRenderedOutput: false });
    }
  }, {
    key: "onPreview",
    value: function onPreview() {
      this.setState({ isShowingRenderedOutput: true });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          actionButtons = _props.actionButtons,
          gridSize = _props.gridSize,
          settings = _props.settings,
          isEditing = _props.isEditing;

      var isSmall = gridSize && gridSize.width < 4;

      if (isEditing) {
        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(className, _Text2.default.Text, _Text2.default[isSmall ? "small" : "large"], _Text2.default["dashboard-is-editing"])
          },
          _react2.default.createElement(TextActionButtons, {
            actionButtons: actionButtons,
            isShowingRenderedOutput: this.state.isShowingRenderedOutput,
            onEdit: this.onEdit.bind(this),
            onPreview: this.onPreview.bind(this)
          }),
          this.state.isShowingRenderedOutput ? _react2.default.createElement(_reactMarkdown2.default, {
            className: (0, _classnames2.default)("full flex-full flex flex-column text-card-markdown", _Text2.default["text-card-markdown"], getSettingsStyle(settings)),
            source: settings.text
          }) : _react2.default.createElement("textarea", {
            className: (0, _classnames2.default)("full flex-full flex flex-column bg-grey-0 bordered drag-disabled", _Text2.default["text-card-textarea"]),
            name: "text",
            placeholder: (0, _c3po.t)(_templateObject),
            value: settings.text,
            onChange: function onChange(e) {
              return _this2.handleTextChange(e.target.value);
            }
          })
        );
      } else {
        return _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(className, _Text2.default.Text, _Text2.default[isSmall ? "small" : "large"],
            /* if the card is not showing a background we should adjust the left
             * padding to help align the titles with the wrapper */
            { pl0: !settings["dashcard.background"] })
          },
          _react2.default.createElement(_reactMarkdown2.default, {
            className: (0, _classnames2.default)("full flex-full flex flex-column text-card-markdown", _Text2.default["text-card-markdown"], getSettingsStyle(settings)),
            source: settings.text
          })
        );
      }
    }
  }], [{
    key: "checkRenderable",
    value: function checkRenderable() {
      // text can always be rendered, nothing needed here
    }
  }]);

  return Text;
}(_react.Component), _class.uiName = "Text", _class.identifier = "text", _class.iconName = "text", _class.disableSettingsConfig = false, _class.noHeader = true, _class.supportsSeries = false, _class.hidden = true, _class.minSize = { width: 4, height: 1 }, _class.settings = {
  "card.title": {
    dashboard: false
  },
  "card.description": {
    dashboard: false
  },
  text: {
    value: "",
    default: ""
  },
  "text.align_vertical": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject2),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject3), value: "top" }, { name: (0, _c3po.t)(_templateObject4), value: "middle" }, { name: (0, _c3po.t)(_templateObject5), value: "bottom" }]
    },
    default: "top"
  },
  "text.align_horizontal": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject6),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject7), value: "left" }, { name: (0, _c3po.t)(_templateObject8), value: "center" }, { name: (0, _c3po.t)(_templateObject9), value: "right" }]
    },
    default: "left"
  },
  "dashcard.background": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject10),
    dashboard: true,
    widget: "toggle",
    default: true
  }
}, _temp);
Text.displayName = "Text";
exports.default = Text;


var TextActionButtons = function TextActionButtons(_ref) {
  var actionButtons = _ref.actionButtons,
      isShowingRenderedOutput = _ref.isShowingRenderedOutput,
      onEdit = _ref.onEdit,
      onPreview = _ref.onPreview;
  return _react2.default.createElement(
    "div",
    { className: "Card-title" },
    _react2.default.createElement(
      "div",
      { className: "absolute top left p1 px2" },
      _react2.default.createElement(
        "span",
        {
          className: "DashCard-actions-persistent flex align-center",
          style: { lineHeight: 1 }
        },
        _react2.default.createElement(
          "a",
          {
            "data-metabase-event": "Dashboard;Text;edit",
            className: (0, _classnames2.default)(" cursor-pointer h3 flex-no-shrink relative mr1", {
              "text-grey-2 text-grey-4-hover": isShowingRenderedOutput,
              "text-brand": !isShowingRenderedOutput
            }),
            onClick: onEdit,
            style: HEADER_ACTION_STYLE
          },
          _react2.default.createElement(
            "span",
            { className: "flex align-center" },
            _react2.default.createElement(
              "span",
              { className: "flex" },
              _react2.default.createElement(_Icon2.default, {
                name: "editdocument",
                style: { top: 0, left: 0 },
                size: HEADER_ICON_SIZE
              })
            )
          )
        ),
        _react2.default.createElement(
          "a",
          {
            "data-metabase-event": "Dashboard;Text;preview",
            className: (0, _classnames2.default)(" cursor-pointer h3 flex-no-shrink relative mr1", {
              "text-grey-2 text-grey-4-hover": !isShowingRenderedOutput,
              "text-brand": isShowingRenderedOutput
            }),
            onClick: onPreview,
            style: HEADER_ACTION_STYLE
          },
          _react2.default.createElement(
            "span",
            { className: "flex align-center" },
            _react2.default.createElement(
              "span",
              { className: "flex" },
              _react2.default.createElement(_Icon2.default, { name: "eye", style: { top: 0, left: 0 }, size: 20 })
            )
          )
        )
      )
    ),
    _react2.default.createElement(
      "div",
      { className: "absolute top right p1 px2" },
      actionButtons
    )
  );
};
TextActionButtons.displayName = "TextActionButtons";

/***/ }),

/***/ 467:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"Text":"_3yC8D","dashboard-is-editing":"_3Nt-8","text-card-textarea":"_3KwDU","text-card-markdown":"_1J_Mq"};

/***/ }),

/***/ 468:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Line"], ["Line"]),
    _templateObject2 = _taggedTemplateLiteral(["line chart"], ["line chart"]);

var _c3po = __webpack_require__(2);

var _LineAreaBarChart2 = __webpack_require__(109);

var _LineAreaBarChart3 = _interopRequireDefault(_LineAreaBarChart2);

var _LineAreaBarRenderer = __webpack_require__(144);

var _graph = __webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LineChart = (_temp = _class = function (_LineAreaBarChart) {
  _inherits(LineChart, _LineAreaBarChart);

  function LineChart() {
    _classCallCheck(this, LineChart);

    return _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).apply(this, arguments));
  }

  return LineChart;
}(_LineAreaBarChart3.default), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "line", _class.iconName = "line", _class.noun = (0, _c3po.t)(_templateObject2), _class.settings = _extends({}, _graph.GRAPH_DATA_SETTINGS, _graph.LINE_SETTINGS, _graph.GRAPH_GOAL_SETTINGS, _graph.LINE_SETTINGS_2, _graph.GRAPH_COLORS_SETTINGS, _graph.GRAPH_AXIS_SETTINGS), _class.renderer = _LineAreaBarRenderer.lineRenderer, _temp);
exports.default = LineChart;

/***/ }),

/***/ 469:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 470:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChartSettingInput = function ChartSettingInput(_ref) {
  var value = _ref.value,
      _onChange = _ref.onChange;
  return _react2.default.createElement("input", {
    className: "input block full",
    value: value,
    onChange: function onChange(e) {
      return _onChange(e.target.value);
    }
  });
};

ChartSettingInput.displayName = "ChartSettingInput";
exports.default = ChartSettingInput;

/***/ }),

/***/ 471:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ChartSettingInputGroup;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Input = __webpack_require__(67);

var _Input2 = _interopRequireDefault(_Input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// value is an array of strings. This component provides one input box per string
function ChartSettingInputGroup(_ref) {
  var values = _ref.value,
      onChange = _ref.onChange;

  var inputs = values.map(function (str, i) {
    return _react2.default.createElement(_Input2.default, {
      key: i,
      className: "input block full mb1",
      value: str,
      onBlurChange: function onBlurChange(e) {
        var newStr = e.target.value.trim();
        if (!newStr || !newStr.length) return;
        // clone the original values array. It's read-only so we can't just replace the one value we want
        var newValues = values.slice();
        newValues[i] = newStr;
        onChange(newValues);
      }
    });
  });

  return _react2.default.createElement(
    "div",
    null,
    inputs
  );
}
ChartSettingInputGroup.displayName = "ChartSettingInputGroup";

/***/ }),

/***/ 472:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChartSettingInputNumeric = function (_Component) {
  _inherits(ChartSettingInputNumeric, _Component);

  function ChartSettingInputNumeric(props, context) {
    _classCallCheck(this, ChartSettingInputNumeric);

    var _this = _possibleConstructorReturn(this, (ChartSettingInputNumeric.__proto__ || Object.getPrototypeOf(ChartSettingInputNumeric)).call(this, props, context));

    _this.state = {
      value: String(props.value == null ? "" : props.value)
    };
    return _this;
  }

  _createClass(ChartSettingInputNumeric, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        value: String(nextProps.value == null ? "" : nextProps.value)
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _onChange = this.props.onChange;

      return _react2.default.createElement("input", {
        className: (0, _classnames2.default)("input block full", {
          "border-error": this.state.value !== "" && isNaN(parseFloat(this.state.value))
        }),
        value: this.state.value,
        onChange: function onChange(e) {
          var num = parseFloat(e.target.value);
          if (!isNaN(num) && num !== _this2.props.value) {
            _onChange(num);
          }
          _this2.setState({ value: e.target.value });
        },
        onBlur: function onBlur(e) {
          var num = parseFloat(e.target.value);
          if (isNaN(num)) {
            _onChange(undefined);
          } else {
            _onChange(num);
          }
        }
      });
    }
  }]);

  return ChartSettingInputNumeric;
}(_react.Component);

ChartSettingInputNumeric.displayName = "ChartSettingInputNumeric";
exports.default = ChartSettingInputNumeric;

/***/ }),

/***/ 473:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Radio = __webpack_require__(216);

var _Radio2 = _interopRequireDefault(_Radio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChartSettingRadio = function ChartSettingRadio(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange,
      _ref$options = _ref.options,
      options = _ref$options === undefined ? [] : _ref$options,
      className = _ref.className;
  return _react2.default.createElement(_Radio2.default, {
    className: className,
    value: value,
    onChange: onChange,
    options: options,
    isVertical: true
  });
};

ChartSettingRadio.displayName = "ChartSettingRadio";
exports.default = ChartSettingRadio;

/***/ }),

/***/ 474:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Toggle = __webpack_require__(126);

var _Toggle2 = _interopRequireDefault(_Toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChartSettingToggle = function ChartSettingToggle(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange;
  return _react2.default.createElement(_Toggle2.default, { value: value, onChange: onChange });
};

ChartSettingToggle.displayName = "ChartSettingToggle";
exports.default = ChartSettingToggle;

/***/ }),

/***/ 475:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"toggle":"_2lChr","selected":"_3MRMF"};

/***/ }),

/***/ 476:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["error"], ["error"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _ChartSettingFieldPicker = __webpack_require__(260);

var _ChartSettingFieldPicker2 = _interopRequireDefault(_ChartSettingFieldPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var ChartSettingFieldsPicker = function ChartSettingFieldsPicker(_ref) {
  var _ref$value = _ref.value,
      value = _ref$value === undefined ? [] : _ref$value,
      options = _ref.options,
      _onChange = _ref.onChange,
      addAnother = _ref.addAnother;
  return _react2.default.createElement(
    "div",
    null,
    Array.isArray(value) ? value.map(function (v, index) {
      return _react2.default.createElement(_ChartSettingFieldPicker2.default, {
        key: index,
        value: v,
        options: options,
        onChange: function onChange(v) {
          var newValue = [].concat(_toConsumableArray(value));
          // this swaps the position of the existing value
          var existingIndex = value.indexOf(v);
          if (existingIndex >= 0) {
            newValue.splice(existingIndex, 1, value[index]);
          }
          // replace with the new value
          newValue.splice(index, 1, v);
          _onChange(newValue);
        },
        onRemove: value.filter(function (v) {
          return v != null;
        }).length > 1 || value.length > 1 && v == null ? function () {
          return _onChange([].concat(_toConsumableArray(value.slice(0, index)), _toConsumableArray(value.slice(index + 1))));
        } : null
      });
    }) : _react2.default.createElement(
      "span",
      { className: "text-error" },
      (0, _c3po.t)(_templateObject)
    ),
    addAnother && _react2.default.createElement(
      "div",
      { className: "mt1" },
      _react2.default.createElement(
        "a",
        {
          onClick: function onClick() {
            var remaining = options.filter(function (o) {
              return value.indexOf(o.value) < 0;
            });
            if (remaining.length === 1) {
              // if there's only one unused option, use it
              _onChange(value.concat([remaining[0].value]));
            } else {
              // otherwise leave it blank
              _onChange(value.concat([undefined]));
            }
          }
        },
        addAnother
      )
    )
  );
};

ChartSettingFieldsPicker.displayName = "ChartSettingFieldsPicker";
exports.default = ChartSettingFieldsPicker;

/***/ }),

/***/ 477:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ChartSettingColorPicker = __webpack_require__(261);

var _ChartSettingColorPicker2 = _interopRequireDefault(_ChartSettingColorPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChartSettingColorsPicker = function (_Component) {
  _inherits(ChartSettingColorsPicker, _Component);

  function ChartSettingColorsPicker() {
    _classCallCheck(this, ChartSettingColorsPicker);

    return _possibleConstructorReturn(this, (ChartSettingColorsPicker.__proto__ || Object.getPrototypeOf(ChartSettingColorsPicker)).apply(this, arguments));
  }

  _createClass(ChartSettingColorsPicker, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          value = _props.value,
          _onChange = _props.onChange,
          seriesTitles = _props.seriesTitles;

      return _react2.default.createElement(
        "div",
        null,
        seriesTitles.map(function (title, index) {
          return _react2.default.createElement(_ChartSettingColorPicker2.default, {
            key: index,
            onChange: function onChange(color) {
              return _onChange([].concat(_toConsumableArray(value.slice(0, index)), [color], _toConsumableArray(value.slice(index + 1))));
            },
            title: title,
            value: value[index]
          });
        })
      );
    }
  }]);

  return ChartSettingColorsPicker;
}(_react.Component);

ChartSettingColorsPicker.displayName = "ChartSettingColorsPicker";
exports.default = ChartSettingColorsPicker;

/***/ }),

/***/ 478:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /// code to "apply" chart tooltips. (How does one apply a tooltip?)

exports.setupTooltips = setupTooltips;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _formatting = __webpack_require__(8);

var _renderer_utils = __webpack_require__(110);

var _tooltip = __webpack_require__(479);

var _utils = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// series = an array of serieses (?) in the chart. There's only one thing in here unless we're dealing with a multiseries chart
function applyChartTooltips(chart, series, isStacked, isNormalized, isScalarSeries, onHoverChange, onVisualizationClick) {
  var _series = _slicedToArray(series, 1),
      cols = _series[0].data.cols;

  chart.on("renderlet.tooltips", function (chart) {
    chart.selectAll("title").remove();

    if (onHoverChange) {
      chart.selectAll(".bar, .dot, .area, .line, .bubble").on("mousemove", function (d, i) {
        var seriesIndex = (0, _tooltip.determineSeriesIndexFromElement)(this, isStacked);
        var card = series[seriesIndex].card;
        var isSingleSeriesBar = this.classList.contains("bar") && series.length === 1;
        var isArea = this.classList.contains("area");

        var data = [];
        if (Array.isArray(d.key)) {
          // scatter
          if (d.key._origin) {
            data = d.key._origin.row.map(function (value, index) {
              var col = d.key._origin.cols[index];
              return { key: (0, _utils.getFriendlyName)(col), value: value, col: col };
            });
          } else {
            data = d.key.map(function (value, index) {
              return {
                key: (0, _utils.getFriendlyName)(cols[index]),
                value: value,
                col: cols[index]
              };
            });
          }
        } else if (d.data) {
          // line, area, bar
          if (!isSingleSeriesBar) {
            cols = series[seriesIndex].data.cols;
          }

          data = [{
            key: (0, _utils.getFriendlyName)(cols[0]),
            value: d.data.key,
            col: cols[0]
          }, {
            key: (0, _utils.getFriendlyName)(cols[1]),
            value: isNormalized ? (0, _formatting.formatValue)(d.data.value) * 100 + "%" : d.data.value,
            col: cols[1]
          }];

          // now add entries to the tooltip for columns that aren't the X or Y axis. These aren't in
          // the normal `cols` array, which is just the cols used in the graph axes; look in `_rawCols`
          // for any other columns. If we find them, add them at the end of the `data` array.
          //
          // To find the actual row where data is coming from is somewhat overcomplicated because i
          // seems to follow a strange pattern that doesn't directly correspond to the rows in our
          // data. Not sure why but it appears values of i follow this pattern:
          //
          //  [Series 1]  i = 7   i = 8   i = 9  i = 10   i = 11
          //  [Series 0]  i = 1   i = 2   i = 3  i = 4    i = 5
          //             [Row 0] [Row 1] [Row 2] [Row 3] [Row 4]
          //
          // Deriving the rowIndex from i can be done as follows:
          // rowIndex = (i % (numRows + 1)) - 1;
          //
          // example: for series 1, i = 10
          // rowIndex = (10 % 6) - 1 = 4 - 1 = 3
          //
          // for series 0, i = 3
          // rowIndex = (3 % 6) - 1 = 3 - 1 = 2
          var seriesData = series[seriesIndex].data || {};
          var rawCols = seriesData._rawCols;
          var rows = seriesData && seriesData.rows;
          var rowIndex = rows && i % (rows.length + 1) - 1;
          var row = rowIndex != null && seriesData.rows[rowIndex];
          var rawRow = row && row._origin && row._origin.row; // get the raw query result row
          // make sure the row index we've determined with our formula above is correct. Check the
          // x/y axis values ("key" & "value") and make sure they match up with the row before setting
          // the data for the tooltip
          if (rawRow && row[0] === d.data.key && row[1] === d.data.value) {
            // rather than just append the additional values we'll just create a new `data` array.
            // simply appending the additional values would result in tooltips whose order switches
            // between different series.
            // Loop over *all* of the columns and create the new array
            data = rawCols.map(function (col, i) {
              // if this was one of the original x/y columns keep the original object because it
              // may have the `isNormalized` tweak above.
              if (col === data[0].col) return data[0];
              if (col === data[1].col) return data[1];
              // otherwise just create a new object for any other columns.
              return {
                key: (0, _utils.getFriendlyName)(col),
                value: rawRow[i],
                col: col
              };
            });
          }
        }

        if (data && series.length > 1) {
          if (card._breakoutColumn) {
            data.unshift({
              key: (0, _utils.getFriendlyName)(card._breakoutColumn),
              value: card._breakoutValue,
              col: card._breakoutColumn
            });
          }
        }

        data = _underscore2.default.uniq(data, function (d) {
          return d.col;
        });

        onHoverChange({
          // for single series bar charts, fade the series and highlght the hovered element with CSS
          index: isSingleSeriesBar ? -1 : seriesIndex,
          // for area charts, use the mouse location rather than the DOM element
          element: isArea ? null : this,
          event: isArea ? _d3.default.event : null,
          data: data.length > 0 ? data : null
        });
      }).on("mouseleave", function () {
        if (!onHoverChange) {
          return;
        }
        onHoverChange(null);
      });
    }

    if (onVisualizationClick) {
      var onClick = function onClick(d) {
        var seriesIndex = (0, _tooltip.determineSeriesIndexFromElement)(this, isStacked);
        var card = series[seriesIndex].card;
        var isSingleSeriesBar = this.classList.contains("bar") && series.length === 1;

        var clicked = void 0;
        if (Array.isArray(d.key)) {
          // scatter
          clicked = {
            value: d.key[2],
            column: cols[2],
            dimensions: [{ value: d.key[0], column: cols[0] }, { value: d.key[1], column: cols[1] }].filter(function (_ref) {
              var column = _ref.column;
              return (
                // don't include aggregations since we can't filter on them
                column.source !== "aggregation"
              );
            }),
            origin: d.key._origin
          };
        } else if (isScalarSeries) {
          // special case for multi-series scalar series, which should be treated as scalars
          clicked = {
            value: d.data.value,
            column: series[seriesIndex].data.cols[1]
          };
        } else if (d.data) {
          // line, area, bar
          if (!isSingleSeriesBar) {
            cols = series[seriesIndex].data.cols;
          }
          clicked = {
            value: d.data.value,
            column: cols[1],
            dimensions: [{ value: d.data.key, column: cols[0] }]
          };
        } else {
          clicked = {
            dimensions: []
          };
        }

        // handle multiseries
        if (clicked && series.length > 1) {
          if (card._breakoutColumn) {
            // $FlowFixMe
            clicked.dimensions.push({
              value: card._breakoutValue,
              column: card._breakoutColumn
            });
          }
        }

        if (card._seriesIndex != null) {
          // $FlowFixMe
          clicked.seriesIndex = card._seriesIndex;
        }

        if (clicked) {
          var isLine = this.classList.contains("dot");
          onVisualizationClick(_extends({}, clicked, {
            element: isLine ? this : null,
            event: isLine ? null : _d3.default.event
          }));
        }
      };

      // for some reason interaction with brush requires we use click for .dot and .bubble but mousedown for bar
      chart.selectAll(".dot, .bubble").style({ cursor: "pointer" }).on("click", onClick);
      chart.selectAll(".bar").style({ cursor: "pointer" }).on("mousedown", onClick);
    }
  });
}

function setupTooltips(_ref2, datas, parent, _ref3) {
  var settings = _ref2.settings,
      series = _ref2.series,
      isScalarSeries = _ref2.isScalarSeries,
      onHoverChange = _ref2.onHoverChange,
      onVisualizationClick = _ref2.onVisualizationClick;
  var isBrushing = _ref3.isBrushing;

  applyChartTooltips(parent, series, (0, _renderer_utils.isStacked)(settings, datas), (0, _renderer_utils.isNormalized)(settings, datas), isScalarSeries, function (hovered) {
    // disable tooltips while brushing
    if (onHoverChange && !isBrushing()) {
      // disable tooltips on lines
      if (hovered && hovered.element && hovered.element.classList.contains("line")) {
        delete hovered.element;
      }
      onHoverChange(hovered);
    }
  }, onVisualizationClick);
}

/***/ }),

/***/ 479:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.determineSeriesIndexFromElement = determineSeriesIndexFromElement;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/*  weak */

function getElementIndex(e) {
  return e && [].concat(_toConsumableArray(e.classList)).map(function (c) {
    return c.match(/^_(\d+)$/);
  }).filter(function (c) {
    return c;
  }).map(function (c) {
    return parseInt(c[1], 10);
  })[0];
}

function getParentWithClass(element, className) {
  while (element) {
    if (element.classList && element.classList.contains(className)) {
      return element;
    }
    element = element.parentNode;
  }
  return null;
}

// HACK: This determines the index of the series the provided element belongs to since DC doesn't seem to provide another way
function determineSeriesIndexFromElement(element, isStacked) {
  if (isStacked) {
    if (element.classList.contains("dot")) {
      // .dots are children of dc-tooltip
      return getElementIndex(getParentWithClass(element, "dc-tooltip"));
    } else {
      return getElementIndex(getParentWithClass(element, "stack"));
    }
  } else {
    return getElementIndex(getParentWithClass(element, "sub"));
  }
}

/***/ }),

/***/ 480:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(["xValues missing!"], ["xValues missing!"]);

exports.default = fillMissingValuesInDatas;

var _c3po = __webpack_require__(2);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _renderer_utils = __webpack_require__(110);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } // code for filling in the missing values in a set of "datas"

// max number of points to "fill"
// TODO: base on pixel width of chart?
var MAX_FILL_COUNT = 10000;

function fillMissingValues(datas, xValues, fillValue) {
  var getKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (v) {
    return v;
  };

  try {
    return datas.map(function (rows) {
      var fillValues = rows[0].slice(1).map(function (d) {
        return fillValue;
      });

      var map = new Map();
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var row = _step.value;

          map.set(getKey(row[0]), row);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var newRows = xValues.map(function (value) {
        var key = getKey(value);
        var row = map.get(key);
        if (row) {
          map.delete(key);
          return [value].concat(_toConsumableArray(row.slice(1)));
        } else {
          return [value].concat(_toConsumableArray(fillValues));
        }
      });
      if (map.size > 0) {
        console.warn((0, _c3po.t)(_templateObject), map, newRows);
      }
      return newRows;
    });
  } catch (e) {
    console.warn(e);
    return datas;
  }
}

function fillMissingValuesInDatas(props, _ref, datas) {
  var xValues = _ref.xValues,
      xDomain = _ref.xDomain,
      xInterval = _ref.xInterval;
  var settings = props.settings;

  if (settings["line.missing"] === "zero" || settings["line.missing"] === "none") {
    var fillValue = settings["line.missing"] === "zero" ? 0 : null;
    if ((0, _renderer_utils.isTimeseries)(settings)) {
      // $FlowFixMe
      var interval = xInterval.interval,
          count = xInterval.count;

      if (count <= MAX_FILL_COUNT) {
        // replace xValues with
        xValues = _d3.default.time[interval].range(xDomain[0], (0, _moment2.default)(xDomain[1]).add(1, "ms"), count).map(function (d) {
          return (0, _moment2.default)(d);
        });
        datas = fillMissingValues(datas, xValues, fillValue, function (m) {
          return _d3.default.round(m.toDate().getTime(), -1);
        } // sometimes rounds up 1ms?
        );
      }
    }
    if ((0, _renderer_utils.isQuantitative)(settings) || (0, _renderer_utils.isHistogram)(settings)) {
      // $FlowFixMe
      var _count = Math.abs((xDomain[1] - xDomain[0]) / xInterval);
      if (_count <= MAX_FILL_COUNT) {
        var _xDomain = _slicedToArray(xDomain, 2),
            start = _xDomain[0],
            end = _xDomain[1];

        if ((0, _renderer_utils.isHistogramBar)(props)) {
          // NOTE: intentionally add an end point for bar histograms
          // $FlowFixMe
          end += xInterval * 1.5;
        } else {
          // NOTE: avoid including endpoint due to floating point error
          // $FlowFixMe
          end += xInterval * 0.5;
        }
        xValues = _d3.default.range(start, end, xInterval);
        datas = fillMissingValues(datas, xValues, fillValue,
        // NOTE: normalize to xInterval to avoid floating point issues
        function (v) {
          return Math.round(v / xInterval);
        });
      }
    } else {
      datas = fillMissingValues(datas, xValues, fillValue);
    }
  }
  return datas;
}

/***/ }),

/***/ 481:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineAddons = undefined;

var _dc = __webpack_require__(123);

var _dc2 = _interopRequireDefault(_dc);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*  weak */

var lineAddons = exports.lineAddons = function lineAddons(_chart) {
  _chart.fadeDeselectedArea = function () {
    var dots = _chart.chartBodyG().selectAll(".dot");
    var extent = _chart.brush().extent();

    if (_chart.isOrdinal()) {
      if (_chart.hasFilter()) {
        dots.classed(_dc2.default.constants.SELECTED_CLASS, function (d) {
          return _chart.hasFilter(d.x);
        });
        dots.classed(_dc2.default.constants.DESELECTED_CLASS, function (d) {
          return !_chart.hasFilter(d.x);
        });
      } else {
        dots.classed(_dc2.default.constants.SELECTED_CLASS, false);
        dots.classed(_dc2.default.constants.DESELECTED_CLASS, false);
      }
    } else {
      if (!_chart.brushIsEmpty(extent)) {
        var start = extent[0];
        var end = extent[1];
        var isSelected = function isSelected(d) {
          if (_moment2.default.isDate(start)) {
            return !((0, _moment2.default)(d.x).isBefore(start) || (0, _moment2.default)(d.x).isAfter(end));
          } else {
            return !(d.x < start || d.x >= end);
          }
        };
        dots.classed(_dc2.default.constants.DESELECTED_CLASS, function (d) {
          return !isSelected(d);
        });
        dots.classed(_dc2.default.constants.SELECTED_CLASS, function (d) {
          return isSelected(d);
        });
      } else {
        dots.classed(_dc2.default.constants.DESELECTED_CLASS, false);
        dots.classed(_dc2.default.constants.SELECTED_CLASS, false);
      }
    }
  };

  return _chart;
};

/***/ }),

/***/ 482:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initBrush = initBrush;

var _keyboard = __webpack_require__(69);

var _dom = __webpack_require__(28);

function initBrush(parent, child, onBrushChange, onBrushEnd) {
  if (!parent.brushOn || !child.brushOn) {
    return;
  }

  // enable brush
  parent.brushOn(true);
  child.brushOn(true);

  // normally dots are disabled if brush is on but we want them anyway
  if (child.xyTipsOn) {
    child.xyTipsOn("always");
  }

  // the brush has been cancelled by pressing escape
  var cancelled = false;
  // the last updated range when brushing
  var range = null;

  // start
  parent.brush().on("brushstart.custom", function () {
    // reset "range"
    range = null;
    // reset "cancelled" flag
    cancelled = false;
    // add "dragging" class to chart
    parent.svg().classed("dragging", true);
    // move the brush element to the front
    (0, _dom.moveToFront)(parent.select(".brush").node());
    // add an escape keydown listener
    window.addEventListener("keydown", onKeyDown, true);
  });

  // change
  child.addFilterHandler(function (filters, r) {
    // update "range" with new filter range
    range = r;

    // emit "onBrushChange" event
    onBrushChange(range);

    // fade deselected bars
    parent.fadeDeselectedArea();

    // return filters unmodified
    return filters;
  });

  // end
  parent.brush().on("brushend.custom", function () {
    // remove the "dragging" classed
    parent.svg().classed("dragging", false);
    // reset brush opacity (if the brush was cancelled)
    parent.select(".brush").style("opacity", 1);
    // move the brush to the back
    (0, _dom.moveToBack)(parent.select(".brush").node());
    // remove the escape keydown listener
    window.removeEventListener("keydown", onKeyDown, true);
    // reset the fitler and redraw
    child.filterAll();
    parent.redraw();

    // if not cancelled, emit the onBrushEnd event with the last filter range
    onBrushEnd(cancelled ? null : range);
    range = null;
  });

  // cancel
  var onKeyDown = function onKeyDown(e) {
    if (e.keyCode === _keyboard.KEYCODE_ESCAPE) {
      // set the "cancelled" flag
      cancelled = true;
      // dispatch a mouseup to end brushing early
      window.dispatchEvent(new MouseEvent("mouseup"));
    }
  };

  parent.on("pretransition.custom", function (chart) {
    // move brush to the back so tootips/clicks still work
    (0, _dom.moveToBack)(chart.select(".brush").node());
    // remove the handles since we can't adjust them anyway
    chart.selectAll(".brush .resize").remove();
  });
}

/***/ }),

/***/ 483:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Row Chart"], ["Row Chart"]),
    _templateObject2 = _taggedTemplateLiteral(["row chart"], ["row chart"]),
    _templateObject3 = _taggedTemplateLiteral(["X-axis"], ["X-axis"]),
    _templateObject4 = _taggedTemplateLiteral(["Y-axis"], ["Y-axis"]);

var _c3po = __webpack_require__(2);

var _LineAreaBarChart2 = __webpack_require__(109);

var _LineAreaBarChart3 = _interopRequireDefault(_LineAreaBarChart2);

var _RowRenderer = __webpack_require__(484);

var _RowRenderer2 = _interopRequireDefault(_RowRenderer);

var _graph = __webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RowChart = (_temp = _class = function (_LineAreaBarChart) {
  _inherits(RowChart, _LineAreaBarChart);

  function RowChart() {
    _classCallCheck(this, RowChart);

    return _possibleConstructorReturn(this, (RowChart.__proto__ || Object.getPrototypeOf(RowChart)).apply(this, arguments));
  }

  return RowChart;
}(_LineAreaBarChart3.default), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "row", _class.iconName = "horizontal_bar", _class.noun = (0, _c3po.t)(_templateObject2), _class.supportsSeries = false, _class.renderer = _RowRenderer2.default, _class.settings = _extends({}, _graph.GRAPH_DATA_SETTINGS, _graph.GRAPH_COLORS_SETTINGS), _temp);

// rename these settings

exports.default = RowChart;
RowChart.settings["graph.metrics"] = _extends({}, RowChart.settings["graph.metrics"], {
  title: (0, _c3po.t)(_templateObject3)
});
RowChart.settings["graph.dimensions"] = _extends({}, RowChart.settings["graph.dimensions"], {
  title: (0, _c3po.t)(_templateObject4)
});

/***/ }),

/***/ 484:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /// Logic for rendering a rows chart.

exports.default = rowRenderer;

var _crossfilter = __webpack_require__(210);

var _crossfilter2 = _interopRequireDefault(_crossfilter);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _dc = __webpack_require__(123);

var _dc2 = _interopRequireDefault(_dc);

var _formatting = __webpack_require__(8);

var _renderer_utils = __webpack_require__(110);

var _utils = __webpack_require__(21);

var _LineAreaBarPostRender = __webpack_require__(263);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function rowRenderer(element, _ref) {
  var settings = _ref.settings,
      series = _ref.series,
      onHoverChange = _ref.onHoverChange,
      onVisualizationClick = _ref.onVisualizationClick,
      height = _ref.height;
  var cols = series[0].data.cols;


  if (series.length > 1) {
    throw new Error("Row chart does not support multiple series");
  }

  var chart = _dc2.default.rowChart(element);

  // disable clicks
  chart.onClick = function () {};

  var colors = settings["graph.colors"];

  var formatDimension = function formatDimension(row) {
    return (0, _formatting.formatValue)(row[0], { column: cols[0], type: "axis" });
  };

  // dc.js doesn't give us a way to format the row labels from unformatted data, so we have to
  // do it here then construct a mapping to get the original dimension for tooltipsd/clicks
  var rows = series[0].data.rows.map(function (row) {
    return [formatDimension(row), row[1]];
  });
  var formattedDimensionMap = new Map(rows.map(function (_ref2, index) {
    var _ref3 = _slicedToArray(_ref2, 1),
        formattedDimension = _ref3[0];

    return [formattedDimension, series[0].data.rows[index][0]];
  }));

  var dataset = (0, _crossfilter2.default)(rows);
  var dimension = dataset.dimension(function (d) {
    return d[0];
  });
  var group = dimension.group().reduceSum(function (d) {
    return d[1];
  });
  var xDomain = _d3.default.extent(rows, function (d) {
    return d[1];
  });
  var yValues = rows.map(function (d) {
    return d[0];
  });

  (0, _renderer_utils.forceSortedGroup)(group, (0, _renderer_utils.makeIndexMap)(yValues));

  (0, _renderer_utils.initChart)(chart, element);

  chart.on("renderlet.tooltips", function (chart) {
    if (onHoverChange) {
      chart.selectAll(".row rect").on("mousemove", function (d, i) {
        onHoverChange && onHoverChange({
          // for single series bar charts, fade the series and highlght the hovered element with CSS
          index: -1,
          event: _d3.default.event,
          data: [{
            key: (0, _utils.getFriendlyName)(cols[0]),
            value: formattedDimensionMap.get(d.key),
            col: cols[0]
          }, { key: (0, _utils.getFriendlyName)(cols[1]), value: d.value, col: cols[1] }]
        });
      }).on("mouseleave", function () {
        onHoverChange && onHoverChange(null);
      });
    }

    if (onVisualizationClick) {
      chart.selectAll(".row rect").on("click", function (d) {
        onVisualizationClick({
          value: d.value,
          column: cols[1],
          dimensions: [{
            value: formattedDimensionMap.get(d.key),
            column: cols[0]
          }],
          element: this
        });
      });
    }
  });

  chart.ordinalColors([colors[0]]).x(_d3.default.scale.linear().domain(xDomain)).elasticX(true).dimension(dimension).group(group).ordering(function (d) {
    return d.index;
  });

  var labelPadHorizontal = 5;
  var labelPadVertical = 1;
  var labelsOutside = false;

  chart.on("renderlet.bar-labels", function (chart) {
    chart.selectAll("g.row text").attr("text-anchor", labelsOutside ? "end" : "start").attr("x", labelsOutside ? -labelPadHorizontal : labelPadHorizontal).classed(labelsOutside ? "outside" : "inside", true);
  });

  if (settings["graph.y_axis.labels_enabled"]) {
    chart.on("renderlet.axis-labels", function (chart) {
      chart.svg().append("text").attr("class", "x-axis-label").attr("text-anchor", "middle").attr("x", chart.width() / 2).attr("y", chart.height() - 10).text(settings["graph.y_axis.title_text"]);
    });
  }

  // inital render
  chart.render();

  // bottom label height
  var axisLabelHeight = 0;
  if (settings["graph.y_axis.labels_enabled"]) {
    axisLabelHeight = chart.select(".x-axis-label").node().getBoundingClientRect().height;
    chart.margins().bottom += axisLabelHeight;
  }

  // cap number of rows to fit
  var rects = chart.selectAll(".row rect")[0];
  var containerHeight = rects[rects.length - 1].getBoundingClientRect().bottom - rects[0].getBoundingClientRect().top;
  var maxTextHeight = Math.max.apply(Math, _toConsumableArray(chart.selectAll("g.row text")[0].map(function (e) {
    return e.getBoundingClientRect().height;
  })));
  var rowHeight = maxTextHeight + chart.gap() + labelPadVertical * 2;
  var cap = Math.max(1, Math.floor(containerHeight / rowHeight));
  chart.cap(cap);

  chart.render();

  // check if labels overflow after rendering correct number of rows
  var maxTextWidth = 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = chart.selectAll("g.row")[0][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var elem = _step.value;

      var rect = elem.querySelector("rect").getBoundingClientRect();
      var text = elem.querySelector("text").getBoundingClientRect();
      maxTextWidth = Math.max(maxTextWidth, text.width);
      if (rect.width < text.width + labelPadHorizontal * 2) {
        labelsOutside = true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (labelsOutside) {
    chart.margins().left += maxTextWidth;
    chart.render();
  }

  // hide overlapping x-axis labels
  if ((0, _LineAreaBarPostRender.checkXAxisLabelOverlap)(chart, ".axis text")) {
    chart.selectAll(".axis").remove();
  }
}

/***/ }),

/***/ 485:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Total"], ["Total"]),
    _templateObject2 = _taggedTemplateLiteral(["Which columns do you want to use?"], ["Which columns do you want to use?"]),
    _templateObject3 = _taggedTemplateLiteral(["Data"], ["Data"]),
    _templateObject4 = _taggedTemplateLiteral(["Pie"], ["Pie"]),
    _templateObject5 = _taggedTemplateLiteral(["Dimension"], ["Dimension"]),
    _templateObject6 = _taggedTemplateLiteral(["Measure"], ["Measure"]),
    _templateObject7 = _taggedTemplateLiteral(["Show legend"], ["Show legend"]),
    _templateObject8 = _taggedTemplateLiteral(["Show percentages in legend"], ["Show percentages in legend"]),
    _templateObject9 = _taggedTemplateLiteral(["Minimum slice percentage"], ["Minimum slice percentage"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _PieChart = __webpack_require__(486);

var _PieChart2 = _interopRequireDefault(_PieChart);

var _c3po = __webpack_require__(2);

var _ChartTooltip = __webpack_require__(252);

var _ChartTooltip2 = _interopRequireDefault(_ChartTooltip);

var _ChartWithLegend = __webpack_require__(265);

var _ChartWithLegend2 = _interopRequireDefault(_ChartWithLegend);

var _errors = __webpack_require__(75);

var _utils = __webpack_require__(21);

var _settings = __webpack_require__(45);

var _formatting = __webpack_require__(8);

var _colors = __webpack_require__(38);

var colors = _interopRequireWildcard(_colors);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OUTER_RADIUS = 50; // within 100px canvas
var INNER_RADIUS_RATIO = 3 / 5;

var PAD_ANGLE = Math.PI / 180 * 1; // 1 degree in radians
var SLICE_THRESHOLD = 0.025; // approx 1 degree in percentage
var OTHER_SLICE_MIN_PERCENTAGE = 0.003;

var PERCENT_REGEX = /percent/i;

var PieChart = (_temp = _class = function (_Component) {
  _inherits(PieChart, _Component);

  function PieChart() {
    _classCallCheck(this, PieChart);

    return _possibleConstructorReturn(this, (PieChart.__proto__ || Object.getPrototypeOf(PieChart)).apply(this, arguments));
  }

  _createClass(PieChart, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var groupElement = _reactDom2.default.findDOMNode(this.refs.group);
      var detailElement = _reactDom2.default.findDOMNode(this.refs.detail);
      if (groupElement.getBoundingClientRect().width < 100) {
        detailElement.classList.add("hide");
      } else {
        detailElement.classList.remove("hide");
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          series = _props.series,
          hovered = _props.hovered,
          _onHoverChange = _props.onHoverChange,
          visualizationIsClickable = _props.visualizationIsClickable,
          onVisualizationClick = _props.onVisualizationClick,
          className = _props.className,
          gridSize = _props.gridSize,
          settings = _props.settings;

      var _series = _slicedToArray(series, 1),
          _series$0$data = _series[0].data,
          cols = _series$0$data.cols,
          rows = _series$0$data.rows;

      var dimensionIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["pie.dimension"];
      });
      var metricIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["pie.metric"];
      });

      var formatDimension = function formatDimension(dimension) {
        var jsx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        return (0, _formatting.formatValue)(dimension, {
          column: cols[dimensionIndex],
          jsx: jsx,
          majorWidth: 0
        });
      };
      var formatMetric = function formatMetric(metric) {
        var jsx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        return (0, _formatting.formatValue)(metric, { column: cols[metricIndex], jsx: jsx, majorWidth: 0 });
      };
      var formatPercent = function formatPercent(percent) {
        return (100 * percent).toFixed(2) + "%";
      };

      var showPercentInTooltip = !PERCENT_REGEX.test(cols[metricIndex].name) && !PERCENT_REGEX.test(cols[metricIndex].display_name);

      // $FlowFixMe
      var total = rows.reduce(function (sum, row) {
        return sum + row[metricIndex];
      }, 0);

      // use standard colors for up to 5 values otherwise use color harmony to help differentiate slices
      var sliceColors = Object.values(rows.length > 5 ? colors.harmony : colors.normal);
      var sliceThreshold = typeof settings["pie.slice_threshold"] === "number" ? settings["pie.slice_threshold"] / 100 : SLICE_THRESHOLD;

      var _$chain$map$partition = _underscore2.default.chain(rows).map(function (row, index) {
        return {
          key: row[dimensionIndex],
          value: row[metricIndex],
          percentage: row[metricIndex] / total,
          color: sliceColors[index % sliceColors.length]
        };
      }).partition(function (d) {
        return d.percentage > sliceThreshold;
      }).value(),
          _$chain$map$partition2 = _slicedToArray(_$chain$map$partition, 2),
          slices = _$chain$map$partition2[0],
          others = _$chain$map$partition2[1];

      var otherSlice = void 0;
      if (others.length > 1) {
        var otherTotal = others.reduce(function (acc, o) {
          return acc + o.value;
        }, 0);
        if (otherTotal > 0) {
          otherSlice = {
            key: "Other",
            value: otherTotal,
            percentage: otherTotal / total,
            color: colors.normal.grey1
          };
          slices.push(otherSlice);
        }
      } else {
        slices.push.apply(slices, _toConsumableArray(others));
      }

      // increase "other" slice so it's barely visible
      // $FlowFixMe
      if (otherSlice && otherSlice.percentage < OTHER_SLICE_MIN_PERCENTAGE) {
        otherSlice.value = total * OTHER_SLICE_MIN_PERCENTAGE;
      }

      var legendTitles = slices.map(function (slice) {
        return [slice.key === "Other" ? slice.key : formatDimension(slice.key, true), settings["pie.show_legend_perecent"] ? formatPercent(slice.percentage) : undefined];
      });
      var legendColors = slices.map(function (slice) {
        return slice.color;
      });

      // no non-zero slices
      if (slices.length === 0) {
        otherSlice = {
          value: 1,
          color: colors.normal.grey1,
          noHover: true
        };
        slices.push(otherSlice);
      }

      var pie = _d3.default.layout.pie().sort(null).padAngle(PAD_ANGLE).value(function (d) {
        return d.value;
      });
      var arc = _d3.default.svg.arc().outerRadius(OUTER_RADIUS).innerRadius(OUTER_RADIUS * INNER_RADIUS_RATIO);

      function hoverForIndex(index, event) {
        var slice = slices[index];
        if (!slice || slice.noHover) {
          return null;
        } else if (slice === otherSlice) {
          return {
            index: index,
            event: event && event.nativeEvent,
            data: others.map(function (o) {
              return {
                key: formatDimension(o.key, false),
                value: formatMetric(o.value, false)
              };
            })
          };
        } else {
          return {
            index: index,
            event: event && event.nativeEvent,
            data: [{
              key: (0, _utils.getFriendlyName)(cols[dimensionIndex]),
              value: formatDimension(slice.key)
            }, {
              key: (0, _utils.getFriendlyName)(cols[metricIndex]),
              value: formatMetric(slice.value)
            }].concat(showPercentInTooltip && slice.percentage != null ? [{
              key: "Percentage",
              value: formatPercent(slice.percentage)
            }] : [])
          };
        }
      }

      var value = void 0,
          title = void 0;
      if (hovered && hovered.index != null && slices[hovered.index] !== otherSlice) {
        title = formatDimension(slices[hovered.index].key);
        value = formatMetric(slices[hovered.index].value);
      } else {
        title = (0, _c3po.t)(_templateObject);
        value = formatMetric(total);
      }

      var getSliceClickObject = function getSliceClickObject(index) {
        return {
          value: slices[index].value,
          column: cols[metricIndex],
          dimensions: [{
            value: slices[index].key,
            column: cols[dimensionIndex]
          }]
        };
      };

      var isClickable = onVisualizationClick && visualizationIsClickable(getSliceClickObject(0));
      var getSliceIsClickable = function getSliceIsClickable(index) {
        return isClickable && slices[index] !== otherSlice;
      };

      return _react2.default.createElement(
        _ChartWithLegend2.default,
        {
          className: className,
          legendTitles: legendTitles,
          legendColors: legendColors,
          gridSize: gridSize,
          hovered: hovered,
          onHoverChange: function onHoverChange(d) {
            return _onHoverChange && _onHoverChange(d && _extends({}, d, hoverForIndex(d.index)));
          },
          showLegend: settings["pie.show_legend"]
        },
        _react2.default.createElement(
          "div",
          { className: _PieChart2.default.ChartAndDetail },
          _react2.default.createElement(
            "div",
            { ref: "detail", className: _PieChart2.default.Detail },
            _react2.default.createElement(
              "div",
              {
                className: (0, _classnames2.default)(_PieChart2.default.Value, "fullscreen-normal-text fullscreen-night-text")
              },
              value
            ),
            _react2.default.createElement(
              "div",
              { className: _PieChart2.default.Title },
              title
            )
          ),
          _react2.default.createElement(
            "div",
            { className: _PieChart2.default.Chart },
            _react2.default.createElement(
              "svg",
              { className: _PieChart2.default.Donut + " m1", viewBox: "0 0 100 100" },
              _react2.default.createElement(
                "g",
                { ref: "group", transform: "translate(50,50)" },
                pie(slices).map(function (slice, index) {
                  return _react2.default.createElement("path", {
                    key: index,
                    d: arc(slice),
                    fill: slices[index].color,
                    opacity: hovered && hovered.index != null && hovered.index !== index ? 0.3 : 1,
                    onMouseMove: function onMouseMove(e) {
                      return _onHoverChange && _onHoverChange(hoverForIndex(index, e));
                    },
                    onMouseLeave: function onMouseLeave() {
                      return _onHoverChange && _onHoverChange(null);
                    },
                    className: (0, _classnames2.default)({
                      "cursor-pointer": getSliceIsClickable(index)
                    }),
                    onClick: getSliceIsClickable(index) && function (e) {
                      return onVisualizationClick(_extends({}, getSliceClickObject(index), {
                        event: e.nativeEvent
                      }));
                    }
                  });
                })
              )
            )
          )
        ),
        _react2.default.createElement(_ChartTooltip2.default, { series: series, hovered: hovered })
      );
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return cols.length === 2;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref, settings) {
      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;

      if (!settings["pie.dimension"] || !settings["pie.metric"]) {
        throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject2), (0, _c3po.t)(_templateObject3));
      }
    }
  }]);

  return PieChart;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject4), _class.identifier = "pie", _class.iconName = "pie", _class.minSize = { width: 4, height: 4 }, _class.settings = {
  "pie.dimension": _extends({
    section: "Data",
    title: (0, _c3po.t)(_templateObject5)
  }, (0, _settings.dimensionSetting)("pie.dimension")),
  "pie.metric": _extends({
    section: "Data",
    title: (0, _c3po.t)(_templateObject6)
  }, (0, _settings.metricSetting)("pie.metric")),
  "pie.show_legend": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject7),
    widget: "toggle"
  },
  "pie.show_legend_perecent": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject8),
    widget: "toggle",
    default: true
  },
  "pie.slice_threshold": {
    section: "Display",
    title: (0, _c3po.t)(_templateObject9),
    widget: "number",
    default: SLICE_THRESHOLD * 100
  }
}, _temp);
PieChart.displayName = "PieChart";
exports.default = PieChart;

/***/ }),

/***/ 486:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"ChartAndDetail":"_2I4qY","Chart":"_1rcAr","Detail":"n71oW","Donut":"_2Gb1p","Value":"_2tU5X","Title":"-GCLu"};

/***/ }),

/***/ 487:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"ChartWithLegend":"_3qyVV","Legend":"_1ABjV","Chart":"_2luIt","small":"_1CAv1","vertical":"_1rOS_","flexChart":"_168j7","horizontal":"_32nW-"};

/***/ }),

/***/ 488:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["more"], ["more"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Legend = __webpack_require__(182);

var _Legend2 = _interopRequireDefault(_Legend);

var _c3po = __webpack_require__(2);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _LegendItem = __webpack_require__(183);

var _LegendItem2 = _interopRequireDefault(_LegendItem);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LegendVertical = (_temp = _class = function (_Component) {
  _inherits(LegendVertical, _Component);

  function LegendVertical(props, context) {
    _classCallCheck(this, LegendVertical);

    var _this = _possibleConstructorReturn(this, (LegendVertical.__proto__ || Object.getPrototypeOf(LegendVertical)).call(this, props, context));

    _this.state = {
      overflowCount: 0,
      size: null
    };
    return _this;
  }

  _createClass(LegendVertical, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      // Get the bounding rectangle of the chart widget to determine if
      // legend items will overflow the widget area
      var size = _reactDom2.default.findDOMNode(this).getBoundingClientRect();

      // only check the height. width may flucatuate depending on the browser causing an infinite loop
      if (this.state.size && size.height !== this.state.size.height) {
        this.setState({ overflowCount: 0, size: size });
      } else if (this.state.overflowCount === 0) {
        var overflowCount = 0;
        for (var i = 0; i < this.props.titles.length; i++) {
          var itemSize = _reactDom2.default.findDOMNode(this.refs["item" + i]).getBoundingClientRect();
          if (size.top > itemSize.top || size.bottom < itemSize.bottom) {
            overflowCount++;
          }
        }
        if (this.state.overflowCount !== overflowCount) {
          this.setState({ overflowCount: overflowCount, size: size });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          titles = _props.titles,
          colors = _props.colors,
          hovered = _props.hovered,
          onHoverChange = _props.onHoverChange;
      var overflowCount = this.state.overflowCount;

      var items = void 0,
          extraItems = void 0,
          extraColors = void 0;
      if (overflowCount > 0) {
        items = titles.slice(0, -overflowCount - 1);
        extraItems = titles.slice(-overflowCount - 1);
        extraColors = colors.slice(-overflowCount - 1).concat(colors.slice(0, -overflowCount - 1));
      } else {
        items = titles;
      }
      return _react2.default.createElement(
        "ol",
        {
          ref: "container",
          className: (0, _classnames2.default)(className, _Legend2.default.Legend, _Legend2.default.vertical)
        },
        items.map(function (title, index) {
          return _react2.default.createElement(
            "li",
            {
              key: index,
              ref: "item" + index,
              className: "flex flex-no-shrink",
              onMouseEnter: function onMouseEnter(e) {
                return onHoverChange && onHoverChange({
                  index: index,
                  element: _reactDom2.default.findDOMNode(_this2.refs["legendItem" + index])
                });
              },
              onMouseLeave: function onMouseLeave(e) {
                return onHoverChange && onHoverChange();
              }
            },
            _react2.default.createElement(_LegendItem2.default, {
              ref: "legendItem" + index,
              title: Array.isArray(title) ? title[0] : title,
              color: colors[index % colors.length],
              isMuted: hovered && hovered.index != null && index !== hovered.index,
              showTooltip: false
            }),
            Array.isArray(title) && _react2.default.createElement(
              "span",
              {
                className: (0, _classnames2.default)("LegendItem", "flex-align-right pl1", {
                  muted: hovered && hovered.index != null && index !== hovered.index
                })
              },
              title[1]
            )
          );
        }),
        overflowCount > 0 ? _react2.default.createElement(
          "li",
          { key: "extra", className: "flex flex-no-shrink" },
          _react2.default.createElement(
            _Tooltip2.default,
            {
              tooltip: _react2.default.createElement(LegendVertical, {
                className: "p2",
                titles: extraItems,
                colors: extraColors
              })
            },
            _react2.default.createElement(_LegendItem2.default, {
              title: overflowCount + 1 + " " + (0, _c3po.t)(_templateObject),
              color: "gray",
              showTooltip: false
            })
          )
        ) : null
      );
    }
  }]);

  return LegendVertical;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {}, _temp);
LegendVertical.displayName = "LegendVertical";
exports.default = LegendVertical;

/***/ }),

/***/ 489:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Legend = __webpack_require__(182);

var _Legend2 = _interopRequireDefault(_Legend);

var _LegendItem = __webpack_require__(183);

var _LegendItem2 = _interopRequireDefault(_LegendItem);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LegendHorizontal = function (_Component) {
  _inherits(LegendHorizontal, _Component);

  function LegendHorizontal() {
    _classCallCheck(this, LegendHorizontal);

    return _possibleConstructorReturn(this, (LegendHorizontal.__proto__ || Object.getPrototypeOf(LegendHorizontal)).apply(this, arguments));
  }

  _createClass(LegendHorizontal, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          titles = _props.titles,
          colors = _props.colors,
          hovered = _props.hovered,
          onHoverChange = _props.onHoverChange;

      return _react2.default.createElement(
        "ol",
        {
          ref: "container",
          className: (0, _classnames2.default)(className, _Legend2.default.Legend, _Legend2.default.horizontal)
        },
        titles.map(function (title, index) {
          return _react2.default.createElement(
            "li",
            { key: index },
            _react2.default.createElement(_LegendItem2.default, {
              ref: "legendItem" + index,
              title: title,
              color: colors[index % colors.length],
              isMuted: hovered && hovered.index != null && index !== hovered.index,
              showTooltip: false,
              onMouseEnter: function onMouseEnter() {
                return onHoverChange && onHoverChange({
                  index: index,
                  element: _reactDom2.default.findDOMNode(_this2.refs["legendItem" + index])
                });
              },
              onMouseLeave: function onMouseLeave() {
                return onHoverChange && onHoverChange(null);
              }
            })
          );
        })
      );
    }
  }]);

  return LegendHorizontal;
}(_react.Component);

LegendHorizontal.displayName = "LegendHorizontal";
exports.default = LegendHorizontal;

/***/ }),

/***/ 490:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Area"], ["Area"]),
    _templateObject2 = _taggedTemplateLiteral(["area chart"], ["area chart"]);

var _c3po = __webpack_require__(2);

var _LineAreaBarChart2 = __webpack_require__(109);

var _LineAreaBarChart3 = _interopRequireDefault(_LineAreaBarChart2);

var _LineAreaBarRenderer = __webpack_require__(144);

var _graph = __webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AreaChart = (_temp = _class = function (_LineAreaBarChart) {
  _inherits(AreaChart, _LineAreaBarChart);

  function AreaChart() {
    _classCallCheck(this, AreaChart);

    return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));
  }

  return AreaChart;
}(_LineAreaBarChart3.default), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "area", _class.iconName = "area", _class.noun = (0, _c3po.t)(_templateObject2), _class.settings = _extends({}, _graph.GRAPH_DATA_SETTINGS, _graph.LINE_SETTINGS, _graph.STACKABLE_SETTINGS, _graph.GRAPH_GOAL_SETTINGS, _graph.LINE_SETTINGS_2, _graph.GRAPH_COLORS_SETTINGS, _graph.GRAPH_AXIS_SETTINGS), _class.renderer = _LineAreaBarRenderer.areaRenderer, _temp);
exports.default = AreaChart;

/***/ }),

/***/ 491:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Please select longitude and latitude columns in the chart settings."], ["Please select longitude and latitude columns in the chart settings."]),
    _templateObject2 = _taggedTemplateLiteral(["Please select a region map."], ["Please select a region map."]),
    _templateObject3 = _taggedTemplateLiteral(["Please select region and metric columns in the chart settings."], ["Please select region and metric columns in the chart settings."]),
    _templateObject4 = _taggedTemplateLiteral(["Map"], ["Map"]),
    _templateObject5 = _taggedTemplateLiteral(["Map type"], ["Map type"]),
    _templateObject6 = _taggedTemplateLiteral(["Region map"], ["Region map"]),
    _templateObject7 = _taggedTemplateLiteral(["Pin map"], ["Pin map"]),
    _templateObject8 = _taggedTemplateLiteral(["Pin type"], ["Pin type"]),
    _templateObject9 = _taggedTemplateLiteral(["Tiles"], ["Tiles"]),
    _templateObject10 = _taggedTemplateLiteral(["Markers"], ["Markers"]),
    _templateObject11 = _taggedTemplateLiteral(["Latitude field"], ["Latitude field"]),
    _templateObject12 = _taggedTemplateLiteral(["Longitude field"], ["Longitude field"]),
    _templateObject13 = _taggedTemplateLiteral(["Metric field"], ["Metric field"]),
    _templateObject14 = _taggedTemplateLiteral(["Region field"], ["Region field"]),
    _templateObject15 = _taggedTemplateLiteral(["Radius"], ["Radius"]),
    _templateObject16 = _taggedTemplateLiteral(["Blur"], ["Blur"]),
    _templateObject17 = _taggedTemplateLiteral(["Min Opacity"], ["Min Opacity"]),
    _templateObject18 = _taggedTemplateLiteral(["Max Zoom"], ["Max Zoom"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _ChoroplethMap = __webpack_require__(492);

var _ChoroplethMap2 = _interopRequireDefault(_ChoroplethMap);

var _PinMap = __webpack_require__(494);

var _PinMap2 = _interopRequireDefault(_PinMap);

var _errors = __webpack_require__(75);

var _schema_metadata = __webpack_require__(10);

var _settings = __webpack_require__(45);

var _settings2 = __webpack_require__(23);

var _settings3 = _interopRequireDefault(_settings2);

var _utils = __webpack_require__(21);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PIN_MAP_TYPES = new Set(["pin", "heat", "grid"]);

var Map = (_temp = _class = function (_Component) {
  _inherits(Map, _Component);

  function Map() {
    _classCallCheck(this, Map);

    return _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).apply(this, arguments));
  }

  _createClass(Map, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      var sameSize = this.props.width === nextProps.width && this.props.height === nextProps.height;
      var sameSeries = (0, _utils.isSameSeries)(this.props.series, nextProps.series);
      return !(sameSize && sameSeries);
    }
  }, {
    key: "render",
    value: function render() {
      var settings = this.props.settings;

      var type = settings["map.type"];
      if (PIN_MAP_TYPES.has(type)) {
        return _react2.default.createElement(_PinMap2.default, this.props);
      } else if (type === "region") {
        return _react2.default.createElement(_ChoroplethMap2.default, this.props);
      }
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return true;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref, settings) {
      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;

      if (PIN_MAP_TYPES.has(settings["map.type"])) {
        if (!settings["map.longitude_column"] || !settings["map.latitude_column"]) {
          throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject), "Data");
        }
      } else if (settings["map.type"] === "region") {
        if (!settings["map.region"]) {
          throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject2), "Data");
        }
        if (!settings["map.dimension"] || !settings["map.metric"]) {
          throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject3), "Data");
        }
      }
    }
  }]);

  return Map;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject4), _class.identifier = "map", _class.iconName = "pinmap", _class.aliases = ["state", "country", "pin_map"], _class.minSize = { width: 4, height: 4 }, _class.settings = {
  "map.type": {
    title: (0, _c3po.t)(_templateObject5),
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject6), value: "region" }, { name: (0, _c3po.t)(_templateObject7), value: "pin" },
      // NOTE tlrobinson 4/13/18: Heat maps disabled until we can compute leaflet-heat options better
      // { name: "Heat map", value: "heat" },
      { name: "Grid map", value: "grid" }]
    },
    getDefault: function getDefault(_ref3, settings) {
      var _ref4 = _slicedToArray(_ref3, 1),
          _ref4$ = _ref4[0],
          card = _ref4$.card,
          cols = _ref4$.data.cols;

      switch (card.display) {
        case "state":
        case "country":
          return "region";
        case "pin_map":
          return "pin";
        default:
          if ((0, _schema_metadata.hasLatitudeAndLongitudeColumns)(cols)) {
            var latitudeColumn = _underscore2.default.findWhere(cols, {
              name: settings["map.latitude_column"]
            });
            var longitudeColumn = _underscore2.default.findWhere(cols, {
              name: settings["map.longitude_column"]
            });
            if (latitudeColumn && longitudeColumn && latitudeColumn.binning_info && longitudeColumn.binning_info) {
              return "grid";
              // NOTE tlrobinson 4/13/18: Heat maps disabled until we can compute leaflet-heat options better
              // } else if (settings["map.metric_column"]) {
              //   return "heat";
            } else {
              return "pin";
            }
          } else {
            return "region";
          }
      }
    },
    readDependencies: ["map.latitude_column", "map.longitude_column", "map.metric_column"]
  },
  "map.pin_type": {
    title: (0, _c3po.t)(_templateObject8),
    // Don't expose this in the UI for now
    // widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject9), value: "tiles" }, { name: (0, _c3po.t)(_templateObject10), value: "markers" },
      // NOTE tlrobinson 4/13/18: Heat maps disabled until we can compute leaflet-heat options better
      // { name: "Heat", value: "heat" },
      { name: "Grid", value: "grid" }]
    },
    getDefault: function getDefault(series, vizSettings) {
      return vizSettings["map.type"] === "heat" ? "heat" : vizSettings["map.type"] === "grid" ? "grid" : series[0].data.rows.length >= 1000 ? "tiles" : "markers";
    },
    getHidden: function getHidden(series, vizSettings) {
      return !PIN_MAP_TYPES.has(vizSettings["map.type"]);
    }
  },
  "map.latitude_column": _extends({
    title: (0, _c3po.t)(_templateObject11)
  }, (0, _settings.fieldSetting)("map.latitude_column", _schema_metadata.isNumeric, function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 1),
        cols = _ref6[0].data.cols;

    return (_underscore2.default.find(cols, _schema_metadata.isLatitude) || {}).name;
  }), {
    getHidden: function getHidden(series, vizSettings) {
      return !PIN_MAP_TYPES.has(vizSettings["map.type"]);
    }
  }),
  "map.longitude_column": _extends({
    title: (0, _c3po.t)(_templateObject12)
  }, (0, _settings.fieldSetting)("map.longitude_column", _schema_metadata.isNumeric, function (_ref7) {
    var _ref8 = _slicedToArray(_ref7, 1),
        cols = _ref8[0].data.cols;

    return (_underscore2.default.find(cols, _schema_metadata.isLongitude) || {}).name;
  }), {
    getHidden: function getHidden(series, vizSettings) {
      return !PIN_MAP_TYPES.has(vizSettings["map.type"]);
    }
  }),
  "map.metric_column": _extends({
    title: (0, _c3po.t)(_templateObject13)
  }, (0, _settings.metricSetting)("map.metric_column"), {
    getHidden: function getHidden(series, vizSettings) {
      return !PIN_MAP_TYPES.has(vizSettings["map.type"]) || vizSettings["map.pin_type"] !== "heat" && vizSettings["map.pin_type"] !== "grid";
    }
  }),
  "map.region": {
    title: (0, _c3po.t)(_templateObject6),
    widget: "select",
    getDefault: function getDefault(_ref9) {
      var _ref10 = _slicedToArray(_ref9, 1),
          _ref10$ = _ref10[0],
          card = _ref10$.card,
          cols = _ref10$.data.cols;

      if (card.display === "state" || _underscore2.default.any(cols, _schema_metadata.isState)) {
        return "us_states";
      } else if (card.display === "country" || _underscore2.default.any(cols, _schema_metadata.isCountry)) {
        return "world_countries";
      }
      return null;
    },
    getProps: function getProps() {
      return {
        options: Object.entries(_settings3.default.get("custom_geojson", {})).map(
        // $FlowFixMe:
        function (_ref11) {
          var _ref12 = _slicedToArray(_ref11, 2),
              key = _ref12[0],
              value = _ref12[1];

          return { name: value.name, value: key };
        })
      };
    },
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "region";
    }
  },
  "map.metric": _extends({
    title: (0, _c3po.t)(_templateObject13)
  }, (0, _settings.metricSetting)("map.metric"), {
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "region";
    }
  }),
  "map.dimension": _extends({
    title: (0, _c3po.t)(_templateObject14),
    widget: "select"
  }, (0, _settings.dimensionSetting)("map.dimension"), {
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "region";
    }
  }),
  "map.zoom": {},
  "map.center_latitude": {},
  "map.center_longitude": {},
  "map.heat.radius": {
    title: (0, _c3po.t)(_templateObject15),
    widget: "number",
    default: 30,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "heat";
    }
  },
  "map.heat.blur": {
    title: (0, _c3po.t)(_templateObject16),
    widget: "number",
    default: 60,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "heat";
    }
  },
  "map.heat.min-opacity": {
    title: (0, _c3po.t)(_templateObject17),
    widget: "number",
    default: 0,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "heat";
    }
  },
  "map.heat.max-zoom": {
    title: (0, _c3po.t)(_templateObject18),
    widget: "number",
    default: 1,
    getHidden: function getHidden(series, vizSettings) {
      return vizSettings["map.type"] !== "heat";
    }
  }
}, _temp);
Map.displayName = "Map";
exports.default = Map;

/***/ }),

/***/ 492:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["unknown map"], ["unknown map"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _LoadingSpinner = __webpack_require__(74);

var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);

var _schema_metadata = __webpack_require__(10);

var _errors = __webpack_require__(75);

var _settings = __webpack_require__(23);

var _settings2 = _interopRequireDefault(_settings);

var _formatting = __webpack_require__(8);

var _ChartWithLegend = __webpack_require__(265);

var _ChartWithLegend2 = _interopRequireDefault(_ChartWithLegend);

var _LegacyChoropleth = __webpack_require__(493);

var _LegacyChoropleth2 = _interopRequireDefault(_LegacyChoropleth);

var _LeafletChoropleth = __webpack_require__(341);

var _LeafletChoropleth2 = _interopRequireDefault(_LeafletChoropleth);

var _mapping = __webpack_require__(266);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _simpleStatistics = __webpack_require__(738);

var _simpleStatistics2 = _interopRequireDefault(_simpleStatistics);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// const HEAT_MAP_COLORS = [
//     "#E1F2FF",
//     "#67B9FF",
//     "#2DA0FF",
//     "#0A93FF",
//     "#005FB8"
// ];
// const HEAT_MAP_ZERO_COLOR = '#CCC';

var HEAT_MAP_COLORS = [
// "#E2F2FF",
"#C4E4FF",
// "#9ED2FF",
"#81C5FF",
// "#6BBAFF",
"#51AEFF",
// "#36A2FF",
"#1E96FF",
// "#0089FF",
"#0061B5"];
var HEAT_MAP_ZERO_COLOR = "#CCC";

var geoJsonCache = new Map();
function loadGeoJson(geoJsonPath, callback) {
  if (geoJsonCache.has(geoJsonPath)) {
    setTimeout(function () {
      return callback(geoJsonCache.get(geoJsonPath));
    }, 0);
  } else {
    _d3.default.json(geoJsonPath, function (json) {
      geoJsonCache.set(geoJsonPath, json);
      callback(json);
    });
  }
}

var ChoroplethMap = (_temp = _class = function (_Component) {
  _inherits(ChoroplethMap, _Component);

  _createClass(ChoroplethMap, null, [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return cols.length > 1 && (0, _schema_metadata.isString)(cols[0]);
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;

      if (cols.length < 2) {
        throw new _errors.MinColumnsError(2, cols.length);
      }
    }
  }]);

  function ChoroplethMap(props, context) {
    _classCallCheck(this, ChoroplethMap);

    var _this = _possibleConstructorReturn(this, (ChoroplethMap.__proto__ || Object.getPrototypeOf(ChoroplethMap)).call(this, props, context));

    _this.state = {
      geoJson: null,
      geoJsonPath: null
    };
    return _this;
  }

  _createClass(ChoroplethMap, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.componentWillReceiveProps(this.props);
    }
  }, {
    key: "_getDetails",
    value: function _getDetails(props) {
      return _settings2.default.get("custom_geojson", {})[props.settings["map.region"]];
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var details = this._getDetails(nextProps);
      if (details) {
        var geoJsonPath = void 0;
        if (details.builtin) {
          geoJsonPath = details.url;
        } else {
          geoJsonPath = "api/geojson/" + nextProps.settings["map.region"];
        }
        if (this.state.geoJsonPath !== geoJsonPath) {
          this.setState({
            geoJson: null,
            geoJsonPath: geoJsonPath
          });
          loadGeoJson(geoJsonPath, function (geoJson) {
            _this2.setState({
              geoJson: geoJson,
              geoJsonPath: geoJsonPath,
              minimalBounds: (0, _mapping.computeMinimalBounds)(geoJson.features)
            });
          });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var details = this._getDetails(this.props);
      if (!details) {
        return _react2.default.createElement(
          "div",
          null,
          (0, _c3po.t)(_templateObject)
        );
      }

      var _props = this.props,
          series = _props.series,
          className = _props.className,
          gridSize = _props.gridSize,
          hovered = _props.hovered,
          onHoverChange = _props.onHoverChange,
          visualizationIsClickable = _props.visualizationIsClickable,
          onVisualizationClick = _props.onVisualizationClick,
          settings = _props.settings;
      var _state = this.state,
          geoJson = _state.geoJson,
          minimalBounds = _state.minimalBounds;

      // special case builtin maps to use legacy choropleth map

      var projection = void 0;
      if (settings["map.region"] === "us_states") {
        projection = _d3.default.geo.albersUsa();
      } else if (settings["map.region"] === "world_countries") {
        projection = _d3.default.geo.mercator();
      } else {
        projection = null;
      }

      var nameProperty = details.region_name;
      var keyProperty = details.region_key;

      if (!geoJson) {
        return _react2.default.createElement(
          "div",
          { className: className + " flex layout-centered" },
          _react2.default.createElement(_LoadingSpinner2.default, null)
        );
      }

      var _series = _slicedToArray(series, 1),
          _series$0$data = _series[0].data,
          cols = _series$0$data.cols,
          rows = _series$0$data.rows;

      var dimensionIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["map.dimension"];
      });
      var metricIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["map.metric"];
      });

      var getRowKey = function getRowKey(row) {
        return (0, _mapping.getCanonicalRowKey)(row[dimensionIndex], settings["map.region"]);
      };
      var getRowValue = function getRowValue(row) {
        return row[metricIndex] || 0;
      };
      var getFeatureName = function getFeatureName(feature) {
        return String(feature.properties[nameProperty]);
      };
      var getFeatureKey = function getFeatureKey(feature) {
        return String(feature.properties[keyProperty]).toLowerCase();
      };
      var getFeatureValue = function getFeatureValue(feature) {
        return valuesMap[getFeatureKey(feature)];
      };

      var heatMapColors = HEAT_MAP_COLORS.slice(0, Math.min(HEAT_MAP_COLORS.length, rows.length));

      var onHoverFeature = function onHoverFeature(hover) {
        onHoverChange && onHoverChange(hover && {
          index: heatMapColors.indexOf(getColor(hover.feature)),
          event: hover.event,
          data: {
            key: getFeatureName(hover.feature),
            value: getFeatureValue(hover.feature)
          }
        });
      };

      var getFeatureClickObject = function getFeatureClickObject(row) {
        return {
          value: row[metricIndex],
          column: cols[metricIndex],
          dimensions: [{
            value: row[dimensionIndex],
            column: cols[dimensionIndex]
          }]
        };
      };

      var isClickable = onVisualizationClick && visualizationIsClickable(getFeatureClickObject(rows[0]));

      var onClickFeature = isClickable && function (click) {
        var featureKey = getFeatureKey(click.feature);
        var row = _underscore2.default.find(rows, function (row) {
          return getRowKey(row) === featureKey;
        });
        if (onVisualizationClick && row !== undefined) {
          onVisualizationClick(_extends({}, getFeatureClickObject(row), {
            event: click.event
          }));
        }
      };

      var valuesMap = {};
      var domain = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var row = _step.value;

          valuesMap[getRowKey(row)] = (valuesMap[getRowKey(row)] || 0) + getRowValue(row);
          domain.push(getRowValue(row));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var groups = _simpleStatistics2.default.ckmeans(domain, heatMapColors.length);

      var colorScale = _d3.default.scale.quantile().domain(groups.map(function (cluster) {
        return cluster[0];
      })).range(heatMapColors);

      var legendColors = heatMapColors.slice();
      var legendTitles = heatMapColors.map(function (color, index) {
        var min = groups[index][0];
        var max = groups[index].slice(-1)[0];
        return index === heatMapColors.length - 1 ? (0, _formatting.formatNumber)(min) + " +" : (0, _formatting.formatNumber)(min) + " - " + (0, _formatting.formatNumber)(max);
      });

      var getColor = function getColor(feature) {
        var value = getFeatureValue(feature);
        return value == null ? HEAT_MAP_ZERO_COLOR : colorScale(value);
      };

      var aspectRatio = void 0;
      if (projection) {
        var translate = projection.translate();
        var width = translate[0] * 2;
        var height = translate[1] * 2;
        aspectRatio = width / height;
      } else {
        aspectRatio = (minimalBounds.getEast() - minimalBounds.getWest()) / (minimalBounds.getNorth() - minimalBounds.getSouth());
      }

      return _react2.default.createElement(
        _ChartWithLegend2.default,
        {
          className: className,
          aspectRatio: aspectRatio,
          legendTitles: legendTitles,
          legendColors: legendColors,
          gridSize: gridSize,
          hovered: hovered,
          onHoverChange: onHoverChange
        },
        projection ? _react2.default.createElement(_LegacyChoropleth2.default, {
          series: series,
          geoJson: geoJson,
          getColor: getColor,
          onHoverFeature: onHoverFeature,
          onClickFeature: onClickFeature,
          projection: projection
        }) : _react2.default.createElement(_LeafletChoropleth2.default, {
          series: series,
          geoJson: geoJson,
          getColor: getColor,
          onHoverFeature: onHoverFeature,
          onClickFeature: onClickFeature,
          minimalBounds: minimalBounds
        })
      );
    }
  }]);

  return ChoroplethMap;
}(_react.Component), _class.propTypes = {}, _class.minSize = { width: 4, height: 4 }, _temp);
ChoroplethMap.displayName = "ChoroplethMap";
exports.default = ChoroplethMap;

/***/ }),

/***/ 493:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _utils = __webpack_require__(21);

var _d = __webpack_require__(26);

var _d2 = _interopRequireDefault(_d);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LegacyChoropleth = function LegacyChoropleth(_ref) {
  var series = _ref.series,
      geoJson = _ref.geoJson,
      projection = _ref.projection,
      getColor = _ref.getColor,
      onHoverFeature = _ref.onHoverFeature,
      onClickFeature = _ref.onClickFeature;

  var geo = _d2.default.geo.path().projection(projection);

  var translate = projection.translate();
  var width = translate[0] * 2;
  var height = translate[1] * 2;

  return _react2.default.createElement(
    "div",
    { className: "absolute top bottom left right flex layout-centered" },
    _react2.default.createElement(
      ShouldUpdate,
      {
        series: series,
        shouldUpdate: function shouldUpdate(props, nextProps) {
          return !(0, _utils.isSameSeries)(props.series, nextProps.series);
        }
      },
      function () {
        return (
          // eslint-disable-line react/display-name
          _react2.default.createElement(
            "svg",
            { className: "flex-full m1", viewBox: "0 0 " + width + " " + height },
            geoJson.features.map(function (feature, index) {
              return _react2.default.createElement("path", {
                d: geo(feature, index),
                stroke: "white",
                strokeWidth: 1,
                fill: getColor(feature),
                onMouseMove: function onMouseMove(e) {
                  return onHoverFeature({
                    feature: feature,
                    event: e.nativeEvent
                  });
                },
                onMouseLeave: function onMouseLeave() {
                  return onHoverFeature(null);
                },
                className: (0, _classnames2.default)({ "cursor-pointer": !!onClickFeature }),
                onClick: onClickFeature && function (e) {
                  return onClickFeature({
                    feature: feature,
                    event: e.nativeEvent
                  });
                }
              });
            })
          )
        );
      }
    )
  );
};

LegacyChoropleth.displayName = "LegacyChoropleth";

var ShouldUpdate = function (_Component) {
  _inherits(ShouldUpdate, _Component);

  function ShouldUpdate() {
    _classCallCheck(this, ShouldUpdate);

    return _possibleConstructorReturn(this, (ShouldUpdate.__proto__ || Object.getPrototypeOf(ShouldUpdate)).apply(this, arguments));
  }

  _createClass(ShouldUpdate, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (nextProps.shouldUpdate) {
        return nextProps.shouldUpdate(this.props, nextProps);
      }
      return true;
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;

      if (typeof children === "function") {
        return children();
      } else {
        return children;
      }
    }
  }]);

  return ShouldUpdate;
}(_react.Component);

ShouldUpdate.displayName = "ShouldUpdate";
exports.default = LegacyChoropleth;

/***/ }),

/***/ 494:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Save as default view"], ["Save as default view"]),
    _templateObject2 = _taggedTemplateLiteral(["Draw box to filter"], ["Draw box to filter"]),
    _templateObject3 = _taggedTemplateLiteral(["Cancel filter"], ["Cancel filter"]),
    _templateObject4 = _taggedTemplateLiteral(["Pin Map"], ["Pin Map"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _schema_metadata = __webpack_require__(10);

var _errors = __webpack_require__(75);

var _LeafletMarkerPinMap = __webpack_require__(495);

var _LeafletMarkerPinMap2 = _interopRequireDefault(_LeafletMarkerPinMap);

var _LeafletTilePinMap = __webpack_require__(497);

var _LeafletTilePinMap2 = _interopRequireDefault(_LeafletTilePinMap);

var _LeafletHeatMap = __webpack_require__(498);

var _LeafletHeatMap2 = _interopRequireDefault(_LeafletHeatMap);

var _LeafletGridHeatMap = __webpack_require__(499);

var _LeafletGridHeatMap2 = _interopRequireDefault(_LeafletGridHeatMap);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAP_COMPONENTS_BY_TYPE = {
  markers: _LeafletMarkerPinMap2.default,
  tiles: _LeafletTilePinMap2.default,
  heat: _LeafletHeatMap2.default,
  grid: _LeafletGridHeatMap2.default
};

var PinMap = (_temp = _class = function (_Component) {
  _inherits(PinMap, _Component);

  _createClass(PinMap, null, [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return (0, _schema_metadata.hasLatitudeAndLongitudeColumns)(cols);
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          _ref2$0$data = _ref2[0].data,
          cols = _ref2$0$data.cols,
          rows = _ref2$0$data.rows;

      if (!(0, _schema_metadata.hasLatitudeAndLongitudeColumns)(cols)) {
        throw new _errors.LatitudeLongitudeError();
      }
    }
  }]);

  function PinMap(props) {
    _classCallCheck(this, PinMap);

    var _this = _possibleConstructorReturn(this, (PinMap.__proto__ || Object.getPrototypeOf(PinMap)).call(this, props));

    _this._map = null;

    _this.updateSettings = function () {
      var newSettings = {};
      if (_this.state.lat != null) {
        newSettings["map.center_latitude"] = _this.state.lat;
      }
      if (_this.state.lng != null) {
        newSettings["map.center_longitude"] = _this.state.lng;
      }
      if (_this.state.zoom != null) {
        newSettings["map.zoom"] = _this.state.zoom;
      }
      _this.props.onUpdateVisualizationSettings(newSettings);
      _this.setState({ lat: null, lng: null, zoom: null });
    };

    _this.onMapCenterChange = function (lat, lng) {
      _this.setState({ lat: lat, lng: lng });
    };

    _this.onMapZoomChange = function (zoom) {
      _this.setState({ zoom: zoom });
    };

    _this.state = _extends({
      lat: null,
      lng: null,
      zoom: null,
      filtering: false
    }, _this._getPoints(props));
    return _this;
  }

  _createClass(PinMap, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      var SETTINGS_KEYS = ["map.latitude_column", "map.longitude_column", "map.metric_column"];
      if (newProps.series[0].data !== this.props.series[0].data || !_underscore2.default.isEqual(
      // $FlowFixMe
      _underscore2.default.pick.apply(_underscore2.default, [newProps.settings].concat(SETTINGS_KEYS)),
      // $FlowFixMe
      _underscore2.default.pick.apply(_underscore2.default, [this.props.settings].concat(SETTINGS_KEYS)))) {
        this.setState(this._getPoints(newProps));
      }
    }
  }, {
    key: "_getPoints",
    value: function _getPoints(props) {
      var settings = props.settings,
          _props$series = _slicedToArray(props.series, 1),
          _props$series$0$data = _props$series[0].data,
          cols = _props$series$0$data.cols,
          rows = _props$series$0$data.rows;

      var latitudeIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["map.latitude_column"];
      });
      var longitudeIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["map.longitude_column"];
      });
      var metricIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["map.metric_column"];
      });

      var points = rows.map(function (row) {
        return [row[latitudeIndex], row[longitudeIndex], metricIndex >= 0 ? row[metricIndex] : 1];
      });

      var bounds = _leaflet2.default.latLngBounds(points);

      var min = _d3.default.min(points, function (point) {
        return point[2];
      });
      var max = _d3.default.max(points, function (point) {
        return point[2];
      });

      var binWidth = cols[longitudeIndex] && cols[longitudeIndex].binning_info && cols[longitudeIndex].binning_info.bin_width;
      var binHeight = cols[latitudeIndex] && cols[latitudeIndex].binning_info && cols[latitudeIndex].binning_info.bin_width;

      if (binWidth != null) {
        bounds._northEast.lng += binWidth;
      }
      if (binHeight != null) {
        bounds._northEast.lat += binHeight;
      }

      return { points: points, bounds: bounds, min: min, max: max, binWidth: binWidth, binHeight: binHeight };
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          settings = _props.settings,
          isEditing = _props.isEditing,
          isDashboard = _props.isDashboard;
      var _state = this.state,
          lat = _state.lat,
          lng = _state.lng,
          zoom = _state.zoom;

      var disableUpdateButton = lat == null && lng == null && zoom == null;

      var Map = MAP_COMPONENTS_BY_TYPE[settings["map.pin_type"]];

      var _state2 = this.state,
          points = _state2.points,
          bounds = _state2.bounds,
          min = _state2.min,
          max = _state2.max,
          binHeight = _state2.binHeight,
          binWidth = _state2.binWidth;


      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(className, "PinMap relative hover-parent hover--visibility"),
          onMouseDownCapture: function onMouseDownCapture(e) {
            return e.stopPropagation();
          } /* prevent dragging */
        },
        Map ? _react2.default.createElement(Map, _extends({}, this.props, {
          ref: function ref(map) {
            return _this2._map = map;
          },
          className: "absolute top left bottom right z1",
          onMapCenterChange: this.onMapCenterChange,
          onMapZoomChange: this.onMapZoomChange,
          lat: lat,
          lng: lng,
          zoom: zoom,
          points: points,
          bounds: bounds,
          min: min,
          max: max,
          binWidth: binWidth,
          binHeight: binHeight,
          onFiltering: function onFiltering(filtering) {
            return _this2.setState({ filtering: filtering });
          }
        })) : null,
        _react2.default.createElement(
          "div",
          { className: "absolute top right m1 z2 flex flex-column hover-child" },
          isEditing || !isDashboard ? _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)("PinMapUpdateButton Button Button--small mb1", {
                "PinMapUpdateButton--disabled": disableUpdateButton
              }),
              onClick: this.updateSettings
            },
            (0, _c3po.t)(_templateObject)
          ) : null,
          !isDashboard && _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)("PinMapUpdateButton Button Button--small mb1"),
              onClick: function onClick() {
                if (!_this2.state.filtering && _this2._map && _this2._map.startFilter) {
                  _this2._map.startFilter();
                } else if (_this2.state.filtering && _this2._map && _this2._map.stopFilter) {
                  _this2._map.stopFilter();
                }
              }
            },
            !this.state.filtering ? (0, _c3po.t)(_templateObject2) : (0, _c3po.t)(_templateObject3)
          )
        )
      );
    }
  }]);

  return PinMap;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject4), _class.identifier = "pin_map", _class.iconName = "pinmap", _temp);
PinMap.displayName = "PinMap";
exports.default = PinMap;

/***/ }),

/***/ 495:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _LeafletMap2 = __webpack_require__(146);

var _LeafletMap3 = _interopRequireDefault(_LeafletMap2);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

var _formatting = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MARKER_ICON = _leaflet2.default.icon({
  iconUrl: "app/assets/img/pin.png",
  iconSize: [28, 32],
  iconAnchor: [15, 24],
  popupAnchor: [0, -13]
});

var LeafletMarkerPinMap = function (_LeafletMap) {
  _inherits(LeafletMarkerPinMap, _LeafletMap);

  function LeafletMarkerPinMap() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LeafletMarkerPinMap);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LeafletMarkerPinMap.__proto__ || Object.getPrototypeOf(LeafletMarkerPinMap)).call.apply(_ref, [this].concat(args))), _this), _this._createMarker = function (index) {
      var marker = _leaflet2.default.marker([0, 0], { icon: MARKER_ICON });
      marker.on("click", function () {
        var _this$props$series = _slicedToArray(_this.props.series, 1),
            data = _this$props$series[0].data;

        var _this2 = _this,
            popup = _this2.popup;

        var el = document.createElement("div");
        _reactDom2.default.render(_react2.default.createElement(ObjectDetailTooltip, { row: data.rows[index], cols: data.cols }), el);
        marker.unbindPopup();
        marker.bindPopup(el, popup);
        marker.openPopup();
      });
      return marker;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(LeafletMarkerPinMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      _get(LeafletMarkerPinMap.prototype.__proto__ || Object.getPrototypeOf(LeafletMarkerPinMap.prototype), "componentDidMount", this).call(this);

      this.pinMarkerLayer = _leaflet2.default.layerGroup([]).addTo(this.map);
      this.componentDidUpdate({}, {});
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      _get(LeafletMarkerPinMap.prototype.__proto__ || Object.getPrototypeOf(LeafletMarkerPinMap.prototype), "componentDidUpdate", this).call(this, prevProps, prevState);

      try {
        var pinMarkerLayer = this.pinMarkerLayer;
        var points = this.props.points;


        var markers = pinMarkerLayer.getLayers();
        var max = Math.max(points.length, markers.length);
        for (var i = 0; i < max; i++) {
          if (i >= points.length) {
            pinMarkerLayer.removeLayer(markers[i]);
          }
          if (i >= markers.length) {
            var marker = this._createMarker(i);
            pinMarkerLayer.addLayer(marker);
            markers.push(marker);
          }

          if (i < points.length) {
            var _markers$i$getLatLng = markers[i].getLatLng(),
                lat = _markers$i$getLatLng.lat,
                lng = _markers$i$getLatLng.lng;

            if (lng !== points[i][0] || lat !== points[i][1]) {
              markers[i].setLatLng(points[i]);
            }
          }
        }
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }]);

  return LeafletMarkerPinMap;
}(_LeafletMap3.default);

exports.default = LeafletMarkerPinMap;


var ObjectDetailTooltip = function ObjectDetailTooltip(_ref2) {
  var row = _ref2.row,
      cols = _ref2.cols;
  return _react2.default.createElement(
    "table",
    null,
    _react2.default.createElement(
      "tbody",
      null,
      cols.map(function (col, index) {
        return _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "td",
            { className: "pr1" },
            col.display_name,
            ":"
          ),
          _react2.default.createElement(
            "td",
            null,
            (0, _formatting.formatValue)(row[index], { column: col, jsx: true })
          )
        );
      })
    )
  );
};
ObjectDetailTooltip.displayName = "ObjectDetailTooltip";

/***/ }),

/***/ 496:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 497:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _LeafletMap2 = __webpack_require__(146);

var _LeafletMap3 = _interopRequireDefault(_LeafletMap2);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeafletTilePinMap = function (_LeafletMap) {
  _inherits(LeafletTilePinMap, _LeafletMap);

  function LeafletTilePinMap() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LeafletTilePinMap);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LeafletTilePinMap.__proto__ || Object.getPrototypeOf(LeafletTilePinMap)).call.apply(_ref, [this].concat(args))), _this), _this._getTileUrl = function (coord, zoom) {
      var _this$props$series = _slicedToArray(_this.props.series, 1),
          _this$props$series$ = _this$props$series[0],
          dataset_query = _this$props$series$.card.dataset_query,
          cols = _this$props$series$.data.cols;

      var _this$_getLatLonIndex = _this._getLatLonIndexes(),
          latitudeIndex = _this$_getLatLonIndex.latitudeIndex,
          longitudeIndex = _this$_getLatLonIndex.longitudeIndex;

      var latitudeField = cols[latitudeIndex];
      var longitudeField = cols[longitudeIndex];

      if (!latitudeField || !longitudeField) {
        return;
      }

      return "api/tiles/" + zoom + "/" + coord.x + "/" + coord.y + "/" + latitudeField.id + "/" + longitudeField.id + "/" + latitudeIndex + "/" + longitudeIndex + "/" + "?query=" + encodeURIComponent(JSON.stringify(dataset_query));
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(LeafletTilePinMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      _get(LeafletTilePinMap.prototype.__proto__ || Object.getPrototypeOf(LeafletTilePinMap.prototype), "componentDidMount", this).call(this);

      this.pinTileLayer = _leaflet2.default.tileLayer("", {}).addTo(this.map);
      this.componentDidUpdate({}, {});
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      _get(LeafletTilePinMap.prototype.__proto__ || Object.getPrototypeOf(LeafletTilePinMap.prototype), "componentDidUpdate", this).call(this, prevProps, prevState);

      try {
        var pinTileLayer = this.pinTileLayer;

        var newUrl = this._getTileUrl({ x: "{x}", y: "{y}" }, "{z}");
        if (newUrl !== pinTileLayer._url) {
          pinTileLayer.setUrl(newUrl);
        }
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }]);

  return LeafletTilePinMap;
}(_LeafletMap3.default);

exports.default = LeafletTilePinMap;

/***/ }),

/***/ 498:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _LeafletMap2 = __webpack_require__(146);

var _LeafletMap3 = _interopRequireDefault(_LeafletMap2);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

__webpack_require__(745);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeafletHeatMap = function (_LeafletMap) {
  _inherits(LeafletHeatMap, _LeafletMap);

  function LeafletHeatMap() {
    _classCallCheck(this, LeafletHeatMap);

    return _possibleConstructorReturn(this, (LeafletHeatMap.__proto__ || Object.getPrototypeOf(LeafletHeatMap)).apply(this, arguments));
  }

  _createClass(LeafletHeatMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      _get(LeafletHeatMap.prototype.__proto__ || Object.getPrototypeOf(LeafletHeatMap.prototype), "componentDidMount", this).call(this);

      // Leaflet map may not be fully initialized
      // https://stackoverflow.com/a/28903337/113
      setTimeout(function () {
        _this2.pinMarkerLayer = _leaflet2.default.layerGroup([]).addTo(_this2.map);
        _this2.heatLayer = _leaflet2.default.heatLayer([], { radius: 25 }).addTo(_this2.map);
        _this2.componentDidUpdate({}, {});
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      _get(LeafletHeatMap.prototype.__proto__ || Object.getPrototypeOf(LeafletHeatMap.prototype), "componentDidUpdate", this).call(this, prevProps, prevState);

      try {
        var heatLayer = this.heatLayer;
        var _props = this.props,
            points = _props.points,
            max = _props.max,
            settings = _props.settings;


        heatLayer.setOptions({
          max: max,
          maxZoom: settings["map.heat.max-zoom"],
          minOpacity: settings["map.heat.min-opacity"],
          radius: settings["map.heat.radius"],
          blur: settings["map.heat.blur"]
        });
        heatLayer.setLatLngs(points);
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }]);

  return LeafletHeatMap;
}(_LeafletMap3.default);

exports.default = LeafletHeatMap;

/***/ }),

/***/ 499:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _templateObject = _taggedTemplateLiteral(["Grid map requires binned longitude/latitude."], ["Grid map requires binned longitude/latitude."]);

var _LeafletMap2 = __webpack_require__(146);

var _LeafletMap3 = _interopRequireDefault(_LeafletMap2);

var _leaflet = __webpack_require__(72);

var _leaflet2 = _interopRequireDefault(_leaflet);

var _c3po = __webpack_require__(2);

var _d2 = __webpack_require__(26);

var _d3 = _interopRequireDefault(_d2);

var _dataset = __webpack_require__(84);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeafletGridHeatMap = function (_LeafletMap) {
  _inherits(LeafletGridHeatMap, _LeafletMap);

  function LeafletGridHeatMap() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LeafletGridHeatMap);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LeafletGridHeatMap.__proto__ || Object.getPrototypeOf(LeafletGridHeatMap)).call.apply(_ref, [this].concat(args))), _this), _this._createGridSquare = function (index) {
      var bounds = [[54.559322, -5.767822], [56.1210604, -3.02124]];
      var gridSquare = _leaflet2.default.rectangle(bounds, {
        color: "red",
        weight: 1,
        stroke: true,
        fillOpacity: 0.5,
        strokeOpacity: 1.0
      });
      gridSquare.on("click", _this._onVisualizationClick.bind(_this, index));
      gridSquare.on("mousemove", _this._onHoverChange.bind(_this, index));
      gridSquare.on("mouseout", _this._onHoverChange.bind(_this, null));
      return gridSquare;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(LeafletGridHeatMap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      _get(LeafletGridHeatMap.prototype.__proto__ || Object.getPrototypeOf(LeafletGridHeatMap.prototype), "componentDidMount", this).call(this);

      this.gridLayer = _leaflet2.default.layerGroup([]).addTo(this.map);
      this.componentDidUpdate({}, {});
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      _get(LeafletGridHeatMap.prototype.__proto__ || Object.getPrototypeOf(LeafletGridHeatMap.prototype), "componentDidUpdate", this).call(this, prevProps, prevState);

      try {
        var gridLayer = this.gridLayer;
        var _props = this.props,
            points = _props.points,
            min = _props.min,
            max = _props.max;

        var _getLatLonColumns = this._getLatLonColumns(),
            latitudeColumn = _getLatLonColumns.latitudeColumn,
            longitudeColumn = _getLatLonColumns.longitudeColumn;

        if (!latitudeColumn.binning_info || !longitudeColumn.binning_info) {
          throw new Error((0, _c3po.t)(_templateObject));
        }

        var color = _d3.default.scale.linear().domain([min, max]).interpolate(_d3.default.interpolateHcl).range([_d3.default.rgb("#00FF00"), _d3.default.rgb("#FF0000")]);

        var gridSquares = gridLayer.getLayers();
        var totalSquares = Math.max(points.length, gridSquares.length);
        for (var i = 0; i < totalSquares; i++) {
          if (i >= points.length) {
            gridLayer.removeLayer(gridSquares[i]);
          }
          if (i >= gridSquares.length) {
            var gridSquare = this._createGridSquare(i);
            gridLayer.addLayer(gridSquare);
            gridSquares.push(gridSquare);
          }

          if (i < points.length) {
            gridSquares[i].setStyle({ color: color(points[i][2]) });

            var _rangeForValue = (0, _dataset.rangeForValue)(points[i][0], latitudeColumn),
                _rangeForValue2 = _slicedToArray(_rangeForValue, 2),
                latMin = _rangeForValue2[0],
                latMax = _rangeForValue2[1];

            var _rangeForValue3 = (0, _dataset.rangeForValue)(points[i][1], longitudeColumn),
                _rangeForValue4 = _slicedToArray(_rangeForValue3, 2),
                lonMin = _rangeForValue4[0],
                lonMax = _rangeForValue4[1];

            gridSquares[i].setBounds([[latMin, lonMin], [latMax, lonMax]]);
          }
        }
      } catch (err) {
        console.error(err);
        this.props.onRenderError(err.message || err);
      }
    }
  }, {
    key: "_clickForPoint",
    value: function _clickForPoint(index, e) {
      var points = this.props.points;

      var point = points[index];
      var metricColumn = this._getMetricColumn();

      var _getLatLonColumns2 = this._getLatLonColumns(),
          latitudeColumn = _getLatLonColumns2.latitudeColumn,
          longitudeColumn = _getLatLonColumns2.longitudeColumn;

      return {
        value: point[2],
        column: metricColumn,
        dimensions: [{
          value: point[0],
          column: latitudeColumn
        }, {
          value: point[1],
          column: longitudeColumn
        }],
        event: e.originalEvent
      };
    }
  }, {
    key: "_onVisualizationClick",
    value: function _onVisualizationClick(index, e) {
      var onVisualizationClick = this.props.onVisualizationClick;

      if (onVisualizationClick) {
        onVisualizationClick(this._clickForPoint(index, e));
      }
    }
  }, {
    key: "_onHoverChange",
    value: function _onHoverChange(index, e) {
      var onHoverChange = this.props.onHoverChange;

      if (onHoverChange) {
        if (index == null) {
          onHoverChange(null);
        } else {
          onHoverChange(this._clickForPoint(index, e));
        }
      }
    }
  }]);

  return LeafletGridHeatMap;
}(_LeafletMap3.default);

exports.default = LeafletGridHeatMap;

/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class; /*eslint-disable react/no-danger */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRetinaImage = __webpack_require__(155);

var _reactRetinaImage2 = _interopRequireDefault(_reactRetinaImage);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon_paths = __webpack_require__(359);

var _Tooltipify = __webpack_require__(383);

var _Tooltipify2 = _interopRequireDefault(_Tooltipify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Icon = (0, _Tooltipify2.default)(_class = function (_Component) {
  _inherits(Icon, _Component);

  function Icon() {
    _classCallCheck(this, Icon);

    return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));
  }

  _createClass(Icon, [{
    key: "render",
    value: function render() {
      var icon = (0, _icon_paths.loadIcon)(this.props.name);
      if (!icon) {
        return null;
      }
      var className = (0, _classnames2.default)(icon.attrs && icon.attrs.className, this.props.className);
      var props = _extends({}, icon.attrs, this.props, { className: className });
      var _arr = ["width", "height", "size", "scale"];
      for (var _i = 0; _i < _arr.length; _i++) {
        var prop = _arr[_i];
        if (typeof props[prop] === "string") {
          props[prop] = parseInt(props[prop], 10);
        }
      }
      if (props.size != null) {
        props.width = props.size;
        props.height = props.size;
      }
      if (props.scale != null && props.width != null && props.height != null) {
        props.width *= props.scale;
        props.height *= props.scale;
      }

      if (icon.img) {
        return _react2.default.createElement(_reactRetinaImage2.default, _extends({
          forceOriginalDimensions: false
        }, props, {
          src: icon.img
        }));
      } else if (icon.svg) {
        return _react2.default.createElement("svg", _extends({}, props, { dangerouslySetInnerHTML: { __html: icon.svg } }));
      } else {
        return _react2.default.createElement(
          "svg",
          props,
          _react2.default.createElement("path", { d: icon.path })
        );
      }
    }
  }]);

  return Icon;
}(_react.Component)) || _class;

Icon.displayName = "Icon";
exports.default = Icon;

/***/ }),

/***/ 50:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Dimension = __webpack_require__(66);

var _field = __webpack_require__(93);

var _schema_metadata = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for field metadata objects. Belongs to a Table.
 */
var Field = function (_Base) {
  _inherits(Field, _Base);

  function Field() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Field);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Field.__proto__ || Object.getPrototypeOf(Field)).call.apply(_ref, [this].concat(args))), _this), _this.getDefaultBreakout = function () {
      var fieldIdDimension = _this.dimension();
      var defaultSubDimension = fieldIdDimension.defaultDimension();
      if (defaultSubDimension) {
        return defaultSubDimension.mbql();
      } else {
        return fieldIdDimension.mbql();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Field, [{
    key: "fieldType",
    value: function fieldType() {
      return (0, _schema_metadata.getFieldType)(this);
    }
  }, {
    key: "isDate",
    value: function isDate() {
      return (0, _schema_metadata.isDate)(this);
    }
  }, {
    key: "isTime",
    value: function isTime() {
      return (0, _schema_metadata.isTime)(this);
    }
  }, {
    key: "isNumber",
    value: function isNumber() {
      return (0, _schema_metadata.isNumber)(this);
    }
  }, {
    key: "isNumeric",
    value: function isNumeric() {
      return (0, _schema_metadata.isNumeric)(this);
    }
  }, {
    key: "isBoolean",
    value: function isBoolean() {
      return (0, _schema_metadata.isBoolean)(this);
    }
  }, {
    key: "isString",
    value: function isString() {
      return (0, _schema_metadata.isString)(this);
    }
  }, {
    key: "isSummable",
    value: function isSummable() {
      return (0, _schema_metadata.isSummable)(this);
    }
  }, {
    key: "isCategory",
    value: function isCategory() {
      return (0, _schema_metadata.isCategory)(this);
    }
  }, {
    key: "isMetric",
    value: function isMetric() {
      return (0, _schema_metadata.isMetric)(this);
    }
  }, {
    key: "isCompatibleWith",
    value: function isCompatibleWith(field) {
      return this.isDate() === field.isDate() || this.isNumeric() === field.isNumeric() || this.id === field.id;
    }

    /**
     * Tells if this column can be used in a breakout
     * Currently returns `true` for everything expect for aggregation columns
     */

  }, {
    key: "isDimension",
    value: function isDimension() {
      return (0, _schema_metadata.isDimension)(this);
    }
  }, {
    key: "isID",
    value: function isID() {
      return (0, _schema_metadata.isPK)(this) || (0, _schema_metadata.isFK)(this);
    }
  }, {
    key: "isPK",
    value: function isPK() {
      return (0, _schema_metadata.isPK)(this);
    }
  }, {
    key: "isFK",
    value: function isFK() {
      return (0, _schema_metadata.isFK)(this);
    }
  }, {
    key: "isEntityName",
    value: function isEntityName() {
      return (0, _schema_metadata.isEntityName)(this);
    }
  }, {
    key: "isCoordinate",
    value: function isCoordinate() {
      return (0, _schema_metadata.isCoordinate)(this);
    }
  }, {
    key: "fieldValues",
    value: function fieldValues() {
      return (0, _field.getFieldValues)(this._object);
    }
  }, {
    key: "icon",
    value: function icon() {
      return (0, _schema_metadata.getIconForField)(this);
    }
  }, {
    key: "dimension",
    value: function dimension() {
      return new _Dimension.FieldIDDimension(null, [this.id], this.metadata);
    }
  }, {
    key: "operator",
    value: function operator(op) {
      if (this.operators_lookup) {
        return this.operators_lookup[op];
      }
    }

    /**
     * Returns a default breakout MBQL clause for this field
     *
     * Tries to look up a default subdimension (like "Created At: Day" for "Created At" field)
     * and if it isn't found, uses the plain field id dimension (like "Product ID") as a fallback.
     */

  }, {
    key: "remappedField",


    /**
     * Returns the remapped field, if any
     */
    value: function remappedField() {
      var displayFieldId = this.dimensions && this.dimensions.human_readable_field_id;
      if (displayFieldId != null) {
        return this.metadata.fields[displayFieldId];
      }
      // this enables "implicit" remappings from type/PK to type/Name on the same table,
      // used in FieldValuesWidget, but not table/object detail listings
      if (this.name_field) {
        return this.name_field;
      }
      return null;
    }

    /**
     * Returns the human readable remapped value, if any
     */

  }, {
    key: "remappedValue",
    value: function remappedValue(value) {
      // TODO: Ugh. Should this be handled further up by the parameter widget?
      if (this.isNumeric() && typeof value !== "number") {
        value = parseFloat(value);
      }
      return this.remapping && this.remapping.get(value);
    }

    /**
     * Returns whether the field has a human readable remapped value for this value
     */

  }, {
    key: "hasRemappedValue",
    value: function hasRemappedValue(value) {
      // TODO: Ugh. Should this be handled further up by the parameter widget?
      if (this.isNumeric() && typeof value !== "number") {
        value = parseFloat(value);
      }
      return this.remapping && this.remapping.has(value);
    }

    /**
     * Returns true if this field can be searched, e.x. in filter or parameter widgets
     */

  }, {
    key: "isSearchable",
    value: function isSearchable() {
      // TODO: ...?
      return this.isString();
    }

    /**
     * Returns the field to be searched for this field, either the remapped field or itself
     */

  }, {
    key: "parameterSearchField",
    value: function parameterSearchField() {
      var remappedField = this.remappedField();
      if (remappedField && remappedField.isSearchable()) {
        return remappedField;
      }
      if (this.isSearchable()) {
        return this;
      }
      return null;
    }
  }, {
    key: "filterSearchField",
    value: function filterSearchField() {
      if (this.isPK()) {
        if (this.isSearchable()) {
          return this;
        }
      } else {
        return this.parameterSearchField();
      }
    }
  }]);

  return Field;
}(_Base3.default);

exports.default = Field;

/***/ }),

/***/ 500:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Scatter"], ["Scatter"]),
    _templateObject2 = _taggedTemplateLiteral(["scatter plot"], ["scatter plot"]);

var _c3po = __webpack_require__(2);

var _LineAreaBarChart2 = __webpack_require__(109);

var _LineAreaBarChart3 = _interopRequireDefault(_LineAreaBarChart2);

var _LineAreaBarRenderer = __webpack_require__(144);

var _graph = __webpack_require__(111);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScatterPlot = (_temp = _class = function (_LineAreaBarChart) {
  _inherits(ScatterPlot, _LineAreaBarChart);

  function ScatterPlot() {
    _classCallCheck(this, ScatterPlot);

    return _possibleConstructorReturn(this, (ScatterPlot.__proto__ || Object.getPrototypeOf(ScatterPlot)).apply(this, arguments));
  }

  return ScatterPlot;
}(_LineAreaBarChart3.default), _class.uiName = (0, _c3po.t)(_templateObject), _class.identifier = "scatter", _class.iconName = "bubble", _class.noun = (0, _c3po.t)(_templateObject2), _class.renderer = _LineAreaBarRenderer.scatterRenderer, _class.settings = _extends({}, _graph.GRAPH_DATA_SETTINGS, _graph.GRAPH_BUBBLE_SETTINGS, _graph.GRAPH_GOAL_SETTINGS, _graph.GRAPH_COLORS_SETTINGS, _graph.GRAPH_AXIS_SETTINGS), _temp);
exports.default = ScatterPlot;

/***/ }),

/***/ 501:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Which fields do you want to use?"], ["Which fields do you want to use?"]),
    _templateObject2 = _taggedTemplateLiteral(["Data"], ["Data"]),
    _templateObject3 = _taggedTemplateLiteral(["Choose fields"], ["Choose fields"]),
    _templateObject4 = _taggedTemplateLiteral(["Funnel"], ["Funnel"]),
    _templateObject5 = _taggedTemplateLiteral(["Step"], ["Step"]),
    _templateObject6 = _taggedTemplateLiteral(["Measure"], ["Measure"]),
    _templateObject7 = _taggedTemplateLiteral(["Funnel type"], ["Funnel type"]),
    _templateObject8 = _taggedTemplateLiteral(["Bar chart"], ["Bar chart"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _errors = __webpack_require__(75);

var _formatting = __webpack_require__(8);

var _settings = __webpack_require__(45);

var _FunnelNormal = __webpack_require__(502);

var _FunnelNormal2 = _interopRequireDefault(_FunnelNormal);

var _FunnelBar = __webpack_require__(504);

var _FunnelBar2 = _interopRequireDefault(_FunnelBar);

var _LegendHeader = __webpack_require__(142);

var _LegendHeader2 = _interopRequireDefault(_LegendHeader);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _TitleLegendHeader = __webpack_require__(258);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Funnel = (_temp = _class = function (_Component) {
  _inherits(Funnel, _Component);

  function Funnel() {
    _classCallCheck(this, Funnel);

    return _possibleConstructorReturn(this, (Funnel.__proto__ || Object.getPrototypeOf(Funnel)).apply(this, arguments));
  }

  _createClass(Funnel, [{
    key: "render",
    value: function render() {
      var settings = this.props.settings;


      var hasTitle = settings["card.title"];

      if (settings["funnel.type"] === "bar") {
        return _react2.default.createElement(_FunnelBar2.default, this.props);
      } else {
        var _props = this.props,
            actionButtons = _props.actionButtons,
            className = _props.className,
            onChangeCardAndRun = _props.onChangeCardAndRun,
            series = _props.series;

        return _react2.default.createElement(
          "div",
          { className: (0, _classnames2.default)(className, "flex flex-column p1") },
          hasTitle && _react2.default.createElement(_TitleLegendHeader.TitleLegendHeader, {
            series: series,
            settings: settings,
            onChangeCardAndRun: onChangeCardAndRun,
            actionButtons: actionButtons
          }),
          _react2.default.createElement(_LegendHeader2.default, {
            className: "flex-no-shrink"
            // $FlowFixMe
            , series: series._raw || series,
            actionButtons: !hasTitle && actionButtons,
            onChangeCardAndRun: onChangeCardAndRun
          }),
          _react2.default.createElement(_FunnelNormal2.default, _extends({}, this.props, { className: "flex-full" }))
        );
      }
    }
  }], [{
    key: "isSensible",
    value: function isSensible(cols, rows) {
      return cols.length === 2;
    }
  }, {
    key: "checkRenderable",
    value: function checkRenderable(series, settings) {
      var _series = _slicedToArray(series, 1),
          rows = _series[0].data.rows;

      if (series.length > 1) {
        return;
      }

      if (rows.length < 1) {
        throw new _errors.MinRowsError(1, rows.length);
      }
      if (!settings["funnel.dimension"] || !settings["funnel.metric"]) {
        throw new _errors.ChartSettingsError((0, _c3po.t)(_templateObject), (0, _c3po.t)(_templateObject2), (0, _c3po.t)(_templateObject3));
      }
    }
  }, {
    key: "transformSeries",
    value: function transformSeries(series) {
      var _series2 = _slicedToArray(series, 1),
          _series2$ = _series2[0],
          card = _series2$.card,
          _series2$$data = _series2$.data,
          rows = _series2$$data.rows,
          cols = _series2$$data.cols;

      var settings = (0, _settings.getSettings)(series);

      var dimensionIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["funnel.dimension"];
      });
      var metricIndex = _underscore2.default.findIndex(cols, function (col) {
        return col.name === settings["funnel.metric"];
      });

      if (!card._transformed && series.length === 1 && rows.length > 1 && dimensionIndex >= 0 && metricIndex >= 0) {
        return rows.map(function (row) {
          return {
            card: _extends({}, card, {
              name: (0, _formatting.formatValue)(row[dimensionIndex], {
                column: cols[dimensionIndex]
              }),
              _transformed: true
            }),
            data: {
              rows: [[row[dimensionIndex], row[metricIndex]]],
              cols: [cols[dimensionIndex], cols[metricIndex]]
            }
          };
        });
      } else {
        return series;
      }
    }
  }]);

  return Funnel;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject4), _class.identifier = "funnel", _class.iconName = "funnel", _class.noHeader = true, _class.minSize = {
  width: 5,
  height: 4
}, _class.settings = {
  "funnel.dimension": _extends({
    section: "Data",
    title: (0, _c3po.t)(_templateObject5)
  }, (0, _settings.dimensionSetting)("funnel.dimension"), {
    dashboard: false,
    useRawSeries: true
  }),
  "funnel.metric": _extends({
    section: "Data",
    title: (0, _c3po.t)(_templateObject6)
  }, (0, _settings.metricSetting)("funnel.metric"), {
    dashboard: false,
    useRawSeries: true
  }),
  "funnel.type": {
    title: (0, _c3po.t)(_templateObject7),
    section: "Display",
    widget: "select",
    props: {
      options: [{ name: (0, _c3po.t)(_templateObject4), value: "funnel" }, { name: (0, _c3po.t)(_templateObject8), value: "bar" }]
    },
    // legacy "bar" funnel was only previously available via multiseries
    getDefault: function getDefault(series) {
      return series.length > 1 ? "bar" : "funnel";
    },
    useRawSeries: true
  }
}, _temp);
Funnel.displayName = "Funnel";
exports.default = Funnel;

/***/ }),

/***/ 502:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _FunnelNormal = __webpack_require__(503);

var _FunnelNormal2 = _interopRequireDefault(_FunnelNormal);

var _Ellipsified = __webpack_require__(97);

var _Ellipsified2 = _interopRequireDefault(_Ellipsified);

var _formatting = __webpack_require__(8);

var _utils = __webpack_require__(21);

var _colors = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DEFAULT_COLORS = Object.values(_colors.normal);

var Funnel = function (_Component) {
  _inherits(Funnel, _Component);

  function Funnel() {
    _classCallCheck(this, Funnel);

    return _possibleConstructorReturn(this, (Funnel.__proto__ || Object.getPrototypeOf(Funnel)).apply(this, arguments));
  }

  _createClass(Funnel, [{
    key: "render",
    value: function render() {
      var _cx;

      var _props = this.props,
          className = _props.className,
          series = _props.series,
          gridSize = _props.gridSize,
          hovered = _props.hovered,
          onHoverChange = _props.onHoverChange,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable;


      var dimensionIndex = 0;
      var metricIndex = 1;
      var cols = series[0].data.cols;
      // $FlowFixMe
      var rows = series.map(function (s) {
        return s.data.rows[0];
      });

      var funnelSmallSize = gridSize && (gridSize.width < 7 || gridSize.height <= 5);

      var formatDimension = function formatDimension(dimension) {
        var jsx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        return (0, _formatting.formatValue)(dimension, {
          column: cols[dimensionIndex],
          jsx: jsx,
          majorWidth: 0
        });
      };
      var formatMetric = function formatMetric(metric) {
        var jsx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        return (0, _formatting.formatValue)(metric, {
          column: cols[metricIndex],
          jsx: jsx,
          majorWidth: 0,
          comma: true
        });
      };
      var formatPercent = function formatPercent(percent) {
        return (100 * percent).toFixed(2) + " %";
      };

      // Initial infos (required for step calculation)
      var infos = [{
        value: rows[0][metricIndex],
        graph: {
          startBottom: 0.0,
          startTop: 1.0,
          endBottom: 0.0,
          endTop: 1.0
        }
      }];

      var remaining = rows[0][metricIndex];

      rows.map(function (row, rowIndex) {
        remaining -= infos[rowIndex].value - row[metricIndex];

        infos[rowIndex + 1] = {
          value: row[metricIndex],

          graph: {
            startBottom: infos[rowIndex].graph.endBottom,
            startTop: infos[rowIndex].graph.endTop,
            endTop: 0.5 + remaining / infos[0].value / 2,
            endBottom: 0.5 - remaining / infos[0].value / 2
          },

          hovered: {
            index: rowIndex,
            data: [{
              key: "Step",
              value: formatDimension(row[dimensionIndex])
            }, {
              key: (0, _utils.getFriendlyName)(cols[metricIndex]),
              value: formatMetric(row[metricIndex])
            }, {
              key: "Retained",
              value: formatPercent(row[metricIndex] / infos[0].value)
            }]
          },

          clicked: {
            value: row[metricIndex],
            column: cols[metricIndex],
            dimensions: [{
              value: row[dimensionIndex],
              column: cols[dimensionIndex]
            }]
          }
        };
      });

      // Remove initial setup
      infos = infos.slice(1);

      var initial = infos[0];

      var isClickable = visualizationIsClickable(infos[0].clicked);

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)(className, _FunnelNormal2.default.Funnel, "flex", (_cx = {}, _defineProperty(_cx, _FunnelNormal2.default.Small, funnelSmallSize), _defineProperty(_cx, "p1", funnelSmallSize), _defineProperty(_cx, "p2", !funnelSmallSize), _cx))
        },
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)(_FunnelNormal2.default.FunnelStep, _FunnelNormal2.default.Initial, "flex flex-column")
          },
          _react2.default.createElement(
            _Ellipsified2.default,
            { className: _FunnelNormal2.default.Head },
            formatDimension(rows[0][dimensionIndex])
          ),
          _react2.default.createElement(
            "div",
            { className: _FunnelNormal2.default.Start },
            _react2.default.createElement(
              "div",
              { className: _FunnelNormal2.default.Title },
              formatMetric(rows[0][metricIndex])
            ),
            _react2.default.createElement(
              "div",
              { className: _FunnelNormal2.default.Subtitle },
              (0, _utils.getFriendlyName)(cols[dimensionIndex])
            )
          ),
          _react2.default.createElement(
            "div",
            { className: _FunnelNormal2.default.Infos },
            _react2.default.createElement(
              "div",
              { className: _FunnelNormal2.default.Title },
              "\xA0"
            ),
            _react2.default.createElement(
              "div",
              { className: _FunnelNormal2.default.Subtitle },
              "\xA0"
            )
          )
        ),
        infos.slice(1).map(function (info, index) {
          return _react2.default.createElement(
            "div",
            {
              key: index,
              className: (0, _classnames2.default)(_FunnelNormal2.default.FunnelStep, "flex flex-column")
            },
            _react2.default.createElement(
              _Ellipsified2.default,
              { className: _FunnelNormal2.default.Head },
              formatDimension(rows[index + 1][dimensionIndex])
            ),
            _react2.default.createElement(GraphSection, {
              className: (0, _classnames2.default)({ "cursor-pointer": isClickable }),
              index: index,
              info: info,
              infos: infos,
              hovered: hovered,
              onHoverChange: onHoverChange,
              onVisualizationClick: isClickable ? onVisualizationClick : null
            }),
            _react2.default.createElement(
              "div",
              { className: _FunnelNormal2.default.Infos },
              _react2.default.createElement(
                "div",
                { className: _FunnelNormal2.default.Title },
                formatPercent(info.value / initial.value)
              ),
              _react2.default.createElement(
                "div",
                { className: _FunnelNormal2.default.Subtitle },
                formatMetric(rows[index + 1][metricIndex])
              )
            )
          );
        })
      );
    }
  }]);

  return Funnel;
}(_react.Component);

Funnel.displayName = "Funnel";
exports.default = Funnel;

var GraphSection = function GraphSection(_ref) {
  var index = _ref.index,
      info = _ref.info,
      infos = _ref.infos,
      hovered = _ref.hovered,
      onHoverChange = _ref.onHoverChange,
      onVisualizationClick = _ref.onVisualizationClick,
      className = _ref.className;

  return _react2.default.createElement(
    "svg",
    {
      className: (0, _classnames2.default)(className, _FunnelNormal2.default.Graph),
      onMouseMove: function onMouseMove(e) {
        if (onHoverChange && info.hovered) {
          onHoverChange(_extends({}, info.hovered, {
            event: e.nativeEvent
          }));
        }
      },
      onMouseLeave: function onMouseLeave() {
        return onHoverChange && onHoverChange(null);
      },
      onClick: function onClick(e) {
        if (onVisualizationClick && info.clicked) {
          onVisualizationClick(_extends({}, info.clicked, {
            event: e.nativeEvent
          }));
        }
      },
      viewBox: "0 0 1 1",
      preserveAspectRatio: "none"
    },
    _react2.default.createElement("polygon", {
      opacity: 1 - index * (0.9 / (infos.length + 1)),
      fill: DEFAULT_COLORS[0],
      points: "0 " + info.graph.startBottom + ", 0 " + info.graph.startTop + ", 1 " + info.graph.endTop + ", 1 " + info.graph.endBottom
    })
  );
};
GraphSection.displayName = "GraphSection";

/***/ }),

/***/ 503:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"Funnel":"PS5df","FunnelStep":"_2vUMz","Initial":"_2N5af","Start":"_2Wc6M","Title":"_1o3km","Subtitle":"_2N341","Head":"_cker","Graph":"GvdI5","Infos":"_129--","Small":"_2Xb73"};

/***/ }),

/***/ 504:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _BarChart = __webpack_require__(264);

var _BarChart2 = _interopRequireDefault(_BarChart);

var _settings = __webpack_require__(45);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BarFunnel = function (_Component) {
  _inherits(BarFunnel, _Component);

  function BarFunnel() {
    _classCallCheck(this, BarFunnel);

    return _possibleConstructorReturn(this, (BarFunnel.__proto__ || Object.getPrototypeOf(BarFunnel)).apply(this, arguments));
  }

  _createClass(BarFunnel, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(_BarChart2.default, _extends({}, this.props, {
        isScalarSeries: true,
        settings: _extends({}, this.props.settings, (0, _settings.getSettings)((0, _icepick.assocIn)(this.props.series, [0, "card", "display"], "bar")), {
          "bar.scalar_series": true
        })
      }));
    }
  }]);

  return BarFunnel;
}(_react.Component);

BarFunnel.displayName = "BarFunnel";
exports.default = BarFunnel;

/***/ }),

/***/ 505:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectDetail = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2; /*  weak */

var _templateObject = _taggedTemplateLiteral(["Empty"], ["Empty"]),
    _templateObject2 = _taggedTemplateLiteral(["No relationships found."], ["No relationships found."]),
    _templateObject3 = _taggedTemplateLiteral(["via ", ""], ["via ", ""]),
    _templateObject4 = _taggedTemplateLiteral(["Unknown"], ["Unknown"]),
    _templateObject5 = _taggedTemplateLiteral(["This ", " is connected to:"], ["This ", " is connected to:"]),
    _templateObject6 = _taggedTemplateLiteral(["Object Detail"], ["Object Detail"]),
    _templateObject7 = _taggedTemplateLiteral(["object"], ["object"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _c3po = __webpack_require__(2);

var _DirectionalButton = __webpack_require__(344);

var _DirectionalButton2 = _interopRequireDefault(_DirectionalButton);

var _ExpandableString = __webpack_require__(506);

var _ExpandableString2 = _interopRequireDefault(_ExpandableString);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _IconBorder = __webpack_require__(143);

var _IconBorder2 = _interopRequireDefault(_IconBorder);

var _LoadingSpinner = __webpack_require__(74);

var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);

var _schema_metadata = __webpack_require__(10);

var _types = __webpack_require__(42);

var _inflection = __webpack_require__(83);

var _formatting = __webpack_require__(8);

var _table = __webpack_require__(98);

var _actions = __webpack_require__(149);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps() {
  return {};
};

var mapDispatchToProps = {
  viewPreviousObjectDetail: _actions.viewPreviousObjectDetail,
  viewNextObjectDetail: _actions.viewNextObjectDetail
};

var ObjectDetail = exports.ObjectDetail = (_temp2 = _class = function (_Component) {
  _inherits(ObjectDetail, _Component);

  function ObjectDetail() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ObjectDetail);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ObjectDetail.__proto__ || Object.getPrototypeOf(ObjectDetail)).call.apply(_ref, [this].concat(args))), _this), _this.foreignKeyClicked = function (fk) {
      _this.props.followForeignKey(fk);
    }, _this.onKeyDown = function (event) {
      if (event.key === "ArrowLeft") {
        _this.props.viewPreviousObjectDetail();
      }
      if (event.key === "ArrowRight") {
        _this.props.viewNextObjectDetail();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ObjectDetail, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // load up FK references
      this.props.loadObjectDetailFKReferences();
      window.addEventListener("keydown", this.onKeyDown, true);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener("keydown", this.onKeyDown, true);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      // if the card has changed then reload fk references
      if (this.props.data != nextProps.data) {
        this.props.loadObjectDetailFKReferences();
      }
    }
  }, {
    key: "getIdValue",
    value: function getIdValue() {
      if (!this.props.data) return null;

      var _props$data = this.props.data,
          cols = _props$data.cols,
          rows = _props$data.rows;

      var columnIndex = _underscore2.default.findIndex(cols, function (col) {
        return (0, _schema_metadata.isPK)(col);
      });
      return rows[0][columnIndex];
    }
  }, {
    key: "cellRenderer",
    value: function cellRenderer(column, value, isColumn) {
      var _props = this.props,
          onVisualizationClick = _props.onVisualizationClick,
          visualizationIsClickable = _props.visualizationIsClickable;


      var cellValue = void 0;
      var clicked = void 0;
      var isLink = void 0;

      if (isColumn) {
        cellValue = column !== null ? (0, _formatting.formatColumn)(column) : null;
        clicked = {
          column: column
        };
        isLink = false;
      } else {
        if (value === null || value === undefined || value === "") {
          cellValue = _react2.default.createElement(
            "span",
            { className: "text-grey-2" },
            (0, _c3po.t)(_templateObject)
          );
        } else if ((0, _types.isa)(column.special_type, _types.TYPE.SerializedJSON)) {
          var formattedJson = JSON.stringify(JSON.parse(value), null, 2);
          cellValue = _react2.default.createElement(
            "pre",
            { className: "ObjectJSON" },
            formattedJson
          );
        } else if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === "object") {
          var _formattedJson = JSON.stringify(value, null, 2);
          cellValue = _react2.default.createElement(
            "pre",
            { className: "ObjectJSON" },
            _formattedJson
          );
        } else {
          cellValue = (0, _formatting.formatValue)(value, {
            column: column,
            jsx: true,
            rich: true
          });
          if (typeof cellValue === "string") {
            cellValue = _react2.default.createElement(_ExpandableString2.default, { str: cellValue, length: 140 });
          }
        }
        clicked = {
          column: column,
          value: value
        };
        isLink = (0, _schema_metadata.isID)(column);
      }

      var isClickable = onVisualizationClick && visualizationIsClickable(clicked);

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "span",
          {
            className: (0, _classnames2.default)({
              "cursor-pointer": isClickable,
              link: isClickable && isLink
            }),
            onClick: isClickable && function (e) {
              onVisualizationClick(_extends({}, clicked, { element: e.currentTarget }));
            }
          },
          cellValue
        )
      );
    }
  }, {
    key: "renderDetailsTable",
    value: function renderDetailsTable() {
      var _this2 = this;

      var _props$data2 = this.props.data,
          cols = _props$data2.cols,
          rows = _props$data2.rows;

      return cols.map(function (column, columnIndex) {
        return _react2.default.createElement(
          "div",
          { className: "Grid Grid--1of2 mb2", key: columnIndex },
          _react2.default.createElement(
            "div",
            { className: "Grid-cell" },
            _this2.cellRenderer(column, rows[0][columnIndex], true)
          ),
          _react2.default.createElement(
            "div",
            {
              style: { wordWrap: "break-word" },
              className: "Grid-cell text-bold text-dark"
            },
            _this2.cellRenderer(column, rows[0][columnIndex], false)
          )
        );
      });
    }
  }, {
    key: "renderRelationships",
    value: function renderRelationships() {
      var _this3 = this;

      var _props2 = this.props,
          tableForeignKeys = _props2.tableForeignKeys,
          tableForeignKeyReferences = _props2.tableForeignKeyReferences;

      if (!tableForeignKeys) {
        return null;
      }

      tableForeignKeys = tableForeignKeys.filter(function (fk) {
        return (0, _table.isQueryable)(fk.origin.table);
      });

      if (tableForeignKeys.length < 1) {
        return _react2.default.createElement(
          "p",
          { className: "my4 text-centered" },
          (0, _c3po.t)(_templateObject2)
        );
      }

      var fkCountsByTable = (0, _schema_metadata.foreignKeyCountsByOriginTable)(tableForeignKeys);

      var relationships = tableForeignKeys.sort(function (a, b) {
        return a.origin.table.display_name.localeCompare(b.origin.table.display_name);
      }).map(function (fk) {
        var fkCount = _react2.default.createElement(_LoadingSpinner2.default, { size: 25 });
        var fkCountValue = 0;
        var fkClickable = false;
        if (tableForeignKeyReferences) {
          var fkCountInfo = tableForeignKeyReferences[fk.origin.id];
          if (fkCountInfo && fkCountInfo.status === 1) {
            fkCount = _react2.default.createElement(
              "span",
              null,
              fkCountInfo.value
            );

            if (fkCountInfo.value) {
              fkCountValue = fkCountInfo.value;
              fkClickable = true;
            }
          }
        }
        var chevron = _react2.default.createElement(
          _IconBorder2.default,
          { className: "flex-align-right" },
          _react2.default.createElement(_Icon2.default, { name: "chevronright", size: 10 })
        );

        var relationName = (0, _inflection.inflect)(fk.origin.table.display_name, fkCountValue);
        var via = fkCountsByTable[fk.origin.table.id] > 1 ? _react2.default.createElement(
          "span",
          { className: "text-grey-3 text-normal" },
          " ",
          (0, _c3po.t)(_templateObject3, fk.origin.display_name)
        ) : null;

        var info = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h2",
            null,
            fkCount
          ),
          _react2.default.createElement(
            "h5",
            { className: "block" },
            relationName,
            via
          )
        );
        var fkReference = void 0;
        var referenceClasses = (0, _classnames2.default)("flex align-center my2 pb2 border-bottom", {
          "text-brand-hover cursor-pointer text-dark": fkClickable,
          "text-grey-3": !fkClickable
        });

        if (fkClickable) {
          fkReference = _react2.default.createElement(
            "div",
            {
              className: referenceClasses,
              key: fk.id,
              onClick: _this3.foreignKeyClicked.bind(null, fk)
            },
            info,
            chevron
          );
        } else {
          fkReference = _react2.default.createElement(
            "div",
            { className: referenceClasses, key: fk.id },
            info
          );
        }

        return _react2.default.createElement(
          "li",
          null,
          fkReference
        );
      });

      return _react2.default.createElement(
        "ul",
        { className: "px4" },
        relationships
      );
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.props.data) {
        return false;
      }

      var tableName = this.props.tableMetadata ? (0, _inflection.singularize)(this.props.tableMetadata.display_name) : (0, _c3po.t)(_templateObject4);
      // TODO: once we nail down the "title" column of each table this should be something other than the id
      var idValue = this.getIdValue();

      return _react2.default.createElement(
        "div",
        { className: "ObjectDetail rounded mt2" },
        _react2.default.createElement(
          "div",
          { className: "Grid ObjectDetail-headingGroup" },
          _react2.default.createElement(
            "div",
            { className: "Grid-cell ObjectDetail-infoMain px4 py3 ml2 arrow-right" },
            _react2.default.createElement(
              "div",
              { className: "text-brand text-bold" },
              _react2.default.createElement(
                "span",
                null,
                tableName
              ),
              _react2.default.createElement(
                "h1",
                null,
                idValue
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "Grid-cell flex align-center Cell--1of3 bg-alt" },
            _react2.default.createElement(
              "div",
              { className: "p4 flex align-center text-bold text-grey-3" },
              _react2.default.createElement(_Icon2.default, { name: "connections", size: 17 }),
              _react2.default.createElement(
                "div",
                { className: "ml2" },
                (0, _c3po.jt)(_templateObject5, _react2.default.createElement(
                  "span",
                  { className: "text-dark" },
                  tableName
                ))
              )
            )
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "Grid" },
          _react2.default.createElement(
            "div",
            { className: "Grid-cell ObjectDetail-infoMain p4" },
            this.renderDetailsTable()
          ),
          _react2.default.createElement(
            "div",
            { className: "Grid-cell Cell--1of3 bg-alt" },
            this.renderRelationships()
          )
        ),
        _react2.default.createElement(
          "div",
          {
            className: (0, _classnames2.default)("fixed left cursor-pointer text-brand-hover lg-ml2", {
              disabled: idValue <= 1
            }),
            style: { top: "50%", left: "1em", transform: "translate(0, -50%)" }
          },
          _react2.default.createElement(_DirectionalButton2.default, {
            direction: "back",
            onClick: this.props.viewPreviousObjectDetail
          })
        ),
        _react2.default.createElement(
          "div",
          {
            className: "fixed right cursor-pointer text-brand-hover lg-ml2",
            style: { top: "50%", right: "1em", transform: "translate(0, -50%)" }
          },
          _react2.default.createElement(_DirectionalButton2.default, {
            direction: "forward",
            onClick: this.props.viewNextObjectDetail
          })
        )
      );
    }
  }]);

  return ObjectDetail;
}(_react.Component), _class.uiName = (0, _c3po.t)(_templateObject6), _class.identifier = "object", _class.iconName = "document", _class.noun = (0, _c3po.t)(_templateObject7), _class.hidden = true, _temp2);
ObjectDetail.displayName = "ObjectDetail";
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ObjectDetail);

/***/ }),

/***/ 506:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["View less"], ["View less"]),
    _templateObject2 = _taggedTemplateLiteral(["View more"], ["View more"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _humanizePlus = __webpack_require__(195);

var _humanizePlus2 = _interopRequireDefault(_humanizePlus);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ExpandableString = (_temp = _class = function (_Component) {
  _inherits(ExpandableString, _Component);

  function ExpandableString(props, context) {
    _classCallCheck(this, ExpandableString);

    var _this = _possibleConstructorReturn(this, (ExpandableString.__proto__ || Object.getPrototypeOf(ExpandableString)).call(this, props, context));

    _this.toggleExpansion = _this.toggleExpansion.bind(_this);

    _this.state = {
      expanded: false
    };
    return _this;
  }

  _createClass(ExpandableString, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      this.setState({
        expanded: newProps.expanded
      });
    }
  }, {
    key: "toggleExpansion",
    value: function toggleExpansion() {
      this.setState({
        expanded: !this.state.expanded
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.props.str) return false;

      var truncated = _humanizePlus2.default.truncate(this.props.str || "", 140);

      if (this.state.expanded) {
        return _react2.default.createElement(
          "span",
          null,
          this.props.str,
          " ",
          _react2.default.createElement(
            "span",
            {
              className: "block mt1 link",
              onClick: this.toggleExpansion
            },
            (0, _c3po.t)(_templateObject)
          )
        );
      } else if (truncated !== this.props.str) {
        return _react2.default.createElement(
          "span",
          null,
          truncated,
          " ",
          _react2.default.createElement(
            "span",
            {
              className: "block mt1 link",
              onClick: this.toggleExpansion
            },
            (0, _c3po.t)(_templateObject2)
          )
        );
      } else {
        return _react2.default.createElement(
          "span",
          null,
          this.props.str
        );
      }
    }
  }]);

  return ExpandableString;
}(_react.Component), _class.defaultProps = {
  length: 140,
  expanded: false
}, _temp);
ExpandableString.displayName = "ExpandableString";
exports.default = ExpandableString;

/***/ }),

/***/ 507:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var getAlerts = exports.getAlerts = function getAlerts(state) {
  return state.alert.alerts.result;
};

/***/ }),

/***/ 508:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _reactRouterRedux = __webpack_require__(19);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

// namespace under _routeless_
var mapStateToProps = function mapStateToProps(state, props) {
  return {
    _routeless_location: state.routing.locationBeforeTransitions
  };
};

var mapDispatchToProps = {
  _routeless_push: _reactRouterRedux.push,
  _routeless_goBack: _reactRouterRedux.goBack
};

// this higher order component wraps any component (typically a fullscreen modal) with an "onClose"
// prop, injects an entry in the browser history, and closes the component if the back button is pressed

exports.default = function (ComposedComponent) {
  var _class, _temp;

  return (
    // clone the state object otherwise the state will be replaced rather than pushed
    // save the state object so that we know when it's changed
    // if the state previously was the saved one and is now not, then we probably
    // hit the back button, so close the wrapped component
    // perform this in a timeout because the component may be unmounted anyway, in which
    // case calling onClose again may cause problems.
    // alternatively may be able to tighten up the logic above

    // if we unmount (e.x. hit the close button which calls onClose directly) and still have the
    // same state then go back to the original state
    // NOTE: ideally we would remove the current state from the history so the forward
    // button wouldn't be enabled, maybe using `replace`
    (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((_temp = _class = function (_Component) {
      _inherits(_class, _Component);

      function _class() {
        _classCallCheck(this, _class);

        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
      }

      _createClass(_class, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          var push = this.props._routeless_push;
          var location = this.props._routeless_location;
          var pathname = location.pathname,
              query = location.query,
              search = location.search,
              hash = location.hash,
              state = location.state;

          this._state = (typeof state === "undefined" ? "undefined" : _typeof(state)) === "object" ? Object.create(state) : {};
          push({ pathname: pathname, query: query, search: search, hash: hash, state: this._state });
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          var _this2 = this;

          var location = this.props._routeless_location;
          var nextLocation = nextProps._routeless_location;
          if (location.state === this._state && nextLocation.state !== this._state) {
            this._timeout = setTimeout(function () {
              _this2.props.onClose();
            }, 100);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          var location = this.props._routeless_location;
          var goBack = this.props._routeless_goBack;

          if (this._timeout != null) {
            clearTimeout(this._timeout);
          }

          if (location.state === this._state) {
            goBack();
          }
        }
      }, {
        key: "render",
        value: function render() {
          var props = _underscore2.default.omit(this.props, "_routeless_location", "_routeless_goBack", "_routeless_push");
          return _react2.default.createElement(ComposedComponent, props);
        }
      }]);

      return _class;
    }(_react.Component), _class.displayName = "Routeless[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _temp))
  );
};

/***/ }),

/***/ 513:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _templateObject = _taggedTemplateLiteral(["Edit"], ["Edit"]),
    _templateObject2 = _taggedTemplateLiteral(["Remove"], ["Remove"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _ParameterValueWidget = __webpack_require__(346);

var _ParameterValueWidget2 = _interopRequireDefault(_ParameterValueWidget);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _ParameterWidget = __webpack_require__(270);

var _ParameterWidget2 = _interopRequireDefault(_ParameterWidget);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _FieldSet = __webpack_require__(157);

var _FieldSet2 = _interopRequireDefault(_FieldSet);

var _keyboard = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParameterWidget = (_temp2 = _class = function (_Component) {
  _inherits(ParameterWidget, _Component);

  function ParameterWidget() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ParameterWidget);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ParameterWidget.__proto__ || Object.getPrototypeOf(ParameterWidget)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isEditingName: false,
      isFocused: false
    }, _this.focusChanged = function (isFocused) {
      _this.setState({ isFocused: isFocused });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ParameterWidget, [{
    key: "renderPopover",
    value: function renderPopover(value, setValue, placeholder, isFullscreen) {
      var _props = this.props,
          parameter = _props.parameter,
          editingParameter = _props.editingParameter,
          commitImmediately = _props.commitImmediately;

      var isEditingParameter = !!(editingParameter && editingParameter.id === parameter.id);
      return _react2.default.createElement(_ParameterValueWidget2.default, {
        parameter: parameter,
        name: name,
        value: value,
        setValue: setValue,
        isEditing: isEditingParameter,
        placeholder: placeholder,
        focusChanged: this.focusChanged,
        isFullscreen: isFullscreen,
        commitImmediately: commitImmediately
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          className = _props2.className,
          parameter = _props2.parameter,
          parameters = _props2.parameters,
          isEditing = _props2.isEditing,
          isFullscreen = _props2.isFullscreen,
          editingParameter = _props2.editingParameter,
          setEditingParameter = _props2.setEditingParameter,
          setName = _props2.setName,
          setValue = _props2.setValue,
          setDefaultValue = _props2.setDefaultValue,
          remove = _props2.remove;


      var isEditingDashboard = isEditing;
      var isEditingParameter = editingParameter && editingParameter.id === parameter.id;

      var renderFieldInNormalMode = function renderFieldInNormalMode() {
        var fieldHasValueOrFocus = parameter.value != null || _this2.state.isFocused;
        var legend = fieldHasValueOrFocus ? parameter.name : "";

        return _react2.default.createElement(
          _FieldSet2.default,
          {
            legend: legend,
            noPadding: true,
            className: (0, _classnames2.default)(className, _ParameterWidget2.default.container, {
              "border-brand": fieldHasValueOrFocus
            })
          },
          _this2.renderPopover(parameter.value, function (value) {
            return setValue(value);
          }, parameter.name, isFullscreen)
        );
      };

      var renderEditFieldNameUI = function renderEditFieldNameUI() {
        return _react2.default.createElement(
          _FieldSet2.default,
          {
            legend: "",
            noPadding: true,
            className: (0, _classnames2.default)(className, _ParameterWidget2.default.container)
          },
          _react2.default.createElement("input", {
            type: "text",
            className: (0, _classnames2.default)(_ParameterWidget2.default.nameInput, {
              "border-error": _underscore2.default.any(parameters, function (p) {
                return p.name === parameter.name && p.id !== parameter.id;
              })
            }),
            value: parameter.name,
            onChange: function onChange(e) {
              return setName(e.target.value);
            },
            onBlur: function onBlur() {
              return _this2.setState({ isEditingName: false });
            },
            onKeyUp: function onKeyUp(e) {
              if (e.keyCode === _keyboard.KEYCODE_ESCAPE || e.keyCode === _keyboard.KEYCODE_ENTER) {
                e.target.blur();
              }
            },
            autoFocus: true
          })
        );
      };

      var renderSetDefaultFieldValueUI = function renderSetDefaultFieldValueUI() {
        var editNameButton = _react2.default.createElement(
          "span",
          { className: _ParameterWidget2.default.editNameIconContainer },
          _react2.default.createElement(_Icon2.default, {
            name: "pencil",
            size: 12,
            className: "text-brand cursor-pointer",
            onClick: function onClick() {
              return _this2.setState({ isEditingName: true });
            }
          })
        );

        var legend = _react2.default.createElement(
          "span",
          null,
          parameter.name,
          " ",
          editNameButton
        );

        return _react2.default.createElement(
          _FieldSet2.default,
          {
            legend: legend,
            noPadding: true,
            className: (0, _classnames2.default)(className, _ParameterWidget2.default.container)
          },
          _this2.renderPopover(parameter.default, function (value) {
            return setDefaultValue(value);
          }, parameter.name, isFullscreen)
        );
      };

      var renderFieldEditingButtons = function renderFieldEditingButtons() {
        return _react2.default.createElement(
          _FieldSet2.default,
          {
            legend: parameter.name,
            noPadding: true,
            className: (0, _classnames2.default)(className, _ParameterWidget2.default.container)
          },
          _react2.default.createElement(
            "div",
            { className: (0, _classnames2.default)(_ParameterWidget2.default.parameter, _ParameterWidget2.default.parameterButtons) },
            _react2.default.createElement(
              "div",
              {
                className: _ParameterWidget2.default.editButton,
                onClick: function onClick() {
                  return setEditingParameter(parameter.id);
                }
              },
              _react2.default.createElement(_Icon2.default, { name: "pencil" }),
              _react2.default.createElement(
                "span",
                { className: "ml1" },
                (0, _c3po.t)(_templateObject)
              )
            ),
            _react2.default.createElement(
              "div",
              { className: _ParameterWidget2.default.removeButton, onClick: function onClick() {
                  return remove();
                } },
              _react2.default.createElement(_Icon2.default, { name: "close" }),
              _react2.default.createElement(
                "span",
                { className: "ml1" },
                (0, _c3po.t)(_templateObject2)
              )
            )
          )
        );
      };

      if (isFullscreen) {
        if (parameter.value != null) {
          return _react2.default.createElement(
            "div",
            { style: { fontSize: "0.833em" } },
            renderFieldInNormalMode()
          );
        } else {
          return _react2.default.createElement("span", { className: "hide" });
        }
      } else if (!isEditingDashboard) {
        return renderFieldInNormalMode();
      } else if (isEditingParameter) {
        if (this.state.isEditingName) {
          return renderEditFieldNameUI();
        } else {
          return renderSetDefaultFieldValueUI();
        }
      } else {
        return renderFieldEditingButtons();
      }
    }
  }]);

  return ParameterWidget;
}(_react.Component), _class.propTypes = {
  parameter: _propTypes2.default.object,
  commitImmediately: _propTypes2.default.bool
}, _class.defaultProps = {
  parameter: null,
  commitImmediately: false
}, _temp2);
ParameterWidget.displayName = "ParameterWidget";
exports.default = ParameterWidget;

/***/ }),

/***/ 514:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Calendar = __webpack_require__(138);

var _Calendar2 = _interopRequireDefault(_Calendar);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateSingleWidget = function DateSingleWidget(_ref) {
  var value = _ref.value,
      setValue = _ref.setValue,
      onClose = _ref.onClose;
  return _react2.default.createElement(
    "div",
    { className: "p1" },
    _react2.default.createElement(_Calendar2.default, {
      initial: value ? (0, _moment2.default)(value) : null,
      selected: value ? (0, _moment2.default)(value) : null,
      selectedEnd: value ? (0, _moment2.default)(value) : null,
      onChange: function onChange(value) {
        setValue(value);
        onClose();
      }
    })
  );
};

DateSingleWidget.displayName = "DateSingleWidget";
DateSingleWidget.format = function (value) {
  return value ? (0, _moment2.default)(value).format("MMMM D, YYYY") : "";
};

exports.default = DateSingleWidget;

/***/ }),

/***/ 515:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Calendar = __webpack_require__(138);

var _Calendar2 = _interopRequireDefault(_Calendar);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SEPARATOR = "~"; // URL-safe

function parseDateRangeValue(value) {
  var _split = (value || "").split(SEPARATOR),
      _split2 = _slicedToArray(_split, 2),
      start = _split2[0],
      end = _split2[1];

  return { start: start, end: end };
}
function serializeDateRangeValue(_ref) {
  var start = _ref.start,
      end = _ref.end;

  return [start, end].join(SEPARATOR);
}

var DateRangeWidget = (_temp = _class = function (_Component) {
  _inherits(DateRangeWidget, _Component);

  function DateRangeWidget(props, context) {
    _classCallCheck(this, DateRangeWidget);

    var _this = _possibleConstructorReturn(this, (DateRangeWidget.__proto__ || Object.getPrototypeOf(DateRangeWidget)).call(this, props, context));

    _this.state = parseDateRangeValue(props.value);
    return _this;
  }

  _createClass(DateRangeWidget, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== this.props.value) {
        this.setState(parseDateRangeValue(nextProps.value));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          start = _state.start,
          end = _state.end;

      return _react2.default.createElement(
        "div",
        { className: "p1" },
        _react2.default.createElement(_Calendar2.default, {
          initial: start ? (0, _moment2.default)(start) : null,
          selected: start ? (0, _moment2.default)(start) : null,
          selectedEnd: end ? (0, _moment2.default)(end) : null,
          onChange: function onChange(start, end) {
            if (end == null) {
              _this2.setState({ start: start, end: end });
            } else {
              _this2.props.setValue(serializeDateRangeValue({ start: start, end: end }));
            }
          }
        })
      );
    }
  }]);

  return DateRangeWidget;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.string,
  setValue: _propTypes2.default.func.isRequired
}, _class.defaultProps = {}, _class.format = function (value) {
  var _parseDateRangeValue = parseDateRangeValue(value),
      start = _parseDateRangeValue.start,
      end = _parseDateRangeValue.end;

  return start && end ? (0, _moment2.default)(start).format("MMMM D, YYYY") + " - " + (0, _moment2.default)(end).format("MMMM D, YYYY") : "";
}, _temp);
DateRangeWidget.displayName = "DateRangeWidget";
exports.default = DateRangeWidget;

/***/ }),

/***/ 516:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PredefinedRelativeDatePicker = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp2;

var _templateObject = _taggedTemplateLiteral(["Today"], ["Today"]),
    _templateObject2 = _taggedTemplateLiteral(["Yesterday"], ["Yesterday"]),
    _templateObject3 = _taggedTemplateLiteral(["Past 7 days"], ["Past 7 days"]),
    _templateObject4 = _taggedTemplateLiteral(["Past 30 days"], ["Past 30 days"]),
    _templateObject5 = _taggedTemplateLiteral(["Week"], ["Week"]),
    _templateObject6 = _taggedTemplateLiteral(["Month"], ["Month"]),
    _templateObject7 = _taggedTemplateLiteral(["Year"], ["Year"]),
    _templateObject8 = _taggedTemplateLiteral(["Past 7 Days"], ["Past 7 Days"]),
    _templateObject9 = _taggedTemplateLiteral(["Past 30 Days"], ["Past 30 Days"]),
    _templateObject10 = _taggedTemplateLiteral(["Last Week"], ["Last Week"]),
    _templateObject11 = _taggedTemplateLiteral(["Last Month"], ["Last Month"]),
    _templateObject12 = _taggedTemplateLiteral(["Last Year"], ["Last Year"]),
    _templateObject13 = _taggedTemplateLiteral(["This Week"], ["This Week"]),
    _templateObject14 = _taggedTemplateLiteral(["This Month"], ["This Month"]),
    _templateObject15 = _taggedTemplateLiteral(["This Year"], ["This Year"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var SHORTCUTS = [{
  name: (0, _c3po.t)(_templateObject),
  operator: ["=", "<", ">"],
  values: [["relative-datetime", "current"]]
}, {
  name: (0, _c3po.t)(_templateObject2),
  operator: ["=", "<", ">"],
  values: [["relative-datetime", -1, "day"]]
}, { name: (0, _c3po.t)(_templateObject3), operator: "time-interval", values: [-7, "day"] }, { name: (0, _c3po.t)(_templateObject4), operator: "time-interval", values: [-30, "day"] }];

var RELATIVE_SHORTCUTS = {
  Last: [{ name: (0, _c3po.t)(_templateObject5), operator: "time-interval", values: ["last", "week"] }, { name: (0, _c3po.t)(_templateObject6), operator: "time-interval", values: ["last", "month"] }, { name: (0, _c3po.t)(_templateObject7), operator: "time-interval", values: ["last", "year"] }],
  This: [{ name: (0, _c3po.t)(_templateObject5), operator: "time-interval", values: ["current", "week"] }, { name: (0, _c3po.t)(_templateObject6), operator: "time-interval", values: ["current", "month"] }, { name: (0, _c3po.t)(_templateObject7), operator: "time-interval", values: ["current", "year"] }]
};

var PredefinedRelativeDatePicker = exports.PredefinedRelativeDatePicker = (_temp = _class = function (_Component) {
  _inherits(PredefinedRelativeDatePicker, _Component);

  function PredefinedRelativeDatePicker(props, context) {
    _classCallCheck(this, PredefinedRelativeDatePicker);

    var _this = _possibleConstructorReturn(this, (PredefinedRelativeDatePicker.__proto__ || Object.getPrototypeOf(PredefinedRelativeDatePicker)).call(this, props, context));

    _underscore2.default.bindAll(_this, "isSelectedShortcut", "onSetShortcut");
    return _this;
  }

  _createClass(PredefinedRelativeDatePicker, [{
    key: "isSelectedShortcut",
    value: function isSelectedShortcut(shortcut) {
      var filter = this.props.filter;

      return (Array.isArray(shortcut.operator) ? _underscore2.default.contains(shortcut.operator, filter[0]) : filter[0] === shortcut.operator) && _underscore2.default.isEqual(filter.slice(2), shortcut.values);
    }
  }, {
    key: "onSetShortcut",
    value: function onSetShortcut(shortcut) {
      var filter = this.props.filter;

      var operator = void 0;
      if (Array.isArray(shortcut.operator)) {
        if (_underscore2.default.contains(shortcut.operator, filter[0])) {
          operator = filter[0];
        } else {
          operator = shortcut.operator[0];
        }
      } else {
        operator = shortcut.operator;
      }
      this.props.onFilterChange([operator, filter[1]].concat(_toConsumableArray(shortcut.values)));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        "div",
        { className: "p1 pt2" },
        _react2.default.createElement(
          "section",
          null,
          SHORTCUTS.map(function (s, index) {
            return _react2.default.createElement(
              "span",
              {
                key: index,
                className: (0, _classnames2.default)("inline-block half pb1", { pr1: index % 2 === 0 })
              },
              _react2.default.createElement(
                "button",
                {
                  key: index,
                  className: (0, _classnames2.default)("Button Button-normal Button--medium text-normal text-centered full", { "Button--purple": _this2.isSelectedShortcut(s) }),
                  onClick: function onClick() {
                    return _this2.onSetShortcut(s);
                  }
                },
                s.name
              )
            );
          })
        ),
        Object.keys(RELATIVE_SHORTCUTS).map(function (sectionName) {
          return _react2.default.createElement(
            "section",
            { key: sectionName },
            _react2.default.createElement(
              "div",
              {
                style: {},
                className: "border-bottom text-uppercase flex layout-centered mb2"
              },
              _react2.default.createElement(
                "h6",
                {
                  style: {
                    position: "relative",
                    backgroundColor: "white",
                    top: "6px"
                  },
                  className: "px2"
                },
                sectionName
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "flex" },
              RELATIVE_SHORTCUTS[sectionName].map(function (s, index) {
                return _react2.default.createElement(
                  "button",
                  {
                    key: index,
                    "data-ui-tag": "relative-date-shortcut-" + sectionName.toLowerCase() + "-" + s.name.toLowerCase(),
                    className: (0, _classnames2.default)("Button Button-normal Button--medium flex-full mb1", {
                      "Button--purple": _this2.isSelectedShortcut(s),
                      mr1: index !== RELATIVE_SHORTCUTS[sectionName].length - 1
                    }),
                    onClick: function onClick() {
                      return _this2.onSetShortcut(s);
                    }
                  },
                  s.name
                );
              })
            )
          );
        })
      );
    }
  }]);

  return PredefinedRelativeDatePicker;
}(_react.Component), _class.propTypes = {
  filter: _propTypes2.default.array.isRequired,
  onFilterChange: _propTypes2.default.func.isRequired
}, _temp);
PredefinedRelativeDatePicker.displayName = "PredefinedRelativeDatePicker";


// HACK: easiest way to get working with RelativeDatePicker
var FILTERS = {
  today: {
    name: (0, _c3po.t)(_templateObject),
    mapping: ["=", null, ["relative-datetime", "current"]]
  },
  yesterday: {
    name: (0, _c3po.t)(_templateObject2),
    mapping: ["=", null, ["relative-datetime", -1, "day"]]
  },
  past7days: {
    name: (0, _c3po.t)(_templateObject8),
    mapping: ["time-interval", null, -7, "day"]
  },
  past30days: {
    name: (0, _c3po.t)(_templateObject9),
    mapping: ["time-interval", null, -30, "day"]
  },
  lastweek: {
    name: (0, _c3po.t)(_templateObject10),
    mapping: ["time-interval", null, "last", "week"]
  },
  lastmonth: {
    name: (0, _c3po.t)(_templateObject11),
    mapping: ["time-interval", null, "last", "month"]
  },
  lastyear: {
    name: (0, _c3po.t)(_templateObject12),
    mapping: ["time-interval", null, "last", "year"]
  },
  thisweek: {
    name: (0, _c3po.t)(_templateObject13),
    mapping: ["time-interval", null, "current", "week"]
  },
  thismonth: {
    name: (0, _c3po.t)(_templateObject14),
    mapping: ["time-interval", null, "current", "month"]
  },
  thisyear: {
    name: (0, _c3po.t)(_templateObject15),
    mapping: ["time-interval", null, "current", "year"]
  }
};

var DateRelativeWidget = (_temp2 = _class2 = function (_Component2) {
  _inherits(DateRelativeWidget, _Component2);

  function DateRelativeWidget(props, context) {
    _classCallCheck(this, DateRelativeWidget);

    var _this3 = _possibleConstructorReturn(this, (DateRelativeWidget.__proto__ || Object.getPrototypeOf(DateRelativeWidget)).call(this, props, context));

    _this3.state = {};
    return _this3;
  }

  _createClass(DateRelativeWidget, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          value = _props.value,
          setValue = _props.setValue,
          onClose = _props.onClose;

      return _react2.default.createElement(
        "div",
        { className: "px1", style: { maxWidth: 300 } },
        _react2.default.createElement(PredefinedRelativeDatePicker, {
          filter: FILTERS[value] ? FILTERS[value].mapping : [null, null],
          onFilterChange: function onFilterChange(filter) {
            setValue(_underscore2.default.findKey(FILTERS, function (f) {
              return _underscore2.default.isEqual(f.mapping, filter);
            }));
            onClose();
          }
        })
      );
    }
  }]);

  return DateRelativeWidget;
}(_react.Component), _class2.propTypes = {}, _class2.defaultProps = {}, _class2.format = function (value) {
  return FILTERS[value] ? FILTERS[value].name : "";
}, _temp2);
DateRelativeWidget.displayName = "DateRelativeWidget";
exports.default = DateRelativeWidget;

/***/ }),

/***/ 517:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _YearPicker = __webpack_require__(269);

var _YearPicker2 = _interopRequireDefault(_YearPicker);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DateMonthYearWidget = (_temp = _class = function (_Component) {
  _inherits(DateMonthYearWidget, _Component);

  function DateMonthYearWidget(props, context) {
    _classCallCheck(this, DateMonthYearWidget);

    var _this = _possibleConstructorReturn(this, (DateMonthYearWidget.__proto__ || Object.getPrototypeOf(DateMonthYearWidget)).call(this, props, context));

    var initial = (0, _moment2.default)(_this.props.value, "YYYY-MM");
    if (initial.isValid()) {
      _this.state = {
        month: initial.month(),
        year: initial.year()
      };
    } else {
      _this.state = {
        month: null,
        year: (0, _moment2.default)().year()
      };
    }
    return _this;
  }

  _createClass(DateMonthYearWidget, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _state = this.state,
          month = _state.month,
          year = _state.year;

      if (month != null && year != null) {
        var value = (0, _moment2.default)().year(year).month(month).format("YYYY-MM");
        if (this.props.value !== value) {
          this.props.setValue(value);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var onClose = this.props.onClose;
      var _state2 = this.state,
          month = _state2.month,
          year = _state2.year;

      return _react2.default.createElement(
        "div",
        { className: "py2" },
        _react2.default.createElement(
          "div",
          { className: "flex flex-column align-center px1" },
          _react2.default.createElement(_YearPicker2.default, {
            value: year,
            onChange: function onChange(year) {
              return _this2.setState({ year: year });
            }
          })
        ),
        _react2.default.createElement(
          "div",
          { className: "flex" },
          _react2.default.createElement(
            "ol",
            { className: "flex flex-column" },
            _underscore2.default.range(0, 6).map(function (m) {
              return _react2.default.createElement(Month, {
                key: m,
                month: m,
                selected: m === month,
                onClick: function onClick() {
                  return _this2.setState({ month: m }, onClose);
                }
              });
            })
          ),
          _react2.default.createElement(
            "ol",
            { className: "flex flex-column" },
            _underscore2.default.range(6, 12).map(function (m) {
              return _react2.default.createElement(Month, {
                key: m,
                month: m,
                selected: m === month,
                onClick: function onClick() {
                  return _this2.setState({ month: m }, onClose);
                }
              });
            })
          )
        )
      );
    }
  }]);

  return DateMonthYearWidget;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {}, _class.format = function (value) {
  var m = (0, _moment2.default)(value, "YYYY-MM");
  return m.isValid() ? m.format("MMMM, YYYY") : "";
}, _temp);
DateMonthYearWidget.displayName = "DateMonthYearWidget";
exports.default = DateMonthYearWidget;


var Month = function Month(_ref) {
  var month = _ref.month,
      selected = _ref.selected,
      onClick = _ref.onClick;
  return _react2.default.createElement(
    "li",
    {
      className: (0, _classnames2.default)("cursor-pointer px3 py1 text-bold text-brand-hover", {
        "text-brand": selected
      }),
      onClick: onClick
    },
    (0, _moment2.default)().month(month).format("MMMM")
  );
};
Month.displayName = "Month";

/***/ }),

/***/ 518:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _YearPicker = __webpack_require__(269);

var _YearPicker2 = _interopRequireDefault(_YearPicker);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DateQuarterYearWidget = (_temp = _class = function (_Component) {
  _inherits(DateQuarterYearWidget, _Component);

  function DateQuarterYearWidget(props, context) {
    _classCallCheck(this, DateQuarterYearWidget);

    var _this = _possibleConstructorReturn(this, (DateQuarterYearWidget.__proto__ || Object.getPrototypeOf(DateQuarterYearWidget)).call(this, props, context));

    var initial = (0, _moment2.default)(_this.props.value, "[Q]Q-YYYY");
    if (initial.isValid()) {
      _this.state = {
        quarter: initial.quarter(),
        year: initial.year()
      };
    } else {
      _this.state = {
        quarter: null,
        year: (0, _moment2.default)().year()
      };
    }
    return _this;
  }

  _createClass(DateQuarterYearWidget, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _state = this.state,
          quarter = _state.quarter,
          year = _state.year;

      if (quarter != null && year != null) {
        var value = (0, _moment2.default)().year(year).quarter(quarter).format("[Q]Q-YYYY");
        if (this.props.value !== value) {
          this.props.setValue(value);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var onClose = this.props.onClose;
      var _state2 = this.state,
          quarter = _state2.quarter,
          year = _state2.year;

      return _react2.default.createElement(
        "div",
        { className: "py2" },
        _react2.default.createElement(
          "div",
          { className: "flex flex-column align-center px1" },
          _react2.default.createElement(_YearPicker2.default, {
            value: year,
            onChange: function onChange(year) {
              return _this2.setState({ year: year });
            }
          })
        ),
        _react2.default.createElement(
          "ol",
          {
            className: "flex flex-wrap bordered mx2 text-bold rounded",
            style: { width: 150 }
          },
          _underscore2.default.range(1, 5).map(function (q) {
            return _react2.default.createElement(Quarter, {
              quarter: q,
              selected: q === quarter,
              onClick: function onClick() {
                return _this2.setState({ quarter: q }, onClose);
              }
            });
          })
        )
      );
    }
  }]);

  return DateQuarterYearWidget;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {}, _class.format = function (value) {
  var m = (0, _moment2.default)(value, "[Q]Q-YYYY");
  return m.isValid() ? m.format("[Q]Q, YYYY") : "";
}, _temp);
DateQuarterYearWidget.displayName = "DateQuarterYearWidget";
exports.default = DateQuarterYearWidget;


var Quarter = function Quarter(_ref) {
  var quarter = _ref.quarter,
      selected = _ref.selected,
      onClick = _ref.onClick;
  return _react2.default.createElement(
    "li",
    {
      className: (0, _classnames2.default)("cursor-pointer bg-brand-hover text-white-hover flex layout-centered", { "bg-brand text-white": selected }),
      style: { width: 75, height: 75 },
      onClick: onClick
    },
    (0, _moment2.default)().quarter(quarter).format("[Q]Q")
  );
};
Quarter.displayName = "Quarter";

/***/ }),

/***/ 519:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Update filter"], ["Update filter"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _c3po = __webpack_require__(2);

var _DatePicker = __webpack_require__(137);

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _FilterOptions = __webpack_require__(243);

var _FilterOptions2 = _interopRequireDefault(_FilterOptions);

var _query_time = __webpack_require__(92);

var _Parameter = __webpack_require__(85);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Use a placeholder value as field references are not used in dashboard filters
// $FlowFixMe
var noopRef = null;

function getFilterValueSerializer(func) {
  // $FlowFixMe
  return function (filter) {
    return func(filter[2], filter[3], filter[4] || {});
  };
}

var serializersByOperatorName = {
  previous: getFilterValueSerializer(function (value, unit) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    return (
      // $FlowFixMe
      "past" + -value + unit + "s" + (options["include-current"] ? "~" : "")
    );
  }),
  next: getFilterValueSerializer(function (value, unit) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    return "next" + value + unit + "s" + (options["include-current"] ? "~" : "");
  }),
  current: getFilterValueSerializer(function (_, unit) {
    return "this" + unit;
  }),
  before: getFilterValueSerializer(function (value) {
    return "~" + value;
  }),
  after: getFilterValueSerializer(function (value) {
    return value + "~";
  }),
  on: getFilterValueSerializer(function (value) {
    return "" + value;
  }),
  between: getFilterValueSerializer(function (from, to) {
    return from + "~" + to;
  })
};

function getFilterOperator(filter) {
  return _DatePicker.DATE_OPERATORS.find(function (op) {
    return op.test(filter);
  });
}
function filterToUrlEncoded(filter) {
  var operator = getFilterOperator(filter);

  if (operator) {
    return serializersByOperatorName[operator.name](filter);
  } else {
    return null;
  }
}

var prefixedOperators = new Set(["before", "after", "on", "empty", "not-empty"]);
function getFilterTitle(filter) {
  var desc = (0, _query_time.generateTimeFilterValuesDescriptions)(filter).join(" - ");
  var op = getFilterOperator(filter);
  var prefix = op && prefixedOperators.has(op.name) ? op.displayName + " " : "";
  return prefix + desc;
}

var DateAllOptionsWidget = (_temp = _class = function (_Component) {
  _inherits(DateAllOptionsWidget, _Component);

  function DateAllOptionsWidget(props) {
    _classCallCheck(this, DateAllOptionsWidget);

    var _this = _possibleConstructorReturn(this, (DateAllOptionsWidget.__proto__ || Object.getPrototypeOf(DateAllOptionsWidget)).call(this, props));

    _this.commitAndClose = function () {
      _this.props.setValue(filterToUrlEncoded(_this.state.filter));
      _this.props.onClose();
    };

    _this.setFilter = function (filter) {
      _this.setState({ filter: filter });
    };

    _this.state = {
      filter: props.value != null ? // $FlowFixMe
      (0, _Parameter.dateParameterValueToMBQL)(props.value, noopRef) || [] : // $FlowFixMe
      []
    };
    return _this;
  }

  _createClass(DateAllOptionsWidget, [{
    key: "isValid",
    value: function isValid() {
      var filterValues = this.state.filter.slice(2);
      return filterValues.every(function (value) {
        return value != null;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var filter = this.state.filter;

      return _react2.default.createElement(
        "div",
        { style: { minWidth: "300px" } },
        _react2.default.createElement(_DatePicker2.default, {
          filter: this.state.filter,
          onFilterChange: this.setFilter,
          hideEmptinessOperators: true,
          hideTimeSelectors: true
        }),
        _react2.default.createElement(
          "div",
          { className: "FilterPopover-footer border-top flex align-center p2" },
          _react2.default.createElement(_FilterOptions2.default, {
            filter: filter,
            onFilterChange: this.setFilter,
            operator: (0, _DatePicker.getOperator)(filter)
          }),
          _react2.default.createElement(
            "button",
            {
              className: (0, _classnames2.default)("Button Button--purple ml-auto", {
                disabled: !this.isValid()
              }),
              onClick: this.commitAndClose
            },
            (0, _c3po.t)(_templateObject)
          )
        )
      );
    }
  }]);

  return DateAllOptionsWidget;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {}, _class.format = function (urlEncoded) {
  if (urlEncoded == null) return null;
  var filter = (0, _Parameter.dateParameterValueToMBQL)(urlEncoded, noopRef);

  return filter ? getFilterTitle(filter) : null;
}, _temp);
DateAllOptionsWidget.displayName = "DateAllOptionsWidget";
exports.default = DateAllOptionsWidget;

/***/ }),

/***/ 520:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;
/* eslint "react/prop-types": "warn" */

var _templateObject = _taggedTemplateLiteral(["Done"], ["Done"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _string = __webpack_require__(119);

var _field = __webpack_require__(93);

var _SelectPicker = __webpack_require__(248);

var _SelectPicker2 = _interopRequireDefault(_SelectPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CategoryWidget = (_temp = _class = function (_Component) {
  _inherits(CategoryWidget, _Component);

  function CategoryWidget(props) {
    _classCallCheck(this, CategoryWidget);

    var _this = _possibleConstructorReturn(this, (CategoryWidget.__proto__ || Object.getPrototypeOf(CategoryWidget)).call(this, props));

    _this.updateSearchText = function (value) {
      var regex = null;

      if (value) {
        regex = (0, _string.createMultiwordSearchRegex)(value);
      }

      _this.setState({
        searchText: value,
        searchRegex: regex
      });
    };

    _this.commitValues = function (values) {
      if (values && values.length === 0) {
        values = null;
      }
      _this.props.setValue(values);
      _this.props.onClose();
    };

    _this.onSelectedValuesChange = function (values) {
      _this.setState({ selectedValues: values });
    };

    _this.state = {
      searchText: "",
      searchRegex: null,
      selectedValues: Array.isArray(props.value) ? props.value : [props.value]
    };
    return _this;
  }

  _createClass(CategoryWidget, [{
    key: "getOptions",
    value: function getOptions() {
      return this.props.values.slice().map(function (value) {
        return {
          name: value[0],
          key: value[0]
        };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var options = this.getOptions();
      var selectedValues = this.state.selectedValues;

      return _react2.default.createElement(
        "div",
        { style: { minWidth: 182 } },
        _react2.default.createElement(_SelectPicker2.default, {
          options: options,
          values: selectedValues,
          onValuesChange: this.onSelectedValuesChange,
          multi: true
        }),
        _react2.default.createElement(
          "div",
          { className: "p1" },
          _react2.default.createElement(
            "button",
            {
              "data-ui-tag": "add-category-filter",
              className: "Button Button--purple full",
              onClick: function onClick() {
                return _this2.commitValues(_this2.state.selectedValues);
              }
            },
            (0, _c3po.t)(_templateObject)
          )
        )
      );
    }
  }], [{
    key: "format",
    value: function format(values, fieldValues) {
      if (Array.isArray(values) && values.length > 1) {
        return values.length + " selections";
      } else {
        return (0, _field.getHumanReadableValue)(values, fieldValues);
      }
    }
  }]);

  return CategoryWidget;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.any,
  values: _propTypes2.default.array.isRequired,
  setValue: _propTypes2.default.func.isRequired,
  onClose: _propTypes2.default.func.isRequired
}, _temp);
CategoryWidget.displayName = "CategoryWidget";
exports.default = CategoryWidget;

/***/ }),

/***/ 521:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /* eslint "react/prop-types": "warn" */


var _templateObject = _taggedTemplateLiteral(["Enter a value..."], ["Enter a value..."]),
    _templateObject2 = _taggedTemplateLiteral(["Enter a default value..."], ["Enter a default value..."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dom = __webpack_require__(28);

var _c3po = __webpack_require__(2);

var _keyboard = __webpack_require__(69);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextWidget = (_temp = _class = function (_Component) {
  _inherits(TextWidget, _Component);

  function TextWidget(props, context) {
    _classCallCheck(this, TextWidget);

    var _this = _possibleConstructorReturn(this, (TextWidget.__proto__ || Object.getPrototypeOf(TextWidget)).call(this, props, context));

    _this.state = {
      value: props.value,
      isFocused: false
    };
    return _this;
  }

  _createClass(TextWidget, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.value !== nextProps.value) {
        this.setState({ value: nextProps.value }, function () {
          // HACK: Address Safari rendering bug which causes https://github.com/metabase/metabase/issues/5335
          (0, _dom.forceRedraw)(_reactDom2.default.findDOMNode(_this2));
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          setValue = _props.setValue,
          className = _props.className,
          isEditing = _props.isEditing,
          parentFocusChanged = _props.focusChanged;

      var defaultPlaceholder = this.state.isFocused ? "" : this.props.placeholder || (0, _c3po.t)(_templateObject);

      var focusChanged = function focusChanged(isFocused) {
        if (parentFocusChanged) parentFocusChanged(isFocused);
        _this3.setState({ isFocused: isFocused });
      };

      return _react2.default.createElement("input", {
        className: className,
        type: "text",
        value: this.state.value || "",
        onChange: function onChange(e) {
          _this3.setState({ value: e.target.value });
          if (_this3.props.commitImmediately) {
            _this3.props.setValue(e.target.value || null);
          }
        },
        onKeyUp: function onKeyUp(e) {
          if (e.keyCode === _keyboard.KEYCODE_ESCAPE) {
            e.target.blur();
          } else if (e.keyCode === _keyboard.KEYCODE_ENTER) {
            setValue(_this3.state.value || null);
            e.target.blur();
          }
        },
        onFocus: function onFocus() {
          focusChanged(true);
        },
        onBlur: function onBlur() {
          focusChanged(false);
          _this3.setState({ value: _this3.props.value });
        },
        placeholder: isEditing ? (0, _c3po.t)(_templateObject2) : defaultPlaceholder
      });
    }
  }]);

  return TextWidget;
}(_react.Component), _class.propTypes = {
  value: _propTypes2.default.any,
  setValue: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string,
  isEditing: _propTypes2.default.bool,
  commitImmediately: _propTypes2.default.bool,
  placeholder: _propTypes2.default.string,
  focusChanged: _propTypes2.default.func
}, _class.defaultProps = {
  commitImmediately: false
}, _class.noPopover = true, _class.format = function (value) {
  return value;
}, _temp);
TextWidget.displayName = "TextWidget";
exports.default = TextWidget;

/***/ }),

/***/ 522:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Enter a value..."], ["Enter a value..."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _c3po = __webpack_require__(2);

var _FieldValuesWidget = __webpack_require__(249);

var _FieldValuesWidget2 = _interopRequireDefault(_FieldValuesWidget);

var _Popover = __webpack_require__(41);

var _Popover2 = _interopRequireDefault(_Popover);

var _Button = __webpack_require__(44);

var _Button2 = _interopRequireDefault(_Button);

var _RemappedValue = __webpack_require__(177);

var _RemappedValue2 = _interopRequireDefault(_RemappedValue);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BORDER_WIDTH = 2;

var normalizeValue = function normalizeValue(value) {
  return Array.isArray(value) ? value : value != null ? [value] : [];
};

// TODO: rename this something else since we're using it for more than searching and more than text
var ParameterFieldWidget = (_temp = _class = function (_Component) {
  _inherits(ParameterFieldWidget, _Component);

  function ParameterFieldWidget(props) {
    _classCallCheck(this, ParameterFieldWidget);

    var _this = _possibleConstructorReturn(this, (ParameterFieldWidget.__proto__ || Object.getPrototypeOf(ParameterFieldWidget)).call(this, props));

    _this.state = {
      isFocused: false,
      value: props.value,
      widgetWidth: null
    };
    return _this;
  }

  _createClass(ParameterFieldWidget, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        this.setState({ value: nextProps.value });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var element = _reactDom2.default.findDOMNode(this._unfocusedElement);
      if (!this.state.isFocused && element) {
        var parameterWidgetElement = element.parentNode.parentNode.parentNode;
        if (parameterWidgetElement.clientWidth !== this.state.widgetWidth) {
          this.setState({ widgetWidth: parameterWidgetElement.clientWidth });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          setValue = _props.setValue,
          isEditing = _props.isEditing,
          field = _props.field,
          parentFocusChanged = _props.parentFocusChanged;
      var isFocused = this.state.isFocused;


      var savedValue = normalizeValue(this.props.value);
      var unsavedValue = normalizeValue(this.state.value);

      var defaultPlaceholder = isFocused ? "" : this.props.placeholder || (0, _c3po.t)(_templateObject);

      var focusChanged = function focusChanged(isFocused) {
        if (parentFocusChanged) parentFocusChanged(isFocused);
        _this2.setState({ isFocused: isFocused });
      };

      var placeholder = isEditing ? "Enter a default value..." : defaultPlaceholder;

      if (!isFocused) {
        return _react2.default.createElement(
          "div",
          {
            ref: function ref(_) {
              return _this2._unfocusedElement = _;
            },
            className: "flex-full cursor-pointer",
            onClick: function onClick() {
              return focusChanged(true);
            }
          },
          savedValue.length > 0 ? ParameterFieldWidget.format(savedValue, field) : _react2.default.createElement(
            "span",
            null,
            placeholder
          )
        );
      } else {
        return _react2.default.createElement(
          _Popover2.default,
          {
            horizontalAttachments: ["left", "right"],
            verticalAttachments: ["top"],
            alignHorizontalEdge: true,
            alignVerticalEdge: true,
            targetOffsetY: -19,
            targetOffsetX: 33,
            hasArrow: false,
            onClose: function onClose() {
              return focusChanged(false);
            }
          },
          _react2.default.createElement(_FieldValuesWidget2.default, {
            value: unsavedValue,
            onChange: function onChange(value) {
              _this2.setState({ value: value });
            },
            placeholder: placeholder,
            field: field,
            searchField: field.parameterSearchField(),
            multi: true,
            autoFocus: true,
            color: "brand",
            style: {
              borderWidth: BORDER_WIDTH,
              minWidth: this.state.widgetWidth ? this.state.widgetWidth + BORDER_WIDTH * 2 : null
            },
            minWidth: 400,
            maxWidth: 400
          }),
          _react2.default.createElement(
            "div",
            { className: "flex p1" },
            _react2.default.createElement(
              _Button2.default,
              {
                primary: true,
                className: "ml-auto",
                disabled: savedValue.length === 0 && unsavedValue.length === 0,
                onClick: function onClick() {
                  setValue(unsavedValue.length > 0 ? unsavedValue : null);
                  focusChanged(false);
                }
              },
              savedValue.length > 0 ? "Update filter" : "Add filter"
            )
          )
        );
      }
    }
  }], [{
    key: "format",
    value: function format(value, field) {
      value = normalizeValue(value);
      if (value.length > 1) {
        return value.length + " selections";
      } else {
        return _react2.default.createElement(_RemappedValue2.default, { value: value[0], column: field });
      }
    }
  }]);

  return ParameterFieldWidget;
}(_react.Component), _class.noPopover = true, _temp);
ParameterFieldWidget.displayName = "ParameterFieldWidget";
exports.default = ParameterFieldWidget;

/***/ }),

/***/ 523:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var NightModeIcon = function NightModeIcon(_ref) {
  var isNightMode = _ref.isNightMode,
      props = _objectWithoutProperties(_ref, ["isNightMode"]);

  return _react2.default.createElement(_Icon2.default, _extends({ name: isNightMode ? "sun" : "moon" }, props));
};

NightModeIcon.displayName = "NightModeIcon";
exports.default = NightModeIcon;

/***/ }),

/***/ 524:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var FullscreenIcon = function FullscreenIcon(_ref) {
  var isFullscreen = _ref.isFullscreen,
      props = _objectWithoutProperties(_ref, ["isFullscreen"]);

  return _react2.default.createElement(_Icon2.default, _extends({ name: isFullscreen ? "contract" : "expand" }, props));
};

FullscreenIcon.displayName = "FullscreenIcon";
exports.default = FullscreenIcon;

/***/ }),

/***/ 525:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(["Off"], ["Off"]),
    _templateObject2 = _taggedTemplateLiteral(["1 minute"], ["1 minute"]),
    _templateObject3 = _taggedTemplateLiteral(["5 minutes"], ["5 minutes"]),
    _templateObject4 = _taggedTemplateLiteral(["10 minutes"], ["10 minutes"]),
    _templateObject5 = _taggedTemplateLiteral(["15 minutes"], ["15 minutes"]),
    _templateObject6 = _taggedTemplateLiteral(["30 minutes"], ["30 minutes"]),
    _templateObject7 = _taggedTemplateLiteral(["60 minutes"], ["60 minutes"]),
    _templateObject8 = _taggedTemplateLiteral(["Auto-refresh"], ["Auto-refresh"]),
    _templateObject9 = _taggedTemplateLiteral(["Refreshing in"], ["Refreshing in"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _RefreshWidget = __webpack_require__(526);

var _RefreshWidget2 = _interopRequireDefault(_RefreshWidget);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _ClockIcon = __webpack_require__(527);

var _ClockIcon2 = _interopRequireDefault(_ClockIcon);

var _CountdownIcon = __webpack_require__(528);

var _CountdownIcon2 = _interopRequireDefault(_CountdownIcon);

var _c3po = __webpack_require__(2);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var OPTIONS = [{ name: (0, _c3po.t)(_templateObject), period: null }, { name: (0, _c3po.t)(_templateObject2), period: 1 * 60 }, { name: (0, _c3po.t)(_templateObject3), period: 5 * 60 }, { name: (0, _c3po.t)(_templateObject4), period: 10 * 60 }, { name: (0, _c3po.t)(_templateObject5), period: 15 * 60 }, { name: (0, _c3po.t)(_templateObject6), period: 30 * 60 }, { name: (0, _c3po.t)(_templateObject7), period: 60 * 60 }];

var RefreshWidget = function (_Component) {
  _inherits(RefreshWidget, _Component);

  function RefreshWidget() {
    _classCallCheck(this, RefreshWidget);

    return _possibleConstructorReturn(this, (RefreshWidget.__proto__ || Object.getPrototypeOf(RefreshWidget)).apply(this, arguments));
  }

  _createClass(RefreshWidget, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          period = _props.period,
          elapsed = _props.elapsed,
          onChangePeriod = _props.onChangePeriod,
          className = _props.className;

      var remaining = period - elapsed;
      return _react2.default.createElement(
        _PopoverWithTrigger2.default,
        {
          ref: "popover",
          triggerElement: elapsed == null ? _react2.default.createElement(
            _Tooltip2.default,
            { tooltip: (0, _c3po.t)(_templateObject8) },
            _react2.default.createElement(_ClockIcon2.default, { width: 18, height: 18, className: className })
          ) : _react2.default.createElement(
            _Tooltip2.default,
            {
              tooltip: (0, _c3po.t)(_templateObject9) + " " + Math.floor(remaining / 60) + ":" + (remaining % 60 < 10 ? "0" : "") + Math.round(remaining % 60)
            },
            _react2.default.createElement(_CountdownIcon2.default, {
              width: 18,
              height: 18,
              className: "text-green",
              percent: Math.min(0.95, (period - elapsed) / period)
            })
          ),
          targetOffsetY: 10
        },
        _react2.default.createElement(
          "div",
          { className: _RefreshWidget2.default.popover },
          _react2.default.createElement(
            "div",
            { className: _RefreshWidget2.default.title },
            "Auto Refresh"
          ),
          _react2.default.createElement(
            RefreshOptionList,
            null,
            OPTIONS.map(function (option) {
              return _react2.default.createElement(RefreshOption, {
                key: option.period,
                name: option.name,
                period: option.period,
                selected: option.period === period,
                onClick: function onClick() {
                  _this2.refs.popover.close();
                  onChangePeriod(option.period);
                }
              });
            })
          )
        )
      );
    }
  }]);

  return RefreshWidget;
}(_react.Component);

RefreshWidget.displayName = "RefreshWidget";
exports.default = RefreshWidget;


var RefreshOptionList = function RefreshOptionList(_ref) {
  var children = _ref.children;
  return _react2.default.createElement(
    "ul",
    null,
    children
  );
};

RefreshOptionList.displayName = "RefreshOptionList";
var RefreshOption = function RefreshOption(_ref2) {
  var name = _ref2.name,
      period = _ref2.period,
      selected = _ref2.selected,
      onClick = _ref2.onClick;
  return _react2.default.createElement(
    "li",
    {
      className: (0, _classnames2.default)(_RefreshWidget2.default.option, _RefreshWidget2.default[period == null ? "off" : "on"], _defineProperty({}, _RefreshWidget2.default.selected, selected)),
      onClick: onClick
    },
    _react2.default.createElement(_Icon2.default, { name: "check", size: 14 }),
    _react2.default.createElement(
      "span",
      { className: _RefreshWidget2.default.name },
      name.split(" ")[0]
    ),
    _react2.default.createElement(
      "span",
      { className: _RefreshWidget2.default.nameSuffix },
      " ",
      name.split(" ")[1]
    )
  );
};
RefreshOption.displayName = "RefreshOption";

/***/ }),

/***/ 526:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"popover":"_1PJaB","title":"_3oZM_","option":"_3sT2c _1a-AI","valueLabel":"UY_RI","on":"_1YWy_","selected":"BoMv1"};

/***/ }),

/***/ 527:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ClockIcon = function ClockIcon(_ref) {
  var _ref$hour = _ref.hour,
      hour = _ref$hour === undefined ? 12 : _ref$hour,
      _ref$minute = _ref.minute,
      minute = _ref$minute === undefined ? 40 : _ref$minute,
      _ref$width = _ref.width,
      width = _ref$width === undefined ? 20 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 20 : _ref$height,
      className = _ref.className;
  return _react2.default.createElement(
    "svg",
    {
      width: width,
      height: height,
      className: className,
      viewBox: "0 0 20 20",
      version: "1.1",
      xmlns: "https://www.w3.org/2000/svg"
    },
    _react2.default.createElement("circle", { cx: "10", cy: "10", r: "10", fill: "currentColor" }),
    _react2.default.createElement("line", {
      x1: "10",
      y1: "10",
      x2: "10",
      y2: "5",
      stroke: "white",
      strokeWidth: 2,
      strokeLinecap: "round",
      transform: "rotate(" + hour % 12 / 12 * 360 + " 10 10)"
    }),
    _react2.default.createElement("line", {
      x1: "10",
      y1: "10",
      x2: "10",
      y2: "6",
      stroke: "white",
      strokeWidth: 2,
      strokeLinecap: "round",
      transform: "rotate(" + minute % 60 / 60 * 360 + " 10 10)"
    })
  );
};

ClockIcon.displayName = "ClockIcon";
exports.default = ClockIcon;

/***/ }),

/***/ 528:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CountdownIcon = function CountdownIcon(_ref) {
  var _ref$percent = _ref.percent,
      percent = _ref$percent === undefined ? 0.75 : _ref$percent,
      _ref$width = _ref.width,
      width = _ref$width === undefined ? 20 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 20 : _ref$height,
      className = _ref.className;
  return _react2.default.createElement(
    "svg",
    {
      width: width,
      height: height,
      className: className,
      viewBox: "0 0 32 32",
      style: {
        transform: "rotate(-" + (percent * 360 + 90) + "deg)",
        borderRadius: "50%"
      }
    },
    _react2.default.createElement("circle", {
      r: "16",
      cx: "16",
      cy: "16",
      fill: "currentColor",
      stroke: "currentColor",
      fillOpacity: "0.5",
      strokeWidth: "32",
      strokeDasharray: percent * 100 + " 100"
    })
  );
};

CountdownIcon.displayName = "CountdownIcon";
exports.default = CountdownIcon;

/***/ }),

/***/ 529:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _GridItem = __webpack_require__(530);

var _GridItem2 = _interopRequireDefault(_GridItem);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GridLayout = function (_Component) {
  _inherits(GridLayout, _Component);

  function GridLayout(props, context) {
    _classCallCheck(this, GridLayout);

    var _this = _possibleConstructorReturn(this, (GridLayout.__proto__ || Object.getPrototypeOf(GridLayout)).call(this, props, context));

    _this.state = {
      width: 0,
      layout: props.layout,
      dragging: false,
      resizing: false,
      placeholderLayout: null
    };

    _underscore2.default.bindAll(_this, "onDrag", "onDragStart", "onDragStop", "onResize", "onResizeStart", "onResizeStop");
    return _this;
  }

  _createClass(GridLayout, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      var _state = this.state,
          dragging = _state.dragging,
          resizing = _state.resizing;

      if (!dragging && !resizing && this.state.layout !== newProps.layout) {
        this.setState({ layout: newProps.layout });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var width = _reactDom2.default.findDOMNode(this).parentNode.offsetWidth;
      if (this.state.width !== width) {
        this.setState({ width: width });
      }
    }
  }, {
    key: "onDragStart",
    value: function onDragStart(i, _ref) {
      // this.setState({ dragging: true })

      var position = _ref.position;
    }
  }, {
    key: "layoutsOverlap",
    value: function layoutsOverlap(a, b) {
      return a.x < b.x + b.w && b.x < a.x + a.w && a.y < b.y + b.h && b.y < a.y + a.h;
    }
  }, {
    key: "onDrag",
    value: function onDrag(i, _ref2) {
      var position = _ref2.position;

      var placeholderLayout = _extends({}, this.computeDraggedLayout(i, position), {
        i: "placeholder"
      });
      this.setState({ dragging: true, placeholderLayout: placeholderLayout });
      this.props.onDrag();
    }
  }, {
    key: "onDragStop",
    value: function onDragStop(i, _ref3) {
      var position = _ref3.position;
      var placeholderLayout = this.state.placeholderLayout;

      var newLayout = void 0;
      if (placeholderLayout) {
        var x = placeholderLayout.x,
            y = placeholderLayout.y,
            w = placeholderLayout.w,
            h = placeholderLayout.h;

        newLayout = this.state.layout.map(function (l) {
          return l.i === i ? _extends({}, l, { x: x, y: y, w: w, h: h }) : l;
        });
      }
      this.setState({ dragging: false, placeholderLayout: null });
      if (newLayout) {
        this.props.onLayoutChange(newLayout);
      }
      this.props.onDragStop();
    }
  }, {
    key: "computeDraggedLayout",
    value: function computeDraggedLayout(i, position) {
      var cellSize = this.getCellSize();
      var originalLayout = this.getLayoutForItem(i);
      var pos = this.getStyleForLayout(originalLayout);
      pos.top += position.y;
      pos.left += position.x;

      var maxX = this.props.cols - originalLayout.w;
      var maxY = Infinity;

      var targetLayout = {
        w: originalLayout.w,
        h: originalLayout.h,
        x: Math.min(maxX, Math.max(0, Math.round(pos.left / cellSize.width))),
        y: Math.min(maxY, Math.max(0, Math.round(pos.top / cellSize.height)))
      };
      var proposedLayout = targetLayout;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.state.layout[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var otherLayout = _step.value;

          if (originalLayout !== otherLayout && this.layoutsOverlap(proposedLayout, otherLayout)) {
            return this.state.placeholderLayout || originalLayout;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return proposedLayout;
    }
  }, {
    key: "onResizeStart",
    value: function onResizeStart(i, _ref4) {
      var size = _ref4.size;

      this.setState({ resizing: true });
    }
  }, {
    key: "onResize",
    value: function onResize(i, _ref5) {
      var size = _ref5.size;

      var placeholderLayout = _extends({}, this.computeResizedLayout(i, size), {
        i: "placeholder"
      });
      this.setState({ placeholderLayout: placeholderLayout });
    }
  }, {
    key: "onResizeStop",
    value: function onResizeStop(i, _ref6) {
      var _this2 = this;

      var size = _ref6.size;
      var _state$placeholderLay = this.state.placeholderLayout,
          x = _state$placeholderLay.x,
          y = _state$placeholderLay.y,
          w = _state$placeholderLay.w,
          h = _state$placeholderLay.h;

      var newLayout = this.state.layout.map(function (l) {
        return l.i === i ? _extends({}, l, { x: x, y: y, w: w, h: h }) : l;
      });
      this.setState({ resizing: false, placeholderLayout: null }, function () {
        return _this2.props.onLayoutChange(newLayout);
      });
    }
  }, {
    key: "computeResizedLayout",
    value: function computeResizedLayout(i, size) {
      var cellSize = this.getCellSize();
      var originalLayout = this.getLayoutForItem(i);

      var minW = originalLayout.minSize.width;
      var minH = originalLayout.minSize.height;
      var maxW = this.props.cols - originalLayout.x;
      var maxH = Infinity;
      var targetLayout = {
        w: Math.min(maxW, Math.max(minW, Math.round(size.width / cellSize.width))),
        h: Math.min(maxH, Math.max(minH, Math.round(size.height / cellSize.height))),
        x: originalLayout.x,
        y: originalLayout.y
      };

      var proposedLayout = targetLayout;
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.state.layout[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var otherLayout = _step2.value;

          if (originalLayout !== otherLayout && this.layoutsOverlap(proposedLayout, otherLayout)) {
            return this.state.placeholderLayout || originalLayout;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return proposedLayout;
    }
  }, {
    key: "getLayoutForItem",
    value: function getLayoutForItem(i) {
      return _underscore2.default.findWhere(this.state.layout, { i: i });
    }
  }, {
    key: "getCellSize",
    value: function getCellSize() {
      var margin = this.props.margin;
      // add 1 margin to make it fill the full width

      return {
        width: (this.state.width + margin) / this.props.cols,
        height: this.props.rowHeight
      };
    }
  }, {
    key: "getMinSizeForLayout",
    value: function getMinSizeForLayout(l) {
      var margin = this.props.margin;

      var cellSize = this.getCellSize();
      return {
        width: cellSize.width * l.minSize.width - margin,
        height: cellSize.height * l.minSize.height - margin
      };
    }
  }, {
    key: "getStyleForLayout",
    value: function getStyleForLayout(l) {
      var margin = this.props.margin;

      var cellSize = this.getCellSize();
      return {
        width: cellSize.width * l.w - margin,
        height: cellSize.height * l.h - margin,
        left: cellSize.width * l.x + margin / 2,
        top: cellSize.height * l.y + margin / 2
      };
    }
  }, {
    key: "renderChild",
    value: function renderChild(child) {
      var l = this.getLayoutForItem(child.key);
      var style = this.getStyleForLayout(l);
      return _react2.default.createElement(
        _GridItem2.default,
        _extends({}, l, style, {
          key: l.i,
          onDragStart: this.onDragStart,
          onDrag: this.onDrag,
          onDragStop: this.onDragStop,
          onResizeStart: this.onResizeStart,
          onResize: this.onResize,
          onResizeStop: this.onResizeStop,
          minSize: this.getMinSizeForLayout(l)
        }),
        child
      );
    }
  }, {
    key: "renderPlaceholder",
    value: function renderPlaceholder() {
      if (this.state.placeholderLayout) {
        var style = _extends({}, this.getStyleForLayout(this.state.placeholderLayout));
        return _react2.default.createElement("div", { className: "react-grid-placeholder absolute", style: style });
      }
    }
  }, {
    key: "getGridBackground",
    value: function getGridBackground() {
      var _props = this.props,
          margin = _props.margin,
          cols = _props.cols;

      var cellSize = this.getCellSize();
      return "url(\"data:image/svg+xml;utf8,<svg xmlns='https://www.w3.org/2000/svg' width='" + cellSize.width * cols + "' height='" + cellSize.height + "'>" + (0, _underscore2.default)(cols).times(function (i) {
        return "<rect stroke='rgba(0, 0, 0, 0.117647)' stroke-width='1' fill='none' x='" + (Math.round(margin / 2 + i * cellSize.width) + 1.5) + "' y='" + (margin / 2 + 1.5) + "' width='" + Math.round(cellSize.width - margin - 3) + "' height='" + (cellSize.height - margin - 3) + "'/>";
      }).join("") + "</svg>\")";
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props2 = this.props,
          className = _props2.className,
          layout = _props2.layout,
          cols = _props2.cols,
          margin = _props2.margin,
          isEditing = _props2.isEditing;


      var cellSize = this.getCellSize();
      var bottom = Math.max.apply(Math, _toConsumableArray(layout.map(function (l) {
        return l.y + l.h;
      })));

      var backgroundImage = void 0;
      if (isEditing) {
        // render grid as a background image:
        backgroundImage = this.getGridBackground();
        // add one vertical screen worth of rows to ensure the grid fills the screen
        bottom += Math.ceil(window.innerHeight / cellSize.height);
      }

      var width = cellSize.width * cols;
      var height = cellSize.height * bottom;

      // subtract half of a margin to ensure it lines up with the edges
      return _react2.default.createElement(
        "div",
        {
          className: className,
          style: {
            position: "relative",
            width: width,
            height: height,
            backgroundImage: backgroundImage,
            marginLeft: -margin / 2,
            marginRight: -margin / 2
          }
        },
        this.props.children.map(function (child) {
          return _this3.renderChild(child);
        }),
        this.renderPlaceholder()
      );
    }
  }]);

  return GridLayout;
}(_react.Component);

GridLayout.displayName = "GridLayout";
exports.default = GridLayout;

/***/ }),

/***/ 53:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractRemappings = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(["Visualization must define an 'identifier' static variable: "], ["Visualization must define an 'identifier' static variable: "]),
    _templateObject2 = _taggedTemplateLiteral(["Visualization with that identifier is already registered: "], ["Visualization with that identifier is already registered: "]),
    _templateObject3 = _taggedTemplateLiteral(["No visualization for ", ""], ["No visualization for ", ""]);

exports.registerVisualization = registerVisualization;
exports.getVisualizationRaw = getVisualizationRaw;
exports.getVisualizationTransformed = getVisualizationTransformed;

var _Scalar = __webpack_require__(455);

var _Scalar2 = _interopRequireDefault(_Scalar);

var _Progress = __webpack_require__(457);

var _Progress2 = _interopRequireDefault(_Progress);

var _Table = __webpack_require__(459);

var _Table2 = _interopRequireDefault(_Table);

var _Text = __webpack_require__(466);

var _Text2 = _interopRequireDefault(_Text);

var _LineChart = __webpack_require__(468);

var _LineChart2 = _interopRequireDefault(_LineChart);

var _BarChart = __webpack_require__(264);

var _BarChart2 = _interopRequireDefault(_BarChart);

var _RowChart = __webpack_require__(483);

var _RowChart2 = _interopRequireDefault(_RowChart);

var _PieChart = __webpack_require__(485);

var _PieChart2 = _interopRequireDefault(_PieChart);

var _AreaChart = __webpack_require__(490);

var _AreaChart2 = _interopRequireDefault(_AreaChart);

var _Map = __webpack_require__(491);

var _Map2 = _interopRequireDefault(_Map);

var _ScatterPlot = __webpack_require__(500);

var _ScatterPlot2 = _interopRequireDefault(_ScatterPlot);

var _Funnel = __webpack_require__(501);

var _Funnel2 = _interopRequireDefault(_Funnel);

var _ObjectDetail = __webpack_require__(505);

var _ObjectDetail2 = _interopRequireDefault(_ObjectDetail);

var _c3po = __webpack_require__(2);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); } /*  weak */

var visualizations = new Map();
var aliases = new Map();
// $FlowFixMe
visualizations.get = function (key) {
  return Map.prototype.get.call(this, key) || aliases.get(key) || _Table2.default;
};

function registerVisualization(visualization) {
  var identifier = visualization.identifier;
  if (identifier == null) {
    throw new Error((0, _c3po.t)(_templateObject) + visualization.name);
  }
  if (visualizations.has(identifier)) {
    throw new Error((0, _c3po.t)(_templateObject2) + visualization.name);
  }
  visualizations.set(identifier, visualization);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (visualization.aliases || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var alias = _step.value;

      aliases.set(alias, visualization);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}

function getVisualizationRaw(series) {
  return {
    series: series,
    CardVisualization: visualizations.get(series[0].card.display)
  };
}

function getVisualizationTransformed(series) {
  // don't transform if we don't have the data
  if (_underscore2.default.any(series, function (s) {
    return s.data == null;
  })) {
    return getVisualizationRaw(series);
  }

  // if a visualization has a transformSeries function, do the transformation until it returns the same visualization / series
  var CardVisualization = void 0,
      lastSeries = void 0;
  do {
    CardVisualization = visualizations.get(series[0].card.display);
    if (!CardVisualization) {
      throw new Error((0, _c3po.t)(_templateObject3, series[0].card.display));
    }
    lastSeries = series;
    if (typeof CardVisualization.transformSeries === "function") {
      series = CardVisualization.transformSeries(series);
    }
    if (series !== lastSeries) {
      series = [].concat(_toConsumableArray(series));
      // $FlowFixMe
      series._raw = lastSeries;
    }
  } while (series !== lastSeries);

  return { series: series, CardVisualization: CardVisualization };
}

var extractRemappings = exports.extractRemappings = function extractRemappings(series) {
  var se = series.map(function (s) {
    return _extends({}, s, {
      data: s.data && extractRemappedColumns(s.data)
    });
  });
  return se;
};

// removes columns with `remapped_from` property and adds a `remapping` to the appropriate column
var extractRemappedColumns = function extractRemappedColumns(data) {
  var cols = data.cols.map(function (col) {
    return _extends({}, col, {
      remapped_from_index: col.remapped_from && _underscore2.default.findIndex(data.cols, function (c) {
        return c.name === col.remapped_from;
      }),
      remapping: col.remapped_to && new Map()
    });
  });

  var rows = data.rows.map(function (row, rowIndex) {
    return row.filter(function (value, colIndex) {
      var col = cols[colIndex];
      if (col.remapped_from != null) {
        cols[col.remapped_from_index].remapped_to_column = col;
        cols[col.remapped_from_index].remapping.set(row[col.remapped_from_index], row[colIndex]);
        return false;
      } else {
        return true;
      }
    });
  });
  return _extends({}, data, {
    rows: rows,
    cols: cols.filter(function (col) {
      return col.remapped_from == null;
    })
  });
};

registerVisualization(_Scalar2.default);
registerVisualization(_Progress2.default);
registerVisualization(_Table2.default);
registerVisualization(_Text2.default);
registerVisualization(_LineChart2.default);
registerVisualization(_AreaChart2.default);
registerVisualization(_BarChart2.default);
registerVisualization(_RowChart2.default);
registerVisualization(_ScatterPlot2.default);
registerVisualization(_PieChart2.default);
registerVisualization(_Map2.default);
registerVisualization(_Funnel2.default);
registerVisualization(_ObjectDetail2.default);

exports.default = visualizations;

/***/ }),

/***/ 530:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDraggable = __webpack_require__(338);

var _reactResizable = __webpack_require__(595);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GridItem = function (_Component) {
  _inherits(GridItem, _Component);

  function GridItem(props, context) {
    _classCallCheck(this, GridItem);

    var _this = _possibleConstructorReturn(this, (GridItem.__proto__ || Object.getPrototypeOf(GridItem)).call(this, props, context));

    _this.state = {
      dragging: null,
      resizing: null
    };
    return _this;
  }

  _createClass(GridItem, [{
    key: "onDragHandler",
    value: function onDragHandler(handlerName) {
      var _this2 = this;

      return function (e, _ref) {
        var node = _ref.node,
            x = _ref.x,
            y = _ref.y;

        // react-draggle seems to return undefined/NaN occasionally, which breaks things
        if (isNaN(x) || isNaN(y)) {
          return;
        }

        var _state = _this2.state,
            dragStartPosition = _state.dragStartPosition,
            dragStartScrollTop = _state.dragStartScrollTop;

        if (handlerName === "onDragStart") {
          dragStartPosition = { x: x, y: y };
          dragStartScrollTop = document.body.scrollTop;
          _this2.setState({ dragStartPosition: dragStartPosition, dragStartScrollTop: dragStartScrollTop });
        }

        // track vertical scroll. we don't need horizontal  allow horizontal scrolling
        var scrollTopDelta = document.body.scrollTop - dragStartScrollTop;
        // compute new position
        var pos = {
          x: x - dragStartPosition.x,
          y: y - dragStartPosition.y + scrollTopDelta
        };

        if (handlerName === "onDragStop") {
          _this2.setState({ dragging: null });
        } else {
          _this2.setState({ dragging: pos });
        }

        _this2.props[handlerName](_this2.props.i, { e: e, node: node, position: pos });
      };
    }
  }, {
    key: "onResizeHandler",
    value: function onResizeHandler(handlerName) {
      var _this3 = this;

      return function (e, _ref2) {
        var element = _ref2.element,
            size = _ref2.size;

        if (handlerName === "onResize") {
          _this3.setState({ resizing: size });
        }
        if (handlerName === "onResizeStop") {
          _this3.setState({ resizing: null });
        }

        _this3.props[handlerName](_this3.props.i, { e: e, element: element, size: size });
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          width = _props.width,
          height = _props.height,
          top = _props.top,
          left = _props.left,
          minSize = _props.minSize;


      if (this.state.dragging) {
        left += this.state.dragging.x;
        top += this.state.dragging.y;
      }

      if (this.state.resizing) {
        width = Math.max(minSize.width, this.state.resizing.width);
        height = Math.max(minSize.height, this.state.resizing.height);
      }

      var style = {
        width: width,
        height: height,
        top: top,
        left: left,
        position: "absolute"
      };

      var child = _react2.default.Children.only(this.props.children);
      return _react2.default.createElement(
        _reactDraggable.DraggableCore,
        {
          cancel: ".react-resizable-handle, .drag-disabled",
          onStart: this.onDragHandler("onDragStart"),
          onDrag: this.onDragHandler("onDrag"),
          onStop: this.onDragHandler("onDragStop")
        },
        _react2.default.createElement(
          _reactResizable.Resizable,
          {
            width: width,
            height: height,
            onResizeStart: this.onResizeHandler("onResizeStart"),
            onResize: this.onResizeHandler("onResize"),
            onResizeStop: this.onResizeHandler("onResizeStop")
          },
          _react2.default.cloneElement(child, {
            style: style,
            className: (0, _classnames2.default)(child.props.className, {
              dragging: !!this.state.dragging,
              resizing: !!this.state.resizing
            })
          })
        )
      );
    }
  }]);

  return GridItem;
}(_react.Component);

GridItem.displayName = "GridItem";
exports.default = GridItem;

/***/ }),

/***/ 531:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Edit"], ["Edit"]),
    _templateObject2 = _taggedTemplateLiteral(["Add"], ["Add"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _c3po = __webpack_require__(2);

var _visualizations = __webpack_require__(53);

var _visualizations2 = _interopRequireDefault(_visualizations);

var _Visualization = __webpack_require__(78);

var _Visualization2 = _interopRequireDefault(_Visualization);

var _ModalWithTrigger = __webpack_require__(88);

var _ModalWithTrigger2 = _interopRequireDefault(_ModalWithTrigger);

var _ChartSettings = __webpack_require__(348);

var _ChartSettings2 = _interopRequireDefault(_ChartSettings);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _DashCardParameterMapper = __webpack_require__(532);

var _DashCardParameterMapper2 = _interopRequireDefault(_DashCardParameterMapper);

var _embed = __webpack_require__(224);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DATASET_USUALLY_FAST_THRESHOLD = 15 * 1000;

var HEADER_ICON_SIZE = 16;

var HEADER_ACTION_STYLE = {
  padding: 4
};

var DashCard = (_temp = _class = function (_Component) {
  _inherits(DashCard, _Component);

  function DashCard() {
    _classCallCheck(this, DashCard);

    return _possibleConstructorReturn(this, (DashCard.__proto__ || Object.getPrototypeOf(DashCard)).apply(this, arguments));
  }

  _createClass(DashCard, [{
    key: "componentDidMount",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _props, dashcard, markNewCardSeen;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _props = this.props, dashcard = _props.dashcard, markNewCardSeen = _props.markNewCardSeen;

                // HACK: way to scroll to a newly added card

                if (dashcard.justAdded) {
                  _reactDom2.default.findDOMNode(this).scrollIntoView();
                  markNewCardSeen(dashcard.id);
                }

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidMount() {
        return _ref.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.clearInterval(this.visibilityTimer);
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          dashcard = _props2.dashcard,
          dashcardData = _props2.dashcardData,
          slowCards = _props2.slowCards,
          isEditing = _props2.isEditing,
          isEditingParameter = _props2.isEditingParameter,
          onAddSeries = _props2.onAddSeries,
          onRemove = _props2.onRemove,
          navigateToNewCardFromDashboard = _props2.navigateToNewCardFromDashboard,
          metadata = _props2.metadata;


      var mainCard = _extends({}, dashcard.card, {
        visualization_settings: _extends({}, dashcard.card.visualization_settings, dashcard.visualization_settings)
      });
      var cards = [mainCard].concat(dashcard.series || []);
      var series = cards.map(function (card) {
        return _extends({}, (0, _icepick.getIn)(dashcardData, [dashcard.id, card.id]), {
          card: card,
          isSlow: slowCards[card.id],
          isUsuallyFast: card.query_average_duration && card.query_average_duration < DATASET_USUALLY_FAST_THRESHOLD
        });
      });

      var loading = !(series.length > 0 && _underscore2.default.every(series, function (s) {
        return s.data;
      }));
      var expectedDuration = Math.max.apply(Math, _toConsumableArray(series.map(function (s) {
        return s.card.query_average_duration || 0;
      })));
      var usuallyFast = _underscore2.default.every(series, function (s) {
        return s.isUsuallyFast;
      });
      var isSlow = loading && _underscore2.default.some(series, function (s) {
        return s.isSlow;
      }) && (usuallyFast ? "usually-fast" : "usually-slow");
      var errors = series.map(function (s) {
        return s.error;
      }).filter(function (e) {
        return e;
      });

      var errorMessage = void 0,
          errorIcon = void 0;
      if (_underscore2.default.any(errors, function (e) {
        return e && e.status === 403;
      })) {
        errorMessage = _Visualization.ERROR_MESSAGE_PERMISSION;
        errorIcon = "key";
      } else if (errors.length > 0) {
        if (_embed.IS_EMBED_PREVIEW) {
          errorMessage = errors[0] && errors[0].data || _Visualization.ERROR_MESSAGE_GENERIC;
        } else {
          errorMessage = _Visualization.ERROR_MESSAGE_GENERIC;
        }
        errorIcon = "warning";
      }

      var hideBackground = !isEditing && mainCard.visualization_settings["dashcard.background"] === false;

      return _react2.default.createElement(
        "div",
        {
          className: (0, _classnames2.default)("Card bordered rounded flex flex-column hover-parent hover--visibility", {
            "Card--recent": dashcard.isAdded,
            "Card--slow": isSlow === "usually-slow"
          }),
          style: hideBackground ? { border: 0, background: "transparent", boxShadow: "none" } : null
        },
        _react2.default.createElement(_Visualization2.default, {
          className: "flex-full",
          error: errorMessage,
          errorIcon: errorIcon,
          isSlow: isSlow,
          expectedDuration: expectedDuration,
          rawSeries: series,
          showTitle: true,
          isDashboard: true,
          isEditing: isEditing,
          gridSize: this.props.isMobile ? undefined : { width: dashcard.sizeX, height: dashcard.sizeY },
          actionButtons: isEditing && !isEditingParameter ? _react2.default.createElement(DashCardActionButtons, {
            series: series,
            onRemove: onRemove,
            onAddSeries: onAddSeries,
            onReplaceAllVisualizationSettings: this.props.onReplaceAllVisualizationSettings
          }) : undefined,
          onUpdateVisualizationSettings: this.props.onUpdateVisualizationSettings,
          replacementContent: isEditingParameter && _react2.default.createElement(_DashCardParameterMapper2.default, { dashcard: dashcard }),
          metadata: metadata,
          onChangeCardAndRun: navigateToNewCardFromDashboard ? function (_ref2) {
            var nextCard = _ref2.nextCard,
                previousCard = _ref2.previousCard;

            // navigateToNewCardFromDashboard needs `dashcard` for applying active filters to the query
            navigateToNewCardFromDashboard({
              nextCard: nextCard,
              previousCard: previousCard,
              dashcard: dashcard
            });
          } : null
        })
      );
    }
  }]);

  return DashCard;
}(_react.Component), _class.propTypes = {
  dashcard: _propTypes2.default.object.isRequired,
  dashcardData: _propTypes2.default.object.isRequired,
  slowCards: _propTypes2.default.object.isRequired,
  parameterValues: _propTypes2.default.object.isRequired,
  markNewCardSeen: _propTypes2.default.func.isRequired,
  fetchCardData: _propTypes2.default.func.isRequired,
  navigateToNewCardFromDashboard: _propTypes2.default.func.isRequired
}, _temp);
DashCard.displayName = "DashCard";
exports.default = DashCard;


var DashCardActionButtons = function DashCardActionButtons(_ref3) {
  var series = _ref3.series,
      onRemove = _ref3.onRemove,
      onAddSeries = _ref3.onAddSeries,
      onReplaceAllVisualizationSettings = _ref3.onReplaceAllVisualizationSettings;
  return _react2.default.createElement(
    "span",
    {
      className: "DashCard-actions flex align-center",
      style: { lineHeight: 1 }
    },
    (0, _visualizations.getVisualizationRaw)(series).CardVisualization.supportsSeries && _react2.default.createElement(AddSeriesButton, { series: series, onAddSeries: onAddSeries }),
    onReplaceAllVisualizationSettings && !(0, _visualizations.getVisualizationRaw)(series).CardVisualization.disableSettingsConfig && _react2.default.createElement(ChartSettingsButton, {
      series: series,
      onReplaceAllVisualizationSettings: onReplaceAllVisualizationSettings
    }),
    _react2.default.createElement(RemoveButton, { onRemove: onRemove })
  );
};

DashCardActionButtons.displayName = "DashCardActionButtons";
var ChartSettingsButton = function ChartSettingsButton(_ref4) {
  var series = _ref4.series,
      onReplaceAllVisualizationSettings = _ref4.onReplaceAllVisualizationSettings;
  return _react2.default.createElement(
    _ModalWithTrigger2.default,
    {
      wide: true,
      tall: true,
      triggerElement: _react2.default.createElement(_Icon2.default, { name: "gear", size: HEADER_ICON_SIZE, style: HEADER_ACTION_STYLE }),
      triggerClasses: "text-grey-2 text-grey-4-hover cursor-pointer flex align-center flex-no-shrink mr1"
    },
    _react2.default.createElement(_ChartSettings2.default, {
      series: series,
      onChange: onReplaceAllVisualizationSettings,
      isDashboard: true
    })
  );
};

ChartSettingsButton.displayName = "ChartSettingsButton";
var RemoveButton = function RemoveButton(_ref5) {
  var onRemove = _ref5.onRemove;
  return _react2.default.createElement(
    "a",
    {
      className: "text-grey-2 text-grey-4-hover ",
      "data-metabase-event": "Dashboard;Remove Card Modal",
      onClick: onRemove,
      style: HEADER_ACTION_STYLE
    },
    _react2.default.createElement(_Icon2.default, { name: "close", size: HEADER_ICON_SIZE })
  );
};

RemoveButton.displayName = "RemoveButton";
var AddSeriesButton = function AddSeriesButton(_ref6) {
  var series = _ref6.series,
      onAddSeries = _ref6.onAddSeries;
  return _react2.default.createElement(
    "a",
    {
      "data-metabase-event": "Dashboard;Edit Series Modal;open",
      className: "text-grey-2 text-grey-4-hover cursor-pointer h3 flex-no-shrink relative mr1",
      onClick: onAddSeries,
      style: HEADER_ACTION_STYLE
    },
    _react2.default.createElement(
      "span",
      { className: "flex align-center" },
      _react2.default.createElement(
        "span",
        { className: "flex" },
        _react2.default.createElement(_Icon2.default, {
          className: "absolute",
          name: "add",
          style: { top: 0, left: 0 },
          size: HEADER_ICON_SIZE / 2
        }),
        _react2.default.createElement(_Icon2.default, { name: getSeriesIconName(series), size: HEADER_ICON_SIZE })
      ),
      _react2.default.createElement(
        "span",
        { className: "flex-no-shrink text-bold" },
        "\xA0",
        series.length > 1 ? (0, _c3po.t)(_templateObject) : (0, _c3po.t)(_templateObject2)
      )
    )
  );
};

AddSeriesButton.displayName = "AddSeriesButton";
function getSeriesIconName(series) {
  try {
    var display = series[0].card.display;
    return _visualizations2.default.get(display === "scalar" ? "bar" : display).iconName;
  } catch (e) {
    return "bar";
  }
}

/***/ }),

/***/ 532:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Make sure to make a selection for each series, or the filter won't work on this card."], ["Make sure to make a selection for each series, or the filter won't work on this card."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _DashCardCardParameterMapper = __webpack_require__(533);

var _DashCardCardParameterMapper2 = _interopRequireDefault(_DashCardCardParameterMapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var DashCardParameterMapper = function DashCardParameterMapper(_ref) {
  var dashcard = _ref.dashcard;
  return _react2.default.createElement(
    "div",
    { className: "relative flex-full flex flex-column layout-centered" },
    dashcard.series && dashcard.series.length > 0 && _react2.default.createElement(
      "div",
      {
        className: "mx4 my1 p1 rounded",
        style: {
          backgroundColor: "#F5F5F5",
          color: "#8691AC",
          marginTop: -10
        }
      },
      (0, _c3po.t)(_templateObject)
    ),
    _react2.default.createElement(
      "div",
      { className: "flex mx4 z1", style: { justifyContent: "space-around" } },
      [dashcard.card].concat(dashcard.series || []).map(function (card) {
        return _react2.default.createElement(_DashCardCardParameterMapper2.default, {
          key: dashcard.id + "," + card.id,
          dashcard: dashcard,
          card: card
        });
      })
    )
  );
};

DashCardParameterMapper.displayName = "DashCardParameterMapper";
exports.default = DashCardParameterMapper;

/***/ }),

/***/ 533:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2;

var _templateObject = _taggedTemplateLiteral(["This card doesn't have any fields or parameters that can be mapped to this parameter type."], ["This card doesn't have any fields or parameters that can be mapped to this parameter type."]),
    _templateObject2 = _taggedTemplateLiteral(["The values in this field don't overlap with the values of any other fields you've chosen."], ["The values in this field don't overlap with the values of any other fields you've chosen."]),
    _templateObject3 = _taggedTemplateLiteral(["No valid fields"], ["No valid fields"]),
    _templateObject4 = _taggedTemplateLiteral(["Select\u2026"], ["Select\u2026"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = __webpack_require__(7);

var _c3po = __webpack_require__(2);

var _DashCardCardParameterMapper = __webpack_require__(534);

var _DashCardCardParameterMapper2 = _interopRequireDefault(_DashCardCardParameterMapper);

var _PopoverWithTrigger = __webpack_require__(29);

var _PopoverWithTrigger2 = _interopRequireDefault(_PopoverWithTrigger);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _AccordianList = __webpack_require__(161);

var _AccordianList2 = _interopRequireDefault(_AccordianList);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _metadata = __webpack_require__(16);

var _selectors = __webpack_require__(147);

var _dashboard = __webpack_require__(124);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _icepick = __webpack_require__(14);

var _AtomicQuery = __webpack_require__(132);

var _AtomicQuery2 = _interopRequireDefault(_AtomicQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var makeMapStateToProps = function makeMapStateToProps() {
  var getParameterMappingOptions = (0, _selectors.makeGetParameterMappingOptions)();
  var mapStateToProps = function mapStateToProps(state, props) {
    return {
      parameter: (0, _selectors.getEditingParameter)(state, props),
      mappingOptions: getParameterMappingOptions(state, props),
      mappingOptionSections: _underscore2.default.groupBy(getParameterMappingOptions(state, props), "sectionName"),
      target: (0, _selectors.getParameterTarget)(state, props),
      mappingsByParameter: (0, _selectors.getMappingsByParameter)(state, props)
    };
  };
  return mapStateToProps;
};

var mapDispatchToProps = {
  setParameterMapping: _dashboard.setParameterMapping,
  fetchDatabaseMetadata: _metadata.fetchDatabaseMetadata
};

var DashCardCardParameterMapper = (_dec = (0, _reactRedux.connect)(makeMapStateToProps, mapDispatchToProps), _dec(_class = (_temp2 = _class2 = function (_Component) {
  _inherits(DashCardCardParameterMapper, _Component);

  function DashCardCardParameterMapper() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DashCardCardParameterMapper);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DashCardCardParameterMapper.__proto__ || Object.getPrototypeOf(DashCardCardParameterMapper)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = function (option) {
      var _this$props = _this.props,
          setParameterMapping = _this$props.setParameterMapping,
          parameter = _this$props.parameter,
          dashcard = _this$props.dashcard,
          card = _this$props.card;

      setParameterMapping(parameter.id, dashcard.id, card.id, option ? option.target : null);
      _this.refs.popover.close();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DashCardCardParameterMapper, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var card = this.props.card;
      // Type check for Flow

      card.dataset_query instanceof _AtomicQuery2.default && this.props.fetchDatabaseMetadata(card.dataset_query.database);
    }
  }, {
    key: "render",
    value: function render() {
      var _cx,
          _this2 = this;

      var _props = this.props,
          mappingOptions = _props.mappingOptions,
          mappingOptionSections = _props.mappingOptionSections,
          target = _props.target,
          mappingsByParameter = _props.mappingsByParameter,
          parameter = _props.parameter,
          dashcard = _props.dashcard,
          card = _props.card;

      // TODO: move some of these to selectors?

      var disabled = mappingOptions.length === 0;
      var selected = _underscore2.default.find(mappingOptions, function (o) {
        return _underscore2.default.isEqual(o.target, target);
      });

      var mapping = (0, _icepick.getIn)(mappingsByParameter, [parameter.id, dashcard.id, card.id]);
      var noOverlap = !!(mapping && mapping.mappingsWithValues > 1 && mapping.overlapMax === 1);

      var hasFkOption = _underscore2.default.any(mappingOptions, function (o) {
        return !!o.isFk;
      });

      var sections = _underscore2.default.map(mappingOptionSections, function (options) {
        return {
          name: options[0].sectionName,
          items: options
        };
      });

      var tooltipText = null;
      if (disabled) {
        tooltipText = (0, _c3po.t)(_templateObject);
      } else if (noOverlap) {
        tooltipText = (0, _c3po.t)(_templateObject2);
      }

      return _react2.default.createElement(
        "div",
        {
          className: "mx1 flex flex-column align-center",
          onMouseDown: function onMouseDown(e) {
            return e.stopPropagation();
          }
        },
        dashcard.series && dashcard.series.length > 0 && _react2.default.createElement(
          "div",
          {
            className: "h5 mb1 text-bold",
            style: {
              textOverflow: "ellipsis",
              whiteSpace: "nowrap",
              overflowX: "hidden",
              maxWidth: 100
            }
          },
          card.name
        ),
        _react2.default.createElement(
          _PopoverWithTrigger2.default,
          {
            ref: "popover",
            triggerClasses: (0, _classnames2.default)({ disabled: disabled }),
            sizeToFit: true,
            triggerElement: _react2.default.createElement(
              _Tooltip2.default,
              {
                tooltip: tooltipText,
                verticalAttachments: ["bottom", "top"]
              },
              _react2.default.createElement(
                "div",
                {
                  className: (0, _classnames2.default)(_DashCardCardParameterMapper2.default.button, (_cx = {}, _defineProperty(_cx, _DashCardCardParameterMapper2.default.mapped, !!selected), _defineProperty(_cx, _DashCardCardParameterMapper2.default.warn, noOverlap), _defineProperty(_cx, _DashCardCardParameterMapper2.default.disabled, disabled), _cx))
                },
                _react2.default.createElement(
                  "span",
                  { className: "text-centered mr1" },
                  disabled ? (0, _c3po.t)(_templateObject3) : selected ? selected.name : (0, _c3po.t)(_templateObject4)
                ),
                selected ? _react2.default.createElement(_Icon2.default, {
                  className: "flex-align-right",
                  name: "close",
                  size: 16,
                  onClick: function onClick(e) {
                    _this2.onChange(null);
                    e.stopPropagation();
                  }
                }) : !disabled ? _react2.default.createElement(_Icon2.default, {
                  className: "flex-align-right",
                  name: "chevrondown",
                  size: 16
                }) : null
              )
            )
          },
          _react2.default.createElement(_AccordianList2.default, {
            className: "text-brand scroll-show scroll-y",
            style: { maxHeight: 600 },
            sections: sections,
            onChange: this.onChange,
            itemIsSelected: function itemIsSelected(item) {
              return _underscore2.default.isEqual(item.target, target);
            },
            renderItemIcon: function renderItemIcon(item) {
              return _react2.default.createElement(_Icon2.default, { name: item.icon || "unknown", size: 18 });
            },
            alwaysExpanded: true,
            hideSingleSectionTitle: !hasFkOption
          })
        )
      );
    }
  }]);

  return DashCardCardParameterMapper;
}(_react.Component), _class2.propTypes = {
  dashcard: _propTypes2.default.object.isRequired,
  card: _propTypes2.default.object.isRequired
}, _class2.defaultProps = {}, _temp2)) || _class);
DashCardCardParameterMapper.displayName = "DashCardCardParameterMapper";
exports.default = DashCardCardParameterMapper;

/***/ }),

/***/ 534:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"button":"_31Acd _38618 _3Dqep eTBAP _3TD8R _1a-AI","mapped":"_1cuH0","warn":"_2bBGA","disabled":"_3fcMT _1f32L"};

/***/ }),

/***/ 535:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Remove this question?"], ["Remove this question?"]),
    _templateObject2 = _taggedTemplateLiteral(["Cancel"], ["Cancel"]),
    _templateObject3 = _taggedTemplateLiteral(["Remove"], ["Remove"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _c3po = __webpack_require__(2);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _ModalContent = __webpack_require__(56);

var _ModalContent2 = _interopRequireDefault(_ModalContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RemoveFromDashboardModal = (_temp = _class = function (_Component) {
  _inherits(RemoveFromDashboardModal, _Component);

  function RemoveFromDashboardModal(props, context) {
    _classCallCheck(this, RemoveFromDashboardModal);

    var _this = _possibleConstructorReturn(this, (RemoveFromDashboardModal.__proto__ || Object.getPrototypeOf(RemoveFromDashboardModal)).call(this, props, context));

    _this.state = { deleteCard: false };
    return _this;
  }

  _createClass(RemoveFromDashboardModal, [{
    key: "onRemove",
    value: function onRemove() {
      this.props.removeCardFromDashboard({
        dashId: this.props.dashboard.id,
        dashcardId: this.props.dashcard.id
      });
      if (this.state.deleteCard) {
        // this.props.dispatch(deleteCard(this.props.dashcard.card_id))
        // this.props.dispatch(markCardForDeletion(this.props.dashcard.card_id))
      }
      this.props.onClose();

      _analytics2.default.trackEvent("Dashboard", "Remove Card");
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _ModalContent2.default,
        {
          title: (0, _c3po.t)(_templateObject),
          onClose: function onClose() {
            return _this2.props.onClose();
          }
        },
        _react2.default.createElement(
          "div",
          { className: "Form-actions flex-align-right" },
          _react2.default.createElement(
            "button",
            { className: "Button Button", onClick: this.props.onClose },
            (0, _c3po.t)(_templateObject2)
          ),
          _react2.default.createElement(
            "button",
            {
              className: "Button Button--danger ml2",
              onClick: function onClick() {
                return _this2.onRemove();
              }
            },
            (0, _c3po.t)(_templateObject3)
          )
        )
      );
    }
  }]);

  return RemoveFromDashboardModal;
}(_react.Component), _class.propTypes = {
  dashcard: _propTypes2.default.object.isRequired,
  dashboard: _propTypes2.default.object.isRequired,
  removeCardFromDashboard: _propTypes2.default.func.isRequired,
  onClose: _propTypes2.default.func.isRequired
}, _temp);
RemoveFromDashboardModal.displayName = "RemoveFromDashboardModal";
exports.default = RemoveFromDashboardModal;

/***/ }),

/***/ 536:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _templateObject = _taggedTemplateLiteral(["Applying Question"], ["Applying Question"]),
    _templateObject2 = _taggedTemplateLiteral(["That question isn't compatible"], ["That question isn't compatible"]),
    _templateObject3 = _taggedTemplateLiteral(["Done"], ["Done"]),
    _templateObject4 = _taggedTemplateLiteral(["Cancel"], ["Cancel"]),
    _templateObject5 = _taggedTemplateLiteral(["Search for a question"], ["Search for a question"]),
    _templateObject6 = _taggedTemplateLiteral(["We're not sure if this question is compatible"], ["We're not sure if this question is compatible"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Visualization = __webpack_require__(78);

var _Visualization2 = _interopRequireDefault(_Visualization);

var _LoadingAndErrorWrapper = __webpack_require__(20);

var _LoadingAndErrorWrapper2 = _interopRequireDefault(_LoadingAndErrorWrapper);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _CheckBox = __webpack_require__(89);

var _CheckBox2 = _interopRequireDefault(_CheckBox);

var _c3po = __webpack_require__(2);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _visualizations = __webpack_require__(53);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getQueryColumns(card, databases) {
  var dbId = card.dataset_query.database;
  if (card.dataset_query.type !== "query") {
    return null;
  }
  var query = card.dataset_query.query;
  var table = databases && databases[dbId] && databases[dbId].tables_lookup[query.source_table];
  if (!table) {
    return null;
  }
  return _query2.default.getQueryColumns(table, query);
}

var AddSeriesModal = (_temp = _class = function (_Component) {
  _inherits(AddSeriesModal, _Component);

  function AddSeriesModal(props, context) {
    _classCallCheck(this, AddSeriesModal);

    var _this = _possibleConstructorReturn(this, (AddSeriesModal.__proto__ || Object.getPrototypeOf(AddSeriesModal)).call(this, props, context));

    _this.state = {
      searchValue: "",
      error: null,
      series: props.dashcard.series || [],
      badCards: {}
    };

    _underscore2.default.bindAll(_this, "onSearchChange", "onSearchFocus", "onDone", "filteredCards", "onRemoveSeries");
    return _this;
  }

  _createClass(AddSeriesModal, [{
    key: "componentDidMount",
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this2 = this;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return this.props.fetchCards();

              case 3:
                _context.next = 5;
                return Promise.all(_underscore2.default.uniq(this.props.cards.map(function (c) {
                  return c.database_id;
                })).map(function (db_id) {
                  return _this2.props.fetchDatabaseMetadata(db_id);
                }));

              case 5:
                _context.next = 11;
                break;

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](0);

                console.error(_context.t0);
                this.setState({ error: _context.t0 });

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 7]]);
      }));

      function componentDidMount() {
        return _ref.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "onSearchFocus",
    value: function onSearchFocus() {
      _analytics2.default.trackEvent("Dashboard", "Edit Series Modal", "search");
    }
  }, {
    key: "onSearchChange",
    value: function onSearchChange(e) {
      this.setState({ searchValue: e.target.value.toLowerCase() });
    }
  }, {
    key: "onCardChange",
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(card, e) {
        var _this3 = this;

        var _props, dashcard, dashcardData, _getVisualizationRaw, CardVisualization, sourceDataset, seriesDataset;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _props = this.props, dashcard = _props.dashcard, dashcardData = _props.dashcardData;
                _getVisualizationRaw = (0, _visualizations.getVisualizationRaw)([{ card: dashcard.card }]), CardVisualization = _getVisualizationRaw.CardVisualization;
                _context2.prev = 2;

                if (!e.target.checked) {
                  _context2.next = 13;
                  break;
                }

                if (!((0, _icepick.getIn)(dashcardData, [dashcard.id, card.id]) === undefined)) {
                  _context2.next = 8;
                  break;
                }

                this.setState({ state: "loading" });
                _context2.next = 8;
                return this.props.fetchCardData(card, dashcard, {
                  reload: false,
                  clear: true
                });

              case 8:
                sourceDataset = (0, _icepick.getIn)(this.props.dashcardData, [dashcard.id, dashcard.card.id]);
                seriesDataset = (0, _icepick.getIn)(this.props.dashcardData, [dashcard.id, card.id]);

                if (CardVisualization.seriesAreCompatible({ card: dashcard.card, data: sourceDataset.data }, { card: card, data: seriesDataset.data })) {
                  this.setState({
                    state: null,
                    series: this.state.series.concat(card)
                  });

                  _analytics2.default.trackEvent("Dashboard", "Add Series", card.display + ", success");
                } else {
                  this.setState({
                    state: "incompatible",
                    badCards: _extends({}, this.state.badCards, _defineProperty({}, card.id, true))
                  });
                  setTimeout(function () {
                    return _this3.setState({ state: null });
                  }, 2000);

                  _analytics2.default.trackEvent("Dashboard", "Add Series", card.dataset_query.type + ", " + card.display + ", fail");
                }
                _context2.next = 15;
                break;

              case 13:
                this.setState({
                  series: this.state.series.filter(function (c) {
                    return c.id !== card.id;
                  })
                });

                _analytics2.default.trackEvent("Dashboard", "Remove Series");

              case 15:
                _context2.next = 22;
                break;

              case 17:
                _context2.prev = 17;
                _context2.t0 = _context2["catch"](2);

                console.error("onCardChange", _context2.t0);
                this.setState({
                  state: "incompatible",
                  badCards: _extends({}, this.state.badCards, _defineProperty({}, card.id, true))
                });
                setTimeout(function () {
                  return _this3.setState({ state: null });
                }, 2000);

              case 22:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 17]]);
      }));

      function onCardChange(_x, _x2) {
        return _ref2.apply(this, arguments);
      }

      return onCardChange;
    }()
  }, {
    key: "onRemoveSeries",
    value: function onRemoveSeries(card) {
      this.setState({ series: this.state.series.filter(function (c) {
          return c.id !== card.id;
        }) });
      _analytics2.default.trackEvent("Dashboard", "Remove Series");
    }
  }, {
    key: "onDone",
    value: function onDone() {
      this.props.setDashCardAttributes({
        id: this.props.dashcard.id,
        attributes: { series: this.state.series }
      });
      this.props.onClose();
      _analytics2.default.trackEvent("Dashboard", "Edit Series Modal", "done");
    }
  }, {
    key: "filteredCards",
    value: function filteredCards() {
      var _props2 = this.props,
          cards = _props2.cards,
          dashcard = _props2.dashcard,
          databases = _props2.databases,
          dashcardData = _props2.dashcardData;
      var searchValue = this.state.searchValue;


      var initialSeries = {
        card: dashcard.card,
        data: (0, _icepick.getIn)(dashcardData, [dashcard.id, dashcard.card.id, "data"])
      };

      var _getVisualizationRaw2 = (0, _visualizations.getVisualizationRaw)([{ card: dashcard.card }]),
          CardVisualization = _getVisualizationRaw2.CardVisualization;

      return cards.filter(function (card) {
        try {
          // filter out the card itself
          if (card.id === dashcard.card.id) {
            return false;
          }
          if (card.dataset_query.type === "query") {
            if (!CardVisualization.seriesAreCompatible(initialSeries, {
              card: card,
              data: { cols: getQueryColumns(card, databases), rows: [] }
            })) {
              return false;
            }
          }
          // search
          if (searchValue && card.name.toLowerCase().indexOf(searchValue) < 0) {
            return false;
          }
          return true;
        } catch (e) {
          console.warn(e);
          return false;
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _props3 = this.props,
          dashcard = _props3.dashcard,
          dashcardData = _props3.dashcardData,
          cards = _props3.cards;


      var error = this.state.error;

      var filteredCards = void 0;
      if (!error && cards) {
        filteredCards = this.filteredCards();
        if (filteredCards.length === 0) {
          error = new Error("Whoops, no compatible questions match your search.");
        }
        // SQL cards at the bottom
        filteredCards.sort(function (a, b) {
          if (a.dataset_query.type !== "query") {
            return 1;
          } else if (b.dataset_query.type !== "query") {
            return -1;
          } else {
            return 0;
          }
        });
      }

      var badCards = this.state.badCards;

      var enabledCards = {};
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.state.series[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var c = _step.value;

          enabledCards[c.id] = true;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var series = [dashcard.card].concat(this.state.series).map(function (card) {
        return {
          card: card,
          data: (0, _icepick.getIn)(dashcardData, [dashcard.id, card.id, "data"])
        };
      }).filter(function (s) {
        return !!s.data;
      });

      return _react2.default.createElement(
        "div",
        { className: "spread flex" },
        _react2.default.createElement(
          "div",
          { className: "flex flex-column flex-full" },
          _react2.default.createElement(
            "div",
            { className: "flex-no-shrink h3 pl4 pt4 pb2 text-bold" },
            "Edit data"
          ),
          _react2.default.createElement(
            "div",
            { className: "flex-full ml2 mr1 relative" },
            _react2.default.createElement(_Visualization2.default, {
              className: "spread",
              rawSeries: series,
              showTitle: true,
              isDashboard: true,
              isMultiseries: true,
              onRemoveSeries: this.onRemoveSeries
            }),
            this.state.state && _react2.default.createElement(
              "div",
              {
                className: "spred flex layout-centered",
                style: { backgroundColor: "rgba(255,255,255,0.80)" }
              },
              this.state.state === "loading" ? _react2.default.createElement(
                "div",
                { className: "h3 rounded bordered p3 bg-white shadowed" },
                (0, _c3po.t)(_templateObject)
              ) : this.state.state === "incompatible" ? _react2.default.createElement(
                "div",
                { className: "h3 rounded bordered p3 bg-error border-error text-white" },
                (0, _c3po.t)(_templateObject2)
              ) : null
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "flex-no-shrink pl4 pb4 pt1" },
            _react2.default.createElement(
              "button",
              { className: "Button Button--primary", onClick: this.onDone },
              (0, _c3po.t)(_templateObject3)
            ),
            _react2.default.createElement(
              "button",
              {
                "data-metabase-event": "Dashboard;Edit Series Modal;cancel",
                className: "Button ml2",
                onClick: this.props.onClose
              },
              (0, _c3po.t)(_templateObject4)
            )
          )
        ),
        _react2.default.createElement(
          "div",
          {
            className: "border-left flex flex-column",
            style: {
              width: 370,
              backgroundColor: "#F8FAFA",
              borderColor: "#DBE1DF"
            }
          },
          _react2.default.createElement(
            "div",
            {
              className: "flex-no-shrink border-bottom flex flex-row align-center",
              style: { borderColor: "#DBE1DF" }
            },
            _react2.default.createElement(_Icon2.default, { className: "ml2", name: "search", size: 16 }),
            _react2.default.createElement("input", {
              className: "h4 input full pl1",
              style: { border: "none", backgroundColor: "transparent" },
              type: "search",
              placeholder: (0, _c3po.t)(_templateObject5),
              onFocus: this.onSearchFocus,
              onChange: this.onSearchChange
            })
          ),
          _react2.default.createElement(
            _LoadingAndErrorWrapper2.default,
            {
              className: "flex flex-full",
              loading: !filteredCards,
              error: error,
              noBackground: true
            },
            function () {
              return _react2.default.createElement(
                "ul",
                { className: "flex-full scroll-y scroll-show pr1" },
                filteredCards.map(function (card) {
                  return _react2.default.createElement(
                    "li",
                    {
                      key: card.id,
                      className: (0, _classnames2.default)("my1 pl2 py1 flex align-center", {
                        disabled: badCards[card.id]
                      })
                    },
                    _react2.default.createElement(
                      "span",
                      { className: "px1 flex-no-shrink" },
                      _react2.default.createElement(_CheckBox2.default, {
                        checked: enabledCards[card.id],
                        onChange: _this4.onCardChange.bind(_this4, card)
                      })
                    ),
                    _react2.default.createElement(
                      "span",
                      { className: "px1" },
                      card.name
                    ),
                    card.dataset_query.type !== "query" && _react2.default.createElement(
                      _Tooltip2.default,
                      {
                        tooltip: (0, _c3po.t)(_templateObject6)
                      },
                      _react2.default.createElement(_Icon2.default, {
                        className: "px1 flex-align-right text-grey-2 text-grey-4-hover cursor-pointer flex-no-shrink",
                        name: "warning",
                        size: 20
                      })
                    )
                  );
                })
              );
            }
          )
        )
      );
    }
  }]);

  return AddSeriesModal;
}(_react.Component), _class.propTypes = {
  dashcard: _propTypes2.default.object.isRequired,
  cards: _propTypes2.default.array,
  dashcardData: _propTypes2.default.object.isRequired,
  fetchCards: _propTypes2.default.func.isRequired,
  fetchCardData: _propTypes2.default.func.isRequired,
  fetchDatabaseMetadata: _propTypes2.default.func.isRequired,
  setDashCardAttributes: _propTypes2.default.func.isRequired,
  onClose: _propTypes2.default.func.isRequired
}, _class.defaultProps = {}, _temp);
AddSeriesModal.displayName = "AddSeriesModal";
exports.default = AddSeriesModal;

/***/ }),

/***/ 538:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = __webpack_require__(44);

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var DownloadButton = function DownloadButton(_ref) {
  var className = _ref.className,
      style = _ref.style,
      children = _ref.children,
      method = _ref.method,
      url = _ref.url,
      params = _ref.params,
      extensions = _ref.extensions,
      props = _objectWithoutProperties(_ref, ["className", "style", "children", "method", "url", "params", "extensions"]);

  return _react2.default.createElement(
    "form",
    { className: className, style: style, method: method, action: url },
    params && Object.entries(params).map(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2),
          name = _ref3[0],
          value = _ref3[1];

      return _react2.default.createElement("input", { key: name, type: "hidden", name: name, value: value });
    }),
    _react2.default.createElement(
      _Button2.default,
      _extends({
        onClick: function onClick(e) {
          if (window.OSX) {
            // prevent form from being submitted normally
            e.preventDefault();
            // download using the API provided by the OS X app
            window.OSX.download(method, url, params, extensions);
          }
        }
      }, props),
      children
    )
  );
};

DownloadButton.displayName = "DownloadButton";
DownloadButton.propTypes = {
  className: _propTypes2.default.string,
  style: _propTypes2.default.object,
  url: _propTypes2.default.string.isRequired,
  method: _propTypes2.default.string,
  params: _propTypes2.default.object,
  icon: _propTypes2.default.string,
  extensions: _propTypes2.default.array
};

DownloadButton.defaultProps = {
  icon: "downarrow",
  method: "POST",
  params: {},
  extensions: []
};

exports.default = DownloadButton;

/***/ }),

/***/ 543:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _Visualization = __webpack_require__(78);

var _Visualization2 = _interopRequireDefault(_Visualization);

var _QueryDownloadWidget = __webpack_require__(352);

var _QueryDownloadWidget2 = _interopRequireDefault(_QueryDownloadWidget);

var _LoadingAndErrorWrapper = __webpack_require__(20);

var _LoadingAndErrorWrapper2 = _interopRequireDefault(_LoadingAndErrorWrapper);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _EmbedFrame = __webpack_require__(170);

var _EmbedFrame2 = _interopRequireDefault(_EmbedFrame);

var _Parameter = __webpack_require__(85);

var _Card = __webpack_require__(37);

var _services = __webpack_require__(15);

var _app = __webpack_require__(107);

var _metadata = __webpack_require__(16);

var _icepick = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapDispatchToProps = {
  setErrorPage: _app.setErrorPage,
  addParamValues: _metadata.addParamValues,
  addFields: _metadata.addFields
};

var PublicQuestion = (_dec = (0, _reactRedux.connect)(null, mapDispatchToProps), _dec(_class = (0, _ExplicitSize2.default)(_class = function (_Component) {
  _inherits(PublicQuestion, _Component);

  function PublicQuestion(props) {
    var _this2 = this;

    _classCallCheck(this, PublicQuestion);

    var _this = _possibleConstructorReturn(this, (PublicQuestion.__proto__ || Object.getPrototypeOf(PublicQuestion)).call(this, props));

    _this.setParameterValue = function (id, value) {
      _this.setState({
        parameterValues: _extends({}, _this.state.parameterValues, _defineProperty({}, id, value))
      }, _this.run);
    };

    _this.run = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var _this$props, setErrorPage, _this$props$params, uuid, token, _this$state, card, parameterValues, parameters, newResult, datasetQuery;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _this$props = _this.props, setErrorPage = _this$props.setErrorPage, _this$props$params = _this$props.params, uuid = _this$props$params.uuid, token = _this$props$params.token;
              _this$state = _this.state, card = _this$state.card, parameterValues = _this$state.parameterValues;

              if (card) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return");

            case 4:
              parameters = (0, _Card.getParameters)(card);
              _context.prev = 5;
              newResult = void 0;

              if (!token) {
                _context.next = 13;
                break;
              }

              _context.next = 10;
              return _services.EmbedApi.cardQuery(_extends({
                token: token
              }, (0, _Parameter.getParametersBySlug)(parameters, parameterValues)));

            case 10:
              newResult = _context.sent;
              _context.next = 21;
              break;

            case 13:
              if (!uuid) {
                _context.next = 20;
                break;
              }

              // public links currently apply parameters client-side
              datasetQuery = (0, _Card.applyParameters)(card, parameters, parameterValues);
              _context.next = 17;
              return _services.PublicApi.cardQuery({
                uuid: uuid,
                parameters: JSON.stringify(datasetQuery.parameters)
              });

            case 17:
              newResult = _context.sent;
              _context.next = 21;
              break;

            case 20:
              throw { status: 404 };

            case 21:

              _this.setState({ result: newResult });
              _context.next = 28;
              break;

            case 24:
              _context.prev = 24;
              _context.t0 = _context["catch"](5);

              console.error("error", _context.t0);
              setErrorPage(_context.t0);

            case 28:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, _this2, [[5, 24]]);
    }));

    _this.state = {
      card: null,
      result: null,
      parameterValues: {}
    };
    return _this;
  }

  // $FlowFixMe


  _createClass(PublicQuestion, [{
    key: "componentWillMount",
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var _props, setErrorPage, _props$params, uuid, token, query, _card, _parameterValues, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, parameter;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _props = this.props, setErrorPage = _props.setErrorPage, _props$params = _props.params, uuid = _props$params.uuid, token = _props$params.token, query = _props.location.query;


                if (uuid) {
                  (0, _services.setPublicQuestionEndpoints)(uuid);
                } else if (token) {
                  (0, _services.setEmbedQuestionEndpoints)(token);
                }

                _context2.prev = 2;
                _card = void 0;

                if (!token) {
                  _context2.next = 10;
                  break;
                }

                _context2.next = 7;
                return _services.EmbedApi.card({ token: token });

              case 7:
                _card = _context2.sent;
                _context2.next = 17;
                break;

              case 10:
                if (!uuid) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return _services.PublicApi.card({ uuid: uuid });

              case 13:
                _card = _context2.sent;
                _context2.next = 17;
                break;

              case 16:
                throw { status: 404 };

              case 17:

                if (_card.param_values) {
                  this.props.addParamValues(_card.param_values);
                }
                if (_card.param_fields) {
                  this.props.addFields(_card.param_fields);
                }

                _parameterValues = {};
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context2.prev = 23;

                for (_iterator = (0, _Card.getParameters)(_card)[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  parameter = _step.value;

                  _parameterValues[String(parameter.id)] = query[parameter.slug];
                }

                _context2.next = 31;
                break;

              case 27:
                _context2.prev = 27;
                _context2.t0 = _context2["catch"](23);
                _didIteratorError = true;
                _iteratorError = _context2.t0;

              case 31:
                _context2.prev = 31;
                _context2.prev = 32;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 34:
                _context2.prev = 34;

                if (!_didIteratorError) {
                  _context2.next = 37;
                  break;
                }

                throw _iteratorError;

              case 37:
                return _context2.finish(34);

              case 38:
                return _context2.finish(31);

              case 39:
                this.setState({ card: _card, parameterValues: _parameterValues }, this.run);
                _context2.next = 46;
                break;

              case 42:
                _context2.prev = 42;
                _context2.t1 = _context2["catch"](2);

                console.error("error", _context2.t1);
                setErrorPage(_context2.t1);

              case 46:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 42], [23, 27, 31, 39], [32,, 34, 38]]);
      }));

      function componentWillMount() {
        return _ref2.apply(this, arguments);
      }

      return componentWillMount;
    }()

    // $FlowFixMe: setState expects return type void

  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _props$params2 = this.props.params,
          uuid = _props$params2.uuid,
          token = _props$params2.token;
      var _state = this.state,
          card = _state.card,
          result = _state.result,
          parameterValues = _state.parameterValues;


      var actionButtons = result && _react2.default.createElement(_QueryDownloadWidget2.default, {
        className: "m1 text-grey-4-hover",
        uuid: uuid,
        token: token,
        result: result
      });

      return _react2.default.createElement(
        _EmbedFrame2.default,
        {
          name: card && card.name,
          description: card && card.description,
          parameters: card && (0, _Card.getParametersWithExtras)(card),
          actionButtons: actionButtons,
          parameterValues: parameterValues,
          setParameterValue: this.setParameterValue
        },
        _react2.default.createElement(
          _LoadingAndErrorWrapper2.default,
          { loading: !result },
          function () {
            return _react2.default.createElement(_Visualization2.default, {
              rawSeries: [{ card: card, data: result && result.data }],
              className: "full flex-full",
              onUpdateVisualizationSettings: function onUpdateVisualizationSettings(settings) {
                return _this3.setState({
                  // $FlowFixMe
                  result: (0, _icepick.updateIn)(result, ["card", "visualization_settings"], function (s) {
                    return _extends({}, s, settings);
                  })
                });
              },
              gridUnit: 12,
              showTitle: false,
              isDashboard: true
            });
          }
        )
      );
    }
  }]);

  return PublicQuestion;
}(_react.Component)) || _class) || _class);
PublicQuestion.displayName = "PublicQuestion";
exports.default = PublicQuestion;

/***/ }),

/***/ 544:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _LogoIcon = __webpack_require__(169);

var _LogoIcon2 = _interopRequireDefault(_LogoIcon);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LogoBadge = function LogoBadge(_ref) {
  var dark = _ref.dark;
  return _react2.default.createElement(
    "a",
    {
      href: "https://www.metabase.com/",
      target: "_blank",
      className: "h4 flex text-bold align-center no-decoration"
    },
    _react2.default.createElement(_LogoIcon2.default, { size: 28, dark: dark }),
    _react2.default.createElement(
      "span",
      { className: "text-small" },
      _react2.default.createElement(
        "span",
        { className: "ml1 text-grey-3" },
        "Powered by"
      ),
      " ",
      _react2.default.createElement(
        "span",
        { className: (0, _classnames2.default)({ "text-brand": !dark }, { "text-white": dark }) },
        "Metabase"
      )
    )
  );
};

LogoBadge.displayName = "LogoBadge";
exports.default = LogoBadge;

/***/ }),

/***/ 545:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 546:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _reactRouterRedux = __webpack_require__(19);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _dom = __webpack_require__(28);

var _LoadingAndErrorWrapper = __webpack_require__(20);

var _LoadingAndErrorWrapper2 = _interopRequireDefault(_LoadingAndErrorWrapper);

var _DashboardGrid = __webpack_require__(305);

var _DashboardGrid2 = _interopRequireDefault(_DashboardGrid);

var _DashboardControls = __webpack_require__(350);

var _DashboardControls2 = _interopRequireDefault(_DashboardControls);

var _DashboardActions = __webpack_require__(347);

var _EmbedFrame = __webpack_require__(170);

var _EmbedFrame2 = _interopRequireDefault(_EmbedFrame);

var _metadata = __webpack_require__(16);

var _app = __webpack_require__(107);

var _selectors = __webpack_require__(147);

var _dashboard = __webpack_require__(124);

var dashboardActions = _interopRequireWildcard(_dashboard);

var _services = __webpack_require__(15);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, props) {
  return {
    dashboardId: props.params.dashboardId || props.params.uuid || props.params.token,
    dashboard: (0, _selectors.getDashboardComplete)(state, props),
    dashcardData: (0, _selectors.getCardData)(state, props),
    slowCards: (0, _selectors.getSlowCards)(state, props),
    parameters: (0, _selectors.getParameters)(state, props),
    parameterValues: (0, _selectors.getParameterValues)(state, props)
  };
};

var mapDispatchToProps = _extends({}, dashboardActions, {
  fetchDatabaseMetadata: _metadata.fetchDatabaseMetadata,
  setErrorPage: _app.setErrorPage,
  onChangeLocation: _reactRouterRedux.push
});

var PublicDashboard = (_dec = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps), _dec(_class = (0, _DashboardControls2.default)(_class = function (_Component) {
  _inherits(PublicDashboard, _Component);

  function PublicDashboard() {
    _classCallCheck(this, PublicDashboard);

    return _possibleConstructorReturn(this, (PublicDashboard.__proto__ || Object.getPrototypeOf(PublicDashboard)).apply(this, arguments));
  }

  _createClass(PublicDashboard, [{
    key: "componentWillMount",


    // $FlowFixMe
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _props, initialize, fetchDashboard, fetchDashboardCardData, setErrorPage, location, _props$params, uuid, token;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _props = this.props, initialize = _props.initialize, fetchDashboard = _props.fetchDashboard, fetchDashboardCardData = _props.fetchDashboardCardData, setErrorPage = _props.setErrorPage, location = _props.location, _props$params = _props.params, uuid = _props$params.uuid, token = _props$params.token;


                if (uuid) {
                  (0, _services.setPublicDashboardEndpoints)(uuid);
                } else if (token) {
                  (0, _services.setEmbedDashboardEndpoints)(token);
                }

                initialize();
                _context.prev = 3;
                _context.next = 6;
                return fetchDashboard(uuid || token, location.query);

              case 6:
                _context.next = 8;
                return fetchDashboardCardData({ reload: false, clear: true });

              case 8:
                _context.next = 13;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](3);

                setErrorPage(_context.t0);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 10]]);
      }));

      function componentWillMount() {
        return _ref.apply(this, arguments);
      }

      return componentWillMount;
    }()
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (!_underscore2.default.isEqual(this.props.parameterValues, nextProps.parameterValues)) {
        this.props.fetchDashboardCardData({ reload: false, clear: true });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          dashboard = _props2.dashboard,
          parameters = _props2.parameters,
          parameterValues = _props2.parameterValues,
          isFullscreen = _props2.isFullscreen,
          isNightMode = _props2.isNightMode;

      var buttons = !_dom.IFRAMED ? (0, _DashboardActions.getDashboardActions)(this.props) : [];

      return _react2.default.createElement(
        _EmbedFrame2.default,
        {
          name: dashboard && dashboard.name,
          description: dashboard && dashboard.description,
          parameters: parameters,
          parameterValues: parameterValues,
          setParameterValue: this.props.setParameterValue,
          actionButtons: buttons.length > 0 && _react2.default.createElement(
            "div",
            null,
            buttons.map(function (button, index) {
              return _react2.default.createElement(
                "span",
                { key: index, className: "m1" },
                button
              );
            })
          )
        },
        _react2.default.createElement(
          _LoadingAndErrorWrapper2.default,
          {
            className: (0, _classnames2.default)("Dashboard p1 flex-full", {
              "Dashboard--fullscreen": isFullscreen,
              "Dashboard--night": isNightMode
            }),
            loading: !dashboard
          },
          function () {
            return _react2.default.createElement(_DashboardGrid2.default, _extends({}, _this2.props, {
              className: "spread"
              // Don't allow clicking titles on public dashboards
              , navigateToNewCardFromDashboard: null
            }));
          }
        )
      );
    }
  }]);

  return PublicDashboard;
}(_react.Component)) || _class) || _class);
PublicDashboard.displayName = "PublicDashboard";
exports.default = PublicDashboard;

/***/ }),

/***/ 547:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _auth = __webpack_require__(184);

var _auth2 = _interopRequireDefault(_auth);

var _app = __webpack_require__(107);

var _app2 = _interopRequireDefault(_app);

var _metadata = __webpack_require__(16);

var _metadata2 = _interopRequireDefault(_metadata);

var _requests = __webpack_require__(106);

var _requests2 = _interopRequireDefault(_requests);

var _settings = __webpack_require__(207);

var _settings2 = _interopRequireDefault(_settings);

var _undo = __webpack_require__(103);

var _undo2 = _interopRequireDefault(_undo);

var _user = __webpack_require__(129);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* ducks */
exports.default = {
  // global reducers
  app: _app2.default,
  auth: _auth2.default,
  currentUser: _user.currentUser,
  metadata: _metadata2.default,
  requests: _requests2.default,
  settings: _settings2.default,
  undo: _undo2.default
};

/* user */


// Reducers shared between "main" and "public" apps

/***/ }),

/***/ 548:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["Not found"], ["Not found"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _EmbedFrame = __webpack_require__(170);

var _EmbedFrame2 = _interopRequireDefault(_EmbedFrame);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var PublicNotFound = function PublicNotFound() {
  return _react2.default.createElement(
    _EmbedFrame2.default,
    { className: "spread" },
    _react2.default.createElement(
      "div",
      { className: "flex layout-centered flex-full flex-column" },
      _react2.default.createElement("div", { className: "QueryError-image QueryError-image--noRows" }),
      _react2.default.createElement(
        "div",
        { className: "mt1 h4 sm-h3 md-h2 text-bold" },
        (0, _c3po.t)(_templateObject)
      )
    )
  );
};

PublicNotFound.displayName = "PublicNotFound";
exports.default = PublicNotFound;

/***/ }),

/***/ 55:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestModal = exports.InlineModal = exports.FullPageModal = exports.WindowModal = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _dom = __webpack_require__(28);

var _reactTransitionGroup = __webpack_require__(194);

var _reactMotion = __webpack_require__(302);

var _OnClickOutsideWrapper = __webpack_require__(130);

var _OnClickOutsideWrapper2 = _interopRequireDefault(_OnClickOutsideWrapper);

var _ModalContent = __webpack_require__(56);

var _ModalContent2 = _interopRequireDefault(_ModalContent);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Routeless = __webpack_require__(508);

var _Routeless2 = _interopRequireDefault(_Routeless);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getModalContent(props) {
  if (_react2.default.Children.count(props.children) > 1 || props.title != null || props.footer != null) {
    return _react2.default.createElement(_ModalContent2.default, _underscore2.default.omit(props, "className", "style"));
  } else {
    return _react2.default.Children.only(props.children);
  }
}

var WindowModal = exports.WindowModal = (_temp = _class = function (_Component) {
  _inherits(WindowModal, _Component);

  function WindowModal() {
    _classCallCheck(this, WindowModal);

    return _possibleConstructorReturn(this, (WindowModal.__proto__ || Object.getPrototypeOf(WindowModal)).apply(this, arguments));
  }

  _createClass(WindowModal, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this._modalElement = document.createElement("span");
      this._modalElement.className = "ModalContainer";
      document.querySelector("body").appendChild(this._modalElement);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this._renderPopover();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this._renderPopover();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      _reactDom2.default.unmountComponentAtNode(this._modalElement);
      if (this._modalElement.parentNode) {
        this._modalElement.parentNode.removeChild(this._modalElement);
      }
    }
  }, {
    key: "handleDismissal",
    value: function handleDismissal() {
      if (this.props.onClose) {
        this.props.onClose();
      }
    }
  }, {
    key: "_modalComponent",
    value: function _modalComponent() {
      var _this2 = this;

      var className = _classnames2.default.apply(undefined, [this.props.className].concat(_toConsumableArray(["small", "medium", "wide", "tall"].filter(function (type) {
        return _this2.props[type];
      }).map(function (type) {
        return "Modal--" + type;
      }))));
      return _react2.default.createElement(
        _OnClickOutsideWrapper2.default,
        { handleDismissal: this.handleDismissal.bind(this) },
        _react2.default.createElement(
          "div",
          { className: (0, _classnames2.default)(className, "relative bordered bg-white rounded") },
          getModalContent(_extends({}, this.props, {
            fullPageModal: false,
            formModal: !!this.props.form
          }))
        )
      );
    }
  }, {
    key: "_renderPopover",
    value: function _renderPopover() {
      var _props = this.props,
          backdropClassName = _props.backdropClassName,
          isOpen = _props.isOpen,
          style = _props.style;

      var backdropClassnames = "flex justify-center align-center fixed top left bottom right";
      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.createElement(
        _reactTransitionGroup.CSSTransitionGroup,
        {
          transitionName: "Modal",
          transitionAppear: true,
          transitionAppearTimeout: 250,
          transitionEnterTimeout: 250,
          transitionLeaveTimeout: 250
        },
        isOpen && _react2.default.createElement(
          "div",
          {
            key: "modal",
            className: (0, _classnames2.default)(backdropClassName, backdropClassnames),
            style: style
          },
          this._modalComponent()
        )
      ), this._modalElement);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return WindowModal;
}(_react.Component), _class.propTypes = {
  isOpen: _propTypes2.default.bool
}, _class.defaultProps = {
  className: "Modal",
  backdropClassName: "Modal-backdrop"
}, _temp);
WindowModal.displayName = "WindowModal";

var FullPageModal = exports.FullPageModal = function (_Component2) {
  _inherits(FullPageModal, _Component2);

  function FullPageModal() {
    _classCallCheck(this, FullPageModal);

    return _possibleConstructorReturn(this, (FullPageModal.__proto__ || Object.getPrototypeOf(FullPageModal)).apply(this, arguments));
  }

  _createClass(FullPageModal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this._modalElement = document.createElement("div");
      this._modalElement.className = "Modal--full";
      document.querySelector("body").appendChild(this._modalElement);

      // save the scroll position, scroll to the top left, and disable scrolling
      this._scrollX = (0, _dom.getScrollX)();
      this._scrollY = (0, _dom.getScrollY)();
      window.scrollTo(0, 0);
      document.body.style.overflow = "hidden";

      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      // set the top of the modal to the bottom of the nav
      var nav = document.body.querySelector(".Nav");
      if (nav) {
        this._modalElement.style.top = nav.getBoundingClientRect().bottom + "px";
      }
      this._renderModal(true);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this4 = this;

      this._renderModal(false);

      // restore scroll position and scrolling
      document.body.style.overflow = "";

      // On IE11 a timeout is required for the scroll to happen after the change of overflow setting
      setTimeout(function () {
        window.scrollTo(_this4._scrollX, _this4._scrollY);
      }, 0);

      // wait for animations to complete before unmounting
      setTimeout(function () {
        _reactDom2.default.unmountComponentAtNode(_this4._modalElement);
        _this4._modalElement.parentNode.removeChild(_this4._modalElement);
      }, 300);
    }
  }, {
    key: "_renderModal",
    value: function _renderModal(open) {
      var _this5 = this;

      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.createElement(
        _reactMotion.Motion,
        {
          defaultStyle: { opacity: 0, top: 20 },
          style: open ? { opacity: (0, _reactMotion.spring)(1), top: (0, _reactMotion.spring)(0) } : { opacity: (0, _reactMotion.spring)(0), top: (0, _reactMotion.spring)(20) }
        },
        function (motionStyle) {
          return _react2.default.createElement(
            "div",
            { className: "full-height relative scroll-y", style: motionStyle },
            getModalContent(_extends({}, _this5.props, {
              fullPageModal: true,
              formModal: !!_this5.props.form
            }))
          );
        }
      ), this._modalElement);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return FullPageModal;
}(_react.Component);

FullPageModal.displayName = "FullPageModal";

var InlineModal = exports.InlineModal = function (_Component3) {
  _inherits(InlineModal, _Component3);

  function InlineModal() {
    _classCallCheck(this, InlineModal);

    return _possibleConstructorReturn(this, (InlineModal.__proto__ || Object.getPrototypeOf(InlineModal)).apply(this, arguments));
  }

  _createClass(InlineModal, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        this.props.isOpen ? _react2.default.createElement(FullPageModal, this.props) : null
      );
    }
  }]);

  return InlineModal;
}(_react.Component);

InlineModal.displayName = "InlineModal";


/**
 * A modified version of Modal for Jest/Enzyme tests. Renders the modal content inline instead of document root.
 */
var TestModal = exports.TestModal = (_temp2 = _class2 = function (_Component4) {
  _inherits(TestModal, _Component4);

  function TestModal() {
    _classCallCheck(this, TestModal);

    return _possibleConstructorReturn(this, (TestModal.__proto__ || Object.getPrototypeOf(TestModal)).apply(this, arguments));
  }

  _createClass(TestModal, [{
    key: "render",
    value: function render() {
      if (this.props.isOpen) {
        return _react2.default.createElement(
          "div",
          { className: "test-modal", onClick: function onClick(e) {
              return e.stopPropagation();
            } },
          getModalContent(_extends({}, this.props, {
            fullPageModal: true,
            formModal: !!this.props.form
          }))
        );
      } else {
        return null;
      }
    }
  }]);

  return TestModal;
}(_react.Component), _class2.defaultProps = {
  isOpen: true
}, _temp2);
TestModal.displayName = "TestModal";


// the "routeless" version should only be used for non-inline modals
var RoutelessFullPageModal = (0, _Routeless2.default)(FullPageModal);

var Modal = function Modal(_ref) {
  var full = _ref.full,
      inline = _ref.inline,
      props = _objectWithoutProperties(_ref, ["full", "inline"]);

  return full ? props.isOpen ? _react2.default.createElement(RoutelessFullPageModal, props) : null : inline ? _react2.default.createElement(InlineModal, props) : _react2.default.createElement(WindowModal, props);
};

Modal.defaultProps = {
  isOpen: true
};

exports.default = Modal;

/***/ }),

/***/ 56:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalFooter = exports.ModalBody = exports.ModalHeader = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModalContent = (_temp = _class = function (_Component) {
  _inherits(ModalContent, _Component);

  function ModalContent() {
    _classCallCheck(this, ModalContent);

    return _possibleConstructorReturn(this, (ModalContent.__proto__ || Object.getPrototypeOf(ModalContent)).apply(this, arguments));
  }

  _createClass(ModalContent, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          title = _props.title,
          footer = _props.footer,
          onClose = _props.onClose,
          children = _props.children,
          className = _props.className,
          fullPageModal = _props.fullPageModal,
          formModal = _props.formModal;


      return _react2.default.createElement(
        "div",
        {
          id: this.props.id,
          className: (0, _classnames2.default)("ModalContent NewForm flex-full flex flex-column relative", className, { "full-height": fullPageModal && !formModal })
        },
        onClose && _react2.default.createElement(_Icon2.default, {
          className: "text-grey-2 text-grey-4-hover cursor-pointer absolute m2 p2 top right",
          name: "close",
          size: fullPageModal ? 24 : 16,
          onClick: onClose
        }),
        title && _react2.default.createElement(
          ModalHeader,
          { fullPageModal: fullPageModal, formModal: formModal },
          title
        ),
        _react2.default.createElement(
          ModalBody,
          { fullPageModal: fullPageModal, formModal: formModal },
          children
        ),
        footer && _react2.default.createElement(
          ModalFooter,
          { fullPageModal: fullPageModal, formModal: formModal },
          footer
        )
      );
    }
  }]);

  return ModalContent;
}(_react.Component), _class.propTypes = {
  id: _propTypes2.default.string,
  title: _propTypes2.default.string,
  onClose: _propTypes2.default.func.isRequired,
  fullPageModal: _propTypes2.default.bool,
  formModal: _propTypes2.default.bool
}, _class.defaultProps = {}, _temp);
ModalContent.displayName = "ModalContent";
exports.default = ModalContent;


var FORM_WIDTH = 500 + 32 * 2; // includes padding

var ModalHeader = exports.ModalHeader = function ModalHeader(_ref) {
  var children = _ref.children,
      fullPageModal = _ref.fullPageModal,
      formModal = _ref.formModal;
  return _react2.default.createElement(
    "div",
    { className: (0, _classnames2.default)("ModalHeader flex-no-shrink px4 py4 full") },
    _react2.default.createElement(
      "h2",
      {
        className: (0, _classnames2.default)("text-bold", { "text-centered": fullPageModal }, { mr4: !fullPageModal })
      },
      children
    )
  );
};

ModalHeader.displayName = "ModalHeader";
var ModalBody = exports.ModalBody = function ModalBody(_ref2) {
  var children = _ref2.children,
      fullPageModal = _ref2.fullPageModal,
      formModal = _ref2.formModal;
  return _react2.default.createElement(
    "div",
    {
      className: (0, _classnames2.default)("ModalBody", {
        px4: formModal,
        "flex flex-full flex-basis-auto": !formModal
      })
    },
    _react2.default.createElement(
      "div",
      {
        className: "flex-full ml-auto mr-auto flex flex-column",
        style: { maxWidth: formModal && fullPageModal ? FORM_WIDTH : undefined }
      },
      children
    )
  );
};

ModalBody.displayName = "ModalBody";
var ModalFooter = exports.ModalFooter = function ModalFooter(_ref3) {
  var children = _ref3.children,
      fullPageModal = _ref3.fullPageModal,
      formModal = _ref3.formModal;
  return _react2.default.createElement(
    "div",
    {
      className: (0, _classnames2.default)("ModalFooter flex-no-shrink px4", fullPageModal ? "py4" : "py2", {
        "border-top": !fullPageModal || fullPageModal && !formModal
      })
    },
    _react2.default.createElement(
      "div",
      {
        className: "flex-full ml-auto mr-auto flex",
        style: { maxWidth: formModal && fullPageModal ? FORM_WIDTH : undefined }
      },
      _react2.default.createElement("div", { className: "flex-full" }),
      Array.isArray(children) ? children.map(function (child, index) {
        return _react2.default.createElement(
          "span",
          { key: index, className: "ml2" },
          child
        );
      }) : children
    )
  );
};
ModalFooter.displayName = "ModalFooter";

/***/ }),

/***/ 58:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Schema = __webpack_require__(385);

var _Schema2 = _interopRequireDefault(_Schema);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for database metadata objects. Contains {@link Schema}s, {@link Table}s, {@link Metric}s, {@link Segment}s.
 *
 * Backed by types/Database data structure which matches the backend API contract
 */
var Database = function (_Base) {
  _inherits(Database, _Base);

  function Database() {
    _classCallCheck(this, Database);

    return _possibleConstructorReturn(this, (Database.__proto__ || Object.getPrototypeOf(Database)).apply(this, arguments));
  }

  _createClass(Database, [{
    key: "tablesInSchema",

    // TODO Atte Keinänen 6/11/17: List all fields here (currently only in types/Database)

    value: function tablesInSchema(schemaName) {
      return this.tables.filter(function (table) {
        return table.schema === schemaName;
      });
    }
  }, {
    key: "schemaNames",
    value: function schemaNames() {
      return _underscore2.default.uniq(this.tables.map(function (table) {
        return table.schema;
      }).filter(function (schemaName) {
        return schemaName != null;
      }));
    }
  }, {
    key: "newQuestion",
    value: function newQuestion() {
      // $FlowFixMe
      return new _Question2.default();
    }
  }]);

  return Database;
}(_Base3.default);

exports.default = Database;

/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _resizeObserverPolyfill = __webpack_require__(715);

var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (ComposedComponent) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(_class, _Component);

    function _class(props, context) {
      _classCallCheck(this, _class);

      var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props, context));

      _this._updateSize = function () {
        var element = _reactDom2.default.findDOMNode(_this);
        if (element) {
          var _element$getBoundingC = element.getBoundingClientRect(),
              width = _element$getBoundingC.width,
              height = _element$getBoundingC.height;

          if (_this.state.width !== width || _this.state.height !== height) {
            _this.setState({ width: width, height: height });
          }
        }
      };

      _this.state = {
        width: null,
        height: null
      };
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        // media query listener, ensure re-layout when printing
        if (window.matchMedia) {
          this._mql = window.matchMedia("print");
          this._mql.addListener(this._updateSize);
        }

        var element = _reactDom2.default.findDOMNode(this);
        if (element) {
          // resize observer, ensure re-layout when container element changes size
          this._ro = new _resizeObserverPolyfill2.default(function (entries, observer) {
            var element = _reactDom2.default.findDOMNode(_this2);
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = entries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var entry = _step.value;

                if (entry.target === element) {
                  _this2._updateSize();
                  break;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          });
          this._ro.observe(element);

          this._updateSize();
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this._updateSize();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._ro) {
          this._ro.disconnect();
        }
        if (this._mql) {
          this._mql.removeListener(this._updateSize);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(ComposedComponent, _extends({}, this.props, this.state));
      }
    }]);

    return _class;
  }(_react.Component), _class.displayName = "ExplicitSize[" + (ComposedComponent.displayName || ComposedComponent.name) + "]", _temp;
};

/***/ }),

/***/ 60:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Base = function () {
  function Base() {
    var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Base);

    this._plainObject = null;

    this._plainObject = object;
    for (var property in object) {
      this[property] = object[property];
    }
  }

  /**
   * Get the plain metadata object without hydrated fields.
   * Useful for situations where you want serialize the metadata object.
   */


  _createClass(Base, [{
    key: "getPlainObject",
    value: function getPlainObject() {
      return this._plainObject;
    }
  }]);

  return Base;
}();

exports.default = Base;

/***/ }),

/***/ 61:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pivot = exports.updateDateTimeFilter = exports.breakout = exports.summarize = exports.plotSegmentField = exports.drillRecord = exports.drillUnderlyingRecords = exports.drillDownForDimensions = exports.addOrUpdateBreakout = exports.addOrUpdateFilter = exports.drillFilter = exports.filter = exports.getFieldRefFromColumn = exports.toUnderlyingRecords = exports.toUnderlyingData = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /*  weak */

// legacy query lib


var _drilldown = __webpack_require__(395);

Object.defineProperty(exports, "drillDownForDimensions", {
  enumerable: true,
  get: function get() {
    return _drilldown.drillDownForDimensions;
  }
});
exports.updateLatLonFilter = updateLatLonFilter;
exports.updateNumericFilter = updateNumericFilter;

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _util = __webpack_require__(27);

var _Card = __webpack_require__(37);

var Card = _interopRequireWildcard(_Card);

var _query3 = __webpack_require__(70);

var Query = _interopRequireWildcard(_query3);

var _field = __webpack_require__(93);

var Field = _interopRequireWildcard(_field);

var _filter = __webpack_require__(91);

var Filter = _interopRequireWildcard(_filter);

var _card = __webpack_require__(62);

var _dataset = __webpack_require__(84);

var _schema_metadata = __webpack_require__(10);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _time = __webpack_require__(73);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: use icepick instead of mutation, make they handle frozen cards

var toUnderlyingData = exports.toUnderlyingData = function toUnderlyingData(card) {
  var newCard = (0, _card.startNewCard)("query");
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);
  newCard.display = "table";
  newCard.original_card_id = card.id;
  return newCard;
};

var toUnderlyingRecords = exports.toUnderlyingRecords = function toUnderlyingRecords(card) {
  if (card.dataset_query.type === "query") {
    var query = _utils2.default.copy(card.dataset_query).query;
    var newCard = (0, _card.startNewCard)("query", card.dataset_query.database, query.source_table);
    newCard.dataset_query.query.filter = query.filter;
    return newCard;
  }
};

var getFieldRefFromColumn = exports.getFieldRefFromColumn = function getFieldRefFromColumn(column) {
  var fieldId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : column.id;

  if (fieldId == null) {
    throw new Error("getFieldRefFromColumn expects non-null fieldId or column with non-null id");
  }
  if (Array.isArray(fieldId)) {
    // NOTE: sometimes col.id is a field reference (e.x. nested queries), if so just return it
    return fieldId;
  } else if (column.fk_field_id != null) {
    return ["fk->", column.fk_field_id, fieldId];
  } else {
    return ["field-id", fieldId];
  }
};

var clone = function clone(card) {
  var newCard = (0, _card.startNewCard)("query");

  newCard.display = card.display;
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);

  // The Question lib doesn't always set a viz setting. Placing a check here, but we should probably refactor this
  // into a separate test + clean up the question lib.
  if (card.visualization_settings) {
    newCard.visualization_settings = _utils2.default.copy(card.visualization_settings);
  }

  return newCard;
};

// Adds a new filter with the specified operator, column, and value
var filter = exports.filter = function filter(card, operator, column, value) {
  var newCard = clone(card);

  // $FlowFixMe:
  var filter = [operator, getFieldRefFromColumn(column), value];
  newCard.dataset_query.query = Query.addFilter(newCard.dataset_query.query, filter);
  return newCard;
};

var drillFilter = exports.drillFilter = function drillFilter(card, value, column) {
  var filter = void 0;
  if ((0, _schema_metadata.isDate)(column)) {
    filter = ["=", ["datetime-field", getFieldRefFromColumn(column), "as", column.unit], (0, _time.parseTimestamp)(value, column.unit).format()];
  } else {
    var range = (0, _dataset.rangeForValue)(value, column);
    if (range) {
      filter = ["BETWEEN", getFieldRefFromColumn(column), range[0], range[1]];
    } else {
      filter = ["=", getFieldRefFromColumn(column), value];
    }
  }

  return addOrUpdateFilter(card, filter);
};

var addOrUpdateFilter = exports.addOrUpdateFilter = function addOrUpdateFilter(card, filter) {
  var newCard = clone(card);
  // replace existing filter, if it exists
  var filters = Query.getFilters(newCard.dataset_query.query);
  for (var index = 0; index < filters.length; index++) {
    if (Filter.isFieldFilter(filters[index]) && Field.getFieldTargetId(filters[index][1]) === Field.getFieldTargetId(filter[1])) {
      newCard.dataset_query.query = Query.updateFilter(newCard.dataset_query.query, index, filter);
      return newCard;
    }
  }

  // otherwise add a new filter
  newCard.dataset_query.query = Query.addFilter(newCard.dataset_query.query, filter);
  return newCard;
};

var addOrUpdateBreakout = exports.addOrUpdateBreakout = function addOrUpdateBreakout(card, breakout) {
  var newCard = clone(card);
  // replace existing breakout, if it exists
  var breakouts = Query.getBreakouts(newCard.dataset_query.query);
  for (var index = 0; index < breakouts.length; index++) {
    if ((0, _util.fieldIdsEq)(Field.getFieldTargetId(breakouts[index]), Field.getFieldTargetId(breakout))) {
      newCard.dataset_query.query = Query.updateBreakout(newCard.dataset_query.query, index, breakout);
      return newCard;
    }
  }

  // otherwise add a new breakout
  newCard.dataset_query.query = Query.addBreakout(newCard.dataset_query.query, breakout);
  return newCard;
};

var UNITS = ["minute", "hour", "day", "week", "month", "quarter", "year"];
var getNextUnit = function getNextUnit(unit) {
  return UNITS[Math.max(0, UNITS.indexOf(unit) - 1)];
};

var drillUnderlyingRecords = exports.drillUnderlyingRecords = function drillUnderlyingRecords(card, dimensions) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = dimensions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var dimension = _step.value;

      card = drillFilter(card, dimension.value, dimension.column);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return toUnderlyingRecords(card);
};

var drillRecord = exports.drillRecord = function drillRecord(databaseId, tableId, fieldId, value) {
  var newCard = (0, _card.startNewCard)("query", databaseId, tableId);
  newCard.dataset_query.query = Query.addFilter(newCard.dataset_query.query, ["=", ["field-id", fieldId], value]);
  return newCard;
};

var plotSegmentField = exports.plotSegmentField = function plotSegmentField(card) {
  var newCard = (0, _card.startNewCard)("query");
  newCard.display = "scatter";
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);
  return newCard;
};

var summarize = exports.summarize = function summarize(card, aggregation, tableMetadata) {
  var newCard = (0, _card.startNewCard)("query");
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);
  newCard.dataset_query.query = Query.addAggregation(newCard.dataset_query.query, aggregation);
  guessVisualization(newCard, tableMetadata);
  return newCard;
};

var breakout = exports.breakout = function breakout(card, _breakout, tableMetadata) {
  var newCard = (0, _card.startNewCard)("query");
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);
  newCard.dataset_query.query = Query.addBreakout(newCard.dataset_query.query, _breakout);
  guessVisualization(newCard, tableMetadata);
  return newCard;
};

// min number of points when switching units
var MIN_INTERVALS = 4;

var updateDateTimeFilter = exports.updateDateTimeFilter = function updateDateTimeFilter(card, column, start, end) {
  var newCard = clone(card);

  var fieldRef = getFieldRefFromColumn(column);
  start = (0, _moment2.default)(start);
  end = (0, _moment2.default)(end);
  if (column.unit) {
    // start with the existing breakout unit
    var unit = column.unit;

    // clamp range to unit to ensure we select exactly what's represented by the dots/bars
    start = start.add(1, unit).startOf(unit);
    end = end.endOf(unit);

    // find the largest unit with at least MIN_INTERVALS
    while (unit !== getNextUnit(unit) && end.diff(start, unit) < MIN_INTERVALS) {
      unit = getNextUnit(unit);
    }

    // update the breakout
    newCard = addOrUpdateBreakout(newCard, ["datetime-field", fieldRef, "as", unit]);

    // round to start of the original unit
    start = start.startOf(column.unit);
    end = end.startOf(column.unit);

    if (start.isAfter(end)) {
      return card;
    }
    if (start.isSame(end, column.unit)) {
      // is the start and end are the same (in whatever the original unit was) then just do an "="
      return addOrUpdateFilter(newCard, ["=", ["datetime-field", fieldRef, "as", column.unit], start.format()]);
    } else {
      // otherwise do a BETWEEN
      return addOrUpdateFilter(newCard, ["BETWEEN", ["datetime-field", fieldRef, "as", column.unit], start.format(), end.format()]);
    }
  } else {
    return addOrUpdateFilter(newCard, ["BETWEEN", fieldRef, start.format(), end.format()]);
  }
};

function updateLatLonFilter(card, latitudeColumn, longitudeColumn, bounds) {
  return addOrUpdateFilter(card, ["INSIDE", latitudeColumn.id, longitudeColumn.id, bounds.getNorth(), bounds.getWest(), bounds.getSouth(), bounds.getEast()]);
}

function updateNumericFilter(card, column, start, end) {
  var fieldRef = getFieldRefFromColumn(column);
  return addOrUpdateFilter(card, ["BETWEEN", fieldRef, start, end]);
}

var pivot = exports.pivot = function pivot(card, tableMetadata) {
  var breakouts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var dimensions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  if (card.dataset_query.type !== "query") {
    return null;
  }

  var newCard = (0, _card.startNewCard)("query");
  newCard.dataset_query = _utils2.default.copy(card.dataset_query);

  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = dimensions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var dimension = _step2.value;

      newCard = drillFilter(newCard, dimension.value, dimension.column);
      var breakoutFields = Query.getBreakoutFields(newCard.dataset_query.query, tableMetadata);
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = breakoutFields.entries()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var _step4$value = _slicedToArray(_step4.value, 2),
              index = _step4$value[0],
              field = _step4$value[1];

          if (field && (0, _util.fieldIdsEq)(field.id, dimension.column.id)) {
            newCard.dataset_query.query = Query.removeBreakout(newCard.dataset_query.query, index);
          }
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = breakouts[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var _breakout2 = _step3.value;

      newCard.dataset_query.query = Query.addBreakout(newCard.dataset_query.query, _breakout2);
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  guessVisualization(newCard, tableMetadata);

  return newCard;
};

// const VISUALIZATIONS_ONE_BREAKOUTS = new Set([
//     "bar",
//     "line",
//     "area",
//     "row",
//     "pie",
//     "map"
// ]);
var VISUALIZATIONS_TWO_BREAKOUTS = new Set(["bar", "line", "area"]);

var guessVisualization = function guessVisualization(card, tableMetadata) {
  var query = Card.getQuery(card);
  if (!query) {
    return;
  }
  var aggregations = Query.getAggregations(query);
  var breakoutFields = Query.getBreakouts(query).map(function (breakout) {
    return (_query2.default.getFieldTarget(breakout, tableMetadata) || {}).field;
  });
  if (aggregations.length === 0 && breakoutFields.length === 0) {
    card.display = "table";
  } else if (aggregations.length === 1 && breakoutFields.length === 0) {
    card.display = "scalar";
  } else if (aggregations.length === 1 && breakoutFields.length === 1) {
    if ((0, _schema_metadata.isState)(breakoutFields[0])) {
      card.display = "map";
      card.visualization_settings["map.type"] = "region";
      card.visualization_settings["map.region"] = "us_states";
    } else if ((0, _schema_metadata.isCountry)(breakoutFields[0])) {
      card.display = "map";
      card.visualization_settings["map.type"] = "region";
      card.visualization_settings["map.region"] = "world_countries";
    } else if ((0, _schema_metadata.isDate)(breakoutFields[0])) {
      card.display = "line";
    } else {
      card.display = "bar";
    }
  } else if (aggregations.length === 1 && breakoutFields.length === 2) {
    if (!VISUALIZATIONS_TWO_BREAKOUTS.has(card.display)) {
      if ((0, _schema_metadata.isDate)(breakoutFields[0])) {
        card.display = "line";
      } else if (_underscore2.default.all(breakoutFields, _schema_metadata.isCoordinate)) {
        card.display = "map";
        card.visualization_settings["map.type"] = "grid";
      } else {
        card.display = "bar";
      }
    }
  } else {
    console.warn("Couldn't guess visualization", card);
    card.display = "table";
  }
};

/***/ }),

/***/ 62:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadCard = undefined;

// load a card either by ID or from a base64 serialization.  if both are present then they are merged, which the serialized version taking precedence
// TODO: move to redux
var loadCard = exports.loadCard = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(cardId) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return _services.CardApi.get({ cardId: cardId });

          case 3:
            return _context.abrupt("return", _context.sent);

          case 6:
            _context.prev = 6;
            _context.t0 = _context["catch"](0);

            console.log("error loading card", _context.t0);
            throw _context.t0;

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[0, 6]]);
  }));

  return function loadCard(_x2) {
    return _ref.apply(this, arguments);
  };
}();

// TODO Atte Keinänen 5/31/17 Deprecated, we should migrate existing references to this method to `question.isCardDirty`
// predicate function that dermines if a given card is "dirty" compared to the last known version of the card


exports.createCard = createCard;
exports.startNewCard = startNewCard;
exports.isCardDirty = isCardDirty;
exports.isCardRunnable = isCardRunnable;
exports.serializeCardForUrl = serializeCardForUrl;
exports.deserializeCardFromUrl = deserializeCardFromUrl;
exports.utf8_to_b64 = utf8_to_b64;
exports.b64_to_utf8 = b64_to_utf8;
exports.utf8_to_b64url = utf8_to_b64url;
exports.b64url_to_utf8 = b64url_to_utf8;
exports.urlForCardState = urlForCardState;
exports.cleanCopyCard = cleanCopyCard;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _utils = __webpack_require__(25);

var _utils2 = _interopRequireDefault(_utils);

var _urls = __webpack_require__(34);

var Urls = _interopRequireWildcard(_urls);

var _services = __webpack_require__(15);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function createCard() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

  return {
    name: name,
    display: "table",
    visualization_settings: {},
    dataset_query: {}
  };
}

// start a new card using the given query type and optional database and table selections
function startNewCard(type, databaseId, tableId) {
  // create a brand new card to work from
  var card = createCard();
  card.dataset_query = (0, _query.createQuery)(type, databaseId, tableId);

  return card;
}function isCardDirty(card, originalCard) {
  // The rules:
  //   - if it's new, then it's dirty when
  //       1) there is a database/table chosen or
  //       2) when there is any content on the native query
  //   - if it's saved, then it's dirty when
  //       1) the current card doesn't match the last saved version

  if (!card) {
    return false;
  } else if (!card.id) {
    if (card.dataset_query.query && card.dataset_query.query.source_table) {
      return true;
    } else if (card.dataset_query.native && !_underscore2.default.isEmpty(card.dataset_query.native.query)) {
      return true;
    } else {
      return false;
    }
  } else {
    var origCardSerialized = originalCard ? serializeCardForUrl(originalCard) : null;
    var newCardSerialized = card ? serializeCardForUrl(_underscore2.default.omit(card, "original_card_id")) : null;
    return newCardSerialized !== origCardSerialized;
  }
}

function isCardRunnable(card, tableMetadata) {
  if (!card) {
    return false;
  }
  var datasetQuery = card.dataset_query;
  if (datasetQuery.query) {
    return _query2.default.canRun(datasetQuery.query, tableMetadata);
  } else {
    return datasetQuery.database != undefined && datasetQuery.native.query !== "";
  }
}

// TODO Atte Keinänen 5/31/17 Deprecated, we should move tests to Questions.spec.js
function serializeCardForUrl(card) {
  var dataset_query = _utils2.default.copy(card.dataset_query);
  if (dataset_query.query) {
    dataset_query.query = _query2.default.cleanQuery(dataset_query.query);
  }

  var cardCopy = {
    name: card.name,
    description: card.description,
    dataset_query: dataset_query,
    display: card.display,
    parameters: card.parameters,
    visualization_settings: card.visualization_settings,
    original_card_id: card.original_card_id
  };

  return utf8_to_b64url(JSON.stringify(cardCopy));
}

function deserializeCardFromUrl(serialized) {
  serialized = serialized.replace(/^#/, "");
  return JSON.parse(b64url_to_utf8(serialized));
}

// escaping before base64 encoding is necessary for non-ASCII characters
// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa
function utf8_to_b64(str) {
  return window.btoa(unescape(encodeURIComponent(str)));
}
function b64_to_utf8(b64) {
  return decodeURIComponent(escape(window.atob(b64)));
}

// for "URL safe" base64, replace "+" with "-" and "/" with "_" as per RFC 4648
function utf8_to_b64url(str) {
  return utf8_to_b64(str).replace(/\+/g, "-").replace(/\//g, "_");
}
function b64url_to_utf8(b64url) {
  return b64_to_utf8(b64url.replace(/-/g, "+").replace(/_/g, "/"));
}

function urlForCardState(state, dirty) {
  return Urls.question(state.cardId, state.serializedCard && dirty ? state.serializedCard : "");
}

function cleanCopyCard(card) {
  var cardCopy = {};
  for (var name in card) {
    if (name.charAt(0) !== "$") {
      cardCopy[name] = card[name];
    }
  }
  return cardCopy;
}

/***/ }),

/***/ 65:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = __webpack_require__(60);

var _Base3 = _interopRequireDefault(_Base2);

var _Database = __webpack_require__(58);

var _Database2 = _interopRequireDefault(_Database);

var _Table = __webpack_require__(39);

var _Table2 = _interopRequireDefault(_Table);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _Segment = __webpack_require__(230);

var _Segment2 = _interopRequireDefault(_Segment);

var _Metric = __webpack_require__(231);

var _Metric2 = _interopRequireDefault(_Metric);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*  weak */

/**
 * Wrapper class for the entire metadata store
 */
var Metadata = function (_Base) {
  _inherits(Metadata, _Base);

  function Metadata() {
    _classCallCheck(this, Metadata);

    return _possibleConstructorReturn(this, (Metadata.__proto__ || Object.getPrototypeOf(Metadata)).apply(this, arguments));
  }

  _createClass(Metadata, [{
    key: "databasesList",
    value: function databasesList() {
      // $FlowFixMe
      return Object.values(this.databases);
    }
  }, {
    key: "tablesList",
    value: function tablesList() {
      // $FlowFixMe
      return Object.values(this.tables);
    }
  }, {
    key: "metricsList",
    value: function metricsList() {
      // $FlowFixMe
      return Object.values(this.metrics);
    }
  }, {
    key: "segmentsList",
    value: function segmentsList() {
      // $FlowFixMe
      return Object.values(this.segments);
    }
  }, {
    key: "segment",
    value: function segment(segmentId) {
      return segmentId != null && this.segments[segmentId] || null;
    }
  }, {
    key: "metric",
    value: function metric(metricId) {
      return metricId != null && this.metrics[metricId] || null;
    }
  }, {
    key: "database",
    value: function database(databaseId) {
      return databaseId != null && this.databases[databaseId] || null;
    }
  }, {
    key: "table",
    value: function table(tableId) {
      return tableId != null && this.tables[tableId] || null;
    }
  }, {
    key: "field",
    value: function field(fieldId) {
      return fieldId != null && this.fields[fieldId] || null;
    }
  }]);

  return Metadata;
}(_Base3.default);

exports.default = Metadata;

/***/ }),

/***/ 66:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AggregationDimension = exports.ExpressionDimension = exports.BinnedDimension = exports.DatetimeFieldDimension = exports.FKDimension = exports.FieldIDDimension = exports.FieldDimension = exports.default = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _formatting = __webpack_require__(8);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _util = __webpack_require__(27);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

var _Metadata = __webpack_require__(65);

var _Metadata2 = _interopRequireDefault(_Metadata);

var _query_time = __webpack_require__(92);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Dimension base class, represents an MBQL field reference.
 *
 * Used for displaying fields (like Created At) and their "sub-dimensions" (like Created At by Day)
 * in field lists and active value widgets for filters, aggregations and breakouts.
 *
 * @abstract
 */


/**
 * A dimension option returned by the query_metadata API
 */
var Dimension = function () {

  /**
   * Dimension constructor
   */


  // Display names provided by the backend
  function Dimension(parent, args, metadata) {
    _classCallCheck(this, Dimension);

    this._parent = parent;
    this._args = args;
    this._metadata = metadata || parent && parent._metadata;
  }

  /**
   * Parses an MBQL expression into an appropriate Dimension subclass, if possible.
   * Metadata should be provided if you intend to use the display name or render methods.
   */


  _createClass(Dimension, [{
    key: "dimensions",


    /**
     * Returns "sub-dimensions" of this dimension.
     * @abstract
     */
    // TODO Atte Keinänen 5/21/17: Rename either this or the static method with the same name
    // Also making it clear in the method name that we're working with sub-dimensions would be good
    value: function dimensions(DimensionTypes) {
      var _this = this;

      var dimensionOptions = this.field().dimension_options;
      if (!DimensionTypes && dimensionOptions) {
        return dimensionOptions.map(function (option) {
          return _this._dimensionForOption(option);
        });
      } else {
        var _ref;

        return (_ref = []).concat.apply(_ref, _toConsumableArray((DimensionTypes || []).map(function (DimensionType) {
          return DimensionType.dimensions(_this);
        })));
      }
    }

    /**
     * Returns the default sub-dimension of this dimension, if any.
     * @abstract
     */

  }, {
    key: "defaultDimension",
    value: function defaultDimension() {
      var DimensionTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DIMENSION_TYPES;

      var defaultDimensionOption = this.field().default_dimension_option;
      if (defaultDimensionOption) {
        return this._dimensionForOption(defaultDimensionOption);
      } else {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = DimensionTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var DimensionType = _step.value;

            var defaultDimension = DimensionType.defaultDimension(this);
            if (defaultDimension) {
              return defaultDimension;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      return null;
    }

    // Internal method gets a Dimension from a DimensionOption

  }, {
    key: "_dimensionForOption",
    value: function _dimensionForOption(option) {
      // fill in the parent field ref
      var fieldRef = this.baseDimension().mbql();
      var mbql = option.mbql;
      if (mbql) {
        mbql = [mbql[0], fieldRef].concat(_toConsumableArray(mbql.slice(2)));
      } else {
        mbql = fieldRef;
      }
      var dimension = Dimension.parseMBQL(mbql, this._metadata);
      if (option.name) {
        dimension._subDisplayName = option.name;
        dimension._subTriggerDisplayName = option.name;
      }
      return dimension;
    }

    /**
     * Is this dimension idential to another dimension or MBQL clause
     */

  }, {
    key: "isEqual",
    value: function isEqual(other) {
      if (other == null) {
        return false;
      }

      var otherDimension = other instanceof Dimension ? other : Dimension.parseMBQL(other, this._metadata);
      if (!otherDimension) {
        return false;
      }
      // must be instace of the same class
      if (this.constructor !== otherDimension.constructor) {
        return false;
      }
      // must both or neither have a parent
      if (!this._parent !== !otherDimension._parent) {
        return false;
      }
      // parents must be equal
      if (this._parent && !this._parent.isEqual(otherDimension._parent)) {
        return false;
      }
      // args must be equal
      if (!_underscore2.default.isEqual(this._args, otherDimension._args)) {
        return false;
      }
      return true;
    }

    /**
     * Does this dimension have the same underlying base dimension, typically a field
     */

  }, {
    key: "isSameBaseDimension",
    value: function isSameBaseDimension(other) {
      if (other == null) {
        return false;
      }

      var otherDimension = other instanceof Dimension ? other : Dimension.parseMBQL(other, this._metadata);

      var baseDimensionA = this.baseDimension();
      var baseDimensionB = otherDimension && otherDimension.baseDimension();

      return !!baseDimensionA && !!baseDimensionB && baseDimensionA.isEqual(baseDimensionB);
    }

    /**
     * The base dimension of this dimension, typically a field. May return itself.
     */

  }, {
    key: "baseDimension",
    value: function baseDimension() {
      return this;
    }

    /**
     * The underlying field for this dimension
     */

  }, {
    key: "field",
    value: function field() {
      return new _Field2.default();
    }

    /**
     * Valid operators on this dimension
     */

  }, {
    key: "operators",
    value: function operators() {
      return this.field().operators || [];
    }

    /**
     * The operator with the provided operator name (e.x. `=`, `<`, etc)
     */

  }, {
    key: "operator",
    value: function operator(op) {
      return this.field().operator(op);
    }

    /**
     * The display name of this dimension, e.x. the field's display_name
     * @abstract
     */

  }, {
    key: "displayName",
    value: function displayName() {
      return "";
    }

    /**
     * The name to be shown when this dimension is being displayed as a sub-dimension of another
     * @abstract
     */

  }, {
    key: "subDisplayName",
    value: function subDisplayName() {
      return this._subDisplayName || "";
    }

    /**
     * A shorter version of subDisplayName, e.x. to be shown in the dimension picker trigger
     * @abstract
     */

  }, {
    key: "subTriggerDisplayName",
    value: function subTriggerDisplayName() {
      return this._subTriggerDisplayName || "";
    }

    /**
     * An icon name representing this dimension's type, to be used in the <Icon> component.
     * @abstract
     */

  }, {
    key: "icon",
    value: function icon() {
      return null;
    }

    /**
     * Renders a dimension to React
     */

  }, {
    key: "render",
    value: function render() {
      return [this.displayName()];
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = DIMENSION_TYPES[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var D = _step2.value;

          var dimension = D.parseMBQL(mbql, metadata);
          if (dimension != null) {
            return dimension;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return null;
    }

    /**
     * Returns true if these two dimensions are identical to one another.
     */

  }, {
    key: "isEqual",
    value: function isEqual(a, b) {
      var dimensionA = a instanceof Dimension ? a : // $FlowFixMe
      Dimension.parseMBQL(a, this._metadata);
      var dimensionB = b instanceof Dimension ? b : // $FlowFixMe
      Dimension.parseMBQL(b, this._metadata);
      return !!dimensionA && !!dimensionB && dimensionA.isEqual(dimensionB);
    }

    /**
     * Sub-dimensions for the provided dimension of this type.
     * @abstract
     */
    // TODO Atte Keinänen 5/21/17: Rename either this or the instance method with the same name
    // Also making it clear in the method name that we're working with sub-dimensions would be good

  }, {
    key: "dimensions",
    value: function dimensions(parent) {
      return [];
    }

    /**
     * The default sub-dimension for the provided dimension of this type, if any.
     * @abstract
     */

  }, {
    key: "defaultDimension",
    value: function defaultDimension(parent) {
      return null;
    }
  }]);

  return Dimension;
}();

Dimension.displayName = "Dimension";
exports.default = Dimension;

/**
 * Field based dimension, abstract class for `field-id`, `fk->`, `datetime-field`, etc
 * @abstract
 */
var FieldDimension = exports.FieldDimension = function (_Dimension) {
  _inherits(FieldDimension, _Dimension);

  function FieldDimension() {
    _classCallCheck(this, FieldDimension);

    return _possibleConstructorReturn(this, (FieldDimension.__proto__ || Object.getPrototypeOf(FieldDimension)).apply(this, arguments));
  }

  _createClass(FieldDimension, [{
    key: "field",
    value: function field() {
      if (this._parent instanceof FieldDimension) {
        return this._parent.field();
      }
      return new _Field2.default();
    }
  }, {
    key: "displayName",
    value: function displayName() {
      return (0, _formatting.stripId)(_query2.default.getFieldPathName(this.field().id, this.field().table));
    }
  }, {
    key: "subDisplayName",
    value: function subDisplayName() {
      if (this._subDisplayName) {
        return this._subTriggerDisplayName;
      } else if (this._parent) {
        // TODO Atte Keinänen 8/1/17: Is this used at all?
        // foreign key, show the field name
        return this.field().display_name;
      } else {
        // TODO Atte Keinänen 8/1/17: Is this used at all?
        return "Default";
      }
    }
  }, {
    key: "subTriggerDisplayName",
    value: function subTriggerDisplayName() {
      if (this.defaultDimension() instanceof BinnedDimension) {
        return "Unbinned";
      } else {
        return "";
      }
    }
  }, {
    key: "icon",
    value: function icon() {
      return this.field().icon();
    }
  }]);

  return FieldDimension;
}(Dimension);

/**
 * Field ID-based dimension, `["field-id", field-id]`
 */


var FieldIDDimension = exports.FieldIDDimension = function (_FieldDimension) {
  _inherits(FieldIDDimension, _FieldDimension);

  function FieldIDDimension() {
    _classCallCheck(this, FieldIDDimension);

    return _possibleConstructorReturn(this, (FieldIDDimension.__proto__ || Object.getPrototypeOf(FieldIDDimension)).apply(this, arguments));
  }

  _createClass(FieldIDDimension, [{
    key: "mbql",
    value: function mbql() {
      return ["field-id", this._args[0]];
    }
  }, {
    key: "field",
    value: function field() {
      return this._metadata && this._metadata.fields[this._args[0]] || new _Field2.default();
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (typeof mbql === "number") {
        // DEPRECATED: bare field id
        return new FieldIDDimension(null, [mbql], metadata);
      } else if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "field-id")) {
        return new FieldIDDimension(null, mbql.slice(1), metadata);
      }
      return null;
    }
  }]);

  return FieldIDDimension;
}(FieldDimension);

/**
 * Foreign key-based dimension, `["fk->", fk-field-id, dest-field-id]`
 */


var FKDimension = exports.FKDimension = function (_FieldDimension2) {
  _inherits(FKDimension, _FieldDimension2);

  function FKDimension() {
    _classCallCheck(this, FKDimension);

    return _possibleConstructorReturn(this, (FKDimension.__proto__ || Object.getPrototypeOf(FKDimension)).apply(this, arguments));
  }

  _createClass(FKDimension, [{
    key: "mbql",
    value: function mbql() {
      // TODO: not sure `this._parent._args[0]` is the best way to handle this?
      // we don't want the `["field-id", ...]` wrapper from the `this._parent.mbql()`
      return ["fk->", this._parent._args[0], this._args[0]];
    }
  }, {
    key: "field",
    value: function field() {
      return this._metadata && this._metadata.fields[this._args[0]] || new _Field2.default();
    }
  }, {
    key: "render",
    value: function render() {
      return [(0, _formatting.stripId)(this._parent.field().display_name), _react2.default.createElement(_Icon2.default, { name: "connections", className: "px1", size: 10 }), this.field().display_name];
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "fk->")) {
        // $FlowFixMe
        var fkRef = mbql;
        var parent = Dimension.parseMBQL(fkRef[1], metadata);
        return new FKDimension(parent, fkRef.slice(2));
      }
      return null;
    }
  }, {
    key: "dimensions",
    value: function dimensions(parent) {
      if (parent instanceof FieldDimension) {
        var field = parent.field();
        if (field.target && field.target.table) {
          return field.target.table.fields.map(function (field) {
            return new FKDimension(parent, [field.id]);
          });
        }
      }
      return [];
    }
  }]);

  return FKDimension;
}(FieldDimension);

FKDimension.displayName = "FKDimension";


var isFieldDimension = function isFieldDimension(dimension) {
  return dimension instanceof FieldIDDimension || dimension instanceof FKDimension;
};

/**
 * DatetimeField dimension, `["datetime-field", field-reference, datetime-unit]`
 */

var DatetimeFieldDimension = exports.DatetimeFieldDimension = function (_FieldDimension3) {
  _inherits(DatetimeFieldDimension, _FieldDimension3);

  function DatetimeFieldDimension() {
    _classCallCheck(this, DatetimeFieldDimension);

    return _possibleConstructorReturn(this, (DatetimeFieldDimension.__proto__ || Object.getPrototypeOf(DatetimeFieldDimension)).apply(this, arguments));
  }

  _createClass(DatetimeFieldDimension, [{
    key: "mbql",
    value: function mbql() {
      return ["datetime-field", this._parent.mbql(), this._args[0]];
    }
  }, {
    key: "baseDimension",
    value: function baseDimension() {
      return this._parent.baseDimension();
    }
  }, {
    key: "bucketing",
    value: function bucketing() {
      return this._args[0];
    }
  }, {
    key: "subDisplayName",
    value: function subDisplayName() {
      return (0, _query_time.formatBucketing)(this._args[0]);
    }
  }, {
    key: "subTriggerDisplayName",
    value: function subTriggerDisplayName() {
      return "by " + (0, _query_time.formatBucketing)(this._args[0]).toLowerCase();
    }
  }, {
    key: "render",
    value: function render() {
      return [].concat(_toConsumableArray(_get(DatetimeFieldDimension.prototype.__proto__ || Object.getPrototypeOf(DatetimeFieldDimension.prototype), "render", this).call(this)), [": ", this.subDisplayName()]);
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "datetime-field")) {
        var parent = Dimension.parseMBQL(mbql[1], metadata);
        // DEPRECATED: ["datetime-field", id, "of", unit]
        if (mbql.length === 4) {
          return new DatetimeFieldDimension(parent, mbql.slice(3));
        } else {
          return new DatetimeFieldDimension(parent, mbql.slice(2));
        }
      }
      return null;
    }
  }, {
    key: "dimensions",
    value: function dimensions(parent) {
      if (isFieldDimension(parent) && parent.field().isDate()) {
        return _query_time.DATETIME_UNITS.map(function (unit) {
          return new DatetimeFieldDimension(parent, [unit]);
        });
      }
      return [];
    }
  }, {
    key: "defaultDimension",
    value: function defaultDimension(parent) {
      if (isFieldDimension(parent) && parent.field().isDate()) {
        return new DatetimeFieldDimension(parent, ["day"]);
      }
      return null;
    }
  }]);

  return DatetimeFieldDimension;
}(FieldDimension);

DatetimeFieldDimension.displayName = "DatetimeFieldDimension";

/**
 * Binned dimension, `["binning-strategy", field-reference, strategy, ...args]`
 */
var BinnedDimension = exports.BinnedDimension = function (_FieldDimension4) {
  _inherits(BinnedDimension, _FieldDimension4);

  function BinnedDimension() {
    _classCallCheck(this, BinnedDimension);

    return _possibleConstructorReturn(this, (BinnedDimension.__proto__ || Object.getPrototypeOf(BinnedDimension)).apply(this, arguments));
  }

  _createClass(BinnedDimension, [{
    key: "mbql",
    value: function mbql() {
      return ["binning-strategy", this._parent.mbql()].concat(_toConsumableArray(this._args));
    }
  }, {
    key: "baseDimension",
    value: function baseDimension() {
      return this._parent.baseDimension();
    }
  }, {
    key: "subTriggerDisplayName",
    value: function subTriggerDisplayName() {
      if (this._args[0] === "num-bins") {
        return this._args[1] + " " + (0, _formatting.inflect)("bins", this._args[1]);
      } else if (this._args[0] === "bin-width") {
        var binWidth = this._args[1];
        var units = this.field().isCoordinate() ? "°" : "";
        return "" + binWidth + units;
      } else {
        return "Auto binned";
      }
    }
  }, {
    key: "render",
    value: function render() {
      return [].concat(_toConsumableArray(_get(BinnedDimension.prototype.__proto__ || Object.getPrototypeOf(BinnedDimension.prototype), "render", this).call(this)), [": ", this.subTriggerDisplayName()]);
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "binning-strategy")) {
        var parent = Dimension.parseMBQL(mbql[1], metadata);
        return new BinnedDimension(parent, mbql.slice(2));
      }
      return null;
    }
  }, {
    key: "dimensions",
    value: function dimensions(parent) {
      // Subdimensions are are provided by the backend through the dimension_options field property
      return [];
    }
  }]);

  return BinnedDimension;
}(FieldDimension);

BinnedDimension.displayName = "BinnedDimension";

/**
 * Expression reference, `["expression", expression-name]`
 */
var ExpressionDimension = exports.ExpressionDimension = function (_Dimension2) {
  _inherits(ExpressionDimension, _Dimension2);

  function ExpressionDimension() {
    var _ref2;

    var _temp, _this7, _ret;

    _classCallCheck(this, ExpressionDimension);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this7 = _possibleConstructorReturn(this, (_ref2 = ExpressionDimension.__proto__ || Object.getPrototypeOf(ExpressionDimension)).call.apply(_ref2, [this].concat(args))), _this7), _this7.tag = "Custom", _temp), _possibleConstructorReturn(_this7, _ret);
  }

  _createClass(ExpressionDimension, [{
    key: "mbql",
    value: function mbql() {
      return ["expression", this._args[0]];
    }
  }, {
    key: "displayName",
    value: function displayName() {
      return this._args[0];
    }
  }, {
    key: "icon",
    value: function icon() {
      // TODO: eventually will need to get the type from the return type of the expression
      return "int";
    }
  }], [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "expression")) {
        return new ExpressionDimension(null, mbql.slice(1));
      }
    }
  }]);

  return ExpressionDimension;
}(Dimension);

/**
 * Aggregation reference, `["aggregation", aggregation-index]`
 */


var AggregationDimension = exports.AggregationDimension = function (_Dimension3) {
  _inherits(AggregationDimension, _Dimension3);

  _createClass(AggregationDimension, null, [{
    key: "parseMBQL",
    value: function parseMBQL(mbql, metadata) {
      if (Array.isArray(mbql) && (0, _util.mbqlEq)(mbql[0], "aggregation")) {
        return new AggregationDimension(null, mbql.slice(1));
      }
    }
  }]);

  function AggregationDimension(parent, args, metadata, displayName) {
    _classCallCheck(this, AggregationDimension);

    var _this8 = _possibleConstructorReturn(this, (AggregationDimension.__proto__ || Object.getPrototypeOf(AggregationDimension)).call(this, parent, args, metadata));

    _this8._displayName = displayName;
    return _this8;
  }

  _createClass(AggregationDimension, [{
    key: "displayName",
    value: function displayName() {
      return this._displayName;
    }
  }, {
    key: "aggregationIndex",
    value: function aggregationIndex() {
      return this._args[0];
    }
  }, {
    key: "mbql",
    value: function mbql() {
      return ["aggregation", this._args[0]];
    }
  }, {
    key: "icon",
    value: function icon() {
      return "int";
    }
  }]);

  return AggregationDimension;
}(Dimension);

var DIMENSION_TYPES = [FieldIDDimension, FKDimension, DatetimeFieldDimension, ExpressionDimension, BinnedDimension, AggregationDimension];

/***/ }),

/***/ 664:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 67:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = (_temp = _class = function (_Component) {
  _inherits(Input, _Component);

  function Input(props, context) {
    _classCallCheck(this, Input);

    var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props, context));

    _this.onBlur = _this.onBlur.bind(_this);
    _this.onChange = _this.onChange.bind(_this);
    _this.state = { value: props.value };
    return _this;
  }

  _createClass(Input, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      this.setState({ value: newProps.value });
    }
  }, {
    key: "onChange",
    value: function onChange(event) {
      this.setState({ value: event.target.value });
      if (this.props.onChange) {
        this.props.onChange(event);
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      if (this.props.onBlurChange && (this.props.value || "") !== event.target.value) {
        this.props.onBlurChange(event);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = _underscore2.default.omit(this.props, "onBlurChange", "value", "onBlur", "onChange");
      return _react2.default.createElement("input", _extends({}, props, {
        value: this.state.value,
        onBlur: this.onBlur,
        onChange: this.onChange
      }));
    }
  }]);

  return Input;
}(_react.Component), _class.propTypes = {
  type: _propTypes2.default.string,
  value: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  onBlurChange: _propTypes2.default.func
}, _class.defaultProps = {
  type: "text"
}, _temp);
Input.displayName = "Input";
exports.default = Input;

/***/ }),

/***/ 671:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 672:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var KEYCODE_BACKSPACE = exports.KEYCODE_BACKSPACE = 8;
var KEYCODE_TAB = exports.KEYCODE_TAB = 9;
var KEYCODE_ENTER = exports.KEYCODE_ENTER = 13;
var KEYCODE_ESCAPE = exports.KEYCODE_ESCAPE = 27;

var KEYCODE_LEFT = exports.KEYCODE_LEFT = 37;
var KEYCODE_UP = exports.KEYCODE_UP = 38;
var KEYCODE_RIGHT = exports.KEYCODE_RIGHT = 39;
var KEYCODE_DOWN = exports.KEYCODE_DOWN = 40;

var KEYCODE_COMMA = exports.KEYCODE_COMMA = 188;
var KEYCODE_FORWARD_SLASH = exports.KEYCODE_FORWARD_SLASH = 191;

/***/ }),

/***/ 70:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearExpression = exports.removeExpression = exports.updateExpression = exports.addExpression = exports.getExpressionsList = exports.getExpressions = exports.clearLimit = exports.updateLimit = exports.getLimit = exports.clearOrderBy = exports.removeOrderBy = exports.updateOrderBy = exports.addOrderBy = exports.getOrderBys = exports.canAddFilter = exports.clearFilters = exports.removeFilter = exports.updateFilter = exports.addFilter = exports.getFilters = exports.getBreakoutFields = exports.clearBreakouts = exports.removeBreakout = exports.updateBreakout = exports.addBreakout = exports.getBreakouts = exports.hasValidAggregation = exports.hasEmptyAggregation = exports.isBareRows = exports.clearAggregations = exports.removeAggregation = exports.updateAggregation = exports.addAggregation = exports.getAggregations = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _aggregation = __webpack_require__(386);

var A = _interopRequireWildcard(_aggregation);

var _breakout = __webpack_require__(387);

var B = _interopRequireWildcard(_breakout);

var _filter = __webpack_require__(91);

var F = _interopRequireWildcard(_filter);

var _limit = __webpack_require__(388);

var L = _interopRequireWildcard(_limit);

var _order_by = __webpack_require__(389);

var O = _interopRequireWildcard(_order_by);

var _expression = __webpack_require__(390);

var E = _interopRequireWildcard(_expression);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// AGGREGATION

var getAggregations = exports.getAggregations = function getAggregations(query) {
  return A.getAggregations(query.aggregation);
};
var addAggregation = exports.addAggregation = function addAggregation(query, aggregation) {
  return setAggregationClause(query, A.addAggregation(query.aggregation, aggregation));
};
var updateAggregation = exports.updateAggregation = function updateAggregation(query, index, aggregation) {
  return setAggregationClause(query, A.updateAggregation(query.aggregation, index, aggregation));
};
var removeAggregation = exports.removeAggregation = function removeAggregation(query, index) {
  return setAggregationClause(query, A.removeAggregation(query.aggregation, index));
};
var clearAggregations = exports.clearAggregations = function clearAggregations(query) {
  return setAggregationClause(query, A.clearAggregations(query.aggregation));
};

var isBareRows = exports.isBareRows = function isBareRows(query) {
  return A.isBareRows(query.aggregation);
};
var hasEmptyAggregation = exports.hasEmptyAggregation = function hasEmptyAggregation(query) {
  return A.hasEmptyAggregation(query.aggregation);
};
var hasValidAggregation = exports.hasValidAggregation = function hasValidAggregation(query) {
  return A.hasValidAggregation(query.aggregation);
};

// BREAKOUT

var getBreakouts = exports.getBreakouts = function getBreakouts(query) {
  return B.getBreakouts(query.breakout);
};
var addBreakout = exports.addBreakout = function addBreakout(query, breakout) {
  return setBreakoutClause(query, B.addBreakout(query.breakout, breakout));
};
var updateBreakout = exports.updateBreakout = function updateBreakout(query, index, breakout) {
  return setBreakoutClause(query, B.updateBreakout(query.breakout, index, breakout));
};
var removeBreakout = exports.removeBreakout = function removeBreakout(query, index) {
  return setBreakoutClause(query, B.removeBreakout(query.breakout, index));
};
var clearBreakouts = exports.clearBreakouts = function clearBreakouts(query) {
  return setBreakoutClause(query, B.clearBreakouts(query.breakout));
};

var getBreakoutFields = exports.getBreakoutFields = function getBreakoutFields(query, tableMetadata) {
  return B.getBreakoutFields(query.breakout, tableMetadata);
};

// FILTER

var getFilters = exports.getFilters = function getFilters(query) {
  return F.getFilters(query.filter);
};
var addFilter = exports.addFilter = function addFilter(query, filter) {
  return setFilterClause(query, F.addFilter(query.filter, filter));
};
var updateFilter = exports.updateFilter = function updateFilter(query, index, filter) {
  return setFilterClause(query, F.updateFilter(query.filter, index, filter));
};
var removeFilter = exports.removeFilter = function removeFilter(query, index) {
  return setFilterClause(query, F.removeFilter(query.filter, index));
};
var clearFilters = exports.clearFilters = function clearFilters(query) {
  return setFilterClause(query, F.clearFilters(query.filter));
};

var canAddFilter = exports.canAddFilter = function canAddFilter(query) {
  return F.canAddFilter(query.filter);
};

// ORDER_BY

var getOrderBys = exports.getOrderBys = function getOrderBys(query) {
  return O.getOrderBys(query.order_by);
};
var addOrderBy = exports.addOrderBy = function addOrderBy(query, order_by) {
  return setOrderByClause(query, O.addOrderBy(query.order_by, order_by));
};
var updateOrderBy = exports.updateOrderBy = function updateOrderBy(query, index, order_by) {
  return setOrderByClause(query, O.updateOrderBy(query.order_by, index, order_by));
};
var removeOrderBy = exports.removeOrderBy = function removeOrderBy(query, index) {
  return setOrderByClause(query, O.removeOrderBy(query.order_by, index));
};
var clearOrderBy = exports.clearOrderBy = function clearOrderBy(query) {
  return setOrderByClause(query, O.clearOrderBy(query.order_by));
};

// LIMIT

var getLimit = exports.getLimit = function getLimit(query) {
  return L.getLimit(query.limit);
};
var updateLimit = exports.updateLimit = function updateLimit(query, limit) {
  return setLimitClause(query, L.updateLimit(query.limit, limit));
};
var clearLimit = exports.clearLimit = function clearLimit(query) {
  return setLimitClause(query, L.clearLimit(query.limit));
};

// EXPRESSIONS

var getExpressions = exports.getExpressions = function getExpressions(query) {
  return E.getExpressions(query.expressions);
};
var getExpressionsList = exports.getExpressionsList = function getExpressionsList(query) {
  return E.getExpressionsList(query.expressions);
};
var addExpression = exports.addExpression = function addExpression(query, name, expression) {
  return setExpressionClause(query, E.addExpression(query.expressions, name, expression));
};
var updateExpression = exports.updateExpression = function updateExpression(query, name, expression, oldName) {
  return setExpressionClause(query, E.updateExpression(query.expressions, name, expression, oldName));
};
var removeExpression = exports.removeExpression = function removeExpression(query, name) {
  return setExpressionClause(query, E.removeExpression(query.expressions, name));
};
var clearExpression = exports.clearExpression = function clearExpression(query) {
  return setExpressionClause(query, E.clearExpressions(query.expressions));
};

// we can enforce various constraints in these functions:

function setAggregationClause(query, aggregationClause) {
  var wasBareRows = A.isBareRows(query.aggregation);
  var isBareRows = A.isBareRows(aggregationClause);
  // when switching to or from bare rows clear out any sorting clauses
  if (isBareRows !== wasBareRows) {
    clearOrderBy(query);
  }
  // for bare rows we always clear out any dimensions because they don't make sense
  if (isBareRows) {
    clearBreakouts(query);
  }
  return setClause("aggregation", query, aggregationClause);
}
function setBreakoutClause(query, breakoutClause) {
  var breakoutIds = B.getBreakouts(breakoutClause).filter(function (id) {
    return id != null;
  });
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = getOrderBys(query).entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = _slicedToArray(_step.value, 2),
          index = _step$value[0],
          sort = _step$value[1];

      var sortId = _query2.default.getFieldTargetId(sort[0]);
      if (sortId != null && !_underscore2.default.contains(breakoutIds, sortId)) {
        query = removeOrderBy(query, index);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return setClause("breakout", query, breakoutClause);
}
function setFilterClause(query, filterClause) {
  return setClause("filter", query, filterClause);
}
function setOrderByClause(query, orderByClause) {
  return setClause("order_by", query, orderByClause);
}
function setLimitClause(query, limitClause) {
  return setClause("limit", query, limitClause);
}
function setExpressionClause(query, expressionClause) {
  if (expressionClause && Object.keys(expressionClause).length === 0) {
    expressionClause = null;
  }
  return setClause("expressions", query, expressionClause);
}

function setClause(clauseName, query, clause) {
  query = _extends({}, query);
  if (clause == null) {
    delete query[clauseName];
  } else {
    query[clauseName] = clause;
  }
  return query;
}

/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseTimestamp = parseTimestamp;
exports.parseTime = parseTime;

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NUMERIC_UNIT_FORMATS = {
  // workaround for https://github.com/metabase/metabase/issues/1992
  year: function year(value) {
    return (0, _moment2.default)().year(value).startOf("year");
  },
  "minute-of-hour": function minuteOfHour(value) {
    return (0, _moment2.default)().minute(value).startOf("minute");
  },
  "hour-of-day": function hourOfDay(value) {
    return (0, _moment2.default)().hour(value).startOf("hour");
  },
  "day-of-week": function dayOfWeek(value) {
    return (0, _moment2.default)().day(value - 1).startOf("day");
  },
  "day-of-month": function dayOfMonth(value) {
    return (0, _moment2.default)("2016-01-01") // initial date must be in month with 31 days to format properly
    .date(value).startOf("day");
  },
  "day-of-year": function dayOfYear(value) {
    return (0, _moment2.default)("2016-01-01") // initial date must be in leap year to format properly
    .dayOfYear(value).startOf("day");
  },
  "week-of-year": function weekOfYear(value) {
    return (0, _moment2.default)().week(value).startOf("week");
  },
  "month-of-year": function monthOfYear(value) {
    return (0, _moment2.default)().month(value - 1).startOf("month");
  },
  "quarter-of-year": function quarterOfYear(value) {
    return (0, _moment2.default)().quarter(value).startOf("quarter");
  }
};

// only attempt to parse the timezone if we're sure we have one (either Z or ±hh:mm or +-hhmm)
// moment normally interprets the DD in YYYY-MM-DD as an offset :-/
function parseTimestamp(value, unit) {
  if (_moment2.default.isMoment(value)) {
    return value;
  } else if (typeof value === "string" && /(Z|[+-]\d\d:?\d\d)$/.test(value)) {
    return _moment2.default.parseZone(value);
  } else if (unit in NUMERIC_UNIT_FORMATS) {
    return NUMERIC_UNIT_FORMATS[unit](value);
  } else {
    return _moment2.default.utc(value);
  }
}

function parseTime(value) {
  if (_moment2.default.isMoment(value)) {
    return value;
  } else if (typeof value === "string") {
    return (0, _moment2.default)(value, ["HH:mm:SS.sssZZ", "HH:mm:SS.sss", "HH:mm:SS.sss", "HH:mm:SS", "HH:mm"]);
  } else {
    return _moment2.default.utc(value);
  }
}

/***/ }),

/***/ 74:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

__webpack_require__(425);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingSpinner = (_temp = _class = function (_Component) {
  _inherits(LoadingSpinner, _Component);

  function LoadingSpinner() {
    _classCallCheck(this, LoadingSpinner);

    return _possibleConstructorReturn(this, (LoadingSpinner.__proto__ || Object.getPrototypeOf(LoadingSpinner)).apply(this, arguments));
  }

  _createClass(LoadingSpinner, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          size = _props.size,
          borderWidth = _props.borderWidth,
          className = _props.className,
          spinnerClassName = _props.spinnerClassName;

      return _react2.default.createElement(
        "div",
        { className: className },
        _react2.default.createElement("div", {
          className: spinnerClassName,
          style: { width: size, height: size, borderWidth: borderWidth }
        })
      );
    }
  }]);

  return LoadingSpinner;
}(_react.Component), _class.defaultProps = {
  size: 32,
  borderWidth: 4,
  fill: "currentcolor",
  spinnerClassName: "LoadingSpinner"
}, _temp);
LoadingSpinner.displayName = "LoadingSpinner";
exports.default = LoadingSpinner;

/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartSettingsError = exports.LatitudeLongitudeError = exports.MinRowsError = exports.MinColumnsError = undefined;

var _templateObject = _taggedTemplateLiteral(["Doh! The data from your query doesn't fit the chosen display choice. This visualization requires at least ", " ", " of data."], ["Doh! The data from your query doesn't fit the chosen display choice. This visualization requires at least ", " ", " of data."]),
    _templateObject2 = _taggedTemplateLiteral(["No dice. We have ", " data ", " to show and that's not enough for this visualization."], ["No dice. We have ", " data ", " to show and that's not enough for this visualization."]),
    _templateObject3 = _taggedTemplateLiteral(["Bummer. We can't actually do a pin map for this data because we require both a latitude and longitude column."], ["Bummer. We can't actually do a pin map for this data because we require both a latitude and longitude column."]),
    _templateObject4 = _taggedTemplateLiteral(["Please configure this chart in the chart settings"], ["Please configure this chart in the chart settings"]),
    _templateObject5 = _taggedTemplateLiteral(["Edit Settings"], ["Edit Settings"]);

var _formatting = __webpack_require__(8);

var _c3po = __webpack_require__(2);

function _extendableBuiltin7(cls) {
  function ExtendableBuiltin() {
    var instance = Reflect.construct(cls, Array.from(arguments));
    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    return instance;
  }

  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
    constructor: {
      value: cls,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ExtendableBuiltin, cls);
  } else {
    ExtendableBuiltin.__proto__ = cls;
  }

  return ExtendableBuiltin;
}

function _extendableBuiltin5(cls) {
  function ExtendableBuiltin() {
    var instance = Reflect.construct(cls, Array.from(arguments));
    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    return instance;
  }

  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
    constructor: {
      value: cls,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ExtendableBuiltin, cls);
  } else {
    ExtendableBuiltin.__proto__ = cls;
  }

  return ExtendableBuiltin;
}

function _extendableBuiltin3(cls) {
  function ExtendableBuiltin() {
    var instance = Reflect.construct(cls, Array.from(arguments));
    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    return instance;
  }

  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
    constructor: {
      value: cls,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ExtendableBuiltin, cls);
  } else {
    ExtendableBuiltin.__proto__ = cls;
  }

  return ExtendableBuiltin;
}

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _extendableBuiltin(cls) {
  function ExtendableBuiltin() {
    var instance = Reflect.construct(cls, Array.from(arguments));
    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    return instance;
  }

  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
    constructor: {
      value: cls,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ExtendableBuiltin, cls);
  } else {
    ExtendableBuiltin.__proto__ = cls;
  }

  return ExtendableBuiltin;
}

// NOTE: extending Error with Babel requires babel-plugin-transform-builtin-extend

var MinColumnsError = exports.MinColumnsError = function (_extendableBuiltin2) {
  _inherits(MinColumnsError, _extendableBuiltin2);

  function MinColumnsError(minColumns, actualColumns) {
    _classCallCheck(this, MinColumnsError);

    return _possibleConstructorReturn(this, (MinColumnsError.__proto__ || Object.getPrototypeOf(MinColumnsError)).call(this, (0, _c3po.t)(_templateObject, actualColumns, (0, _formatting.inflect)("column", actualColumns))));
  }

  return MinColumnsError;
}(_extendableBuiltin(Error));

var MinRowsError = exports.MinRowsError = function (_extendableBuiltin4) {
  _inherits(MinRowsError, _extendableBuiltin4);

  function MinRowsError(minRows, actualRows) {
    _classCallCheck(this, MinRowsError);

    return _possibleConstructorReturn(this, (MinRowsError.__proto__ || Object.getPrototypeOf(MinRowsError)).call(this, (0, _c3po.t)(_templateObject2, actualRows, (0, _formatting.inflect)("point", actualRows))));
  }

  return MinRowsError;
}(_extendableBuiltin3(Error));

var LatitudeLongitudeError = exports.LatitudeLongitudeError = function (_extendableBuiltin6) {
  _inherits(LatitudeLongitudeError, _extendableBuiltin6);

  function LatitudeLongitudeError() {
    _classCallCheck(this, LatitudeLongitudeError);

    return _possibleConstructorReturn(this, (LatitudeLongitudeError.__proto__ || Object.getPrototypeOf(LatitudeLongitudeError)).call(this, (0, _c3po.t)(_templateObject3)));
  }

  return LatitudeLongitudeError;
}(_extendableBuiltin5(Error));

var ChartSettingsError = exports.ChartSettingsError = function (_extendableBuiltin8) {
  _inherits(ChartSettingsError, _extendableBuiltin8);

  function ChartSettingsError(message, section, buttonText) {
    _classCallCheck(this, ChartSettingsError);

    var _this4 = _possibleConstructorReturn(this, (ChartSettingsError.__proto__ || Object.getPrototypeOf(ChartSettingsError)).call(this, message || (0, _c3po.t)(_templateObject4)));

    _this4.section = section;
    _this4.buttonText = buttonText || (0, _c3po.t)(_templateObject5);
    return _this4;
  }

  return ChartSettingsError;
}(_extendableBuiltin7(Error));

/***/ }),

/***/ 78:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ERROR_MESSAGE_PERMISSION = exports.ERROR_MESSAGE_GENERIC = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _class2, _temp; /*  weak */

var _templateObject = _taggedTemplateLiteral(["Data truncated to ", " rows."], ["Data truncated to ", " rows."]),
    _templateObject2 = _taggedTemplateLiteral(["Could not find visualization"], ["Could not find visualization"]),
    _templateObject3 = _taggedTemplateLiteral(["Could not display this chart with this data."], ["Could not display this chart with this data."]),
    _templateObject4 = _taggedTemplateLiteral(["No results!"], ["No results!"]),
    _templateObject5 = _taggedTemplateLiteral(["Still Waiting..."], ["Still Waiting..."]),
    _templateObject6 = _taggedTemplateLiteral(["This usually takes an average of ", "."], ["This usually takes an average of ", "."]),
    _templateObject7 = _taggedTemplateLiteral(["(This is a bit long for a dashboard)"], ["(This is a bit long for a dashboard)"]),
    _templateObject8 = _taggedTemplateLiteral(["This is usually pretty fast but seems to be taking awhile right now."], ["This is usually pretty fast but seems to be taking awhile right now."]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ExplicitSize = __webpack_require__(59);

var _ExplicitSize2 = _interopRequireDefault(_ExplicitSize);

var _LegendHeader = __webpack_require__(142);

var _LegendHeader2 = _interopRequireDefault(_LegendHeader);

var _ChartTooltip = __webpack_require__(252);

var _ChartTooltip2 = _interopRequireDefault(_ChartTooltip);

var _ChartClickActions = __webpack_require__(451);

var _ChartClickActions2 = _interopRequireDefault(_ChartClickActions);

var _LoadingSpinner = __webpack_require__(74);

var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _c3po = __webpack_require__(2);

var _formatting = __webpack_require__(8);

var _analytics = __webpack_require__(12);

var _analytics2 = _interopRequireDefault(_analytics);

var _visualizations = __webpack_require__(53);

var _settings = __webpack_require__(45);

var _utils = __webpack_require__(21);

var _utils2 = __webpack_require__(25);

var _utils3 = _interopRequireDefault(_utils2);

var _dataset = __webpack_require__(84);

var _errors = __webpack_require__(75);

var _icepick = __webpack_require__(14);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Question = __webpack_require__(43);

var _Question2 = _interopRequireDefault(_Question);

var _Metadata = __webpack_require__(65);

var _Metadata2 = _interopRequireDefault(_Metadata);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ERROR_MESSAGE_GENERIC = exports.ERROR_MESSAGE_GENERIC = "There was a problem displaying this chart.";
var ERROR_MESSAGE_PERMISSION = exports.ERROR_MESSAGE_PERMISSION = "Sorry, you don't have permission to see this card.";

var Visualization = (0, _ExplicitSize2.default)(_class = (_temp = _class2 = function (_Component) {
  _inherits(Visualization, _Component);

  function Visualization(props) {
    _classCallCheck(this, Visualization);

    var _this = _possibleConstructorReturn(this, (Visualization.__proto__ || Object.getPrototypeOf(Visualization)).call(this, props));

    _this.handleHoverChange = function (hovered) {
      if (hovered) {
        var _yAxisSplit = _this.state.yAxisSplit;
        // if we have Y axis split info then find the Y axis index (0 = left, 1 = right)

        if (_yAxisSplit) {
          var axisIndex = _underscore2.default.findIndex(_yAxisSplit, function (indexes) {
            return _underscore2.default.contains(indexes, hovered.index);
          });
          hovered = (0, _icepick.assoc)(hovered, "axisIndex", axisIndex);
        }
        _this.setState({ hovered: hovered });
        // If we previously set a timeout for clearing the hover clear it now since we received
        // a new hover.
        if (_this._resetHoverTimer !== null) {
          clearTimeout(_this._resetHoverTimer);
          _this._resetHoverTimer = null;
        }
      } else {
        // When reseting the hover wait in case we're simply transitioning from one
        // element to another. This allows visualizations to use mouseleave events etc.
        _this._resetHoverTimer = setTimeout(function () {
          _this.setState({ hovered: null });
          _this._resetHoverTimer = null;
        }, 0);
      }
    };

    _this.visualizationIsClickable = function (clicked) {
      var onChangeCardAndRun = _this.props.onChangeCardAndRun;

      if (!onChangeCardAndRun) {
        return false;
      }
      try {
        return _this.getClickActions(clicked).length > 0;
      } catch (e) {
        console.warn(e);
        return false;
      }
    };

    _this.handleVisualizationClick = function (clicked) {
      if (clicked) {
        _analytics2.default.trackEvent("Actions", "Clicked", (clicked.column ? "column" : "") + " " + (clicked.value ? "value" : "") + " " + (clicked.dimensions ? "dimensions=" + clicked.dimensions.length : ""));
      }

      // needs to be delayed so we don't clear it when switching from one drill through to another
      setTimeout(function () {
        _this.setState({ clicked: clicked });
      }, 100);
    };

    _this.handleOnChangeCardAndRun = function (_ref) {
      var nextCard = _ref.nextCard,
          seriesIndex = _ref.seriesIndex;
      var _this$state = _this.state,
          series = _this$state.series,
          clicked = _this$state.clicked;


      var index = seriesIndex || clicked && clicked.seriesIndex || 0;
      var previousCard = series && series[index] && series[index].card;

      _this.props.onChangeCardAndRun({ nextCard: nextCard, previousCard: previousCard });
    };

    _this.onRender = function () {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          yAxisSplit = _ref2.yAxisSplit,
          _ref2$warnings = _ref2.warnings,
          warnings = _ref2$warnings === undefined ? [] : _ref2$warnings;

      _this.setState({ yAxisSplit: yAxisSplit, warnings: warnings });
    };

    _this.onRenderError = function (error) {
      _this.setState({ error: error });
    };

    _this.hideActions = function () {
      _this.setState({ clicked: null });
    };

    _this.state = {
      hovered: null,
      clicked: null,
      error: null,
      warnings: [],
      yAxisSplit: null,
      series: null,
      CardVisualization: null
    };
    return _this;
  }

  _createClass(Visualization, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.transform(this.props);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      if (!(0, _utils.isSameSeries)(newProps.rawSeries, this.props.rawSeries) || !_utils3.default.equals(newProps.settings, this.props.settings)) {
        this.transform(newProps);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateWarnings();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (!_utils3.default.equals(this.getWarnings(prevProps, prevState), this.getWarnings())) {
        this.updateWarnings();
      }
    }
  }, {
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      console.error("Error caught in <Visualization>", error, info);
      this.setState({
        error: new Error("An error occurred displaying this visualization.")
      });
    }

    // $FlowFixMe

  }, {
    key: "getWarnings",
    value: function getWarnings() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;

      var warnings = state.warnings || [];
      // don't warn about truncated data for table since we show a warning in the row count
      if (state.series[0].card.display !== "table") {
        warnings = warnings.concat(props.rawSeries.filter(function (s) {
          return s.data && s.data.rows_truncated != null;
        }).map(function (s) {
          return (0, _c3po.t)(_templateObject, (0, _formatting.formatNumber)(s.data.rows_truncated));
        }));
      }
      return warnings;
    }
  }, {
    key: "updateWarnings",
    value: function updateWarnings() {
      if (this.props.onUpdateWarnings) {
        this.props.onUpdateWarnings(this.getWarnings() || []);
      }
    }
  }, {
    key: "transform",
    value: function transform(newProps) {
      this.setState(_extends({
        hovered: null,
        clicked: null,
        error: null,
        warnings: [],
        yAxisSplit: null
      }, (0, _visualizations.getVisualizationTransformed)((0, _visualizations.extractRemappings)(newProps.rawSeries))));
    }
  }, {
    key: "getClickActions",
    value: function getClickActions(clicked) {
      if (!clicked) {
        return [];
      }
      // TODO: push this logic into Question?
      var _props = this.props,
          rawSeries = _props.rawSeries,
          metadata = _props.metadata;

      var seriesIndex = clicked.seriesIndex || 0;
      var card = rawSeries[seriesIndex].card;
      var question = new _Question2.default(metadata, card);
      var mode = question.mode();
      return mode ? mode.actionsForClick(clicked, {}) : [];
    }

    // Add the underlying card of current series to onChangeCardAndRun if available

  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          actionButtons = _props2.actionButtons,
          className = _props2.className,
          showTitle = _props2.showTitle,
          isDashboard = _props2.isDashboard,
          width = _props2.width,
          height = _props2.height,
          errorIcon = _props2.errorIcon,
          isSlow = _props2.isSlow,
          expectedDuration = _props2.expectedDuration,
          replacementContent = _props2.replacementContent;
      var _state = this.state,
          series = _state.series,
          CardVisualization = _state.CardVisualization;

      var small = width < 330;

      var _state2 = this.state,
          hovered = _state2.hovered,
          clicked = _state2.clicked;


      var clickActions = this.getClickActions(clicked);
      if (clickActions.length > 0) {
        hovered = null;
      }

      var error = this.props.error || this.state.error;
      var loading = !(series && series.length > 0 && _underscore2.default.every(series, function (s) {
        return s.data || _underscore2.default.isObject(s.card.visualization_settings.virtual_card);
      }));
      var noResults = false;

      // don't try to load settings unless data is loaded
      var settings = this.props.settings || {};

      if (!loading && !error) {
        settings = this.props.settings || (0, _settings.getSettings)(series);
        if (!CardVisualization) {
          error = (0, _c3po.t)(_templateObject2);
        } else {
          try {
            if (CardVisualization.checkRenderable) {
              CardVisualization.checkRenderable(series, settings);
            }
          } catch (e) {
            error = e.message || (0, _c3po.t)(_templateObject3);
            if (e instanceof _errors.ChartSettingsError && this.props.onOpenChartSettings) {
              error = _react2.default.createElement(
                "div",
                null,
                _react2.default.createElement(
                  "div",
                  null,
                  error
                ),
                _react2.default.createElement(
                  "div",
                  { className: "mt2" },
                  _react2.default.createElement(
                    "button",
                    {
                      className: "Button Button--primary Button--medium",
                      onClick: this.props.onOpenChartSettings
                    },
                    e.buttonText
                  )
                )
              );
            } else if (e instanceof _errors.MinRowsError) {
              noResults = true;
            }
          }
        }
      }

      if (!error) {
        noResults = _underscore2.default.every(
        // $FlowFixMe
        series, function (s) {
          return s && s.data && (0, _dataset.datasetContainsNoResults)(s.data);
        });
      }

      var extra = _react2.default.createElement(
        "span",
        { className: "flex align-center" },
        isSlow && !loading && _react2.default.createElement(_LoadingSpinner2.default, {
          size: 18,
          className: (0, _classnames2.default)("Visualization-slow-spinner", isSlow === "usually-slow" ? "text-gold" : "text-slate")
        }),
        actionButtons
      );

      var _props3 = this.props,
          gridSize = _props3.gridSize,
          gridUnit = _props3.gridUnit;

      if (!gridSize && gridUnit) {
        gridSize = {
          width: Math.round(width / (gridUnit * 4)),
          height: Math.round(height / (gridUnit * 3))
        };
      }

      return _react2.default.createElement(
        "div",
        { className: (0, _classnames2.default)(className, "flex flex-column") },
        showTitle && (settings["card.title"] || extra) && (loading || error || noResults || !(CardVisualization && CardVisualization.noHeader)) || replacementContent ? _react2.default.createElement(
          "div",
          { className: "p1 flex-no-shrink" },
          _react2.default.createElement(_LegendHeader2.default, {
            series: settings["card.title"] ? // if we have a card title set, use it
            // $FlowFixMe
            (0, _icepick.setIn)(series, [0, "card", "name"], settings["card.title"]) : // otherwise use the original series
            series,
            actionButtons: extra,
            description: settings["card.description"],
            settings: settings,
            onChangeCardAndRun: this.props.onChangeCardAndRun ? this.handleOnChangeCardAndRun : null
          })
        ) : null,
        replacementContent ? replacementContent : // on dashboards we should show the "No results!" warning if there are no rows or there's a MinRowsError and actualRows === 0
        isDashboard && noResults ? _react2.default.createElement(
          "div",
          {
            className: "flex-full px1 pb1 text-centered flex flex-column layout-centered " + (isDashboard ? "text-slate-light" : "text-slate")
          },
          _react2.default.createElement(
            _Tooltip2.default,
            { tooltip: (0, _c3po.t)(_templateObject4), isEnabled: small },
            _react2.default.createElement("img", { src: "../app/assets/img/no_results.svg" })
          ),
          !small && _react2.default.createElement(
            "span",
            { className: "h4 text-bold" },
            "No results!"
          )
        ) : error ? _react2.default.createElement(
          "div",
          {
            className: "flex-full px1 pb1 text-centered flex flex-column layout-centered " + (isDashboard ? "text-slate-light" : "text-slate")
          },
          _react2.default.createElement(
            _Tooltip2.default,
            { tooltip: error, isEnabled: small },
            _react2.default.createElement(_Icon2.default, { className: "mb2", name: errorIcon || "warning", size: 50 })
          ),
          !small && _react2.default.createElement(
            "span",
            { className: "h4 text-bold" },
            error
          )
        ) : loading ? _react2.default.createElement(
          "div",
          { className: "flex-full p1 text-centered text-brand flex flex-column layout-centered" },
          isSlow ? _react2.default.createElement(
            "div",
            { className: "text-slate" },
            _react2.default.createElement(
              "div",
              { className: "h4 text-bold mb1" },
              (0, _c3po.t)(_templateObject5)
            ),
            isSlow === "usually-slow" ? _react2.default.createElement(
              "div",
              null,
              (0, _c3po.jt)(_templateObject6, _react2.default.createElement(
                "span",
                { style: { whiteSpace: "nowrap" } },
                (0, _formatting.duration)(expectedDuration)
              )),
              _react2.default.createElement("br", null),
              (0, _c3po.t)(_templateObject7)
            ) : _react2.default.createElement(
              "div",
              null,
              (0, _c3po.t)(_templateObject8)
            )
          ) : _react2.default.createElement(_LoadingSpinner2.default, { className: "text-slate" })
        ) :
        // $FlowFixMe
        _react2.default.createElement(CardVisualization, _extends({}, this.props, {
          className: "flex-full",
          series: series,
          settings: settings
          // $FlowFixMe
          , card: series[0].card // convenience for single-series visualizations
          // $FlowFixMe
          , data: series[0].data // convenience for single-series visualizations
          , hovered: hovered,
          onHoverChange: this.handleHoverChange,
          onVisualizationClick: this.handleVisualizationClick,
          visualizationIsClickable: this.visualizationIsClickable,
          onRenderError: this.onRenderError,
          onRender: this.onRender,
          onActionDismissal: this.hideActions,
          gridSize: gridSize,
          onChangeCardAndRun: this.props.onChangeCardAndRun ? this.handleOnChangeCardAndRun : null
        })),
        _react2.default.createElement(_ChartTooltip2.default, { series: series, hovered: hovered }),
        this.props.onChangeCardAndRun && _react2.default.createElement(_ChartClickActions2.default, {
          clicked: clicked,
          clickActions: clickActions,
          onChangeCardAndRun: this.handleOnChangeCardAndRun,
          onClose: this.hideActions
        })
      );
    }
  }]);

  return Visualization;
}(_react.Component), _class2.defaultProps = {
  className: "full-height",
  showTitle: false,
  isDashboard: false,
  isEditing: false,
  onUpdateVisualizationSettings: function onUpdateVisualizationSettings() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return console.warn("onUpdateVisualizationSettings", args);
  }
}, _temp)) || _class;

Visualization.displayName = "Visualization";
exports.default = Visualization;

/***/ }),

/***/ 783:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(7);

var _PublicNotFound = __webpack_require__(548);

var _PublicNotFound2 = _interopRequireDefault(_PublicNotFound);

var _PublicError = __webpack_require__(784);

var _PublicError2 = _interopRequireDefault(_PublicError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mapStateToProps = function mapStateToProps(state, props) {
  return {
    errorPage: state.app.errorPage
  };
};

var PublicApp = (_dec = (0, _reactRedux.connect)(mapStateToProps), _dec(_class = function (_Component) {
  _inherits(PublicApp, _Component);

  function PublicApp() {
    _classCallCheck(this, PublicApp);

    return _possibleConstructorReturn(this, (PublicApp.__proto__ || Object.getPrototypeOf(PublicApp)).apply(this, arguments));
  }

  _createClass(PublicApp, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          errorPage = _props.errorPage;

      if (errorPage) {
        if (errorPage.status === 404) {
          return _react2.default.createElement(_PublicNotFound2.default, null);
        } else {
          return _react2.default.createElement(_PublicError2.default, null);
        }
      } else {
        return children;
      }
    }
  }]);

  return PublicApp;
}(_react.Component)) || _class);
PublicApp.displayName = "PublicApp";
exports.default = PublicApp;

/***/ }),

/***/ 784:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(["An error occurred"], ["An error occurred"]);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _c3po = __webpack_require__(2);

var _reactRedux = __webpack_require__(7);

var _app = __webpack_require__(785);

var _EmbedFrame = __webpack_require__(170);

var _EmbedFrame2 = _interopRequireDefault(_EmbedFrame);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var mapStateToProps = function mapStateToProps(state, props) {
  return {
    message: (0, _app.getErrorMessage)(state, props)
  };
};

var PublicError = function PublicError(_ref) {
  var _ref$message = _ref.message,
      message = _ref$message === undefined ? (0, _c3po.t)(_templateObject) : _ref$message;
  return _react2.default.createElement(
    _EmbedFrame2.default,
    { className: "spread" },
    _react2.default.createElement(
      "div",
      { className: "flex layout-centered flex-full flex-column" },
      _react2.default.createElement("div", { className: "QueryError-image QueryError-image--noRows" }),
      _react2.default.createElement(
        "div",
        { className: "mt1 h4 sm-h3 md-h2 text-bold" },
        message
      )
    )
  );
};

PublicError.displayName = "PublicError";
exports.default = (0, _reactRedux.connect)(mapStateToProps)(PublicError);

/***/ }),

/***/ 785:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var getErrorMessage = exports.getErrorMessage = function getErrorMessage(state) {
  return state.app.errorPage && state.app.errorPage.data && (state.app.errorPage.data.message || state.app.errorPage.data);
};

/***/ }),

/***/ 786:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// Reducers needed for public questions and dashboards

var _reducersCommon = __webpack_require__(547);

var _reducersCommon2 = _interopRequireDefault(_reducersCommon);

var _dashboard = __webpack_require__(124);

var _dashboard2 = _interopRequireDefault(_dashboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _extends({}, _reducersCommon2.default, {
  dashboard: _dashboard2.default
});

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.formatNumber = formatNumber;
exports.formatCoordinate = formatCoordinate;
exports.formatRange = formatRange;
exports.formatTimeRangeWithUnit = formatTimeRangeWithUnit;
exports.formatTimeWithUnit = formatTimeWithUnit;
exports.formatTimeValue = formatTimeValue;
exports.formatEmail = formatEmail;
exports.formatUrl = formatUrl;
exports.formatValue = formatValue;
exports.formatColumn = formatColumn;
exports.formatField = formatField;
exports.singularize = singularize;
exports.pluralize = pluralize;
exports.capitalize = capitalize;
exports.inflect = inflect;
exports.titleize = titleize;
exports.humanize = humanize;
exports.duration = duration;
exports.stripId = stripId;
exports.slugify = slugify;
exports.assignUserColors = assignUserColors;
exports.formatSQL = formatSQL;

var _d = __webpack_require__(26);

var _d2 = _interopRequireDefault(_d);

var _inflection = __webpack_require__(83);

var _inflection2 = _interopRequireDefault(_inflection);

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _humanizePlus = __webpack_require__(195);

var _humanizePlus2 = _interopRequireDefault(_humanizePlus);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ExternalLink = __webpack_require__(292);

var _ExternalLink2 = _interopRequireDefault(_ExternalLink);

var _schema_metadata = __webpack_require__(10);

var _types = __webpack_require__(42);

var _time = __webpack_require__(73);

var _dataset = __webpack_require__(84);

var _utils = __webpack_require__(21);

var _numeric = __webpack_require__(131);

var _Field = __webpack_require__(50);

var _Field2 = _interopRequireDefault(_Field);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_NUMBER_OPTIONS = {
  comma: true,
  compact: false,
  round: true
};

var PRECISION_NUMBER_FORMATTER = _d2.default.format(".2r");
var FIXED_NUMBER_FORMATTER = _d2.default.format(",.f");
var FIXED_NUMBER_FORMATTER_NO_COMMA = _d2.default.format(".f");
var DECIMAL_DEGREES_FORMATTER = _d2.default.format(".08f");
var DECIMAL_DEGREES_FORMATTER_COMPACT = _d2.default.format(".02f");
var BINNING_DEGREES_FORMATTER = function BINNING_DEGREES_FORMATTER(value, binWidth) {
  return _d2.default.format(".0" + (0, _numeric.decimalCount)(binWidth) + "f")(value);
};

var getMonthFormat = function getMonthFormat(options) {
  return options.compact ? "MMM" : "MMMM";
};
var getDayFormat = function getDayFormat(options) {
  return options.compact ? "ddd" : "dddd";
};

// use en dashes, for Maz
var RANGE_SEPARATOR = " \u2013 ";

function formatNumber(number) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  options = _extends({}, DEFAULT_NUMBER_OPTIONS, options);
  if (options.compact) {
    if (number === 0) {
      // 0 => 0
      return "0";
    } else if (number >= -0.01 && number <= 0.01) {
      // 0.01 => ~0
      return "~ 0";
    } else if (number > -1 && number < 1) {
      // 0.1 => 0.1
      return PRECISION_NUMBER_FORMATTER(number).replace(/\.?0+$/, "");
    } else {
      // 1 => 1
      // 1000 => 1K
      return _humanizePlus2.default.compactInteger(number, 1);
    }
  } else if (number > -1 && number < 1) {
    // numbers between 1 and -1 round to 2 significant digits with extra 0s stripped off
    return PRECISION_NUMBER_FORMATTER(number).replace(/\.?0+$/, "");
  } else {
    // anything else rounds to at most 2 decimal points, unless disabled
    if (options.round) {
      number = _d2.default.round(number, 2);
    }
    if (options.comma) {
      return FIXED_NUMBER_FORMATTER(number);
    } else {
      return FIXED_NUMBER_FORMATTER_NO_COMMA(number);
    }
  }
}

function formatCoordinate(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var binWidth = options.column && options.column.binning_info && options.column.binning_info.bin_width;
  var direction = "";
  if ((0, _schema_metadata.isLatitude)(options.column)) {
    direction = " " + (value < 0 ? "S" : "N");
    value = Math.abs(value);
  } else if ((0, _schema_metadata.isLongitude)(options.column)) {
    direction = " " + (value < 0 ? "W" : "E");
    value = Math.abs(value);
  }

  var formattedValue = binWidth ? BINNING_DEGREES_FORMATTER(value, binWidth) : options.compact ? DECIMAL_DEGREES_FORMATTER_COMPACT(value) : DECIMAL_DEGREES_FORMATTER(value);
  return formattedValue + "°" + direction;
}

function formatRange(range, formatter) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  return range.map(function (value) {
    return formatter(value, options);
  }).join(" " + RANGE_SEPARATOR + " ");
}

function formatMajorMinor(major, minor) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  options = _extends({
    jsx: false,
    majorWidth: 3
  }, options);
  if (options.jsx) {
    return _react2.default.createElement(
      "span",
      null,
      _react2.default.createElement(
        "span",
        {
          style: { minWidth: options.majorWidth + "em" },
          className: "inline-block text-right text-bold"
        },
        major
      ),
      " - ",
      _react2.default.createElement(
        "span",
        null,
        minor
      )
    );
  } else {
    return major + " - " + minor;
  }
}

/** This formats a time with unit as a date range */
function formatTimeRangeWithUnit(value, unit) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var m = (0, _time.parseTimestamp)(value, unit);
  if (!m.isValid()) {
    return String(value);
  }

  // Tooltips should show full month name, but condense "MMMM D, YYYY - MMMM D, YYYY" to "MMMM D - D, YYYY" etc
  var monthFormat = options.type === "tooltip" ? "MMMM" : getMonthFormat(options);
  var condensed = options.compact || options.type === "tooltip";

  var start = m.clone().startOf(unit);
  var end = m.clone().endOf(unit);
  if (start.isValid() && end.isValid()) {
    if (!condensed || start.year() !== end.year()) {
      // January 1, 2018 - January 2, 2019
      return start.format(monthFormat + " D, YYYY") + RANGE_SEPARATOR + end.format(monthFormat + " D, YYYY");
    } else if (start.month() !== end.month()) {
      // January 1 - Feburary 2, 2018
      return start.format(monthFormat + " D") + RANGE_SEPARATOR + end.format(monthFormat + " D, YYYY");
    } else {
      // January 1 - 2, 2018
      return start.format(monthFormat + " D") + RANGE_SEPARATOR + end.format("D, YYYY");
    }
  } else {
    return formatWeek(m, options);
  }
}

function formatWeek(m) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // force 'en' locale for now since our weeks currently always start on Sundays
  m = m.locale("en");
  return formatMajorMinor(m.format("wo"), m.format("gggg"), options);
}

function formatTimeWithUnit(value, unit) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var m = (0, _time.parseTimestamp)(value, unit);
  if (!m.isValid()) {
    return String(value);
  }

  switch (unit) {
    case "hour":
      // 12 AM - January 1, 2015
      return formatMajorMinor(m.format("h A"), m.format(getMonthFormat(options) + " D, YYYY"), options);
    case "day":
      // January 1, 2015
      return m.format(getMonthFormat(options) + " D, YYYY");
    case "week":
      // 1st - 2015
      if (options.type === "tooltip") {
        // tooltip show range like "January 1 - 7, 2017"
        return formatTimeRangeWithUnit(value, unit, options);
      } else if (options.type === "cell") {
        // table cells show range like "Jan 1, 2017 - Jan 7, 2017"
        return formatTimeRangeWithUnit(value, unit, options);
      } else if (options.type === "axis") {
        // axis ticks show start of the week as "Jan 1"
        return m.clone().startOf(unit).format("MMM D");
      } else {
        return formatWeek(m, options);
      }
    case "month":
      // January 2015
      return options.jsx ? _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "span",
          { className: "text-bold" },
          m.format(getMonthFormat(options))
        ),
        " ",
        m.format("YYYY")
      ) : m.format(getMonthFormat(options) + " YYYY");
    case "year":
      // 2015
      return m.format("YYYY");
    case "quarter":
      // Q1 - 2015
      return formatMajorMinor(m.format("[Q]Q"), m.format("YYYY"), _extends({}, options, {
        majorWidth: 0
      }));
    case "minute-of-hour":
      return m.format("m");
    case "hour-of-day":
      // 12 AM
      return m.format("h A");
    case "day-of-week":
      // Sunday
      return m.format(getDayFormat(options));
    case "day-of-month":
      return m.format("D");
    case "day-of-year":
      return m.format("DDD");
    case "week-of-year":
      // 1st
      return m.format("wo");
    case "month-of-year":
      // January
      return m.format(getMonthFormat(options));
    case "quarter-of-year":
      // January
      return m.format("[Q]Q");
    default:
      return m.format("LLLL");
  }
}

function formatTimeValue(value) {
  var m = (0, _time.parseTime)(value);
  if (!m.isValid()) {
    return String(value);
  } else {
    return m.format("LT");
  }
}

// https://github.com/angular/angular.js/blob/v1.6.3/src/ng/directive/input.js#L27
var EMAIL_WHITELIST_REGEX = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;

function formatEmail(value) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      jsx = _ref.jsx,
      rich = _ref.rich;

  var email = String(value);
  if (jsx && rich && EMAIL_WHITELIST_REGEX.test(email)) {
    return _react2.default.createElement(
      _ExternalLink2.default,
      { href: "mailto:" + email },
      email
    );
  } else {
    return email;
  }
}

// based on https://github.com/angular/angular.js/blob/v1.6.3/src/ng/directive/input.js#L25
var URL_WHITELIST_REGEX = /^(https?|mailto):\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;

function formatUrl(value) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      jsx = _ref2.jsx,
      rich = _ref2.rich;

  var url = String(value);
  if (jsx && rich && URL_WHITELIST_REGEX.test(url)) {
    return _react2.default.createElement(
      _ExternalLink2.default,
      { className: "link link--wrappable", href: url },
      url
    );
  } else {
    return url;
  }
}

// fallback for formatting a string without a column special_type
function formatStringFallback(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  value = formatUrl(value, options);
  if (typeof value === "string") {
    value = formatEmail(value, options);
  }
  return value;
}

function formatValue(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var column = options.column;

  options = _extends({
    jsx: false,
    remap: true,
    comma: (0, _schema_metadata.isNumber)(column)
  }, options);

  if (options.remap && column) {
    // $FlowFixMe: column could be Field or Column
    if (column.hasRemappedValue && column.hasRemappedValue(value)) {
      // $FlowFixMe: column could be Field or Column
      return column.remappedValue(value);
    }
    // or it may be a raw column object with a "remapping" object
    if (column.remapping instanceof Map && column.remapping.has(value)) {
      return column.remapping.get(value);
    }
    // TODO: get rid of one of these two code paths?
  }

  if (value == undefined) {
    return null;
  } else if (column && (0, _types.isa)(column.special_type, _types.TYPE.URL)) {
    return formatUrl(value, options);
  } else if (column && (0, _types.isa)(column.special_type, _types.TYPE.Email)) {
    return formatEmail(value, options);
  } else if (column && (0, _types.isa)(column.base_type, _types.TYPE.Time)) {
    return formatTimeValue(value);
  } else if (column && column.unit != null) {
    return formatTimeWithUnit(value, column.unit, options);
  } else if ((0, _schema_metadata.isDate)(column) || _moment2.default.isDate(value) || _moment2.default.isMoment(value) || (0, _moment2.default)(value, ["YYYY-MM-DD'T'HH:mm:ss.SSSZ"], true).isValid()) {
    return (0, _time.parseTimestamp)(value, column && column.unit).format("LLLL");
  } else if (typeof value === "string") {
    return formatStringFallback(value, options);
  } else if (typeof value === "number") {
    var formatter = (0, _schema_metadata.isCoordinate)(column) ? formatCoordinate : formatNumber;
    var range = (0, _dataset.rangeForValue)(value, options.column);
    if (range) {
      return formatRange(range, formatter, options);
    } else {
      return formatter(value, options);
    }
  } else if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === "object") {
    // no extra whitespace for table cells
    return JSON.stringify(value);
  } else {
    return String(value);
  }
}

function formatColumn(column) {
  if (!column) {
    return "";
  } else if (column.remapped_to_column != null) {
    // $FlowFixMe: remapped_to_column is a special field added by Visualization.jsx
    return formatColumn(column.remapped_to_column);
  } else {
    var columnTitle = (0, _utils.getFriendlyName)(column);
    if (column.unit && column.unit !== "default") {
      columnTitle += ": " + capitalize(column.unit.replace(/-/g, " "));
    }
    return columnTitle;
  }
}

function formatField(field) {
  if (!field) {
    return "";
  } else if (field.dimensions && field.dimensions.name) {
    return field.dimensions.name;
  } else {
    return field.display_name || field.name;
  }
}

// $FlowFixMe
function singularize() {
  return _inflection2.default.singularize.apply(_inflection2.default, arguments);
}

// $FlowFixMe
function pluralize() {
  return _inflection2.default.pluralize.apply(_inflection2.default, arguments);
}

// $FlowFixMe
function capitalize() {
  return _inflection2.default.capitalize.apply(_inflection2.default, arguments);
}

// $FlowFixMe
function inflect() {
  return _inflection2.default.inflect.apply(_inflection2.default, arguments);
}

// $FlowFixMe
function titleize() {
  return _inflection2.default.titleize.apply(_inflection2.default, arguments);
}

// $FlowFixMe
function humanize() {
  return _inflection2.default.humanize.apply(_inflection2.default, arguments);
}

function duration(milliseconds) {
  if (milliseconds < 60000) {
    var seconds = Math.round(milliseconds / 1000);
    return seconds + " " + inflect("second", seconds);
  } else {
    var minutes = Math.round(milliseconds / 1000 / 60);
    return minutes + " " + inflect("minute", minutes);
  }
}

// Removes trailing "id" from field names
function stripId(name) {
  return name && name.replace(/ id$/i, "").trim();
}

function slugify(name) {
  return name && name.toLowerCase().replace(/[^a-z0-9_]/g, "_");
}

function assignUserColors(userIds, currentUserId) {
  var colorClasses = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ["bg-brand", "bg-purple", "bg-error", "bg-green", "bg-gold", "bg-grey-2"];

  var assignments = {};

  var currentUserColor = colorClasses[0];
  var otherUserColors = colorClasses.slice(1);
  var otherUserColorIndex = 0;

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = userIds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var userId = _step.value;

      if (!(userId in assignments)) {
        if (userId === currentUserId) {
          assignments[userId] = currentUserColor;
        } else if (userId != null) {
          assignments[userId] = otherUserColors[otherUserColorIndex++ % otherUserColors.length];
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return assignments;
}

function formatSQL(sql) {
  if (typeof sql === "string") {
    sql = sql.replace(/\sFROM/, "\nFROM");
    sql = sql.replace(/\sLEFT JOIN/, "\nLEFT JOIN");
    sql = sql.replace(/\sWHERE/, "\nWHERE");
    sql = sql.replace(/\sGROUP BY/, "\nGROUP BY");
    sql = sql.replace(/\sORDER BY/, "\nORDER BY");
    sql = sql.replace(/\sLIMIT/, "\nLIMIT");
    sql = sql.replace(/\sAND\s/, "\n   AND ");
    sql = sql.replace(/\sOR\s/, "\n    OR ");

    return sql;
  }
}

/***/ }),

/***/ 84:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rangeForValue = exports.datasetContainsNoResults = undefined;

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Many aggregations result in [[null]] if there are no rows to aggregate after filters
var datasetContainsNoResults = exports.datasetContainsNoResults = function datasetContainsNoResults(data) {
  return data.rows.length === 0 || _underscore2.default.isEqual(data.rows, [[null]]);
};

/**
 * @returns min and max for a value in a column
 */
var rangeForValue = exports.rangeForValue = function rangeForValue(value, column) {
  if (column && column.binning_info && column.binning_info.bin_width) {
    return [value, value + column.binning_info.bin_width];
  }
};

/***/ }),

/***/ 85:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getParametersBySlug = undefined;
exports.getTemplateTagParameters = getTemplateTagParameters;
exports.getParameterTargetFieldId = getParameterTargetFieldId;
exports.dateParameterValueToMBQL = dateParameterValueToMBQL;
exports.stringParameterValueToMBQL = stringParameterValueToMBQL;
exports.numberParameterValueToMBQL = numberParameterValueToMBQL;
exports.parameterToMBQLFilter = parameterToMBQLFilter;
exports.getParameterIconName = getParameterIconName;

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _query = __webpack_require__(17);

var _query2 = _interopRequireDefault(_query);

var _util = __webpack_require__(27);

var _schema_metadata = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// NOTE: this should mirror `template-tag-parameters` in src/metabase/api/embed.clj
function getTemplateTagParameters(tags) {
  return tags.filter(function (tag) {
    return tag.type != null && (tag.widget_type || tag.type !== "dimension");
  }).map(function (tag) {
    return {
      id: tag.id,
      type: tag.widget_type || (tag.type === "date" ? "date/single" : "category"),
      target: tag.type === "dimension" ? ["dimension", ["template-tag", tag.name]] : ["variable", ["template-tag", tag.name]],
      name: tag.display_name,
      slug: tag.name,
      default: tag.default
    };
  });
}

var getParametersBySlug = exports.getParametersBySlug = function getParametersBySlug(parameters, parameterValues) {
  var result = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = parameters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var parameter = _step.value;

      if (parameterValues[parameter.id] != undefined) {
        result[parameter.slug] = parameterValues[parameter.id];
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return result;
};

/** Returns the field ID that this parameter target points to, or null if it's not a dimension target. */
function getParameterTargetFieldId(target, datasetQuery) {
  if (target && target[0] === "dimension") {
    var dimension = target[1];
    if (Array.isArray(dimension) && (0, _util.mbqlEq)(dimension[0], "template-tag")) {
      if (datasetQuery.type === "native") {
        var templateTag = datasetQuery.native.template_tags[String(dimension[1])];
        if (templateTag && templateTag.type === "dimension") {
          return _query2.default.getFieldTargetId(templateTag.dimension);
        }
      }
    } else {
      return _query2.default.getFieldTargetId(dimension);
    }
  }
  return null;
}

var timeParameterValueDeserializers = [{
  testRegex: /^past([0-9]+)([a-z]+)s(~)?$/,
  deserialize: function deserialize(matches, fieldRef) {
    return (
      // $FlowFixMe: not matching TimeIntervalFilter for some reason
      ["time-interval", fieldRef, -parseInt(matches[0]), matches[1]].concat(matches[2] ? [{ "include-current": true }] : [])
    );
  }
}, {
  testRegex: /^next([0-9]+)([a-z]+)s(~)?$/,
  deserialize: function deserialize(matches, fieldRef) {
    return (
      // $FlowFixMe: not matching TimeIntervalFilter for some reason
      ["time-interval", fieldRef, parseInt(matches[0]), matches[1]].concat(matches[2] ? [{ "include-current": true }] : [])
    );
  }
}, {
  testRegex: /^this([a-z]+)$/,
  deserialize: function deserialize(matches, fieldRef) {
    return ["time-interval", fieldRef, "current", matches[0]];
  }
}, {
  testRegex: /^~([0-9-T:]+)$/,
  deserialize: function deserialize(matches, fieldRef) {
    return ["<", fieldRef, matches[0]];
  }
}, {
  testRegex: /^([0-9-T:]+)~$/,
  deserialize: function deserialize(matches, fieldRef) {
    return [">", fieldRef, matches[0]];
  }
}, {
  testRegex: /^(\d{4}-\d{2})$/,
  deserialize: function deserialize(matches, fieldRef) {
    return ["=", ["datetime-field", fieldRef, "month"], (0, _moment2.default)(matches[0], "YYYY-MM").format("YYYY-MM-DD")];
  }
}, {
  testRegex: /^(Q\d-\d{4})$/,
  deserialize: function deserialize(matches, fieldRef) {
    return ["=", ["datetime-field", fieldRef, "quarter"], (0, _moment2.default)(matches[0], "[Q]Q-YYYY").format("YYYY-MM-DD")];
  }
}, {
  testRegex: /^([0-9-T:]+)$/,
  deserialize: function deserialize(matches, fieldRef) {
    return ["=", fieldRef, matches[0]];
  }
},
// TODO 3/27/17 Atte Keinänen
// Unify BETWEEN -> between, IS_NULL -> is-null, NOT_NULL -> not-null throughout the codebase
{
  testRegex: /^([0-9-T:]+)~([0-9-T:]+)$/,
  deserialize: function deserialize(matches, fieldRef) {
    return (
      // $FlowFixMe
      ["BETWEEN", fieldRef, matches[0], matches[1]]
    );
  }
}];

function dateParameterValueToMBQL(parameterValue, fieldRef) {
  var deserializer = timeParameterValueDeserializers.find(function (des) {
    return des.testRegex.test(parameterValue);
  });

  if (deserializer) {
    var substringMatches = deserializer.testRegex.exec(parameterValue).splice(1);
    return deserializer.deserialize(substringMatches, fieldRef);
  } else {
    return null;
  }
}

function stringParameterValueToMBQL(parameterValue, fieldRef) {
  if (Array.isArray(parameterValue)) {
    // $FlowFixMe: thinks we're returning a nested array which concat does not do
    return ["=", fieldRef].concat(parameterValue);
  } else {
    return ["=", fieldRef, parameterValue];
  }
}

function numberParameterValueToMBQL(parameterValue, fieldRef) {
  return ["=", fieldRef, parseFloat(parameterValue)];
}

/** compiles a parameter with value to an MBQL clause */
function parameterToMBQLFilter(parameter, metadata) {
  if (!parameter.target || parameter.target[0] !== "dimension" || !Array.isArray(parameter.target[1]) || parameter.target[1][0] === "template-tag") {
    return null;
  }

  // $FlowFixMe: doesn't understand parameter.target[1] is a field reference
  var fieldRef = parameter.target[1];

  if (parameter.type.indexOf("date/") === 0) {
    return dateParameterValueToMBQL(parameter.value, fieldRef);
  } else {
    var fieldId = _query2.default.getFieldTargetId(fieldRef);
    var field = metadata.fields[fieldId];
    // if the field is numeric, parse the value as a number
    if ((0, _schema_metadata.isNumericBaseType)(field)) {
      return numberParameterValueToMBQL(parameter.value, fieldRef);
    } else {
      return stringParameterValueToMBQL(parameter.value, fieldRef);
    }
  }
}

function getParameterIconName(parameterType) {
  if (/^date\//.test(parameterType || "")) {
    return "calendar";
  } else if (/^location\//.test(parameterType || "")) {
    return "location";
  } else {
    return "label";
  }
}

/***/ }),

/***/ 88:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Triggerable = __webpack_require__(239);

var _Triggerable2 = _interopRequireDefault(_Triggerable);

var _Modal = __webpack_require__(55);

var _Modal2 = _interopRequireDefault(_Modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _Triggerable2.default)(_Modal2.default);

/***/ }),

/***/ 89:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Icon = __webpack_require__(5);

var _Icon2 = _interopRequireDefault(_Icon);

var _colors = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CheckBox = (_temp = _class = function (_Component) {
  _inherits(CheckBox, _Component);

  function CheckBox() {
    _classCallCheck(this, CheckBox);

    return _possibleConstructorReturn(this, (CheckBox.__proto__ || Object.getPrototypeOf(CheckBox)).apply(this, arguments));
  }

  _createClass(CheckBox, [{
    key: "onClick",
    value: function onClick() {
      if (this.props.onChange) {
        // TODO: use a proper event object?
        this.props.onChange({ target: { checked: !this.props.checked } });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          checked = _props.checked,
          color = _props.color,
          padding = _props.padding,
          size = _props.size;


      var themeColor = _colors.normal[color];

      var checkboxStyle = {
        width: size,
        height: size,
        backgroundColor: checked ? themeColor : "white",
        border: "2px solid " + (checked ? themeColor : "#ddd")
      };
      return _react2.default.createElement(
        "div",
        { className: "cursor-pointer", onClick: function onClick() {
            return _this2.onClick();
          } },
        _react2.default.createElement(
          "div",
          {
            style: checkboxStyle,
            className: "flex align-center justify-center rounded"
          },
          checked && _react2.default.createElement(_Icon2.default, {
            style: { color: checked ? "white" : themeColor },
            name: "check",
            size: size - padding * 2
          })
        )
      );
    }
  }]);

  return CheckBox;
}(_react.Component), _class.propTypes = {
  checked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  color: _propTypes2.default.oneOf(Object.keys(_colors.normal)),
  size: _propTypes2.default.number, // TODO - this should probably be a concrete set of options
  padding: _propTypes2.default.number // TODO - the component should pad itself properly based on the size
}, _class.defaultProps = {
  size: 16,
  padding: 2,
  color: "blue"
}, _temp);
CheckBox.displayName = "CheckBox";
exports.default = CheckBox;

/***/ }),

/***/ 91:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.getFilters = getFilters;
exports.addFilter = addFilter;
exports.updateFilter = updateFilter;
exports.removeFilter = removeFilter;
exports.clearFilters = clearFilters;
exports.canAddFilter = canAddFilter;
exports.isSegmentFilter = isSegmentFilter;
exports.isCompoundFilter = isCompoundFilter;
exports.isFieldFilter = isFieldFilter;
exports.hasFilterOptions = hasFilterOptions;
exports.getFilterOptions = getFilterOptions;
exports.setFilterOptions = setFilterOptions;

var _util = __webpack_require__(27);

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// returns canonical list of Filters
function getFilters(filter) {
  if (!filter || Array.isArray(filter) && filter.length === 0) {
    return [];
  } else if ((0, _util.mbqlEq)((0, _util.op)(filter), "and")) {
    return (0, _util.args)(filter);
  } else {
    return [filter];
  }
}

// turns a list of Filters into the canonical FilterClause, either `undefined`, `filter`, or `["and", filter...]`
function getFilterClause(filters) {
  if (filters.length === 0) {
    return undefined;
  } else if (filters.length === 1) {
    return filters[0];
  } else {
    return ["and"].concat(_toConsumableArray(filters));
  }
}

function addFilter(filter, newFilter) {
  return getFilterClause((0, _util.add)(getFilters(filter), newFilter));
}
function updateFilter(filter, index, updatedFilter) {
  return getFilterClause((0, _util.update)(getFilters(filter), index, updatedFilter));
}
function removeFilter(filter, index) {
  return getFilterClause((0, _util.remove)(getFilters(filter), index));
}
function clearFilters(filter) {
  return getFilterClause((0, _util.clear)());
}

// MISC

function canAddFilter(filter) {
  var filters = getFilters(filter);
  if (filters.length > 0) {
    return (0, _util.noNullValues)(filters[filters.length - 1]);
  }
  return true;
}

function isSegmentFilter(filter) {
  return Array.isArray(filter) && (0, _util.mbqlEq)(filter[0], "segment");
}

function isCompoundFilter(filter) {
  return Array.isArray(filter) && ((0, _util.mbqlEq)(filter[0], "and") || (0, _util.mbqlEq)(filter[0], "or"));
}

function isFieldFilter(filter) {
  return !isSegmentFilter(filter) && !isCompoundFilter(filter);
}

// TODO: is it safe to assume if the last item is an object then it's options?
function hasFilterOptions(filter) {
  var o = filter[filter.length - 1];
  return !!o && (typeof o === "undefined" ? "undefined" : _typeof(o)) == "object" && o.constructor == Object;
}

function getFilterOptions(filter) {
  // NOTE: just make a new "any" variable since getting flow to type checking this is a nightmare
  var _filter = filter;
  if (hasFilterOptions(filter)) {
    return _filter[_filter.length - 1];
  } else {
    return {};
  }
}

function setFilterOptions(filter, options) {
  // NOTE: just make a new "any" variable since getting flow to type checking this is a nightmare
  var _filter = filter;
  // if we have option, strip it off for now
  if (hasFilterOptions(filter)) {
    _filter = _filter.slice(0, -1);
  }
  // if options isn't emtpy, append it
  if (Object.keys(options).length > 0) {
    _filter = [].concat(_toConsumableArray(_filter), [options]);
  }
  return _filter;
}

/***/ }),

/***/ 92:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DATETIME_UNITS = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.computeFilterTimeRange = computeFilterTimeRange;
exports.expandTimeIntervalFilter = expandTimeIntervalFilter;
exports.generateTimeFilterValuesDescriptions = generateTimeFilterValuesDescriptions;
exports.generateTimeIntervalDescription = generateTimeIntervalDescription;
exports.generateTimeValueDescription = generateTimeValueDescription;
exports.formatBucketing = formatBucketing;
exports.absolute = absolute;
exports.parseFieldBucketing = parseFieldBucketing;
exports.parseFieldTarget = parseFieldTarget;
exports.parseFieldTargetId = parseFieldTargetId;

var _moment = __webpack_require__(6);

var _moment2 = _interopRequireDefault(_moment);

var _inflection = __webpack_require__(83);

var _inflection2 = _interopRequireDefault(_inflection);

var _util = __webpack_require__(27);

var _formatting = __webpack_require__(8);

var _time = __webpack_require__(73);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

var DATETIME_UNITS = exports.DATETIME_UNITS = [
// "default",
"minute", "hour", "day", "week", "month", "quarter", "year",
// "minute-of-hour",
"hour-of-day", "day-of-week", "day-of-month",
// "day-of-year",
"week-of-year", "month-of-year", "quarter-of-year"];

function computeFilterTimeRange(filter) {
  var expandedFilter = void 0;
  if ((0, _util.mbqlEq)(filter[0], "time-interval")) {
    expandedFilter = expandTimeIntervalFilter(filter);
  } else {
    expandedFilter = filter;
  }

  var _expandedFilter = expandedFilter,
      _expandedFilter2 = _toArray(_expandedFilter),
      operator = _expandedFilter2[0],
      field = _expandedFilter2[1],
      values = _expandedFilter2.slice(2);

  var bucketing = parseFieldBucketing(field, "day");

  var start = void 0,
      end = void 0;
  if (operator === "=" && values[0]) {
    var point = absolute(values[0]);
    start = point.clone().startOf(bucketing);
    end = point.clone().endOf(bucketing);
  } else if (operator === ">" && values[0]) {
    start = absolute(values[0]).endOf(bucketing);
    end = max();
  } else if (operator === "<" && values[0]) {
    start = min();
    end = absolute(values[0]).startOf(bucketing);
  } else if (operator === "BETWEEN" && values[0] && values[1]) {
    start = absolute(values[0]).startOf(bucketing);
    end = absolute(values[1]).endOf(bucketing);
  }

  return [start, end];
}

function expandTimeIntervalFilter(filter) {
  var _filter = _slicedToArray(filter, 4),
      operator = _filter[0],
      field = _filter[1],
      n = _filter[2],
      unit = _filter[3];

  if (!(0, _util.mbqlEq)(operator, "time-interval")) {
    throw new Error("translateTimeInterval expects operator 'time-interval'");
  }

  if (n === "current") {
    n = 0;
  } else if (n === "last") {
    n = -1;
  } else if (n === "next") {
    n = 1;
  }

  field = ["datetime-field", field, "as", unit];

  if (n < -1) {
    return ["BETWEEN", field, ["relative-datetime", n - 1, unit], ["relative-datetime", -1, unit]];
  } else if (n > 1) {
    return ["BETWEEN", field, ["relative-datetime", 1, unit], ["relative-datetime", n, unit]];
  } else if (n === 0) {
    return ["=", field, ["relative-datetime", "current"]];
  } else {
    return ["=", field, ["relative-datetime", n, unit]];
  }
}

function generateTimeFilterValuesDescriptions(filter) {
  var _filter2 = _toArray(filter),
      operator = _filter2[0],
      field = _filter2[1],
      values = _filter2.slice(2);

  var bucketing = parseFieldBucketing(field);

  if ((0, _util.mbqlEq)(operator, "time-interval")) {
    var _values = _slicedToArray(values, 2),
        n = _values[0],
        unit = _values[1];

    return generateTimeIntervalDescription(n, unit);
  } else {
    return values.map(function (value) {
      return generateTimeValueDescription(value, bucketing);
    });
  }
}

function generateTimeIntervalDescription(n, unit) {
  if (unit === "day") {
    switch (n) {
      case "current":
      case 0:
        return ["Today"];
      case "next":
      case 1:
        return ["Tomorrow"];
      case "last":
      case -1:
        return ["Yesterday"];
    }
  }

  if (!unit && n === 0) return "Today"; // ['relative-datetime', 'current'] is a legal MBQL form but has no unit

  unit = _inflection2.default.capitalize(unit);
  if (typeof n === "string") {
    if (n === "current") {
      n = "this";
    }
    return [_inflection2.default.capitalize(n) + " " + unit];
  } else {
    if (n < 0) {
      return ["Past " + -n + " " + _inflection2.default.inflect(unit, -n)];
    } else if (n > 0) {
      return ["Next " + n + " " + _inflection2.default.inflect(unit, n)];
    } else {
      return ["This " + unit];
    }
  }
}

function generateTimeValueDescription(value, bucketing) {
  if (typeof value === "string") {
    var m = (0, _time.parseTimestamp)(value, bucketing);
    if (bucketing) {
      return (0, _formatting.formatTimeWithUnit)(value, bucketing);
    } else if (m.hours() || m.minutes()) {
      return m.format("MMMM D, YYYY hh:mm a");
    } else {
      return m.format("MMMM D, YYYY");
    }
  } else if (Array.isArray(value) && (0, _util.mbqlEq)(value[0], "relative-datetime")) {
    var n = value[1];
    var unit = value[2];

    if (n === "current") {
      n = 0;
      unit = bucketing;
    }

    if (bucketing === unit) {
      return generateTimeIntervalDescription(n, unit);
    } else {
      // FIXME: what to do if the bucketing and unit don't match?
      if (n === 0) {
        return "Now";
      } else {
        return Math.abs(n) + " " + _inflection2.default.inflect(unit, Math.abs(n)) + (n < 0 ? " ago" : " from now");
      }
    }
  } else {
    console.warn("Unknown datetime format", value);
    return "[Unknown]";
  }
}

function formatBucketing() {
  var bucketing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

  var words = bucketing.split("-");
  words[0] = _inflection2.default.capitalize(words[0]);
  return words.join(" ");
}

function absolute(date) {
  if (typeof date === "string") {
    return (0, _moment2.default)(date);
  } else if (Array.isArray(date) && (0, _util.mbqlEq)(date[0], "relative-datetime")) {
    return (0, _moment2.default)().add(date[1], date[2]);
  } else {
    console.warn("Unknown datetime format", date);
  }
}

function parseFieldBucketing(field) {
  var defaultUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if (Array.isArray(field)) {
    if ((0, _util.mbqlEq)(field[0], "datetime-field")) {
      if (field.length === 4) {
        // Deprecated legacy format [datetime-field field "as" unit], see DatetimeFieldDimension for more info
        return field[3];
      } else {
        // Current format [datetime-field field unit]
        return field[2];
      }
    }
    if ((0, _util.mbqlEq)(field[0], "fk->") || (0, _util.mbqlEq)(field[0], "field-id")) {
      return defaultUnit;
    }
    if ((0, _util.mbqlEq)(field[0], "field-literal")) {
      return defaultUnit;
    } else {
      console.warn("Unknown field format", field);
    }
  }
  return defaultUnit;
}

// returns field with "datetime-field" removed
function parseFieldTarget(field) {
  if ((0, _util.mbqlEq)(field[0], "datetime-field")) {
    return field[1];
  } else {
    return field;
  }
}

function parseFieldTargetId(field) {
  if (Number.isInteger(field)) return field;

  if (Array.isArray(field)) {
    if ((0, _util.mbqlEq)(field[0], "field-id")) return field[1];
    if ((0, _util.mbqlEq)(field[0], "fk->")) return field[1];
    if ((0, _util.mbqlEq)(field[0], "datetime-field")) return parseFieldTargetId(field[1]);
    if ((0, _util.mbqlEq)(field[0], "field-literal")) return field;
  }

  console.warn("Unknown field format", field);
  return field;
}

// 271821 BC and 275760 AD and should be far enough in the past/future
function max() {
  return (0, _moment2.default)(new Date(864000000000000));
}
function min() {
  return (0, _moment2.default)(new Date(-864000000000000));
}

/***/ }),

/***/ 93:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFieldTargetId = getFieldTargetId;
exports.isRegularField = isRegularField;
exports.isLocalField = isLocalField;
exports.isForeignKeyField = isForeignKeyField;
exports.isDatetimeField = isDatetimeField;
exports.isBinningStrategy = isBinningStrategy;
exports.isFieldLiteral = isFieldLiteral;
exports.isExpressionField = isExpressionField;
exports.isAggregateField = isAggregateField;
exports.getFieldValues = getFieldValues;
exports.getRemappings = getRemappings;
exports.getHumanReadableValue = getHumanReadableValue;

var _util = __webpack_require__(27);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// gets the target field ID (recursively) from any type of field, including raw field ID, fk->, and datetime-field cast.
function getFieldTargetId(field) {
  if (isRegularField(field)) {
    // $FlowFixMe
    return field;
  } else if (isLocalField(field)) {
    // $FlowFixMe
    return field[1];
  } else if (isForeignKeyField(field)) {
    // $FlowFixMe
    return getFieldTargetId(field[2]);
  } else if (isDatetimeField(field)) {
    // $FlowFixMe
    return getFieldTargetId(field[1]);
  } else if (isBinningStrategy(field)) {
    // $FlowFixMe
    return getFieldTargetId(field[1]);
  } else if (isFieldLiteral(field)) {
    return field;
  }
  console.warn("Unknown field type: ", field);
}

function isRegularField(field) {
  return typeof field === "number";
}

function isLocalField(field) {
  return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "field-id");
}

function isForeignKeyField(field) {
  return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "fk->");
}

function isDatetimeField(field) {
  return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "datetime-field");
}

function isBinningStrategy(field) {
  return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "binning-strategy");
}

function isFieldLiteral(field) {
  return Array.isArray(field) && field.length === 3 && (0, _util.mbqlEq)(field[0], "field-literal");
}

function isExpressionField(field) {
  return Array.isArray(field) && field.length === 2 && (0, _util.mbqlEq)(field[0], "expression");
}

function isAggregateField(field) {
  return Array.isArray(field) && (0, _util.mbqlEq)(field[0], "aggregation");
}

// Metadata field "values" type is inconsistent
// https://github.com/metabase/metabase/issues/3417
function getFieldValues(field) {
  var values = field && field.values;
  if (Array.isArray(values)) {
    if (values.length === 0 || Array.isArray(values[0])) {
      return values;
    } else {
      // console.warn("deprecated field values array!", values);
      return values.map(function (value) {
        return [value];
      });
    }
  } else if (values && Array.isArray(values.values)) {
    // console.warn("deprecated field values object!", values);

    if (Array.isArray(values.human_readable_values)) {
      return _underscore2.default.zip(values.values, values.human_readable_values || {});
    } else if (Array.isArray(values.values)) {
      // TODO Atte Keinänen 7/12/17: I don't honestly know why we can have a field in `values` property.
      return getFieldValues(values);
    } else {
      // console.warn("missing field values", field);
      return [];
    }
  } else {
    // console.warn("missing field values", field);
    return [];
  }
}

// merge field values and remappings
function getRemappings(field) {
  var remappings = field && field.remappings || [];
  var fieldValues = getFieldValues(field);
  return [].concat(_toConsumableArray(fieldValues), _toConsumableArray(remappings));
}

function getHumanReadableValue(value) {
  var fieldValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var fieldValue = _underscore2.default.findWhere(fieldValues, _defineProperty({}, 0, value));
  return fieldValue && fieldValue.length === 2 ? fieldValue[1] : String(value);
}

/***/ }),

/***/ 94:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_ACTIONS = undefined;

var _UnderlyingDataAction = __webpack_require__(399);

var _UnderlyingDataAction2 = _interopRequireDefault(_UnderlyingDataAction);

var _UnderlyingRecordsAction = __webpack_require__(400);

var _UnderlyingRecordsAction2 = _interopRequireDefault(_UnderlyingRecordsAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import GenerateDashboardAction from "./GenerateDashboardAction";

var DEFAULT_ACTIONS = exports.DEFAULT_ACTIONS = [_UnderlyingDataAction2.default, _UnderlyingRecordsAction2.default];

/***/ }),

/***/ 95:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_DRILLS = undefined;

var _SortAction = __webpack_require__(401);

var _SortAction2 = _interopRequireDefault(_SortAction);

var _ObjectDetailDrill = __webpack_require__(235);

var _ObjectDetailDrill2 = _interopRequireDefault(_ObjectDetailDrill);

var _QuickFilterDrill = __webpack_require__(402);

var _QuickFilterDrill2 = _interopRequireDefault(_QuickFilterDrill);

var _UnderlyingRecordsDrill = __webpack_require__(403);

var _UnderlyingRecordsDrill2 = _interopRequireDefault(_UnderlyingRecordsDrill);

var _AutomaticDashboardDrill = __webpack_require__(404);

var _AutomaticDashboardDrill2 = _interopRequireDefault(_AutomaticDashboardDrill);

var _ZoomDrill = __webpack_require__(405);

var _ZoomDrill2 = _interopRequireDefault(_ZoomDrill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_DRILLS = exports.DEFAULT_DRILLS = [_ZoomDrill2.default, _SortAction2.default, _ObjectDetailDrill2.default, _QuickFilterDrill2.default, _UnderlyingRecordsDrill2.default, _AutomaticDashboardDrill2.default];

/***/ }),

/***/ 97:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(11);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Tooltip = __webpack_require__(18);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Ellipsified = (_temp = _class = function (_Component) {
  _inherits(Ellipsified, _Component);

  function Ellipsified(props, context) {
    _classCallCheck(this, Ellipsified);

    var _this = _possibleConstructorReturn(this, (Ellipsified.__proto__ || Object.getPrototypeOf(Ellipsified)).call(this, props, context));

    _this.state = {
      isTruncated: false
    };
    return _this;
  }

  _createClass(Ellipsified, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      // Only show tooltip if title is hidden or ellipsified
      var element = _reactDom2.default.findDOMNode(this.refs.content);
      var isTruncated = element && element.offsetWidth < element.scrollWidth;
      if (this.state.isTruncated !== isTruncated) {
        this.setState({ isTruncated: isTruncated });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          showTooltip = _props.showTooltip,
          children = _props.children,
          style = _props.style,
          className = _props.className,
          tooltip = _props.tooltip,
          alwaysShowTooltip = _props.alwaysShowTooltip,
          tooltipMaxWidth = _props.tooltipMaxWidth;
      var isTruncated = this.state.isTruncated;

      return _react2.default.createElement(
        _Tooltip2.default,
        {
          tooltip: tooltip || children || " ",
          verticalAttachments: ["top", "bottom"],
          isEnabled: showTooltip && (isTruncated || alwaysShowTooltip) || false,
          maxWidth: tooltipMaxWidth
        },
        _react2.default.createElement(
          "div",
          {
            ref: "content",
            className: className,
            style: _extends({}, style, {
              overflow: "hidden",
              whiteSpace: "nowrap",
              textOverflow: "ellipsis"
            })
          },
          children
        )
      );
    }
  }]);

  return Ellipsified;
}(_react.Component), _class.propTypes = {}, _class.defaultProps = {
  style: {},
  className: "",
  showTooltip: true
}, _temp);
Ellipsified.displayName = "Ellipsified";
exports.default = Ellipsified;

/***/ }),

/***/ 98:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.augmentTable = exports.loadTableAndForeignKeys = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var loadTableAndForeignKeys = exports.loadTableAndForeignKeys = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(tableId) {
    var _ref2, _ref3, table, foreignKeys;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return Promise.all([_services.MetabaseApi.table_query_metadata({ tableId: tableId }), _services.MetabaseApi.table_fks({ tableId: tableId })]);

          case 2:
            _ref2 = _context.sent;
            _ref3 = _slicedToArray(_ref2, 2);
            table = _ref3[0];
            foreignKeys = _ref3[1];
            _context.next = 8;
            return augmentTable(table);

          case 8:
            return _context.abrupt("return", {
              table: table,
              foreignKeys: foreignKeys
            });

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function loadTableAndForeignKeys(_x) {
    return _ref.apply(this, arguments);
  };
}();

var augmentTable = exports.augmentTable = function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(table) {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            table = populateQueryOptions(table);
            _context2.next = 3;
            return loadForeignKeyTables(table);

          case 3:
            table = _context2.sent;
            return _context2.abrupt("return", table);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function augmentTable(_x2) {
    return _ref4.apply(this, arguments);
  };
}();

var loadForeignKeyTables = function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(table) {
    var _this = this;

    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return Promise.all(table.fields.filter(function (f) {
              return f.target != null;
            }).map(function () {
              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(field) {
                var targetTable;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.next = 2;
                        return _services.MetabaseApi.table_query_metadata({
                          tableId: field.target.table_id
                        });

                      case 2:
                        targetTable = _context3.sent;

                        field.target.table = populateQueryOptions(targetTable);

                      case 4:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3, _this);
              }));

              return function (_x4) {
                return _ref6.apply(this, arguments);
              };
            }()));

          case 2:
            return _context4.abrupt("return", table);

          case 3:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function loadForeignKeyTables(_x3) {
    return _ref5.apply(this, arguments);
  };
}();

exports.isQueryable = isQueryable;
exports.augmentDatabase = augmentDatabase;
exports.createLookupByProperty = createLookupByProperty;

var _schema_metadata = __webpack_require__(10);

var _underscore = __webpack_require__(3);

var _underscore2 = _interopRequireDefault(_underscore);

var _services = __webpack_require__(15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function isQueryable(table) {
  return table.visibility_type == null;
}

function augmentDatabase(database) {
  database.tables_lookup = createLookupByProperty(database.tables, "id");
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = database.tables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var table = _step.value;

      (0, _schema_metadata.addValidOperatorsToFields)(table);
      table.fields_lookup = createLookupByProperty(table.fields, "id");
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = table.fields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var field = _step2.value;

          addFkTargets(field, database.tables_lookup);
          field.operators_lookup = createLookupByProperty(field.operators, "name");
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return database;
}

function populateQueryOptions(table) {
  table = (0, _schema_metadata.addValidOperatorsToFields)(table);

  table.fields_lookup = {};

  _underscore2.default.each(table.fields, function (field) {
    table.fields_lookup[field.id] = field;
    field.operators_lookup = {};
    _underscore2.default.each(field.operators, function (operator) {
      field.operators_lookup[operator.name] = operator;
    });
  });

  return table;
}

function addFkTargets(field, tables) {
  if (field.target != null) {
    field.target.table = tables[field.target.table_id];
  }
}

function createLookupByProperty(items, property) {
  return items.reduce(function (lookup, item) {
    lookup[item[property]] = item;
    return lookup;
  }, {});
}

/***/ }),

/***/ 99:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var getUser = exports.getUser = function getUser(state) {
  return state.currentUser;
};

var getUserIsAdmin = exports.getUserIsAdmin = function getUserIsAdmin(state) {
  return (getUser(state) || {}).is_superuser || false;
};

/***/ })

},[2304]);
//# sourceMappingURL=app-public.bundle.js.map?a148caa8cbdb77f1454b